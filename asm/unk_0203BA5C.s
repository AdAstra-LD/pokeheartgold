	.include "asm/macros.inc"
	.include "global.inc"

	.rodata

_020F9E80:
	.byte 0x0B, 0x03
_020F9E82:
	.byte 0x3F, 0x00, 0x06, 0x08
_020F9E86:
	.byte 0x3C, 0x00
_020F9E88:
	.byte 0xB7, 0x02
_020F9E8A:
	.byte 0x8D, 0x01
_020F9E8C:
	.byte 0x3C, 0x00
_020F9E8E:
	.byte 0xB7, 0x02
_020F9E90:
	.byte 0x8D, 0x01, 0x0C, 0x03, 0x45, 0x00, 0x08, 0x0D, 0x43, 0x00, 0x34, 0x02, 0x88, 0x01, 0x43, 0x00
	.byte 0x34, 0x02, 0x88, 0x01, 0x0D, 0x03, 0x9E, 0x00, 0x08, 0x0D, 0x49, 0x00, 0xF1, 0x01, 0x10, 0x01
	.byte 0x49, 0x00, 0xF1, 0x01, 0x10, 0x01, 0x0E, 0x03, 0xA6, 0x00, 0x08, 0x0D, 0x4A, 0x00, 0x9A, 0x01
	.byte 0xCD, 0x01, 0x4A, 0x00, 0x9A, 0x01, 0xCD, 0x01, 0x0F, 0x03, 0xEC, 0x00, 0x08, 0x0D, 0x4B, 0x00
	.byte 0xBB, 0x00, 0x72, 0x01, 0x4B, 0x00, 0xBB, 0x00, 0x72, 0x01, 0x10, 0x03, 0xB9, 0x00, 0x08, 0x0D
	.byte 0x4C, 0x00, 0x60, 0x01, 0x71, 0x01, 0x4C, 0x00, 0x60, 0x01, 0x71, 0x01, 0x11, 0x03, 0xE2, 0x00
	.byte 0x08, 0x0D, 0x4D, 0x00, 0x10, 0x01, 0x02, 0x01, 0x4D, 0x00, 0x10, 0x01, 0x02, 0x01, 0x12, 0x03
	.byte 0x51, 0x00, 0x08, 0x0D, 0x4E, 0x00, 0x8D, 0x01, 0xB8, 0x00, 0x4E, 0x00, 0x8D, 0x01, 0xB8, 0x00
	.byte 0x13, 0x03, 0xF6, 0x00, 0x08, 0x0D, 0x57, 0x00, 0x16, 0x02, 0xB8, 0x00, 0x57, 0x00, 0x16, 0x02
	.byte 0xB8, 0x00, 0x14, 0x02, 0x58, 0x00, 0x08, 0x0D, 0x58, 0x00, 0x18, 0x02, 0x5A, 0x00, 0x58, 0x00
	.byte 0x18, 0x02, 0x5A, 0x00, 0x15, 0x03, 0x25, 0x01, 0x08, 0x0D, 0x59, 0x00, 0xA2, 0x02, 0xB1, 0x00
	.byte 0x59, 0x00, 0xA2, 0x02, 0xB1, 0x00, 0x16, 0x03, 0x02, 0x02, 0x08, 0x0D, 0x5A, 0x00, 0x34, 0x03
	.byte 0x0A, 0x01, 0x5A, 0x00, 0x34, 0x03, 0x0A, 0x01, 0x00, 0x02, 0x31, 0x00, 0x08, 0x0D, 0x31, 0x00
	.byte 0x09, 0x04, 0x6C, 0x01, 0x31, 0x00, 0x09, 0x04, 0x6C, 0x01, 0x01, 0x03, 0xF5, 0x01, 0x08, 0x0D
	.byte 0x32, 0x00, 0x08, 0x04, 0x07, 0x01, 0x32, 0x00, 0x08, 0x04, 0x07, 0x01, 0x02, 0x03, 0xDB, 0x01
	.byte 0x08, 0x0D, 0x33, 0x00, 0x18, 0x04, 0x6B, 0x00, 0x33, 0x00, 0x18, 0x04, 0x6B, 0x00, 0x03, 0x03
	.byte 0xAC, 0x01, 0x08, 0x0D, 0x34, 0x00, 0x1D, 0x05, 0x84, 0x00, 0x34, 0x00, 0x1D, 0x05, 0x84, 0x00
	.byte 0x04, 0x03, 0xB2, 0x01, 0x08, 0x0D, 0x35, 0x00, 0x8A, 0x05, 0xEB, 0x00, 0x35, 0x00, 0x8A, 0x05
	.byte 0xEB, 0x00, 0x05, 0x03, 0x66, 0x01, 0x08, 0x0D, 0x36, 0x00, 0x11, 0x05, 0x27, 0x01, 0x36, 0x00
	.byte 0x11, 0x05, 0x27, 0x01, 0x06, 0x03, 0x89, 0x01, 0x08, 0x0D, 0x37, 0x00, 0xCF, 0x04, 0xEE, 0x00
	.byte 0x37, 0x00, 0xCF, 0x04, 0xEE, 0x00, 0x07, 0x03, 0xE2, 0x01, 0x08, 0x0D, 0x38, 0x00, 0xB9, 0x04
	.byte 0xB8, 0x01, 0x38, 0x00, 0xB9, 0x04, 0xB8, 0x01, 0x08, 0x02, 0xFC, 0x01, 0x08, 0x0D, 0x39, 0x00
	.byte 0x0F, 0x04, 0xF7, 0x01, 0x39, 0x00, 0x0F, 0x04, 0xF7, 0x01, 0x09, 0x03, 0x2C, 0x01, 0x06, 0x15
	.byte 0x3A, 0x00, 0x90, 0x03, 0xC9, 0x00, 0x3A, 0x00, 0x90, 0x03, 0xC9, 0x00, 0x0A, 0x03, 0x97, 0x01
	.byte 0x08, 0x0D, 0x3B, 0x00, 0x0E, 0x05, 0xF3, 0x00, 0x3B, 0x00, 0x0E, 0x05, 0xF3, 0x00, 0x1E, 0x03
	.byte 0x16, 0x02, 0x08, 0x0D, 0xAE, 0x00, 0x52, 0x00, 0x2F, 0x01, 0xAE, 0x00, 0x52, 0x00, 0x2F, 0x01
	.byte 0x1F, 0x03, 0x10, 0x02, 0x08, 0x0D, 0x9B, 0x01, 0x08, 0x00, 0x0F, 0x00, 0x5E, 0x00, 0xED, 0x00
	.byte 0x0B, 0x01, 0x23, 0x00, 0x18, 0x01, 0x08, 0x0D, 0x18, 0x01, 0x2A, 0x00, 0x17, 0x00, 0x27, 0x00
	.byte 0x6A, 0x01, 0x0B, 0x01, 0x21, 0x00, 0x2B, 0x01, 0x08, 0x0D, 0x1E, 0x00, 0x8D, 0x03, 0x29, 0x01
	.byte 0x1E, 0x00, 0x8D, 0x03, 0x29, 0x01, 0x1B, 0x01, 0xA9, 0x00, 0x08, 0x0D, 0x24, 0x00, 0xD4, 0x01
	.byte 0xA3, 0x01, 0x24, 0x00, 0xD4, 0x01, 0xA3, 0x01, 0x24, 0x01, 0xFF, 0x01, 0x08, 0x0D, 0x0B, 0x00
	.byte 0x8F, 0x04, 0x6B, 0x00, 0x0B, 0x00, 0x8F, 0x04, 0x6B, 0x00, 0x25, 0x01, 0xD2, 0x01, 0x08, 0x0D
	.byte 0x12, 0x00, 0x92, 0x05, 0xA4, 0x00, 0x12, 0x00, 0x92, 0x05, 0xA4, 0x00

	.text

	thumb_func_start sub_0203BA5C
sub_0203BA5C: ; 0x0203BA5C
	push {r3, lr}
	cmp r0, #0
	ble _0203BA66
	cmp r0, #0x1e
	bls _0203BA6C
_0203BA66:
	bl GF_AssertFail
	mov r0, #1
_0203BA6C:
	sub r0, r0, #1
	pop {r3, pc}
	thumb_func_end sub_0203BA5C

	thumb_func_start sub_0203BA70
sub_0203BA70: ; 0x0203BA70
	mov r0, #1
	bx lr
	thumb_func_end sub_0203BA70

	thumb_func_start sub_0203BA74
sub_0203BA74: ; 0x0203BA74
	push {r4, lr}
	add r4, r1, #0
	bl sub_0203BA5C
	add r1, r0, #0
	mov r2, #0x12
	mul r1, r2
	ldr r0, _0203BAA0 ; =_020F9E86
	sub r2, #0x13
	ldrh r0, [r0, r1]
	str r0, [r4]
	ldr r0, _0203BAA4 ; =_020F9E88
	str r2, [r4, #4]
	ldrh r0, [r0, r1]
	str r0, [r4, #8]
	ldr r0, _0203BAA8 ; =_020F9E8A
	ldrh r0, [r0, r1]
	str r0, [r4, #0xc]
	mov r0, #1
	str r0, [r4, #0x10]
	pop {r4, pc}
	nop
_0203BAA0: .word _020F9E86
_0203BAA4: .word _020F9E88
_0203BAA8: .word _020F9E8A
	thumb_func_end sub_0203BA74

	thumb_func_start sub_0203BAAC
sub_0203BAAC: ; 0x0203BAAC
	push {r4, lr}
	add r4, r1, #0
	bl sub_0203BA5C
	add r2, r0, #0
	mov r1, #0x12
	mul r2, r1
	ldr r0, _0203BAE0 ; =_020F9E82
	sub r1, #0x13
	ldrh r0, [r0, r2]
	str r0, [r4]
	ldr r0, _0203BAE4 ; =_020F9E80
	str r1, [r4, #4]
	add r1, r0, r2
	ldrh r0, [r1, #4]
	lsl r0, r0, #0x18
	lsr r0, r0, #0x18
	str r0, [r4, #8]
	ldrh r0, [r1, #4]
	lsl r0, r0, #0x10
	lsr r0, r0, #0x18
	str r0, [r4, #0xc]
	mov r0, #0
	str r0, [r4, #0x10]
	pop {r4, pc}
	nop
_0203BAE0: .word _020F9E82
_0203BAE4: .word _020F9E80
	thumb_func_end sub_0203BAAC

	thumb_func_start sub_0203BAE8
sub_0203BAE8: ; 0x0203BAE8
	push {r4, lr}
	add r4, r1, #0
	bl sub_0203BA5C
	add r1, r0, #0
	mov r2, #0x12
	mul r1, r2
	ldr r0, _0203BB14 ; =_020F9E8C
	sub r2, #0x13
	ldrh r0, [r0, r1]
	str r0, [r4]
	ldr r0, _0203BB18 ; =_020F9E8E
	str r2, [r4, #4]
	ldrh r0, [r0, r1]
	str r0, [r4, #8]
	ldr r0, _0203BB1C ; =_020F9E90
	ldrh r0, [r0, r1]
	str r0, [r4, #0xc]
	mov r0, #1
	str r0, [r4, #0x10]
	pop {r4, pc}
	nop
_0203BB14: .word _020F9E8C
_0203BB18: .word _020F9E8E
_0203BB1C: .word _020F9E90
	thumb_func_end sub_0203BAE8

	thumb_func_start sub_0203BB20
sub_0203BB20: ; 0x0203BB20
	push {r3, r4}
	ldr r3, _0203BB4C ; =_020F9E80
	mov r2, #0
	add r4, r3, #0
_0203BB28:
	ldrh r1, [r3, #2]
	cmp r0, r1
	bne _0203BB3C
	ldrh r1, [r4]
	lsl r1, r1, #0x17
	lsr r1, r1, #0x1f
	beq _0203BB3C
	add r0, r2, #1
	pop {r3, r4}
	bx lr
_0203BB3C:
	add r2, r2, #1
	add r3, #0x12
	add r4, #0x12
	cmp r2, #0x1e
	blo _0203BB28
	mov r0, #0
	pop {r3, r4}
	bx lr
	.balign 4, 0
_0203BB4C: .word _020F9E80
	thumb_func_end sub_0203BB20

	thumb_func_start sub_0203BB50
sub_0203BB50: ; 0x0203BB50
	ldr r3, _0203BB6C ; =_020F9E80
	mov r2, #0
_0203BB54:
	ldrh r1, [r3, #6]
	cmp r0, r1
	bne _0203BB5E
	add r0, r2, #1
	bx lr
_0203BB5E:
	add r2, r2, #1
	add r3, #0x12
	cmp r2, #0x1e
	blo _0203BB54
	mov r0, #0
	bx lr
	nop
_0203BB6C: .word _020F9E80
	thumb_func_end sub_0203BB50

	thumb_func_start sub_0203BB70
sub_0203BB70: ; 0x0203BB70
	push {r3, r4, r5, lr}
	ldr r2, _0203BBB0 ; =_020F9E80
	mov r4, #0
	add r3, r2, #0
_0203BB78:
	ldrh r5, [r2, #6]
	cmp r1, r5
	bne _0203BBA2
	ldrh r5, [r3]
	lsl r5, r5, #0x16
	lsr r5, r5, #0x1f
	beq _0203BBA2
	ldr r0, [r0, #0xc]
	bl SavArray_Flags_get
	mov r2, #0x12
	add r3, r4, #0
	mul r3, r2
	ldr r2, _0203BBB0 ; =_020F9E80
	mov r1, #1
	ldrh r2, [r2, r3]
	lsl r2, r2, #0x18
	lsr r2, r2, #0x18
	bl sub_02066930
	pop {r3, r4, r5, pc}
_0203BBA2:
	add r4, r4, #1
	add r2, #0x12
	add r3, #0x12
	cmp r4, #0x1e
	blo _0203BB78
	pop {r3, r4, r5, pc}
	nop
_0203BBB0: .word _020F9E80
	thumb_func_end sub_0203BB70
