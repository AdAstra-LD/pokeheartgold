	.include "asm/macros.inc"
	.include "global.inc"

	.text

	; Entry point
	thumb_func_start NitroMain
NitroMain: @ 0x02000CA4
	push {r3, r4, r5, r6, r7, lr}
	bl FUN_0201A200
	bl FUN_0201A348
	bl FUN_0201A458
	movs r0, #0
	bl FUN_0201A4B0
	ldr r0, _02000E48 @ =0x02111860
	movs r1, #0
	blx FUN_020DB3B4
	bl FUN_02026E30
	bl FUN_02014634
	bl FUN_02000E6C
	bl FUN_02002CA8
	movs r0, #0
	movs r1, #3
	bl FUN_02002CEC
	movs r0, #1
	movs r1, #3
	bl FUN_02002CEC
	movs r0, #3
	adds r1, r0, #0
	bl FUN_02002CEC
	movs r1, #0
	ldr r0, _02000E4C @ =0x02111860
	mvns r1, r1
	str r1, [r0, #0x18]
	bl FUN_020271B0
	ldr r1, _02000E4C @ =0x02111860
	str r0, [r1, #0x20]
	bl FUN_02005D00
	ldr r0, _02000E4C @ =0x02111860
	ldr r0, [r0, #0x20]
	bl FUN_0202CE64
	adds r4, r0, #0
	ldr r0, _02000E4C @ =0x02111860
	ldr r0, [r0, #0x20]
	bl FUN_02028EA8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_02004174
	bl FUN_02025404
	movs r0, #3
	bl FUN_02039FFC
	cmp r0, #3
	bne _02000D2C
	movs r0, #3
	movs r1, #0
	bl FUN_0203AC94
_02000D2C:
	ldr r0, _02000E4C @ =0x02111860
	ldr r0, [r0, #0x20]
	bl FUN_020274D0
	cmp r0, #0
	bne _02000D40
	movs r0, #0
	bl FUN_0209263C
	b _02000D82
_02000D40:
	ldr r0, _02000E50 @ =0x027FFC20
	ldr r0, [r0]
	cmp r0, #0
	beq _02000D4E
	cmp r0, #1
	beq _02000D5E
	b _02000D7E
_02000D4E:
	ldr r0, _02000E4C @ =0x02111860
	movs r1, #0
	str r1, [r0, #0x1c]
	ldr r0, _02000E54 @ =0x0000003C
	ldr r1, _02000E58 @ =0x021EB030
	bl FUN_02000EF4
	b _02000D82
_02000D5E:
	movs r0, #0
	adds r1, r0, #0
	bl FUN_0200FBF4
	movs r0, #1
	movs r1, #0
	bl FUN_0200FBF4
	ldr r0, _02000E4C @ =0x02111860
	movs r1, #1
	str r1, [r0, #0x1c]
	ldr r0, _02000E5C @ =0x00000024
	ldr r1, _02000E60 @ =0x021E5C04
	bl FUN_02000EF4
	b _02000D82
_02000D7E:
	bl FUN_0202551C
_02000D82:
	ldr r0, _02000E64 @ =0x021D110C
	movs r1, #1
	str r1, [r0, #0x70]
	movs r1, #0
	str r1, [r0, #0x30]
	bl FUN_020010C8
	bl FUN_0200B528
	bl FUN_02018380
	ldr r0, _02000E4C @ =0x02111860
	movs r1, #0
	str r1, [r0, #4]
	blx FUN_020D33C0
	movs r7, #0xc3
	ldr r6, _02000E68 @ =0x021D116C
	ldr r4, _02000E64 @ =0x021D110C
	movs r5, #0
	lsls r7, r7, #2
_02000DAC:
	bl FUN_02000F60
	bl FUN_0200110C
	bl FUN_0201A4DC
	movs r0, #0xc3
	ldr r1, [r4, #0x38]
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, r7
	bne _02000DD0
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	bne _02000DD0
	movs r0, #0
	bl FUN_02000FA4
_02000DD0:
	bl FUN_02036144
	cmp r0, #0
	beq _02000E08
	bl FUN_02000F60
	blx FUN_020D34B0
	bl FUN_02000E84
	blx FUN_020D34B0
	ldr r0, [r4, #0x18]
	bl FUN_0201F880
	ldr r0, [r4, #0x24]
	bl FUN_0201F880
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bne _02000E08
	movs r0, #1
	adds r1, r0, #0
	blx FUN_020D0E6C
	ldr r0, [r4, #0x2c]
	adds r0, r0, #1
	str r0, [r4, #0x2c]
_02000E08:
	bl FUN_0201466C
	bl FUN_020183B0
	bl FUN_02026E60
	ldr r0, [r4, #0x24]
	bl FUN_0201F880
	movs r0, #1
	adds r1, r0, #0
	blx FUN_020D0E6C
	ldr r0, [r4, #0x2c]
	adds r0, r0, #1
	str r0, [r4, #0x2c]
	str r5, [r4, #0x30]
	bl FUN_0200B594
	bl FUN_0200FB2C
	ldr r1, [r4]
	cmp r1, #0
	beq _02000E3C
	ldr r0, [r4, #4]
	blx r1
_02000E3C:
	bl FUN_02004208
	ldr r0, [r4, #0x20]
	bl FUN_0201F880
	b _02000DAC
	.align 2, 0
_02000E48: .4byte 0x02111860
_02000E4C: .4byte 0x02111860
_02000E50: .4byte 0x027FFC20
_02000E54: .4byte 0x0000003C
_02000E58: .4byte 0x021EB030
_02000E5C: .4byte 0x00000024
_02000E60: .4byte 0x021E5C04
_02000E64: .4byte 0x021D110C
_02000E68: .4byte 0x021D116C
	thumb_func_end NitroMain

	thumb_func_start FUN_02000E6C
FUN_02000E6C: @ 0x02000E6C
	movs r2, #0
	ldr r0, _02000E80 @ =0x02111860
	mvns r2, r2
	str r2, [r0, #8]
	movs r1, #0
	str r1, [r0, #0xc]
	str r2, [r0, #0x10]
	str r1, [r0, #0x14]
	bx lr
	nop
_02000E80: .4byte 0x02111860
	thumb_func_end FUN_02000E6C

	thumb_func_start FUN_02000E84
FUN_02000E84: @ 0x02000E84
	push {r3, lr}
	ldr r0, _02000EEC @ =0x02111860
	ldr r1, [r0, #0xc]
	cmp r1, #0
	bne _02000EC2
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _02000EE8
	movs r1, #0
	ldr r0, [r0, #0x10]
	mvns r1, r1
	cmp r0, r1
	beq _02000EA4
	movs r1, #0
	bl FUN_02006FF8
_02000EA4:
	ldr r0, _02000EEC @ =0x02111860
	movs r2, #0
	ldr r1, [r0, #0x10]
	str r1, [r0, #8]
	ldr r0, [r0, #0x14]
	ldr r1, _02000EF0 @ =0x02111878
	bl FUN_0200724C
	ldr r1, _02000EEC @ =0x02111860
	str r0, [r1, #0xc]
	movs r0, #0
	mvns r0, r0
	str r0, [r1, #0x10]
	movs r0, #0
	str r0, [r1, #0x14]
_02000EC2:
	ldr r0, _02000EEC @ =0x02111860
	ldr r0, [r0, #0xc]
	bl FUN_020072A8
	cmp r0, #0
	beq _02000EE8
	ldr r0, _02000EEC @ =0x02111860
	ldr r0, [r0, #0xc]
	bl FUN_02007278
	ldr r0, _02000EEC @ =0x02111860
	movs r1, #0
	str r1, [r0, #0xc]
	ldr r0, [r0, #8]
	subs r1, r1, #1
	cmp r0, r1
	beq _02000EE8
	bl FUN_02006F7C
_02000EE8:
	pop {r3, pc}
	nop
_02000EEC: .4byte 0x02111860
_02000EF0: .4byte 0x02111878
	thumb_func_end FUN_02000E84

	thumb_func_start FUN_02000EF4
FUN_02000EF4: @ 0x02000EF4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _02000F10 @ =0x02111860
	adds r4, r1, #0
	ldr r0, [r0, #0x14]
	cmp r0, #0
	beq _02000F06
	bl FUN_0202551C
_02000F06:
	ldr r0, _02000F10 @ =0x02111860
	str r5, [r0, #0x10]
	str r4, [r0, #0x14]
	pop {r3, r4, r5, pc}
	nop
_02000F10: .4byte 0x02111860
	thumb_func_end FUN_02000EF4

	thumb_func_start FUN_02000F14
FUN_02000F14: @ 0x02000F14
	push {r3, lr}
	bl FUN_02036144
	movs r0, #1
	adds r1, r0, #0
	blx FUN_020D0E6C
	ldr r0, _02000F3C @ =0x021D110C
	ldr r1, [r0, #0x2c]
	adds r1, r1, #1
	str r1, [r0, #0x2c]
	movs r1, #0
	str r1, [r0, #0x30]
	ldr r1, [r0]
	cmp r1, #0
	beq _02000F38
	ldr r0, [r0, #4]
	blx r1
_02000F38:
	pop {r3, pc}
	nop
_02000F3C: .4byte 0x021D110C
	thumb_func_end FUN_02000F14

	thumb_func_start FUN_02000F40
FUN_02000F40: @ 0x02000F40
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02039AA4
	cmp r0, #0
	beq _02000F5A
	blx FUN_020DD1A4
	cmp r0, #1
	bne _02000F5A
	adds r0, r4, #0
	blx FUN_020D3B84
_02000F5A:
	bl FUN_02000F14
	pop {r4, pc}
	thumb_func_end FUN_02000F40

	thumb_func_start FUN_02000F60
FUN_02000F60: @ 0x02000F60
	push {r3, lr}
	bl FUN_020399B8
	adds r1, r0, #0
	cmp r1, #5
	bhi _02000FA2
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02000F78: @ jump table
	.2byte _02000FA2 - _02000F78 - 2 @ case 0
	.2byte _02000F8C - _02000F78 - 2 @ case 1
	.2byte _02000F94 - _02000F78 - 2 @ case 2
	.2byte _02000F9C - _02000F78 - 2 @ case 3
	.2byte _02000FA2 - _02000F78 - 2 @ case 4
	.2byte _02000F84 - _02000F78 - 2 @ case 5
_02000F84:
	movs r0, #0
	bl FUN_02000FD8
	pop {r3, pc}
_02000F8C:
	movs r0, #1
	bl FUN_02000FD8
	pop {r3, pc}
_02000F94:
	movs r0, #0
	bl FUN_02000FD8
	pop {r3, pc}
_02000F9C:
	movs r0, #1
	bl FUN_02000FD8
_02000FA2:
	pop {r3, pc}
	thumb_func_end FUN_02000F60

	thumb_func_start FUN_02000FA4
FUN_02000FA4: @ 0x02000FA4
	push {r4, lr}
	ldr r1, _02000FD4 @ =0x00007FFF
	adds r4, r0, #0
	movs r0, #0
	bl FUN_0200FBF4
	ldr r1, _02000FD4 @ =0x00007FFF
	movs r0, #1
	bl FUN_0200FBF4
	bl FUN_02038D90
	cmp r0, #0
	beq _02000FC8
	bl FUN_020272B0
	bl FUN_020275A4
_02000FC8:
	bl FUN_0200110C
	adds r0, r4, #0
	bl FUN_02000F40
	b _02000FC8
	.align 2, 0
_02000FD4: .4byte 0x00007FFF
	thumb_func_end FUN_02000FA4

	thumb_func_start FUN_02000FD8
FUN_02000FD8: @ 0x02000FD8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	adds r6, r1, #0
	movs r4, #0
	bl FUN_0203993C
	str r0, [sp, #4]
	bl FUN_02039998
	adds r7, r0, #0
	adds r1, r4, #0
	ldr r0, _02001090 @ =0x021D116C
	cmp r6, #3
	strb r1, [r0, #8]
	bne _02000FFC
	movs r5, #3
	b _02001020
_02000FFC:
	ldr r0, [sp]
	cmp r0, #0
	bne _02001012
	bl FUN_02039998
	cmp r0, #1
	bne _0200100E
	movs r5, #6
	b _02001020
_0200100E:
	movs r5, #2
	b _02001020
_02001012:
	bl FUN_02039998
	cmp r0, #1
	bne _0200101E
	movs r5, #5
	b _02001020
_0200101E:
	adds r5, r4, #0
_02001020:
	movs r0, #0
	adds r1, r5, #0
	adds r2, r0, #0
	bl FUN_0203AA44
	bl FUN_02038D90
	bl FUN_02000F14
	bl FUN_02004208
_02001036:
	bl FUN_0200110C
	bl FUN_0201A4DC
	cmp r6, #1
	bne _02001068
	cmp r5, #0
	bne _02001068
	ldr r0, [sp, #4]
	bl FUN_02001098
	cmp r0, #0
	beq _02001068
	cmp r7, #0
	bne _02001068
	ldr r0, _02001094 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #2
	tst r0, r1
	beq _02001068
	cmp r4, #0xa
	blt _02001068
	movs r0, #0
	str r0, [sp]
	b _02001086
_02001068:
	ldr r0, _02001094 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #1
	tst r0, r1
	beq _02001076
	cmp r4, #0xa
	bge _02001086
_02001076:
	bl FUN_02004208
	bl FUN_02000F14
	cmp r4, #0xa
	bge _02001036
	adds r4, r4, #1
	b _02001036
_02001086:
	ldr r0, [sp]
	bl FUN_02000FA4
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02001090: .4byte 0x021D116C
_02001094: .4byte 0x021D110C
	thumb_func_end FUN_02000FD8

	thumb_func_start FUN_02001098
FUN_02001098: @ 0x02001098
	cmp r0, #0xd
	bgt _020010B2
	cmp r0, #7
	blt _020010AC
	beq _020010BE
	cmp r0, #9
	beq _020010BE
	cmp r0, #0xd
	beq _020010BE
	b _020010C2
_020010AC:
	cmp r0, #0
	beq _020010BE
	b _020010C2
_020010B2:
	cmp r0, #0x12
	bgt _020010BA
	beq _020010BE
	b _020010C2
_020010BA:
	cmp r0, #0x1a
	bne _020010C2
_020010BE:
	movs r0, #1
	bx lr
_020010C2:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02001098

	thumb_func_start FUN_020010C8
FUN_020010C8: @ 0x020010C8
	push {r4, r5, lr}
	sub sp, #0x1c
	add r0, sp, #0xc
	add r1, sp, #0
	bl FUN_02014708
	ldr r0, _02001108 @ =0x021D110C
	ldr r3, [sp, #0x10]
	ldr r4, [r0, #0x2c]
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x14]
	adds r0, r1, r0
	lsls r2, r0, #0x18
	ldr r0, [sp]
	lsls r3, r3, #8
	lsls r1, r0, #0x10
	muls r3, r5, r3
	ldr r0, [sp, #0xc]
	lsls r3, r3, #0x10
	adds r0, r0, r3
	adds r0, r1, r0
	adds r5, r2, r0
	adds r0, r4, r5
	bl FUN_0201FD74
	adds r0, r4, r5
	bl FUN_0201FD38
	add sp, #0x1c
	pop {r4, r5, pc}
	nop
_02001108: .4byte 0x021D110C
	thumb_func_end FUN_020010C8

	thumb_func_start FUN_0200110C
FUN_0200110C: @ 0x0200110C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _020011D0 @ =0x027FFFA8
	ldrh r1, [r0]
	movs r0, #2
	lsls r0, r0, #0xe
	ands r0, r1
	asrs r0, r0, #0xf
	beq _020011AE
	ldr r0, _020011D4 @ =0x021D116C
	ldrb r0, [r0, #0xb]
	cmp r0, #0
	bne _02001190
	bl FUN_0202135C
	bl FUN_02005568
	blx FUN_020E10E8
	cmp r0, #1
	bne _0200113C
	ldr r0, _020011D8 @ =0x02111860
	movs r1, #1
	str r1, [r0, #4]
_0200113C:
	ldr r6, _020011D8 @ =0x02111860
	movs r0, #0xc
	ldr r1, [r6, #4]
	ldr r4, _020011D0 @ =0x027FFFA8
	movs r2, #0x10
	adds r5, r0, #0
	ldr r7, _020011D4 @ =0x021D116C
	orrs r5, r2
_0200114C:
	ldrb r2, [r7, #0xa]
	movs r0, #0xc
	cmp r2, #0
	beq _0200115A
	cmp r1, #0
	bne _0200115A
	adds r0, r5, #0
_0200115A:
	movs r1, #0
	adds r2, r1, #0
	blx FUN_020DB43C
	blx FUN_020DDB24
	cmp r0, #0
	beq _02001170
	blx FUN_020DB330
	b _02001184
_02001170:
	ldrh r1, [r4]
	movs r0, #2
	lsls r0, r0, #0xe
	ands r0, r1
	asrs r0, r0, #0xf
	beq _02001184
	movs r0, #1
	str r0, [r6, #4]
	adds r1, r0, #0
	b _0200114C
_02001184:
	bl FUN_02021328
	bl FUN_02005584
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_02001190:
	bl FUN_0202135C
	add r0, sp, #4
	add r1, sp, #0
	blx FUN_020DB3B4
	ldr r0, [sp, #4]
	cmp r0, #1
	bne _020011CA
	movs r0, #2
	movs r1, #0
	blx FUN_020DB25C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_020011AE:
	add r0, sp, #4
	add r1, sp, #0
	blx FUN_020DB3B4
	bl FUN_02021328
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _020011CA
	ldr r1, _020011D8 @ =0x02111860
	movs r0, #2
	ldr r1, [r1]
	blx FUN_020DB25C
_020011CA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020011D0: .4byte 0x027FFFA8
_020011D4: .4byte 0x021D116C
_020011D8: .4byte 0x02111860
	thumb_func_end FUN_0200110C

	thumb_func_start FUN_020011DC
FUN_020011DC: @ 0x020011DC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r3, #0
	movs r1, #0x38
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r3, r5, #0
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [sp]
	bl FUN_02015788
	str r0, [r4, #0x28]
	strh r6, [r4, #0x2c]
	adds r1, r4, #0
	strh r7, [r4, #0x2e]
	movs r0, #0
	adds r1, #0x30
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x31
	strb r0, [r1]
	adds r1, r4, #0
	movs r2, #0xff
	adds r1, #0x32
	strb r2, [r1]
	adds r1, r4, #0
	adds r1, #0x33
	strb r0, [r1]
	adds r1, r4, #0
	ldr r0, [sp]
	adds r1, #0x34
	strb r0, [r1]
	adds r0, r4, #0
	ldrb r1, [r4, #0x17]
	adds r0, #0x20
	ldrb r2, [r0]
	lsls r1, r1, #0x18
	movs r0, #0xf
	lsrs r3, r1, #0x1c
	movs r1, #0xf
	bics r2, r0
	ands r3, r1
	orrs r3, r2
	adds r2, r4, #0
	adds r2, #0x20
	strb r3, [r2]
	adds r2, r4, #0
	adds r2, #0x20
	ldrb r2, [r2]
	movs r3, #0xf0
	bics r2, r3
	ldrb r3, [r4, #0x18]
	lsls r3, r3, #0x1c
	lsrs r3, r3, #0x1c
	lsls r3, r3, #0x1c
	lsrs r3, r3, #0x18
	orrs r3, r2
	adds r2, r4, #0
	adds r2, #0x20
	strb r3, [r2]
	adds r2, r4, #0
	adds r2, #0x21
	ldrb r2, [r2]
	bics r2, r0
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x21
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x22
	ldrb r0, [r0]
	movs r1, #0x3f
	bics r0, r1
	ldrh r1, [r4, #0x1a]
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1d
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0x3f
	ands r1, r2
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x22
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	movs r1, #0x7f
	bics r0, r1
	ldrh r1, [r4, #0x1a]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x1a
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0x7f
	ands r1, r2
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r1, [r0]
	movs r0, #0x80
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	ldrh r1, [r4, #0x10]
	ldrh r0, [r4, #0x12]
	cmp r1, r0
	bhs _020012E0
	strh r1, [r4, #0x12]
_020012E0:
	ldrb r2, [r4, #0x18]
	ldr r0, [r4, #0x28]
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	ldrb r1, [r4, #0x17]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x1c
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r1, r1, #8
	lsrs r2, r2, #0x10
	orrs r1, r2
	orrs r1, r3
	bl FUN_020157D8
	ldrb r1, [r4, #0x18]
	ldr r0, [r4, #0xc]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bl FUN_0201D978
	ldrh r1, [r4, #0x2c]
	ldrh r3, [r4, #0x12]
	adds r0, r4, #0
	movs r2, #0
	bl FUN_02001688
	adds r0, r4, #0
	bl FUN_02001720
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02001AD8
	ldr r0, [r5, #0xc]
	bl FUN_0201D578
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020011DC

	thumb_func_start FUN_02001338
FUN_02001338: @ 0x02001338
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	ldr r6, _02001430 @ =0x021D110C
	movs r3, #0
	adds r1, #0x33
	strb r3, [r1]
	ldr r1, [r6, #0x48]
	movs r2, #1
	adds r5, r1, #0
	tst r5, r2
	beq _02001360
	ldrh r1, [r4, #0x2c]
	ldrh r0, [r4, #0x2e]
	ldr r2, [r4]
	adds r0, r1, r0
	lsls r0, r0, #3
	adds r0, r2, r0
	ldr r0, [r0, #4]
	pop {r4, r5, r6, pc}
_02001360:
	movs r5, #2
	tst r1, r5
	beq _0200136A
	subs r0, r5, #4
	pop {r4, r5, r6, pc}
_0200136A:
	ldr r5, [r6, #0x4c]
	movs r1, #0x40
	tst r1, r5
	beq _02001388
	adds r1, r2, #0
	bl FUN_02001A18
	cmp r0, #0
	bne _02001382
	movs r0, #1
	adds r4, #0x33
	strb r0, [r4]
_02001382:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
_02001388:
	movs r1, #0x80
	adds r3, r5, #0
	tst r3, r1
	beq _020013A8
	adds r1, r2, #0
	adds r3, r2, #0
	bl FUN_02001A18
	cmp r0, #0
	bne _020013A2
	movs r0, #2
	adds r4, #0x33
	strb r0, [r4]
_020013A2:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
_020013A8:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	beq _020013B8
	cmp r0, #1
	beq _020013BE
	cmp r0, #2
	beq _020013D0
_020013B8:
	movs r0, #0
	adds r1, r0, #0
	b _020013E0
_020013BE:
	movs r0, #0x20
	movs r1, #0x10
	ands r0, r5
	ands r1, r5
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r0, r0, #0x10
	lsrs r1, r1, #0x10
	b _020013E0
_020013D0:
	lsls r0, r1, #2
	adds r1, #0x80
	ands r0, r5
	ands r1, r5
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r0, r0, #0x10
	lsrs r1, r1, #0x10
_020013E0:
	cmp r0, #0
	beq _02001404
	ldrh r2, [r4, #0x12]
	adds r0, r4, #0
	movs r1, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r3, #0
	bl FUN_02001A18
	cmp r0, #0
	bne _020013FE
	movs r0, #3
	adds r4, #0x33
	strb r0, [r4]
_020013FE:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
_02001404:
	cmp r1, #0
	beq _02001428
	ldrh r2, [r4, #0x12]
	movs r1, #1
	adds r0, r4, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r3, r1, #0
	bl FUN_02001A18
	cmp r0, #0
	bne _02001422
	movs r0, #4
	adds r4, #0x33
	strb r0, [r4]
_02001422:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
_02001428:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
	nop
_02001430: .4byte 0x021D110C
	thumb_func_end FUN_02001338

	thumb_func_start FUN_02001434
FUN_02001434: @ 0x02001434
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0
	beq _02001440
	ldrh r0, [r4, #0x2c]
	strh r0, [r1]
_02001440:
	cmp r2, #0
	beq _02001448
	ldrh r0, [r4, #0x2e]
	strh r0, [r2]
_02001448:
	ldr r0, [r4, #0x28]
	bl FUN_020157B8
	adds r0, r4, #0
	adds r0, #0x34
	ldrb r0, [r0]
	adds r1, r4, #0
	bl FUN_0201AB80
	pop {r4, pc}
	thumb_func_end FUN_02001434

	thumb_func_start FUN_0200145C
FUN_0200145C: @ 0x0200145C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #0x18]
	ldr r0, [r4, #0xc]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bl FUN_0201D978
	ldrh r1, [r4, #0x2c]
	ldrh r3, [r4, #0x12]
	adds r0, r4, #0
	movs r2, #0
	bl FUN_02001688
	adds r0, r4, #0
	bl FUN_02001720
	ldr r0, [r4, #0xc]
	bl FUN_0201D578
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200145C

	thumb_func_start FUN_02001488
FUN_02001488: @ 0x02001488
	push {r3, r4, r5, r6}
	adds r4, r0, #0
	adds r4, #0x20
	ldrb r6, [r4]
	movs r4, #0xf
	movs r5, #0xf
	bics r6, r4
	ands r1, r5
	orrs r6, r1
	adds r1, r0, #0
	adds r1, #0x20
	strb r6, [r1]
	adds r1, r0, #0
	adds r1, #0x20
	lsls r2, r2, #0x1c
	ldrb r1, [r1]
	movs r6, #0xf0
	lsrs r2, r2, #0x18
	bics r1, r6
	orrs r2, r1
	adds r1, r0, #0
	adds r1, #0x20
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x21
	ldrb r2, [r1]
	adds r1, r3, #0
	ands r1, r5
	bics r2, r4
	orrs r2, r1
	adds r1, r0, #0
	adds r1, #0x21
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x24
	ldrb r2, [r1]
	movs r1, #0x80
	adds r0, #0x24
	orrs r1, r2
	strb r1, [r0]
	pop {r3, r4, r5, r6}
	bx lr
	thumb_func_end FUN_02001488

	thumb_func_start FUN_020014DC
FUN_020014DC: @ 0x020014DC
	ldrh r2, [r0, #0x2c]
	ldrh r0, [r0, #0x2e]
	adds r0, r2, r0
	strh r0, [r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020014DC

	thumb_func_start FUN_020014E8
FUN_020014E8: @ 0x020014E8
	cmp r1, #0
	beq _020014F0
	ldrh r3, [r0, #0x2c]
	strh r3, [r1]
_020014F0:
	cmp r2, #0
	beq _020014F8
	ldrh r0, [r0, #0x2e]
	strh r0, [r2]
_020014F8:
	bx lr
	.align 2, 0
	thumb_func_end FUN_020014E8

	thumb_func_start FUN_020014FC
FUN_020014FC: @ 0x020014FC
	ldr r2, [r0]
	lsls r0, r1, #3
	adds r0, r2, r0
	ldr r0, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020014FC

	thumb_func_start FUN_02001508
FUN_02001508: @ 0x02001508
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0x13
	bhi _020015CA
	adds r0, r1, r1
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0200151C: @ jump table
	.2byte _02001544 - _0200151C - 2 @ case 0
	.2byte _02001548 - _0200151C - 2 @ case 1
	.2byte _0200154C - _0200151C - 2 @ case 2
	.2byte _02001550 - _0200151C - 2 @ case 3
	.2byte _020015CA - _0200151C - 2 @ case 4
	.2byte _02001554 - _0200151C - 2 @ case 5
	.2byte _02001558 - _0200151C - 2 @ case 6
	.2byte _0200155C - _0200151C - 2 @ case 7
	.2byte _02001560 - _0200151C - 2 @ case 8
	.2byte _02001568 - _0200151C - 2 @ case 9
	.2byte _02001582 - _0200151C - 2 @ case 10
	.2byte _0200158A - _0200151C - 2 @ case 11
	.2byte _02001592 - _0200151C - 2 @ case 12
	.2byte _0200159A - _0200151C - 2 @ case 13
	.2byte _020015A2 - _0200151C - 2 @ case 14
	.2byte _020015AA - _0200151C - 2 @ case 15
	.2byte _020015B2 - _0200151C - 2 @ case 16
	.2byte _020015BA - _0200151C - 2 @ case 17
	.2byte _020015C2 - _0200151C - 2 @ case 18
	.2byte _020015C6 - _0200151C - 2 @ case 19
_02001544:
	ldr r0, [r4, #4]
	pop {r4, pc}
_02001548:
	ldr r0, [r4, #8]
	pop {r4, pc}
_0200154C:
	ldrh r0, [r4, #0x10]
	pop {r4, pc}
_02001550:
	ldrh r0, [r4, #0x12]
	pop {r4, pc}
_02001554:
	ldrb r0, [r4, #0x14]
	pop {r4, pc}
_02001558:
	ldrb r0, [r4, #0x15]
	pop {r4, pc}
_0200155C:
	ldrb r0, [r4, #0x16]
	pop {r4, pc}
_02001560:
	ldrb r0, [r4, #0x17]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	pop {r4, pc}
_02001568:
	ldrh r0, [r4, #0x1a]
	movs r1, #1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_02002FAC
	ldrh r1, [r4, #0x1a]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1c
	adds r0, r1, r0
	pop {r4, pc}
_02001582:
	ldrb r0, [r4, #0x17]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	pop {r4, pc}
_0200158A:
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	pop {r4, pc}
_02001592:
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	pop {r4, pc}
_0200159A:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	pop {r4, pc}
_020015A2:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1c
	pop {r4, pc}
_020015AA:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	pop {r4, pc}
_020015B2:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	pop {r4, pc}
_020015BA:
	ldrh r0, [r4, #0x1a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	pop {r4, pc}
_020015C2:
	ldr r0, [r4, #0xc]
	pop {r4, pc}
_020015C6:
	ldr r0, [r4, #0x1c]
	pop {r4, pc}
_020015CA:
	movs r0, #0
	mvns r0, r0
	pop {r4, pc}
	thumb_func_end FUN_02001508

	thumb_func_start FUN_020015D0
FUN_020015D0: @ 0x020015D0
	push {r4, r5, r6, lr}
	sub sp, #0x18
	adds r5, r1, #0
	adds r6, r0, #0
	adds r4, r2, #0
	cmp r5, #0
	beq _02001684
	adds r0, #0x24
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1f
	str r3, [sp]
	beq _02001640
	movs r0, #0xff
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r0, #0x20
	ldrb r2, [r0]
	adds r3, r4, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r2, #0x1c
	adds r2, r6, #0
	adds r2, #0x21
	ldrb r2, [r2]
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x1c
	lsls r2, r2, #0x18
	lsrs r0, r0, #8
	lsrs r2, r2, #0x10
	orrs r0, r2
	orrs r0, r1
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r0, #0x22
	ldrb r0, [r0]
	adds r2, r5, #0
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r0, [r6, #0xc]
	adds r6, #0x24
	ldrb r1, [r6]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x19
	bl FUN_02020150
	add sp, #0x18
	pop {r4, r5, r6, pc}
_02001640:
	movs r0, #0xff
	str r0, [sp, #4]
	ldrb r1, [r6, #0x18]
	adds r3, r4, #0
	lsls r0, r1, #0x1c
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrb r0, [r6, #0x17]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r0, r0, #8
	lsrs r1, r1, #0x10
	orrs r0, r1
	orrs r0, r2
	str r0, [sp, #8]
	ldrh r0, [r6, #0x1a]
	adds r2, r5, #0
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	ldrh r1, [r6, #0x1a]
	ldr r0, [r6, #0xc]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x1a
	bl FUN_02020150
_02001684:
	add sp, #0x18
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020015D0

	thumb_func_start FUN_02001688
FUN_02001688: @ 0x02001688
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	str r3, [sp]
	ldrh r0, [r5, #0x1a]
	adds r4, r1, #0
	movs r1, #1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	bl FUN_02002FAC
	ldrh r1, [r5, #0x1a]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1c
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp]
	cmp r0, #0
	ble _0200171A
_020016BC:
	ldr r1, [r5]
	lsls r0, r4, #3
	str r0, [sp, #8]
	adds r0, r1, r0
	ldr r1, [r0, #4]
	movs r0, #2
	mvns r0, r0
	cmp r1, r0
	beq _020016D4
	ldrb r0, [r5, #0x15]
	str r0, [sp, #4]
	b _020016D8
_020016D4:
	ldrb r0, [r5, #0x14]
	str r0, [sp, #4]
_020016D8:
	ldrb r0, [r5, #0x17]
	lsls r0, r0, #0x1c
	lsrs r3, r0, #0x1c
	ldr r0, [sp, #0xc]
	adds r2, r0, #0
	muls r2, r6, r2
	adds r0, r3, r2
	lsls r0, r0, #0x18
	ldr r3, [r5, #8]
	lsrs r7, r0, #0x18
	cmp r3, #0
	beq _020016F6
	adds r0, r5, #0
	adds r2, r7, #0
	blx r3
_020016F6:
	ldr r2, [r5]
	ldr r1, [sp, #8]
	adds r0, r5, #0
	ldr r1, [r2, r1]
	ldr r2, [sp, #4]
	adds r3, r7, #0
	bl FUN_020015D0
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x10]
	adds r6, r6, #1
	adds r1, r0, #1
	ldr r0, [sp]
	str r1, [sp, #0x10]
	cmp r1, r0
	blt _020016BC
_0200171A:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02001688

	thumb_func_start FUN_02001720
FUN_02001720: @ 0x02001720
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x1a]
	movs r1, #1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_02002FAC
	ldrh r1, [r4, #0x1a]
	ldrh r5, [r4, #0x2e]
	lsls r2, r1, #0x19
	lsrs r2, r2, #0x1c
	adds r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldrb r0, [r4, #0x17]
	muls r3, r5, r3
	ldrb r2, [r4, #0x16]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	adds r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1f
	cmp r0, #3
	bhi _02001776
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02001766: @ jump table
	.2byte _0200176E - _02001766 - 2 @ case 0
	.2byte _02001776 - _02001766 - 2 @ case 1
	.2byte _02001776 - _02001766 - 2 @ case 2
	.2byte _02001776 - _02001766 - 2 @ case 3
_0200176E:
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #0xc]
	bl FUN_020157F0
_02001776:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02001720

	thumb_func_start FUN_02001778
FUN_02001778: @ 0x02001778
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	ldrh r0, [r4, #0x1a]
	adds r5, r1, #0
	lsls r1, r0, #0x10
	lsrs r1, r1, #0x1f
	cmp r1, #3
	bhi _020017DC
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02001796: @ jump table
	.2byte _0200179E - _02001796 - 2 @ case 0
	.2byte _020017DC - _02001796 - 2 @ case 1
	.2byte _020017DC - _02001796 - 2 @ case 2
	.2byte _020017DC - _02001796 - 2 @ case 3
_0200179E:
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl FUN_02002FAC
	ldrh r1, [r4, #0x1a]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1c
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r0, #7
	str r0, [sp]
	movs r0, #0x10
	str r0, [sp, #4]
	ldrb r1, [r4, #0x18]
	ldr r0, [r4, #0xc]
	ldrb r2, [r4, #0x16]
	ldrb r4, [r4, #0x17]
	lsls r1, r1, #0x1c
	muls r3, r5, r3
	lsls r4, r4, #0x1c
	lsrs r4, r4, #0x1c
	adds r3, r4, r3
	lsls r3, r3, #0x10
	lsrs r1, r1, #0x1c
	lsrs r3, r3, #0x10
	bl FUN_0201DA74
_020017DC:
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02001778

	thumb_func_start FUN_020017E0
FUN_020017E0: @ 0x020017E0
	push {r4, r5, r6, r7}
	ldrh r4, [r0, #0x2e]
	ldrh r3, [r0, #0x2c]
	cmp r1, #0
	ldrh r2, [r0, #0x12]
	bne _02001872
	cmp r2, #1
	bne _020017F4
	movs r1, #0
	b _0200180C
_020017F4:
	lsrs r7, r2, #0x1f
	lsls r6, r2, #0x1f
	subs r6, r6, r7
	movs r5, #0x1f
	rors r6, r5
	lsrs r1, r2, #1
	adds r5, r7, r6
	adds r1, r1, r5
	subs r1, r2, r1
	subs r1, r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
_0200180C:
	cmp r3, #0
	bne _02001840
	cmp r4, #0
	beq _0200183A
	ldr r2, [r0]
	lsls r1, r3, #3
	movs r3, #2
	adds r1, r2, r1
	mvns r3, r3
_0200181E:
	subs r2, r4, #1
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r2, r4, #3
	adds r2, r1, r2
	ldr r2, [r2, #4]
	cmp r2, r3
	beq _02001836
	strh r4, [r0, #0x2e]
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_02001836:
	cmp r4, #0
	bne _0200181E
_0200183A:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_02001840:
	cmp r4, r1
	bls _0200186A
	ldr r5, [r0]
	lsls r2, r3, #3
	adds r2, r5, r2
	movs r5, #2
	mvns r5, r5
_0200184E:
	subs r4, r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r4, #3
	adds r6, r2, r6
	ldr r6, [r6, #4]
	cmp r6, r5
	beq _02001866
	strh r4, [r0, #0x2e]
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_02001866:
	cmp r4, r1
	bhi _0200184E
_0200186A:
	strh r1, [r0, #0x2e]
	subs r1, r3, #1
	strh r1, [r0, #0x2c]
	b _020018F8
_02001872:
	cmp r2, #1
	bne _0200187A
	movs r5, #0
	b _0200188E
_0200187A:
	lsrs r7, r2, #0x1f
	lsls r6, r2, #0x1f
	subs r6, r6, r7
	movs r5, #0x1f
	rors r6, r5
	lsrs r1, r2, #1
	adds r5, r7, r6
	adds r1, r1, r5
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
_0200188E:
	ldrh r1, [r0, #0x10]
	subs r1, r1, r2
	cmp r3, r1
	bne _020018C8
	subs r2, r2, #1
	cmp r4, r2
	bge _020018C2
	ldr r5, [r0]
	lsls r1, r3, #3
	adds r1, r5, r1
	movs r5, #2
	mvns r5, r5
_020018A6:
	adds r3, r4, #1
	lsls r3, r3, #0x10
	lsrs r4, r3, #0x10
	lsls r3, r4, #3
	adds r3, r1, r3
	ldr r3, [r3, #4]
	cmp r3, r5
	beq _020018BE
	strh r4, [r0, #0x2e]
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_020018BE:
	cmp r4, r2
	blt _020018A6
_020018C2:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_020018C8:
	cmp r4, r5
	bhs _020018F2
	ldr r2, [r0]
	lsls r1, r3, #3
	movs r6, #2
	adds r1, r2, r1
	mvns r6, r6
_020018D6:
	adds r2, r4, #1
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r2, r4, #3
	adds r2, r1, r2
	ldr r2, [r2, #4]
	cmp r2, r6
	beq _020018EE
	strh r4, [r0, #0x2e]
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_020018EE:
	cmp r4, r5
	blo _020018D6
_020018F2:
	strh r5, [r0, #0x2e]
	adds r1, r3, #1
	strh r1, [r0, #0x2c]
_020018F8:
	movs r0, #2
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020017E0

	thumb_func_start FUN_02001900
FUN_02001900: @ 0x02001900
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldrh r0, [r5, #0x12]
	adds r4, r1, #0
	adds r7, r2, #0
	cmp r4, r0
	blt _0200192C
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0xc]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bl FUN_0201D978
	ldrh r1, [r5, #0x2c]
	ldrh r3, [r5, #0x12]
	adds r0, r5, #0
	movs r2, #0
	bl FUN_02001688
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0200192C:
	ldrh r0, [r5, #0x1a]
	movs r1, #1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_02002FAC
	ldrh r1, [r5, #0x1a]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1c
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r7, #0
	ldrb r0, [r5, #0x18]
	bne _020019BA
	lsls r0, r0, #0x1c
	lsrs r7, r0, #0x1c
	adds r2, r4, #0
	lsls r3, r7, #4
	muls r2, r6, r2
	orrs r3, r7
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #1
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201EC48
	ldrh r1, [r5, #0x2c]
	adds r0, r5, #0
	movs r2, #0
	adds r3, r4, #0
	bl FUN_02001688
	ldrb r0, [r5, #0x17]
	lsls r0, r0, #0x1c
	lsrs r2, r0, #0x1c
	ldrh r0, [r5, #0x12]
	adds r1, r0, #0
	muls r1, r6, r1
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, [r5, #0xc]
	bl FUN_0201EE90
	adds r4, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_0201EE94
	lsls r0, r0, #3
	lsls r1, r4, #0x13
	subs r0, r0, r6
	lsrs r1, r1, #0x10
	lsls r0, r0, #0x10
	str r1, [sp]
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0xc]
	movs r2, #0
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	adds r3, r6, #0
	bl FUN_0201DA74
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_020019BA:
	lsls r0, r0, #0x1c
	lsrs r3, r0, #0x1c
	adds r2, r4, #0
	muls r2, r6, r2
	lsls r6, r3, #4
	orrs r3, r6
	lsls r2, r2, #0x18
	lsls r3, r3, #0x18
	ldr r0, [r5, #0xc]
	movs r1, #0
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201EC48
	ldrh r0, [r5, #0x12]
	ldrh r1, [r5, #0x2c]
	adds r3, r4, #0
	subs r2, r0, r4
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	lsrs r2, r2, #0x10
	bl FUN_02001688
	ldr r0, [r5, #0xc]
	bl FUN_0201EE90
	lsls r0, r0, #0x13
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldrb r0, [r5, #0x17]
	movs r2, #0
	adds r3, r2, #0
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	str r0, [sp, #4]
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0xc]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bl FUN_0201DA74
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02001900

	thumb_func_start FUN_02001A18
FUN_02001A18: @ 0x02001A18
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r1, [sp]
	str r2, [sp, #4]
	adds r4, r0, #0
	str r3, [sp, #8]
	ldrh r0, [r4, #0x2e]
	movs r6, #0
	adds r5, r6, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	adds r7, r6, #0
	cmp r0, #0
	bls _02001A6A
_02001A34:
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl FUN_020017E0
	orrs r5, r0
	cmp r0, #2
	bne _02001A5E
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldrh r1, [r4, #0x2c]
	ldrh r0, [r4, #0x2e]
	ldr r2, [r4]
	adds r0, r1, r0
	lsls r0, r0, #3
	adds r0, r2, r0
	ldr r1, [r0, #4]
	movs r0, #2
	mvns r0, r0
	cmp r1, r0
	beq _02001A34
_02001A5E:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #4]
	cmp r7, r0
	blo _02001A34
_02001A6A:
	ldr r0, [sp]
	cmp r0, #0
	beq _02001AD2
	cmp r5, #3
	bhi _02001A88
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02001A80: @ jump table
	.2byte _02001A88 - _02001A80 - 2 @ case 0
	.2byte _02001A8E - _02001A80 - 2 @ case 1
	.2byte _02001AAC - _02001A80 - 2 @ case 2
	.2byte _02001AAC - _02001A80 - 2 @ case 3
_02001A88:
	add sp, #0x10
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02001A8E:
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	bl FUN_02001778
	adds r0, r4, #0
	bl FUN_02001720
	adds r0, r4, #0
	movs r1, #0
	bl FUN_02001AD8
	ldr r0, [r4, #0xc]
	bl FUN_0201D578
	b _02001AD2
_02001AAC:
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	bl FUN_02001778
	ldr r2, [sp, #8]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_02001900
	adds r0, r4, #0
	bl FUN_02001720
	adds r0, r4, #0
	movs r1, #0
	bl FUN_02001AD8
	ldr r0, [r4, #0xc]
	bl FUN_0201D578
_02001AD2:
	movs r0, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02001A18

	thumb_func_start FUN_02001AD8
FUN_02001AD8: @ 0x02001AD8
	push {r3, r4, r5, lr}
	ldr r3, [r0, #4]
	adds r2, r1, #0
	cmp r3, #0
	beq _02001AF2
	ldrh r5, [r0, #0x2c]
	ldrh r4, [r0, #0x2e]
	ldr r1, [r0]
	adds r4, r5, r4
	lsls r4, r4, #3
	adds r1, r1, r4
	ldr r1, [r1, #4]
	blx r3
_02001AF2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02001AD8

	thumb_func_start FUN_02001AF4
FUN_02001AF4: @ 0x02001AF4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	str r3, [sp]
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	adds r6, r1, #0
	movs r1, #0x20
	adds r7, r2, #0
	str r0, [sp, #4]
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r3, r5, #0
	ldm r3!, {r0, r1}
	adds r2, r4, #0
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [sp, #4]
	bl FUN_02015788
	str r0, [r4, #0xc]
	ldr r0, [sp, #0x24]
	str r0, [r4, #0x10]
	ldr r0, [sp]
	strb r0, [r4, #0x15]
	adds r0, r4, #0
	bl FUN_02001DE8
	strb r0, [r4, #0x16]
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	movs r1, #0
	strb r0, [r4, #0x1c]
	strb r6, [r4, #0x17]
	strb r7, [r4, #0x18]
	ldrb r0, [r5, #8]
	bl FUN_02002FAC
	adds r6, r0, #0
	ldrb r0, [r5, #8]
	movs r1, #2
	bl FUN_02002FAC
	adds r0, r6, r0
	strb r0, [r4, #0x19]
	ldrb r0, [r5, #8]
	movs r1, #1
	bl FUN_02002FAC
	adds r6, r0, #0
	ldrb r0, [r5, #8]
	movs r1, #3
	bl FUN_02002FAC
	adds r0, r6, r0
	strb r0, [r4, #0x1a]
	adds r0, r4, #0
	bl FUN_02001E28
	adds r0, r4, #0
	bl FUN_02001EB4
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02001AF4

	thumb_func_start FUN_02001B7C
FUN_02001B7C: @ 0x02001B7C
	push {r4, lr}
	sub sp, #8
	add r4, sp, #0
	ldrb r4, [r4, #0x10]
	str r4, [sp]
	ldr r4, [sp, #0x14]
	str r4, [sp, #4]
	bl FUN_02001AF4
	adds r4, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0201D578
	adds r0, r4, #0
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_02001B7C

	thumb_func_start FUN_02001B9C
FUN_02001B9C: @ 0x02001B9C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldrb r0, [r5, #8]
	adds r6, r1, #0
	adds r4, r2, #0
	movs r1, #0
	bl FUN_02002FAC
	adds r1, r0, #0
	str r4, [sp]
	movs r0, #2
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0
	adds r3, r6, #0
	bl FUN_02001B7C
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02001B9C

	thumb_func_start FUN_02001BC4
FUN_02001BC4: @ 0x02001BC4
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0
	beq _02001BD0
	ldrb r0, [r4, #0x15]
	strb r0, [r1]
_02001BD0:
	ldr r0, [r4, #0xc]
	bl FUN_020157B8
	ldrb r0, [r4, #0x1c]
	adds r1, r4, #0
	bl FUN_0201AB80
	pop {r4, pc}
	thumb_func_end FUN_02001BC4

	thumb_func_start FUN_02001BE0
FUN_02001BE0: @ 0x02001BE0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r1, #0
	ldr r2, _02001C8C @ =0x021D110C
	strb r1, [r4, #0x1b]
	ldr r2, [r2, #0x48]
	movs r5, #1
	adds r3, r2, #0
	tst r3, r5
	beq _02001C06
	ldr r0, _02001C90 @ =0x000005DC
	bl FUN_0200604C
	ldrb r0, [r4, #0x15]
	ldr r1, [r4]
	lsls r0, r0, #3
	adds r0, r1, r0
	ldr r0, [r0, #4]
	pop {r3, r4, r5, pc}
_02001C06:
	ldr r3, [r4, #0x10]
	tst r3, r2
	beq _02001C16
	ldr r0, _02001C90 @ =0x000005DC
	bl FUN_0200604C
	subs r0, r5, #3
	pop {r3, r4, r5, pc}
_02001C16:
	movs r3, #0x40
	tst r3, r2
	beq _02001C30
	ldr r2, _02001C90 @ =0x000005DC
	bl FUN_02001C98
	cmp r0, #1
	bne _02001C2A
	adds r0, r5, #0
	strb r0, [r4, #0x1b]
_02001C2A:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02001C30:
	movs r1, #0x80
	tst r1, r2
	beq _02001C4C
	ldr r2, _02001C90 @ =0x000005DC
	adds r1, r5, #0
	bl FUN_02001C98
	cmp r0, #1
	bne _02001C46
	movs r0, #2
	strb r0, [r4, #0x1b]
_02001C46:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02001C4C:
	movs r1, #0x20
	tst r1, r2
	beq _02001C68
	ldr r2, _02001C90 @ =0x000005DC
	movs r1, #2
	bl FUN_02001C98
	cmp r0, #1
	bne _02001C62
	movs r0, #3
	strb r0, [r4, #0x1b]
_02001C62:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02001C68:
	movs r1, #0x10
	tst r2, r1
	beq _02001C84
	ldr r2, _02001C90 @ =0x000005DC
	movs r1, #3
	bl FUN_02001C98
	cmp r0, #1
	bne _02001C7E
	movs r0, #4
	strb r0, [r4, #0x1b]
_02001C7E:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02001C84:
	subs r1, #0x11
	adds r0, r1, #0
	pop {r3, r4, r5, pc}
	nop
_02001C8C: .4byte 0x021D110C
_02001C90: .4byte 0x000005DC
	thumb_func_end FUN_02001BE0

	thumb_func_start FUN_02001C94
FUN_02001C94: @ 0x02001C94
	ldrb r0, [r0, #0x15]
	bx lr
	thumb_func_end FUN_02001C94

	thumb_func_start FUN_02001C98
FUN_02001C98: @ 0x02001C98
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r2, #0
	ldrb r4, [r5, #0x15]
	bl FUN_02001CF0
	cmp r0, #0
	bne _02001CB0
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_02001CB0:
	ldrb r0, [r5, #8]
	movs r1, #6
	bl FUN_02002FAC
	add r1, sp, #8
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, #1
	add r2, sp, #8
	adds r3, r4, #0
	bl FUN_02001EE4
	movs r0, #8
	str r0, [sp]
	ldrb r0, [r5, #0x1a]
	add r3, sp, #8
	adds r1, r7, #0
	str r0, [sp, #4]
	ldrb r2, [r3, #1]
	ldrb r3, [r3]
	ldr r0, [r5, #4]
	bl FUN_0201DA74
	adds r0, r5, #0
	bl FUN_02001EB4
	adds r0, r6, #0
	bl FUN_0200604C
	movs r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02001C98

	thumb_func_start FUN_02001CF0
FUN_02001CF0: @ 0x02001CF0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	cmp r1, #0
	bne _02001D2E
	ldrb r6, [r5, #0xa]
	cmp r6, #1
	bhi _02001D02
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D02:
	ldrb r4, [r5, #0x15]
	adds r1, r6, #0
	adds r0, r4, #0
	blx FUN_020F2998
	cmp r1, #0
	bne _02001D26
	ldrb r0, [r5, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1e
	bne _02001D1C
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D1C:
	subs r0, r6, #1
	adds r0, r4, r0
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D26:
	subs r0, r4, #1
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D2E:
	cmp r1, #1
	bne _02001D66
	ldrb r1, [r5, #0xa]
	cmp r1, #1
	bhi _02001D3C
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D3C:
	ldrb r6, [r5, #0x15]
	subs r4, r1, #1
	adds r0, r6, #0
	blx FUN_020F2998
	cmp r4, r1
	bne _02001D5E
	ldrb r0, [r5, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1e
	bne _02001D56
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D56:
	subs r0, r6, r4
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D5E:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D66:
	cmp r1, #2
	bne _02001D9C
	ldrb r3, [r5, #9]
	cmp r3, #1
	bhi _02001D74
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D74:
	ldrb r2, [r5, #0xa]
	ldrb r1, [r5, #0x15]
	cmp r1, r2
	bhs _02001D94
	ldrb r0, [r5, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1e
	bne _02001D88
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001D88:
	subs r0, r3, #1
	muls r0, r2, r0
	adds r0, r1, r0
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D94:
	subs r0, r1, r2
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001D9C:
	ldrb r2, [r5, #9]
	cmp r2, #1
	bhi _02001DA6
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001DA6:
	ldrb r1, [r5, #0xa]
	ldrb r0, [r5, #0x15]
	subs r2, r2, #1
	muls r2, r1, r2
	cmp r0, r2
	blt _02001DC8
	ldrb r2, [r5, #0xb]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x1e
	bne _02001DBE
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001DBE:
	blx FUN_020F2998
	lsls r0, r1, #0x18
	asrs r2, r0, #0x18
	b _02001DCE
_02001DC8:
	adds r0, r0, r1
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
_02001DCE:
	ldr r1, [r5]
	lsls r0, r2, #3
	adds r0, r1, r0
	ldr r1, [r0, #4]
	movs r0, #2
	mvns r0, r0
	cmp r1, r0
	bne _02001DE2
	movs r0, #0
	pop {r4, r5, r6, pc}
_02001DE2:
	strb r2, [r5, #0x15]
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02001CF0

	thumb_func_start FUN_02001DE8
FUN_02001DE8: @ 0x02001DE8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrb r1, [r5, #9]
	ldrb r0, [r5, #0xa]
	movs r6, #0
	adds r4, r6, #0
	muls r0, r1, r0
	cmp r0, #0
	ble _02001E24
	adds r7, r6, #0
_02001DFC:
	ldr r2, [r5]
	lsls r1, r4, #3
	ldr r1, [r2, r1]
	ldrb r0, [r5, #8]
	adds r2, r7, #0
	bl FUN_02002F30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r6, r0
	bhs _02001E14
	adds r6, r0, #0
_02001E14:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r1, [r5, #9]
	ldrb r0, [r5, #0xa]
	muls r0, r1, r0
	cmp r4, r0
	blt _02001DFC
_02001E24:
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02001DE8

	thumb_func_start FUN_02001E28
FUN_02001E28: @ 0x02001E28
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldrb r0, [r5, #8]
	movs r1, #6
	bl FUN_02002FAC
	adds r1, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0201D978
	ldrb r0, [r5, #0x19]
	ldrb r1, [r5, #0x16]
	ldrb r7, [r5, #0x17]
	lsls r0, r0, #1
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	ldrb r0, [r5, #9]
	movs r6, #0
	cmp r0, #0
	bls _02001EB0
_02001E56:
	ldrb r2, [r5, #0xa]
	movs r4, #0
	cmp r2, #0
	bls _02001E9C
_02001E5E:
	ldrb r3, [r5, #0xb]
	muls r2, r6, r2
	ldrb r0, [r5, #0x1a]
	lsls r3, r3, #0x1c
	lsrs r3, r3, #0x1c
	adds r0, r0, r3
	ldrb r1, [r5, #0x18]
	muls r0, r4, r0
	adds r2, r4, r2
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r3, [r5]
	lsls r2, r2, #3
	ldr r2, [r3, r2]
	ldrb r1, [r5, #8]
	ldr r0, [r5, #4]
	adds r3, r7, #0
	bl FUN_020200A8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	ldrb r2, [r5, #0xa]
	lsrs r4, r0, #0x18
	cmp r4, r2
	blo _02001E5E
_02001E9C:
	ldr r0, [sp, #0xc]
	adds r0, r7, r0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldrb r0, [r5, #9]
	cmp r6, r0
	blo _02001E56
_02001EB0:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02001E28

	thumb_func_start FUN_02001EB4
FUN_02001EB4: @ 0x02001EB4
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrb r1, [r4, #0xb]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1e
	cmp r1, #1
	beq _02001EDE
	ldrb r3, [r4, #0x15]
	add r1, sp, #0
	adds r1, #1
	add r2, sp, #0
	bl FUN_02001EE4
	add r3, sp, #0
	ldrb r2, [r3, #1]
	ldrb r3, [r3]
	ldr r0, [r4, #0xc]
	ldr r1, [r4, #4]
	bl FUN_020157F0
_02001EDE:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02001EB4

	thumb_func_start FUN_02001EE4
FUN_02001EE4: @ 0x02001EE4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r3, #0
	ldrb r1, [r5, #0xa]
	adds r0, r7, #0
	adds r6, r2, #0
	blx FUN_020F2998
	ldrb r2, [r5, #0x19]
	ldrb r1, [r5, #0x16]
	lsls r2, r2, #1
	adds r1, r1, r2
	muls r1, r0, r1
	strb r1, [r4]
	ldrb r1, [r5, #0xa]
	adds r0, r7, #0
	blx FUN_020F2998
	ldrb r2, [r5, #0xb]
	ldrb r3, [r5, #0x1a]
	ldrb r0, [r5, #0x18]
	lsls r2, r2, #0x1c
	lsrs r2, r2, #0x1c
	adds r2, r3, r2
	muls r2, r1, r2
	adds r0, r0, r2
	strb r0, [r6]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02001EE4

	thumb_func_start FUN_02001F20
FUN_02001F20: @ 0x02001F20
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	ldr r5, [sp, #0x3c]
	str r2, [sp, #0xc]
	adds r7, r0, #0
	str r1, [sp, #8]
	str r3, [sp, #0x10]
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xbf
	adds r3, r5, #0
	bl FUN_0200BAF8
	adds r4, r0, #0
	movs r0, #2
	adds r1, r5, #0
	bl FUN_02014918
	adds r1, r4, #0
	movs r2, #0x2a
	movs r3, #0
	adds r6, r0, #0
	bl FUN_02014960
	movs r3, #0x2b
	adds r2, r3, #0
	adds r0, r6, #0
	adds r1, r4, #0
	subs r3, #0x2d
	bl FUN_02014960
	adds r0, r4, #0
	bl FUN_0200BB44
	adds r0, r5, #0
	movs r1, #1
	str r6, [sp, #0x14]
	bl FUN_0201D39C
	adds r1, r0, #0
	str r1, [sp, #0x18]
	movs r0, #0
	add r2, sp, #0x14
	strb r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #9]
	movs r0, #2
	strb r0, [r2, #0xa]
	ldrb r3, [r2, #0xb]
	movs r0, #0xf
	bics r3, r0
	strb r3, [r2, #0xb]
	ldrb r3, [r2, #0xb]
	movs r0, #0x30
	bics r3, r0
	strb r3, [r2, #0xb]
	ldrb r3, [r2, #0xb]
	movs r0, #0xc0
	bics r3, r0
	strb r3, [r2, #0xb]
	ldr r2, [sp, #8]
	adds r0, r7, #0
	bl FUN_0201D4F8
	ldr r0, [sp, #0x18]
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #0x10]
	movs r1, #1
	bl FUN_0200E580
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	add r3, sp, #0x28
	ldrb r3, [r3, #0x10]
	add r0, sp, #0x14
	movs r1, #8
	movs r2, #0
	bl FUN_02001B7C
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02001F20

	thumb_func_start FUN_02001FC8
FUN_02001FC8: @ 0x02001FC8
	push {r4, lr}
	sub sp, #8
	movs r4, #0
	str r4, [sp]
	ldr r4, [sp, #0x10]
	str r4, [sp, #4]
	bl FUN_02001F20
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_02001FC8

	thumb_func_start FUN_02001FDC
FUN_02001FDC: @ 0x02001FDC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_02001BE0
	adds r6, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r6, r0
	beq _02001FF8
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02001FFC
_02001FF8:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02001FDC

	thumb_func_start FUN_02001FFC
FUN_02001FFC: @ 0x02001FFC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	movs r1, #0
	bl FUN_0200E5D4
	ldr r0, [r5, #4]
	bl FUN_0201D520
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl FUN_0201AB80
	ldr r0, [r5]
	bl FUN_02014950
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02001BC4
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02001FFC

	thumb_func_start StringCopy
StringCopy: @ 0x02002028
	ldrh r3, [r1]
	ldr r2, _02002044 @ =0x0000FFFF
	cmp r3, r2
	beq _0200203C
_02002030:
	adds r1, r1, #2
	strh r3, [r0]
	ldrh r3, [r1]
	adds r0, r0, #2
	cmp r3, r2
	bne _02002030
_0200203C:
	ldr r1, _02002044 @ =0x0000FFFF
	strh r1, [r0]
	bx lr
	nop
_02002044: .4byte 0x0000FFFF
	thumb_func_end StringCopy

	thumb_func_start StringCopyN
StringCopyN: @ 0x02002048
	push {r4, r5}
	movs r4, #0
	cmp r2, #0
	bls _02002060
	adds r5, r0, #0
_02002052:
	ldrh r3, [r1]
	adds r4, r4, #1
	adds r1, r1, #2
	strh r3, [r5]
	adds r5, r5, #2
	cmp r4, r2
	blo _02002052
_02002060:
	lsls r1, r2, #1
	adds r0, r0, r1
	pop {r4, r5}
	bx lr
	thumb_func_end StringCopyN

	thumb_func_start StringLength
StringLength: @ 0x02002068
	ldrh r2, [r0]
	ldr r1, _02002080 @ =0x0000FFFF
	movs r3, #0
	cmp r2, r1
	beq _0200207C
_02002072:
	adds r0, r0, #2
	ldrh r2, [r0]
	adds r3, r3, #1
	cmp r2, r1
	bne _02002072
_0200207C:
	adds r0, r3, #0
	bx lr
	.align 2, 0
_02002080: .4byte 0x0000FFFF
	thumb_func_end StringLength

	thumb_func_start StringCompare
StringCompare: @ 0x02002084
	push {r3, r4}
	ldrh r4, [r0]
	ldrh r2, [r1]
	cmp r4, r2
	bne _020020A6
	ldr r2, _020020AC @ =0x0000FFFF
_02002090:
	cmp r4, r2
	bne _0200209A
	movs r0, #0
	pop {r3, r4}
	bx lr
_0200209A:
	adds r0, r0, #2
	adds r1, r1, #2
	ldrh r4, [r0]
	ldrh r3, [r1]
	cmp r4, r3
	beq _02002090
_020020A6:
	movs r0, #1
	pop {r3, r4}
	bx lr
	.align 2, 0
_020020AC: .4byte 0x0000FFFF
	thumb_func_end StringCompare

	thumb_func_start StringCompareN
StringCompareN: @ 0x020020B0
	push {r3, r4, r5, r6}
	ldrh r6, [r1]
	ldrh r5, [r0]
	cmp r5, r6
	bne _020020E4
	ldr r3, _020020EC @ =0x0000FFFF
	adds r4, r3, #0
_020020BE:
	cmp r2, #0
	bne _020020C8
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
_020020C8:
	cmp r5, r4
	bne _020020D6
	cmp r6, r3
	bne _020020D6
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
_020020D6:
	adds r0, r0, #2
	adds r1, r1, #2
	ldrh r6, [r1]
	ldrh r5, [r0]
	subs r2, r2, #1
	cmp r5, r6
	beq _020020BE
_020020E4:
	movs r0, #1
	pop {r3, r4, r5, r6}
	bx lr
	nop
_020020EC: .4byte 0x0000FFFF
	thumb_func_end StringCompareN

	thumb_func_start StringFill
StringFill: @ 0x020020F0
	push {r3, r4}
	movs r3, #0
	cmp r2, #0
	bls _02002104
	adds r4, r0, #0
_020020FA:
	adds r3, r3, #1
	strh r1, [r4]
	adds r4, r4, #2
	cmp r3, r2
	blo _020020FA
_02002104:
	lsls r1, r3, #1
	adds r0, r0, r1
	pop {r3, r4}
	bx lr
	thumb_func_end StringFill

	thumb_func_start StringFillEOS
StringFillEOS: @ 0x0200210C
	ldr r3, _02002114 @ =StringFill
	adds r2, r1, #0
	ldr r1, _02002118 @ =0x0000FFFF
	bx r3
	.align 2, 0
_02002114: .4byte StringFill
_02002118: .4byte 0x0000FFFF
	thumb_func_end StringFillEOS

	thumb_func_start PrintDecimalInteger
PrintDecimalInteger: @ 0x0200211C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r0, _02002194 @ =_020F5690
	lsls r1, r3, #2
	ldr r4, [r0, r1]
	adds r6, r2, #0
	cmp r4, #0
	beq _0200218C
_0200212E:
	adds r0, r7, #0
	adds r1, r4, #0
	blx FUN_020F2BA4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r4, #0
	muls r0, r1, r0
	subs r7, r7, r0
	cmp r6, #2
	bne _02002158
	cmp r1, #0xa
	blo _0200214C
	movs r0, #0xe2
	b _02002152
_0200214C:
	ldr r0, _02002198 @ =_020F5674
	lsls r1, r1, #1
	ldrh r0, [r0, r1]
_02002152:
	strh r0, [r5]
	adds r5, r5, #2
	b _02002180
_02002158:
	cmp r1, #0
	bne _02002160
	cmp r4, #1
	bne _02002176
_02002160:
	movs r6, #2
	cmp r1, #0xa
	blo _0200216A
	movs r0, #0xe2
	b _02002170
_0200216A:
	ldr r0, _02002198 @ =_020F5674
	lsls r1, r1, #1
	ldrh r0, [r0, r1]
_02002170:
	strh r0, [r5]
	adds r5, r5, #2
	b _02002180
_02002176:
	cmp r6, #1
	bne _02002180
	movs r0, #1
	strh r0, [r5]
	adds r5, r5, #2
_02002180:
	adds r0, r4, #0
	movs r1, #0xa
	blx FUN_020F2BA4
	adds r4, r0, #0
	bne _0200212E
_0200218C:
	ldr r0, _0200219C @ =0x0000FFFF
	strh r0, [r5]
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02002194: .4byte _020F5690
_02002198: .4byte _020F5674
_0200219C: .4byte 0x0000FFFF
	thumb_func_end PrintDecimalInteger

	thumb_func_start FUN_020021A0
FUN_020021A0: @ 0x020021A0
	push {r3, lr}
	ldr r1, _02002210 @ =0x021D110C
	ldr r2, [r1, #0x44]
	movs r1, #3
	tst r1, r2
	beq _020021C2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	beq _020021C2
	ldr r1, _02002214 @ =0x02111884
	movs r0, #1
	ldrb r2, [r1, #3]
	bics r2, r0
	strb r2, [r1, #3]
	movs r0, #1
	pop {r3, pc}
_020021C2:
	ldr r1, _02002214 @ =0x02111884
	ldrb r0, [r1, #2]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	beq _0200220A
	ldr r0, _02002218 @ =0x021D114C
	ldrh r0, [r0, #0x26]
	cmp r0, #0
	bne _020021D8
	movs r0, #0
	pop {r3, pc}
_020021D8:
	ldrb r2, [r1, #3]
	lsls r0, r2, #0x1e
	lsrs r0, r0, #0x1f
	beq _020021FE
	ldr r0, _0200221C @ =0x02111888
	bl FUN_020252F4
	cmp r0, #0
	beq _020021FA
	ldr r1, _02002214 @ =0x02111884
	movs r0, #1
	ldrb r2, [r1, #3]
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r1, #3]
	pop {r3, pc}
_020021FA:
	movs r0, #0
	pop {r3, pc}
_020021FE:
	movs r0, #1
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r1, #3]
	pop {r3, pc}
_0200220A:
	movs r0, #0
	pop {r3, pc}
	nop
_02002210: .4byte 0x021D110C
_02002214: .4byte 0x02111884
_02002218: .4byte 0x021D114C
_0200221C: .4byte 0x02111888
	thumb_func_end FUN_020021A0

	thumb_func_start FUN_02002220
FUN_02002220: @ 0x02002220
	push {r3, lr}
	ldr r0, _02002288 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #3
	tst r0, r1
	beq _0200223A
	ldr r1, _0200228C @ =0x02111884
	movs r0, #1
	ldrb r2, [r1, #3]
	bics r2, r0
	strb r2, [r1, #3]
	movs r0, #1
	pop {r3, pc}
_0200223A:
	ldr r1, _0200228C @ =0x02111884
	ldrb r0, [r1, #2]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	beq _02002282
	ldr r0, _02002290 @ =0x021D114C
	ldrh r0, [r0, #0x24]
	cmp r0, #0
	bne _02002250
	movs r0, #0
	pop {r3, pc}
_02002250:
	ldrb r2, [r1, #3]
	lsls r0, r2, #0x1e
	lsrs r0, r0, #0x1f
	beq _02002276
	ldr r0, _02002294 @ =0x02111888
	bl FUN_02025320
	cmp r0, #0
	beq _02002272
	ldr r1, _0200228C @ =0x02111884
	movs r0, #1
	ldrb r2, [r1, #3]
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r1, #3]
	pop {r3, pc}
_02002272:
	movs r0, #0
	pop {r3, pc}
_02002276:
	movs r0, #1
	bics r2, r0
	movs r0, #1
	orrs r2, r0
	strb r2, [r1, #3]
	pop {r3, pc}
_02002282:
	movs r0, #0
	pop {r3, pc}
	nop
_02002288: .4byte 0x021D110C
_0200228C: .4byte 0x02111884
_02002290: .4byte 0x021D114C
_02002294: .4byte 0x02111888
	thumb_func_end FUN_02002220

	thumb_func_start FUN_02002298
FUN_02002298: @ 0x02002298
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x28
	ldrb r1, [r1]
	adds r6, r4, #0
	adds r6, #0x20
	cmp r1, #8
	bls _020022AE
	b _020027EA
_020022AE:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_020022BA: @ jump table
	.2byte _020022CC - _020022BA - 2 @ case 0
	.2byte _0200269A - _020022BA - 2 @ case 1
	.2byte _020026B4 - _020022BA - 2 @ case 2
	.2byte _020026DE - _020022BA - 2 @ case 3
	.2byte _0200270E - _020022BA - 2 @ case 4
	.2byte _02002764 - _020022BA - 2 @ case 5
	.2byte _02002770 - _020022BA - 2 @ case 6
	.2byte _02002790 - _020022BA - 2 @ case 7
	.2byte _020027BA - _020022BA - 2 @ case 8
_020022CC:
	adds r0, r6, #0
	bl FUN_020021A0
	cmp r0, #0
	beq _020022F4
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x2a
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x19
	beq _020022F4
	ldr r1, _020025B8 @ =0x02111884
	movs r0, #0x40
	ldrb r2, [r1, #2]
	orrs r0, r2
	strb r0, [r1, #2]
_020022F4:
	adds r0, r4, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	beq _0200233E
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x19
	beq _0200233E
	adds r0, r4, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x2a
	strb r1, [r0]
	ldr r0, _020025B8 @ =0x02111884
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _02002338
	bl FUN_02002220
	cmp r0, #0
	beq _02002338
	ldrb r1, [r6]
	movs r0, #0x10
	adds r4, #0x2a
	orrs r0, r1
	strb r0, [r6]
	movs r0, #0
	strb r0, [r4]
_02002338:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_0200233E:
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r1, r0, #0x19
	adds r0, r4, #0
	adds r0, #0x2a
	strb r1, [r0]
	ldr r0, [r4]
	ldrh r5, [r0]
	adds r0, r0, #2
	str r0, [r4]
	movs r0, #0xf1
	lsls r0, r0, #8
	cmp r5, r0
	bne _02002362
	bl FUN_0202551C
_02002362:
	ldr r0, _020025BC @ =0x0000F0FD
	cmp r5, r0
	bgt _0200238C
	bge _020023C0
	ldr r1, _020025C0 @ =0x000025BD
	cmp r5, r1
	bgt _02002382
	subs r0, r1, #1
	cmp r5, r0
	blt _02002380
	bne _0200237A
	b _02002630
_0200237A:
	cmp r5, r1
	bne _02002380
	b _02002644
_02002380:
	b _02002658
_02002382:
	movs r0, #0xe
	lsls r0, r0, #0xc
	cmp r5, r0
	beq _020023A4
	b _02002658
_0200238C:
	ldr r0, _020025C4 @ =0x0000FFFE
	cmp r5, r0
	bgt _02002396
	beq _020023CC
	b _02002658
_02002396:
	adds r0, r0, #1
	cmp r5, r0
	beq _0200239E
	b _02002658
_0200239E:
	add sp, #0xc
	movs r0, #1
	pop {r3, r4, r5, r6, pc}
_020023A4:
	ldrb r0, [r4, #0xa]
	movs r1, #1
	strh r0, [r4, #0xc]
	ldrb r0, [r4, #9]
	bl FUN_02002FAC
	ldrh r1, [r4, #0x12]
	ldrh r2, [r4, #0xe]
	add sp, #0xc
	adds r0, r1, r0
	adds r0, r2, r0
	strh r0, [r4, #0xe]
	movs r0, #2
	pop {r3, r4, r5, r6, pc}
_020023C0:
	ldr r0, [r4]
	add sp, #0xc
	adds r0, r0, #2
	str r0, [r4]
	movs r0, #2
	pop {r3, r4, r5, r6, pc}
_020023CC:
	ldr r0, [r4]
	subs r0, r0, #2
	str r0, [r4]
	bl FUN_0201FB44
	lsls r0, r0, #0x10
	ldr r1, _020025C8 @ =0x0000FE06
	lsrs r0, r0, #0x10
	cmp r0, r1
	bgt _0200240C
	blt _020023E4
	b _020025D0
_020023E4:
	movs r1, #2
	lsls r1, r1, #8
	subs r1, r0, r1
	cmp r1, #8
	bhi _02002416
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_020023FA: @ jump table
	.2byte _02002470 - _020023FA - 2 @ case 0
	.2byte _020024F0 - _020023FA - 2 @ case 1
	.2byte _02002512 - _020023FA - 2 @ case 2
	.2byte _0200252A - _020023FA - 2 @ case 3
	.2byte _02002536 - _020023FA - 2 @ case 4
	.2byte _02002542 - _020023FA - 2 @ case 5
	.2byte _0200256E - _020023FA - 2 @ case 6
	.2byte _0200249C - _020023FA - 2 @ case 7
	.2byte _020024C6 - _020023FA - 2 @ case 8
_0200240C:
	movs r1, #0xff
	lsls r1, r1, #8
	cmp r0, r1
	bgt _02002418
	beq _02002422
_02002416:
	b _02002622
_02002418:
	adds r1, r1, #1
	cmp r0, r1
	bne _02002420
	b _02002590
_02002420:
	b _02002622
_02002422:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bne _02002452
	ldrb r0, [r4, #0x15]
	ldrb r2, [r4, #0x1b]
	subs r1, r0, #1
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	adds r0, #0x64
	strb r0, [r4, #0x1b]
	cmp r2, #0x64
	blo _02002492
	cmp r2, #0x6b
	bhs _02002492
	subs r2, #0x64
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	b _0200245A
_02002452:
	cmp r0, #0x64
	blo _0200245A
	strb r0, [r4, #0x1b]
	b _02002622
_0200245A:
	lsls r1, r0, #1
	adds r0, r1, #1
	strb r0, [r4, #0x15]
	adds r0, r1, #2
	strb r0, [r4, #0x17]
	ldrb r0, [r4, #0x15]
	ldrb r1, [r4, #0x16]
	ldrb r2, [r4, #0x17]
	bl FUN_0202036C
	b _02002622
_02002470:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r1, [r4, #0xc]
	ldrh r2, [r4, #0xe]
	adds r0, r4, #0
	bl FUN_020204FC
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1f
	bne _02002494
_02002492:
	b _02002622
_02002494:
	ldr r0, [r4, #4]
	bl FUN_0201D578
	b _02002622
_0200249C:
	adds r0, r4, #0
	movs r1, #7
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	movs r1, #0xe
	ldrh r2, [r0]
	lsls r1, r1, #0xc
	cmp r2, r1
	bne _020024C0
	adds r0, r0, #2
	str r0, [r4]
_020024C0:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020024C6:
	adds r0, r4, #0
	movs r1, #8
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	movs r1, #0xe
	ldrh r2, [r0]
	lsls r1, r1, #0xc
	cmp r2, r1
	bne _020024EA
	adds r0, r0, #2
	str r0, [r4]
_020024EA:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020024F0:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	adds r1, r4, #0
	adds r1, #0x2a
	strb r0, [r1]
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	movs r0, #6
	adds r4, #0x28
	strb r0, [r4]
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002512:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	strh r0, [r4, #0x2e]
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_0200252A:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	strh r0, [r4, #0xc]
	b _02002622
_02002536:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	strh r0, [r4, #0xe]
	b _02002622
_02002542:
	ldr r0, [r4, #4]
	bl FUN_0201EE90
	lsls r5, r0, #3
	ldrb r0, [r4, #9]
	ldrh r2, [r4, #0x10]
	ldr r1, [r4]
	bl FUN_02002EFC
	cmp r0, r5
	bge _02002568
	subs r1, r5, r0
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	ldrb r2, [r4, #0xa]
	asrs r0, r0, #1
	adds r0, r2, r0
	strh r0, [r4, #0xc]
	b _02002622
_02002568:
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	b _02002622
_0200256E:
	ldr r0, [r4, #4]
	bl FUN_0201EE90
	lsls r5, r0, #3
	ldrb r0, [r4, #9]
	ldrh r2, [r4, #0x10]
	ldr r1, [r4]
	bl FUN_02002EFC
	cmp r0, r5
	bge _0200258A
	subs r0, r5, r0
	strh r0, [r4, #0xc]
	b _02002622
_0200258A:
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	b _02002622
_02002590:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x64
	beq _020025A6
	cmp r0, #0xc8
	beq _020025AE
	b _02002622
_020025A6:
	movs r0, #0
	strh r0, [r4, #0x18]
	strb r0, [r4, #0x1a]
	b _02002622
_020025AE:
	ldr r0, _020025CC @ =0x0000FFFC
	strh r0, [r4, #0x18]
	movs r0, #0
	strb r0, [r4, #0x1a]
	b _02002622
	.align 2, 0
_020025B8: .4byte 0x02111884
_020025BC: .4byte 0x0000F0FD
_020025C0: .4byte 0x000025BD
_020025C4: .4byte 0x0000FFFE
_020025C8: .4byte 0x0000FE06
_020025CC: .4byte 0x0000FFFC
_020025D0:
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0201FB90
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	beq _02002606
	adds r0, r0, #1
	cmp r1, r0
	bne _02002622
	adds r0, r4, #0
	movs r1, #2
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002606:
	adds r0, r4, #0
	movs r1, #3
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002622:
	ldr r0, [r4]
	bl FUN_0201FB1C
	str r0, [r4]
	add sp, #0xc
	movs r0, #2
	pop {r3, r4, r5, r6, pc}
_02002630:
	adds r0, r4, #0
	movs r1, #2
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002644:
	adds r0, r4, #0
	movs r1, #3
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020027FC
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002658:
	ldrb r0, [r6]
	adds r1, r5, #0
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	bl FUN_02002E7C
	adds r5, r0, #0
	ldrh r0, [r4, #0xc]
	adds r2, r5, #0
	adds r3, r5, #0
	str r0, [sp]
	ldrh r0, [r4, #0xe]
	adds r2, #0x80
	adds r3, #0x81
	str r0, [sp, #4]
	ldrh r0, [r4, #0x18]
	adds r1, r5, #0
	str r0, [sp, #8]
	ldrb r2, [r2]
	ldrb r3, [r3]
	ldr r0, [r4, #4]
	bl FUN_0201DACC
	adds r5, #0x80
	ldrb r1, [r5]
	ldrh r0, [r4, #0x10]
	ldrh r2, [r4, #0xc]
	add sp, #0xc
	adds r0, r1, r0
	adds r0, r2, r0
	strh r0, [r4, #0xc]
	movs r0, #0
	pop {r3, r4, r5, r6, pc}
_0200269A:
	bl FUN_02002B10
	cmp r0, #0
	beq _020026AE
	adds r0, r4, #0
	bl FUN_020029D8
	movs r0, #0
	adds r4, #0x28
	strb r0, [r4]
_020026AE:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020026B4:
	bl FUN_02002AEC
	cmp r0, #0
	beq _020026D8
	adds r0, r4, #0
	bl FUN_020029D8
	ldrb r1, [r4, #0x16]
	ldr r0, [r4, #4]
	bl FUN_0201D978
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	ldrb r0, [r4, #0xb]
	strh r0, [r4, #0xe]
	movs r0, #0
	adds r4, #0x28
	strb r0, [r4]
_020026D8:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020026DE:
	bl FUN_02002AEC
	cmp r0, #0
	beq _02002708
	adds r0, r4, #0
	bl FUN_020029D8
	ldrb r0, [r4, #9]
	movs r1, #1
	bl FUN_02002FAC
	ldrh r1, [r4, #0x12]
	adds r1, r1, r0
	adds r0, r4, #0
	adds r0, #0x2b
	strb r1, [r0]
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	movs r0, #4
	adds r4, #0x28
	strb r0, [r4]
_02002708:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_0200270E:
	adds r0, #0x2b
	ldrb r2, [r0]
	cmp r2, #0
	beq _02002758
	cmp r2, #4
	ldrb r5, [r4, #0x16]
	bge _02002730
	lsls r3, r5, #4
	orrs r3, r5
	lsls r3, r3, #0x18
	ldr r0, [r4, #4]
	movs r1, #0
	lsrs r3, r3, #0x18
	bl FUN_0201EC48
	movs r1, #0
	b _0200274A
_02002730:
	lsls r3, r5, #4
	orrs r3, r5
	lsls r3, r3, #0x18
	ldr r0, [r4, #4]
	movs r1, #0
	movs r2, #4
	lsrs r3, r3, #0x18
	bl FUN_0201EC48
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	subs r1, r0, #4
_0200274A:
	adds r0, r4, #0
	adds r0, #0x2b
	strb r1, [r0]
	ldr r0, [r4, #4]
	bl FUN_0201D578
	b _0200275E
_02002758:
	movs r0, #0
	adds r4, #0x28
	strb r0, [r4]
_0200275E:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002764:
	movs r0, #0
	adds r4, #0x28
	strb r0, [r4]
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002770:
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	beq _02002784
	adds r0, r4, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	adds r4, #0x2a
	subs r0, r0, #1
	b _02002788
_02002784:
	movs r0, #0
	adds r4, #0x28
_02002788:
	add sp, #0xc
	strb r0, [r4]
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_02002790:
	bl FUN_02002AEC
	cmp r0, #0
	beq _020027B4
	adds r0, r4, #0
	bl FUN_020029D8
	ldrb r1, [r4, #0x16]
	ldr r0, [r4, #4]
	bl FUN_0201D978
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	ldrb r0, [r4, #0xb]
	strh r0, [r4, #0xe]
	movs r0, #0
	adds r4, #0x28
	strb r0, [r4]
_020027B4:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020027BA:
	bl FUN_02002AEC
	cmp r0, #0
	beq _020027E4
	adds r0, r4, #0
	bl FUN_020029D8
	ldrb r0, [r4, #9]
	movs r1, #1
	bl FUN_02002FAC
	ldrh r1, [r4, #0x12]
	adds r1, r1, r0
	adds r0, r4, #0
	adds r0, #0x2b
	strb r1, [r0]
	ldrb r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	movs r0, #4
	adds r4, #0x28
	strb r0, [r4]
_020027E4:
	add sp, #0xc
	movs r0, #3
	pop {r3, r4, r5, r6, pc}
_020027EA:
	movs r0, #1
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_02002298

	thumb_func_start FUN_020027F0
FUN_020027F0: @ 0x020027F0
	ldr r1, _020027F8 @ =0x02111884
	strh r0, [r1]
	bx lr
	nop
_020027F8: .4byte 0x02111884
	thumb_func_end FUN_020027F0

	thumb_func_start FUN_020027FC
FUN_020027FC: @ 0x020027FC
	ldr r2, _02002830 @ =0x02111884
	adds r1, r0, #0
	ldrb r2, [r2, #2]
	adds r1, #0x20
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1f
	beq _02002814
	ldrb r3, [r1, #2]
	movs r2, #0xff
	bics r3, r2
	strb r3, [r1, #2]
	b _02002824
_02002814:
	ldrb r3, [r1, #1]
	movs r2, #0x60
	bics r3, r2
	strb r3, [r1, #1]
	ldrb r3, [r1, #1]
	movs r2, #0x1f
	bics r3, r2
	strb r3, [r1, #1]
_02002824:
	ldr r1, _02002830 @ =0x02111884
	ldr r3, _02002834 @ =FUN_0200EB68
	ldr r0, [r0, #4]
	ldrh r1, [r1]
	bx r3
	nop
_02002830: .4byte 0x02111884
_02002834: .4byte FUN_0200EB68
	thumb_func_end FUN_020027FC

	thumb_func_start FUN_02002838
FUN_02002838: @ 0x02002838
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r5, r0, #0
	ldr r0, _020029D0 @ =0x02111884
	adds r4, r5, #0
	ldrb r0, [r0, #2]
	adds r4, #0x20
	lsls r1, r0, #0x1d
	lsrs r1, r1, #0x1f
	bne _02002852
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _02002854
_02002852:
	b _020029CC
_02002854:
	ldrb r0, [r4, #1]
	lsls r1, r0, #0x1b
	lsrs r2, r1, #0x1b
	beq _02002872
	movs r1, #0x1f
	adds r2, #0xff
	bics r0, r1
	lsls r1, r2, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0x1f
	ands r1, r2
	orrs r0, r1
	add sp, #0x30
	strb r0, [r4, #1]
	pop {r3, r4, r5, r6, r7, pc}
_02002872:
	ldr r0, [r5, #4]
	bl FUN_0201EE8C
	str r0, [sp, #0x20]
	ldr r0, [r5, #4]
	bl FUN_0201EE98
	str r0, [sp, #0x24]
	ldr r0, [r5, #4]
	bl FUN_0201EE9C
	adds r7, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0201EE90
	str r0, [sp, #0x28]
	ldr r0, [r5, #4]
	bl FUN_0201EE94
	subs r0, r0, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, _020029D0 @ =0x02111884
	adds r7, r7, r1
	ldrh r6, [r0]
	ldr r1, [sp, #0x24]
	ldr r0, [sp, #0x28]
	adds r2, r6, #0
	adds r0, r1, r0
	str r0, [sp, #0x1c]
	adds r0, r0, #1
	str r0, [sp, #0x18]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	str r2, [sp, #0x2c]
	adds r2, #0x12
	str r2, [sp, #0x2c]
	ldrb r2, [r4, #1]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x20]
	lsls r2, r2, #0x19
	lsrs r3, r2, #0x1e
	ldr r2, _020029D4 @ =_020F56BC
	ldr r0, [r0]
	ldrb r2, [r2, r3]
	lsls r3, r2, #2
	ldr r2, [sp, #0x2c]
	adds r2, r2, r3
	ldr r3, [sp, #0x18]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r6, #0
	adds r0, r0, #2
	str r0, [sp, #0x10]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	adds r2, #0x13
	mov ip, r2
	ldrb r2, [r4, #1]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x20]
	lsls r2, r2, #0x19
	lsrs r3, r2, #0x1e
	ldr r2, _020029D4 @ =_020F56BC
	ldr r0, [r0]
	ldrb r2, [r2, r3]
	mov r3, ip
	lsls r2, r2, #2
	adds r2, r3, r2
	ldr r3, [sp, #0x10]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r7, #1
	str r0, [sp, #0x14]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldrb r2, [r4, #1]
	adds r7, r6, #0
	ldr r0, [r5, #4]
	lsls r2, r2, #0x19
	lsrs r3, r2, #0x1e
	ldr r2, _020029D4 @ =_020F56BC
	adds r7, #0x14
	ldrb r2, [r2, r3]
	ldr r3, [sp, #0x18]
	ldr r0, [r0]
	lsls r2, r2, #2
	adds r2, r7, r2
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x20]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x14]
	adds r6, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldrb r2, [r4, #1]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x20]
	lsls r2, r2, #0x19
	lsrs r3, r2, #0x1e
	ldr r2, _020029D4 @ =_020F56BC
	ldr r0, [r0]
	ldrb r2, [r2, r3]
	ldr r3, [sp, #0x10]
	lsls r2, r2, #2
	adds r2, r6, r2
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x20]
	ldr r0, [r0]
	bl FUN_0201BF7C
	ldrb r1, [r4, #1]
	movs r0, #0x1f
	bics r1, r0
	movs r0, #8
	orrs r0, r1
	strb r0, [r4, #1]
	ldrb r2, [r4, #1]
	movs r1, #0x60
	adds r0, r2, #0
	bics r0, r1
	lsls r1, r2, #0x19
	lsrs r1, r1, #0x1e
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #0x1e
	lsrs r1, r1, #0x19
	orrs r0, r1
	strb r0, [r4, #1]
_020029CC:
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020029D0: .4byte 0x02111884
_020029D4: .4byte _020F56BC
	thumb_func_end FUN_02002838

	thumb_func_start FUN_020029D8
FUN_020029D8: @ 0x020029D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	ldr r0, _02002A80 @ =0x02111884
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	bne _02002A7C
	ldr r0, [r5, #4]
	bl FUN_0201EE8C
	str r0, [sp, #0x10]
	ldr r0, [r5, #4]
	bl FUN_0201EE98
	str r0, [sp, #0x14]
	ldr r0, [r5, #4]
	bl FUN_0201EE9C
	adds r6, r0, #0
	ldr r0, [r5, #4]
	bl FUN_0201EE90
	str r0, [sp, #0x18]
	ldr r0, [r5, #4]
	bl FUN_0201EE94
	subs r0, r0, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, _02002A80 @ =0x02111884
	adds r7, r6, r1
	ldrh r4, [r0]
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #0x18]
	adds r2, r4, #0
	adds r6, r1, r0
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5, #4]
	adds r2, #0xa
	adds r3, r6, #1
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r0]
	ldr r1, [sp, #0x10]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5, #4]
	adds r4, #0xb
	adds r3, r6, #2
	lsls r2, r4, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r0]
	ldr r1, [sp, #0x10]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x10]
	ldr r0, [r0]
	bl FUN_0201BF7C
_02002A7C:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02002A80: .4byte 0x02111884
	thumb_func_end FUN_020029D8

	thumb_func_start FUN_02002A84
FUN_02002A84: @ 0x02002A84
	push {r3, lr}
	bl FUN_02002220
	cmp r0, #0
	beq _02002AA2
	ldr r0, _02002AA8 @ =0x000005DC
	bl FUN_0200604C
	ldr r1, _02002AAC @ =0x02111884
	movs r0, #0x80
	ldrb r2, [r1, #2]
	orrs r0, r2
	strb r0, [r1, #2]
	movs r0, #1
	pop {r3, pc}
_02002AA2:
	movs r0, #0
	pop {r3, pc}
	nop
_02002AA8: .4byte 0x000005DC
_02002AAC: .4byte 0x02111884
	thumb_func_end FUN_02002A84

	thumb_func_start FUN_02002AB0
FUN_02002AB0: @ 0x02002AB0
	push {r4, lr}
	adds r2, r0, #0
	adds r2, #0x20
	ldrb r1, [r2, #2]
	adds r4, r1, #0
	cmp r4, #0x64
	bne _02002AC2
	movs r0, #1
	pop {r4, pc}
_02002AC2:
	movs r3, #0xff
	bics r1, r3
	adds r3, r4, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	orrs r1, r3
	strb r1, [r2, #2]
	ldr r1, _02002AE8 @ =0x02111884
	ldrb r1, [r1, #2]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1f
	beq _02002AE4
	bl FUN_02002A84
	pop {r4, pc}
_02002AE4:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_02002AE8: .4byte 0x02111884
	thumb_func_end FUN_02002AB0

	thumb_func_start FUN_02002AEC
FUN_02002AEC: @ 0x02002AEC
	push {r4, lr}
	ldr r1, _02002B0C @ =0x02111884
	adds r4, r0, #0
	ldrb r1, [r1, #2]
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1f
	beq _02002B00
	bl FUN_02002AB0
	pop {r4, pc}
_02002B00:
	bl FUN_02002838
	adds r0, r4, #0
	bl FUN_02002A84
	pop {r4, pc}
	.align 2, 0
_02002B0C: .4byte 0x02111884
	thumb_func_end FUN_02002AEC

	thumb_func_start FUN_02002B10
FUN_02002B10: @ 0x02002B10
	push {r3, lr}
	ldr r1, _02002B30 @ =0x02111884
	ldrb r1, [r1, #2]
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1f
	beq _02002B26
	bl FUN_02002AB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
_02002B26:
	bl FUN_02002A84
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	.align 2, 0
_02002B30: .4byte 0x02111884
	thumb_func_end FUN_02002B10

	thumb_func_start FUN_02002B34
FUN_02002B34: @ 0x02002B34
	ldr r2, _02002B4C @ =0x02111884
	movs r1, #1
	ldrb r3, [r2, #2]
	lsls r0, r0, #0x18
	bics r3, r1
	lsrs r1, r0, #0x18
	movs r0, #1
	ands r0, r1
	orrs r0, r3
	strb r0, [r2, #2]
	bx lr
	nop
_02002B4C: .4byte 0x02111884
	thumb_func_end FUN_02002B34

	thumb_func_start FUN_02002B50
FUN_02002B50: @ 0x02002B50
	push {r3, r4}
	ldr r1, _02002B88 @ =0x02111884
	movs r3, #4
	ldrb r2, [r1, #2]
	movs r4, #1
	bics r2, r3
	adds r3, r0, #0
	ands r3, r4
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r3, r3, #0x1f
	lsrs r3, r3, #0x1d
	orrs r2, r3
	asrs r0, r0, #1
	ands r0, r4
	strb r2, [r1, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #0x1f
	ldrb r2, [r1, #2]
	movs r3, #0x20
	lsrs r0, r0, #0x1a
	bics r2, r3
	orrs r0, r2
	strb r0, [r1, #2]
	pop {r3, r4}
	bx lr
	nop
_02002B88: .4byte 0x02111884
	thumb_func_end FUN_02002B50

	thumb_func_start FUN_02002B8C
FUN_02002B8C: @ 0x02002B8C
	ldr r2, _02002BA4 @ =0x02111884
	lsls r0, r0, #0x18
	ldrb r3, [r2, #2]
	lsrs r0, r0, #0x18
	movs r1, #0x10
	lsls r0, r0, #0x1f
	bics r3, r1
	lsrs r0, r0, #0x1b
	orrs r0, r3
	strb r0, [r2, #2]
	bx lr
	nop
_02002BA4: .4byte 0x02111884
	thumb_func_end FUN_02002B8C

	thumb_func_start FUN_02002BA8
FUN_02002BA8: @ 0x02002BA8
	ldr r2, _02002BC0 @ =0x02111884
	lsls r0, r0, #0x18
	ldrb r3, [r2, #2]
	lsrs r0, r0, #0x18
	movs r1, #2
	lsls r0, r0, #0x1f
	bics r3, r1
	lsrs r0, r0, #0x1e
	orrs r0, r3
	strb r0, [r2, #2]
	bx lr
	nop
_02002BC0: .4byte 0x02111884
	thumb_func_end FUN_02002BA8

	thumb_func_start FUN_02002BC4
FUN_02002BC4: @ 0x02002BC4
	ldr r0, _02002BD0 @ =0x02111884
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1f
	bx lr
	nop
_02002BD0: .4byte 0x02111884
	thumb_func_end FUN_02002BC4

	thumb_func_start FUN_02002BD4
FUN_02002BD4: @ 0x02002BD4
	ldr r1, _02002BE0 @ =0x02111884
	movs r0, #0x40
	ldrb r2, [r1, #2]
	bics r2, r0
	strb r2, [r1, #2]
	bx lr
	.align 2, 0
_02002BE0: .4byte 0x02111884
	thumb_func_end FUN_02002BD4

	thumb_func_start FUN_02002BE4
FUN_02002BE4: @ 0x02002BE4
	ldr r0, _02002BF0 @ =0x02111884
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1f
	bx lr
	nop
_02002BF0: .4byte 0x02111884
	thumb_func_end FUN_02002BE4

	thumb_func_start FUN_02002BF4
FUN_02002BF4: @ 0x02002BF4
	ldr r1, _02002C00 @ =0x02111884
	movs r0, #0x80
	ldrb r2, [r1, #2]
	bics r2, r0
	strb r2, [r1, #2]
	bx lr
	.align 2, 0
_02002C00: .4byte 0x02111884
	thumb_func_end FUN_02002BF4

	thumb_func_start FUN_02002C04
FUN_02002C04: @ 0x02002C04
	ldr r0, _02002C1C @ =0x02111884
	ldrb r1, [r0, #2]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1f
	beq _02002C16
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bx lr
_02002C16:
	movs r0, #0
	bx lr
	nop
_02002C1C: .4byte 0x02111884
	thumb_func_end FUN_02002C04

	thumb_func_start FUN_02002C20
FUN_02002C20: @ 0x02002C20
	ldr r2, _02002C3C @ =0x02111884
	movs r1, #2
	ldrb r3, [r2, #3]
	orrs r1, r3
	strb r1, [r2, #3]
	ldrb r1, [r0]
	strb r1, [r2, #4]
	ldrb r1, [r0, #1]
	strb r1, [r2, #5]
	ldrb r1, [r0, #2]
	strb r1, [r2, #6]
	ldrb r0, [r0, #3]
	strb r0, [r2, #7]
	bx lr
	.align 2, 0
_02002C3C: .4byte 0x02111884
	thumb_func_end FUN_02002C20

	thumb_func_start FUN_02002C40
FUN_02002C40: @ 0x02002C40
	ldr r1, _02002C5C @ =0x02111884
	movs r0, #2
	ldrb r2, [r1, #3]
	bics r2, r0
	strb r2, [r1, #3]
	movs r2, #0
	strb r2, [r1, #4]
	movs r0, #0xc0
	strb r0, [r1, #5]
	strb r2, [r1, #6]
	movs r0, #0xff
	strb r0, [r1, #7]
	bx lr
	nop
_02002C5C: .4byte 0x02111884
	thumb_func_end FUN_02002C40

	thumb_func_start FUN_02002C60
FUN_02002C60: @ 0x02002C60
	push {r3, lr}
	cmp r0, #0
	bne _02002C7A
	movs r0, #1
	bl FUN_02002B34
	movs r0, #3
	bl FUN_02002B50
	movs r0, #1
	bl FUN_02002B8C
	pop {r3, pc}
_02002C7A:
	movs r0, #1
	bl FUN_02002B50
	movs r0, #0
	bl FUN_02002B34
	movs r0, #0
	bl FUN_02002B8C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02002C60

	thumb_func_start FUN_02002C90
FUN_02002C90: @ 0x02002C90
	push {r3, lr}
	movs r0, #0
	bl FUN_02002B34
	movs r0, #0
	bl FUN_02002B50
	movs r0, #0
	bl FUN_02002B8C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02002C90

	thumb_func_start FUN_02002CA8
FUN_02002CA8: @ 0x02002CA8
	push {r4, lr}
	ldr r0, _02002CE0 @ =0x02111890
	ldr r4, _02002CE4 @ =0x0211188C
	movs r1, #0
	str r0, [r4]
	adds r2, r1, #0
	adds r0, r1, #0
_02002CB6:
	ldr r3, [r4]
	adds r3, r3, r2
	adds r3, #0x84
	str r0, [r3]
	ldr r3, [r4]
	adds r3, r3, r2
	adds r3, #0x9c
	str r0, [r3]
	ldr r3, [r4]
	adds r2, r2, #4
	adds r3, r3, r1
	adds r3, #0xb4
	adds r1, r1, #1
	strb r0, [r3]
	cmp r1, #6
	blo _02002CB6
	ldr r0, _02002CE8 @ =_020F56D8
	bl FUN_0201FFE0
	pop {r4, pc}
	nop
_02002CE0: .4byte 0x02111890
_02002CE4: .4byte 0x0211188C
_02002CE8: .4byte _020F56D8
	thumb_func_end FUN_02002CA8

	thumb_func_start FUN_02002CEC
FUN_02002CEC: @ 0x02002CEC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _02002D34 @ =0x0211188C
	lsls r4, r5, #2
	ldr r0, [r0]
	adds r2, r0, r4
	adds r2, #0x9c
	ldr r2, [r2]
	cmp r2, #0
	bne _02002D28
	str r1, [sp]
	ldr r1, _02002D38 @ =_020F56C0
	ldr r3, _02002D3C @ =_020F56C2
	ldrh r1, [r1, r4]
	ldrh r3, [r3, r4]
	movs r0, #0x10
	movs r2, #1
	bl FUN_02025E88
	ldr r2, _02002D34 @ =0x0211188C
	ldr r1, [r2]
	adds r1, r1, r4
	adds r1, #0x9c
	str r0, [r1]
	ldr r0, [r2]
	movs r1, #1
	adds r0, r0, r5
	adds r0, #0xb4
	strb r1, [r0]
	pop {r3, r4, r5, pc}
_02002D28:
	adds r0, #0xb4
	ldrsb r1, [r0, r5]
	adds r1, r1, #1
	strb r1, [r0, r5]
	pop {r3, r4, r5, pc}
	nop
_02002D34: .4byte 0x0211188C
_02002D38: .4byte _020F56C0
_02002D3C: .4byte _020F56C2
	thumb_func_end FUN_02002CEC

	thumb_func_start FUN_02002D40
FUN_02002D40: @ 0x02002D40
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #6
	blt _02002D4E
	bl FUN_0202551C
_02002D4E:
	ldr r0, _02002D78 @ =0x0211188C
	lsls r4, r4, #2
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002D62
	bl FUN_0202551C
_02002D62:
	ldr r0, _02002D78 @ =0x0211188C
	movs r1, #0
	ldr r0, [r0]
	adds r2, r5, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_02025ED8
	pop {r3, r4, r5, pc}
	nop
_02002D78: .4byte 0x0211188C
	thumb_func_end FUN_02002D40

	thumb_func_start FUN_02002D7C
FUN_02002D7C: @ 0x02002D7C
	push {r4, lr}
	adds r4, r0, #0
	cmp r4, #6
	blt _02002D88
	bl FUN_0202551C
_02002D88:
	ldr r0, _02002DB0 @ =0x0211188C
	lsls r4, r4, #2
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002D9C
	bl FUN_0202551C
_02002D9C:
	ldr r0, _02002DB0 @ =0x0211188C
	movs r1, #1
	ldr r0, [r0]
	movs r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_02025ED8
	pop {r4, pc}
	.align 2, 0
_02002DB0: .4byte 0x0211188C
	thumb_func_end FUN_02002D7C

	thumb_func_start FUN_02002DB4
FUN_02002DB4: @ 0x02002DB4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	cmp r4, #6
	blt _02002DC0
	bl FUN_0202551C
_02002DC0:
	ldr r0, _02002E74 @ =0x0211188C
	ldr r0, [r0]
	adds r1, r0, r4
	movs r0, #0xb4
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _02002DD2
	bl FUN_0202551C
_02002DD2:
	ldr r0, _02002E74 @ =0x0211188C
	ldr r1, [r0]
	adds r1, #0xb4
	ldrsb r0, [r1, r4]
	cmp r0, #0
	ble _02002DE2
	subs r0, r0, #1
	strb r0, [r1, r4]
_02002DE2:
	ldr r0, _02002E74 @ =0x0211188C
	ldr r6, [r0]
	movs r0, #0xb4
	adds r1, r6, r4
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _02002E70
	lsls r7, r4, #2
	adds r0, r6, r7
	adds r0, #0x84
	ldr r0, [r0]
	mov ip, r0
	cmp r0, #0
	beq _02002E50
	ldr r2, _02002E78 @ =_020F56C0
	movs r1, #0
	ldrh r0, [r2, r7]
	adds r3, r6, #0
_02002E06:
	cmp r1, r4
	beq _02002E26
	ldrh r5, [r2]
	cmp r5, r0
	bne _02002E26
	adds r5, r3, #0
	adds r5, #0x9c
	ldr r5, [r5]
	cmp r5, #0
	beq _02002E26
	lsls r0, r1, #2
	adds r2, r6, r0
	adds r2, #0x84
	mov r0, ip
	str r0, [r2]
	b _02002E30
_02002E26:
	adds r1, r1, #1
	adds r2, r2, #4
	adds r3, r3, #4
	cmp r1, #6
	blo _02002E06
_02002E30:
	cmp r1, #6
	bne _02002E50
	ldr r0, _02002E74 @ =0x0211188C
	lsls r5, r4, #2
	ldr r0, [r0]
	adds r0, r0, r5
	adds r0, #0x84
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _02002E74 @ =0x0211188C
	movs r1, #0
	ldr r0, [r0]
	adds r0, r0, r5
	adds r0, #0x84
	str r1, [r0]
_02002E50:
	ldr r0, _02002E74 @ =0x0211188C
	ldr r0, [r0]
	adds r0, r0, r7
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	beq _02002E70
	bl FUN_02025EC0
	ldr r0, _02002E74 @ =0x0211188C
	movs r2, #0
	ldr r1, [r0]
	lsls r0, r4, #2
	adds r0, r1, r0
	adds r0, #0x9c
	str r2, [r0]
_02002E70:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02002E74: .4byte 0x0211188C
_02002E78: .4byte _020F56C0
	thumb_func_end FUN_02002DB4

	thumb_func_start FUN_02002E7C
FUN_02002E7C: @ 0x02002E7C
	push {r3, lr}
	ldr r2, _02002E94 @ =0x0211188C
	lsls r0, r0, #2
	ldr r2, [r2]
	adds r0, r2, r0
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_0202604C
	ldr r0, _02002E94 @ =0x0211188C
	ldr r0, [r0]
	pop {r3, pc}
	.align 2, 0
_02002E94: .4byte 0x0211188C
	thumb_func_end FUN_02002E7C

	thumb_func_start FUN_02002E98
FUN_02002E98: @ 0x02002E98
	push {r4, lr}
	adds r3, r1, #0
	adds r3, #0x20
	ldrb r2, [r3, #1]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x1f
	bne _02002EC0
	ldrb r2, [r3]
	movs r4, #0xf
	lsls r0, r0, #0x18
	bics r2, r4
	lsrs r4, r0, #0x18
	movs r0, #0xf
	ands r0, r4
	orrs r0, r2
	strb r0, [r3]
	ldrb r2, [r3, #1]
	movs r0, #0x80
	orrs r0, r2
	strb r0, [r3, #1]
_02002EC0:
	adds r0, r1, #0
	bl FUN_02002298
	pop {r4, pc}
	thumb_func_end FUN_02002E98

	thumb_func_start FUN_02002EC8
FUN_02002EC8: @ 0x02002EC8
	push {r4, r5, r6, lr}
	lsls r4, r0, #2
	ldr r0, _02002EF8 @ =0x0211188C
	adds r5, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002EE2
	bl FUN_0202551C
_02002EE2:
	ldr r0, _02002EF8 @ =0x0211188C
	adds r1, r5, #0
	ldr r0, [r0]
	adds r2, r6, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_020261CC
	pop {r4, r5, r6, pc}
	nop
_02002EF8: .4byte 0x0211188C
	thumb_func_end FUN_02002EC8

	thumb_func_start FUN_02002EFC
FUN_02002EFC: @ 0x02002EFC
	push {r4, r5, r6, lr}
	lsls r4, r0, #2
	ldr r0, _02002F2C @ =0x0211188C
	adds r5, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002F16
	bl FUN_0202551C
_02002F16:
	ldr r0, _02002F2C @ =0x0211188C
	adds r1, r5, #0
	ldr r0, [r0]
	adds r2, r6, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_02026218
	pop {r4, r5, r6, pc}
	nop
_02002F2C: .4byte 0x0211188C
	thumb_func_end FUN_02002EFC

	thumb_func_start FUN_02002F30
FUN_02002F30: @ 0x02002F30
	push {r4, r5, r6, lr}
	lsls r4, r0, #2
	ldr r0, _02002F64 @ =0x0211188C
	adds r5, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002F4A
	bl FUN_0202551C
_02002F4A:
	adds r0, r5, #0
	bl FUN_02026AA4
	adds r1, r0, #0
	ldr r0, _02002F64 @ =0x0211188C
	adds r2, r6, #0
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_020261CC
	pop {r4, r5, r6, pc}
	.align 2, 0
_02002F64: .4byte 0x0211188C
	thumb_func_end FUN_02002F30

	thumb_func_start FUN_02002F68
FUN_02002F68: @ 0x02002F68
	push {r4, r5, r6, lr}
	lsls r4, r0, #2
	ldr r0, _02002FA8 @ =0x0211188C
	adds r6, r1, #0
	ldr r0, [r0]
	adds r5, r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02002F82
	bl FUN_0202551C
_02002F82:
	adds r0, r5, #0
	bl FUN_020263AC
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02026B88
	adds r0, r5, #0
	bl FUN_02026AA4
	adds r1, r0, #0
	ldr r0, _02002FA8 @ =0x0211188C
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_02026270
	pop {r4, r5, r6, pc}
	.align 2, 0
_02002FA8: .4byte 0x0211188C
	thumb_func_end FUN_02002F68

	thumb_func_start FUN_02002FAC
FUN_02002FAC: @ 0x02002FAC
	movs r2, #0
	cmp r1, #7
	bhi _0200300C
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02002FBE: @ jump table
	.2byte _02002FCE - _02002FBE - 2 @ case 0
	.2byte _02002FD6 - _02002FBE - 2 @ case 1
	.2byte _02002FDE - _02002FBE - 2 @ case 2
	.2byte _02002FE6 - _02002FBE - 2 @ case 3
	.2byte _02002FEE - _02002FBE - 2 @ case 4
	.2byte _02002FF6 - _02002FBE - 2 @ case 5
	.2byte _02002FFE - _02002FBE - 2 @ case 6
	.2byte _02003006 - _02002FBE - 2 @ case 7
_02002FCE:
	lsls r1, r0, #3
	ldr r0, _02003010 @ =_020F56D8
	ldrb r2, [r0, r1]
	b _0200300C
_02002FD6:
	lsls r1, r0, #3
	ldr r0, _02003014 @ =_020F56D9
	ldrb r2, [r0, r1]
	b _0200300C
_02002FDE:
	lsls r1, r0, #3
	ldr r0, _02003018 @ =_020F56DA
	ldrb r2, [r0, r1]
	b _0200300C
_02002FE6:
	lsls r1, r0, #3
	ldr r0, _0200301C @ =_020F56DB
	ldrb r2, [r0, r1]
	b _0200300C
_02002FEE:
	lsls r1, r0, #3
	ldr r0, _02003020 @ =_020F56DC
	ldrb r2, [r0, r1]
	b _0200300C
_02002FF6:
	lsls r1, r0, #3
	ldr r0, _02003024 @ =_020F56DD
	ldrb r2, [r0, r1]
	b _0200300C
_02002FFE:
	lsls r1, r0, #3
	ldr r0, _02003028 @ =_020F56DE
	ldrb r2, [r0, r1]
	b _0200300C
_02003006:
	lsls r1, r0, #3
	ldr r0, _0200302C @ =_020F56DF
	ldrb r2, [r0, r1]
_0200300C:
	adds r0, r2, #0
	bx lr
	.align 2, 0
_02003010: .4byte _020F56D8
_02003014: .4byte _020F56D9
_02003018: .4byte _020F56DA
_0200301C: .4byte _020F56DB
_02003020: .4byte _020F56DC
_02003024: .4byte _020F56DD
_02003028: .4byte _020F56DE
_0200302C: .4byte _020F56DF
	thumb_func_end FUN_02002FAC

	thumb_func_start FUN_02003030
FUN_02003030: @ 0x02003030
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0x20
	str r0, [sp]
	adds r3, r1, #0
	str r2, [sp, #4]
	movs r0, #0x10
	movs r1, #7
	adds r2, r4, #0
	bl FUN_02007938
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_02003030

	thumb_func_start FUN_0200304C
FUN_0200304C: @ 0x0200304C
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0x20
	str r0, [sp]
	adds r3, r1, #0
	str r2, [sp, #4]
	movs r0, #0x10
	movs r1, #8
	adds r2, r4, #0
	bl FUN_02007938
	add sp, #8
	pop {r4, pc}
	thumb_func_end FUN_0200304C

	thumb_func_start FUN_02003068
FUN_02003068: @ 0x02003068
	push {r4, r5, r6, lr}
	lsls r4, r0, #2
	ldr r0, _0200309C @ =0x0211188C
	adds r5, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _02003082
	bl FUN_0202551C
_02003082:
	adds r0, r5, #0
	bl FUN_02026AA4
	adds r1, r0, #0
	ldr r0, _0200309C @ =0x0211188C
	adds r2, r6, #0
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_020262D4
	pop {r4, r5, r6, pc}
	.align 2, 0
_0200309C: .4byte 0x0211188C
	thumb_func_end FUN_02003068

	thumb_func_start FUN_020030A0
FUN_020030A0: @ 0x020030A0
	push {r4, lr}
	adds r4, r3, #0
	bl FUN_02002F30
	cmp r0, r4
	bhs _020030B2
	subs r0, r4, r0
	lsrs r0, r0, #1
	pop {r4, pc}
_020030B2:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020030A0

	thumb_func_start FUN_020030B8
FUN_020030B8: @ 0x020030B8
	push {r3, r4, r5, lr}
	lsls r4, r0, #2
	ldr r0, _020030E4 @ =0x0211188C
	adds r5, r1, #0
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	cmp r0, #0
	bne _020030D0
	bl FUN_0202551C
_020030D0:
	ldr r0, _020030E4 @ =0x0211188C
	adds r1, r5, #0
	ldr r0, [r0]
	adds r0, r0, r4
	adds r0, #0x9c
	ldr r0, [r0]
	bl FUN_0202633C
	pop {r3, r4, r5, pc}
	nop
_020030E4: .4byte 0x0211188C
	thumb_func_end FUN_020030B8

	thumb_func_start FUN_020030E8
FUN_020030E8: @ 0x020030E8
	push {r4, lr}
	movs r1, #0x12
	lsls r1, r1, #4
	bl FUN_0201AA8C
	movs r2, #0x12
	movs r1, #0
	lsls r2, r2, #4
	adds r4, r0, #0
	blx FUN_020D4994
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020030E8

	thumb_func_start FUN_02003104
FUN_02003104: @ 0x02003104
	ldr r3, _02003108 @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_02003108: .4byte FUN_0201AB0C
	thumb_func_end FUN_02003104

	thumb_func_start FUN_0200310C
FUN_0200310C: @ 0x0200310C
	push {r3, r4}
	movs r4, #0x14
	muls r4, r1, r4
	str r2, [r0, r4]
	adds r1, r0, r4
	ldr r0, [sp, #8]
	str r3, [r1, #4]
	str r0, [r1, #8]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0200310C

	thumb_func_start FUN_02003120
FUN_02003120: @ 0x02003120
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	str r3, [sp, #4]
	adds r0, r3, #0
	adds r1, r4, #0
	bl FUN_0201AA8C
	adds r7, r0, #0
	ldr r0, [sp, #4]
	adds r1, r4, #0
	bl FUN_0201AA8C
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	str r4, [sp]
	bl FUN_0200310C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02003120

	thumb_func_start FUN_02003150
FUN_02003150: @ 0x02003150
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #0x14
	adds r5, r1, #0
	muls r5, r0, r5
	ldr r0, [r4, r5]
	bl FUN_0201AB0C
	adds r0, r4, r5
	ldr r0, [r0, #4]
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02003150

	thumb_func_start FUN_0200316C
FUN_0200316C: @ 0x0200316C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	add r0, sp, #8
	ldrh r7, [r0, #0x10]
	adds r6, r2, #0
	movs r0, #0x14
	muls r6, r0, r6
	str r1, [sp]
	adds r0, r1, #0
	ldr r1, [r5, r6]
	lsls r4, r3, #1
	adds r1, r1, r4
	adds r2, r7, #0
	blx FUN_020D47B8
	adds r1, r5, r6
	ldr r1, [r1, #4]
	ldr r0, [sp]
	adds r1, r1, r4
	adds r2, r7, #0
	blx FUN_020D47B8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200316C

	thumb_func_start FUN_0200319C
FUN_0200319C: @ 0x0200319C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	add r2, sp, #4
	ldr r4, [sp, #0x1c]
	bl FUN_020079F4
	adds r6, r0, #0
	bne _020031B6
	bl FUN_0202551C
_020031B6:
	cmp r4, #0
	bne _020031BE
	ldr r0, [sp, #4]
	ldr r4, [r0, #8]
_020031BE:
	add r0, sp, #8
	ldrh r0, [r0, #0x18]
	ldr r2, [sp, #0x18]
	movs r1, #0x14
	muls r1, r2, r1
	adds r1, r5, r1
	lsls r0, r0, #1
	ldr r1, [r1, #8]
	adds r0, r4, r0
	cmp r0, r1
	bls _020031D8
	bl FUN_0202551C
_020031D8:
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r1, [sp, #4]
	add r3, sp, #8
	ldr r2, [r1, #0xc]
	ldrh r1, [r3, #0x1c]
	ldrh r3, [r3, #0x18]
	adds r0, r5, #0
	lsls r1, r1, #1
	adds r1, r2, r1
	ldr r2, [sp, #0x18]
	bl FUN_0200316C
	adds r0, r6, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200319C

	thumb_func_start FUN_02003200
FUN_02003200: @ 0x02003200
	push {r4, lr}
	sub sp, #0x10
	ldr r4, [sp, #0x18]
	str r4, [sp]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #4]
	add r4, sp, #8
	ldrh r4, [r4, #0x18]
	str r4, [sp, #8]
	movs r4, #0
	str r4, [sp, #0xc]
	bl FUN_0200319C
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02003200

	thumb_func_start FUN_02003220
FUN_02003220: @ 0x02003220
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	add r2, sp, #4
	ldr r4, [sp, #0x1c]
	bl FUN_02007C48
	adds r6, r0, #0
	bne _0200323A
	bl FUN_0202551C
_0200323A:
	cmp r4, #0
	bne _02003242
	ldr r0, [sp, #4]
	ldr r4, [r0, #8]
_02003242:
	add r0, sp, #8
	ldrh r0, [r0, #0x18]
	ldr r2, [sp, #0x18]
	movs r1, #0x14
	muls r1, r2, r1
	adds r1, r5, r1
	lsls r0, r0, #1
	ldr r1, [r1, #8]
	adds r0, r4, r0
	cmp r0, r1
	bls _0200325C
	bl FUN_0202551C
_0200325C:
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r1, [sp, #4]
	add r3, sp, #8
	ldr r2, [r1, #0xc]
	ldrh r1, [r3, #0x1c]
	ldrh r3, [r3, #0x18]
	adds r0, r5, #0
	lsls r1, r1, #1
	adds r1, r2, r1
	ldr r2, [sp, #0x18]
	bl FUN_0200316C
	adds r0, r6, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02003220

	thumb_func_start FUN_02003284
FUN_02003284: @ 0x02003284
	push {r4, lr}
	sub sp, #0x10
	ldr r4, [sp, #0x18]
	str r4, [sp]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #4]
	add r4, sp, #8
	ldrh r4, [r4, #0x18]
	str r4, [sp, #8]
	movs r4, #0
	str r4, [sp, #0xc]
	bl FUN_02003220
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02003284

	thumb_func_start FUN_020032A4
FUN_020032A4: @ 0x020032A4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	movs r1, #0x14
	adds r6, r0, #0
	muls r1, r4, r1
	adds r5, r2, #0
	adds r1, r6, r1
	adds r7, r3, #0
	lsls r0, r5, #1
	ldr r1, [r1, #8]
	adds r0, r7, r0
	cmp r0, r1
	bls _020032C2
	bl FUN_0202551C
_020032C2:
	cmp r4, #3
	bhi _020032FA
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_020032D2: @ jump table
	.2byte _020032DA - _020032D2 - 2 @ case 0
	.2byte _020032E2 - _020032D2 - 2 @ case 1
	.2byte _020032EA - _020032D2 - 2 @ case 2
	.2byte _020032F2 - _020032D2 - 2 @ case 3
_020032DA:
	bl FUN_02026E84
	adds r1, r0, #0
	b _02003300
_020032E2:
	bl FUN_02026E94
	adds r1, r0, #0
	b _02003300
_020032EA:
	bl FUN_02026EA4
	adds r1, r0, #0
	b _02003300
_020032F2:
	bl FUN_02026EAC
	adds r1, r0, #0
	b _02003300
_020032FA:
	bl FUN_0202551C
	pop {r3, r4, r5, r6, r7, pc}
_02003300:
	lsls r0, r7, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r5, #1
	str r0, [sp]
	adds r1, r1, r2
	adds r0, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl FUN_0200316C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020032A4

	thumb_func_start FUN_02003318
FUN_02003318: @ 0x02003318
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	add r4, sp, #0x10
	adds r5, r0, #0
	adds r0, r1, #0
	ldrh r1, [r4, #0x14]
	adds r6, r3, #0
	str r1, [sp]
	ldrh r1, [r4, #0x10]
	lsls r4, r2, #1
	ldr r2, [sp]
	lsls r7, r1, #1
	movs r1, #0x14
	muls r6, r1, r6
	muls r1, r0, r1
	ldr r0, [r5, r1]
	str r1, [sp, #4]
	ldr r1, [r5, r6]
	adds r0, r0, r4
	adds r1, r1, r7
	blx FUN_020D47B8
	ldr r0, [sp, #4]
	adds r1, r5, r6
	ldr r0, [r5, r0]
	ldr r1, [r1, #4]
	ldr r2, [sp]
	adds r0, r0, r4
	adds r1, r1, r7
	blx FUN_020D47B8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02003318

	thumb_func_start FUN_0200335C
FUN_0200335C: @ 0x0200335C
	movs r2, #0x14
	muls r2, r1, r2
	ldr r0, [r0, r2]
	bx lr
	thumb_func_end FUN_0200335C

	thumb_func_start FUN_02003364
FUN_02003364: @ 0x02003364
	movs r2, #0x14
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #4]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02003364

	thumb_func_start FUN_02003370
FUN_02003370: @ 0x02003370
	push {r0, r1, r2, r3}
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r3, [sp, #8]
	adds r5, r0, #0
	ldr r0, [sp, #0x38]
	movs r6, #0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x3c]
	adds r7, r1, #0
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x40]
	adds r4, r6, #0
	str r0, [sp, #0x40]
	add r0, sp, #0x28
	ldrh r0, [r0, #8]
	str r0, [sp, #0xc]
_02003392:
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_02003560
	cmp r0, #1
	bne _02003406
	movs r0, #0x46
	lsls r0, r0, #2
	ldrh r0, [r5, r0]
	adds r1, r4, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x12
	bl FUN_02003560
	cmp r0, #0
	bne _02003406
	movs r0, #0x14
	adds r6, r4, #0
	muls r6, r0, r6
	adds r0, r4, #0
	adds r1, r5, r6
	add r2, sp, #0x30
	bl FUN_020035B4
	ldr r0, [sp, #0x3c]
	add r1, sp, #0x28
	str r0, [sp]
	ldr r0, [sp, #0x40]
	str r0, [sp, #4]
	adds r0, r5, r6
	ldrh r1, [r1, #8]
	ldr r2, [sp, #8]
	ldr r3, [sp, #0x38]
	adds r0, #0xc
	bl FUN_020035F0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02003574
	cmp r4, #4
	blo _020033F4
	movs r2, #1
	adds r0, r5, #0
	adds r1, r4, #0
	lsls r2, r2, #8
	bl FUN_020037FC
	b _020033FE
_020033F4:
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x10
	bl FUN_020037FC
_020033FE:
	ldr r1, [sp, #0xc]
	add r0, sp, #0x28
	strh r1, [r0, #8]
	movs r6, #1
_02003406:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xe
	blo _02003392
	cmp r6, #1
	bne _02003460
	movs r0, #0x46
	lsls r0, r0, #2
	ldrh r2, [r5, r0]
	ldr r1, _0200346C @ =0xFFFF0003
	ands r1, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x12
	orrs r2, r7
	lsls r2, r2, #0x12
	lsrs r2, r2, #0x10
	orrs r1, r2
	strh r1, [r5, r0]
	adds r1, r0, #2
	ldrh r1, [r5, r1]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x1f
	bne _02003460
	adds r1, r0, #2
	ldrh r2, [r5, r1]
	movs r1, #1
	lsls r1, r1, #0xe
	orrs r2, r1
	adds r1, r0, #2
	strh r2, [r5, r1]
	ldrh r2, [r5, r0]
	movs r1, #3
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strh r1, [r5, r0]
	movs r2, #0
	adds r0, r0, #4
	strb r2, [r5, r0]
	ldr r0, _02003470 @ =FUN_020036B0
	adds r1, r5, #0
	subs r2, r2, #2
	bl FUN_0200E320
_02003460:
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
_0200346C: .4byte 0xFFFF0003
_02003470: .4byte FUN_020036B0
	thumb_func_end FUN_02003370

	thumb_func_start FUN_02003474
FUN_02003474: @ 0x02003474
	push {r0, r1, r2, r3}
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r3, [sp, #8]
	adds r5, r0, #0
	ldr r0, [sp, #0x38]
	movs r6, #0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x3c]
	adds r7, r1, #0
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x40]
	adds r4, r6, #0
	str r0, [sp, #0x40]
	add r0, sp, #0x28
	ldrh r0, [r0, #8]
	str r0, [sp, #0xc]
_02003496:
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_02003560
	cmp r0, #1
	bne _020034F6
	movs r0, #0x14
	adds r6, r4, #0
	muls r6, r0, r6
	adds r0, r4, #0
	adds r1, r5, r6
	add r2, sp, #0x30
	bl FUN_020035B4
	ldr r0, [sp, #0x3c]
	add r1, sp, #0x28
	str r0, [sp]
	ldr r0, [sp, #0x40]
	str r0, [sp, #4]
	adds r0, r5, r6
	ldrh r1, [r1, #8]
	ldr r2, [sp, #8]
	ldr r3, [sp, #0x38]
	adds r0, #0xc
	bl FUN_020035F0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02003574
	cmp r4, #4
	blo _020034E4
	movs r2, #1
	adds r0, r5, #0
	adds r1, r4, #0
	lsls r2, r2, #8
	bl FUN_020037FC
	b _020034EE
_020034E4:
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0x10
	bl FUN_020037FC
_020034EE:
	ldr r1, [sp, #0xc]
	add r0, sp, #0x28
	strh r1, [r0, #8]
	movs r6, #1
_020034F6:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xe
	blo _02003496
	cmp r6, #1
	bne _0200354A
	movs r0, #0x46
	lsls r0, r0, #2
	ldrh r2, [r5, r0]
	ldr r1, _02003558 @ =0xFFFF0003
	ands r2, r1
	lsls r1, r7, #0x12
	lsrs r1, r1, #0x10
	orrs r1, r2
	strh r1, [r5, r0]
	adds r1, r0, #2
	ldrh r1, [r5, r1]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x1f
	bne _0200354A
	adds r1, r0, #2
	ldrh r2, [r5, r1]
	movs r1, #1
	lsls r1, r1, #0xe
	orrs r2, r1
	adds r1, r0, #2
	strh r2, [r5, r1]
	ldrh r2, [r5, r0]
	movs r1, #3
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strh r1, [r5, r0]
	movs r2, #0
	adds r0, r0, #4
	strb r2, [r5, r0]
	ldr r0, _0200355C @ =FUN_020036B0
	adds r1, r5, #0
	subs r2, r2, #2
	bl FUN_0200E320
_0200354A:
	adds r0, r6, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	nop
_02003558: .4byte 0xFFFF0003
_0200355C: .4byte FUN_020036B0
	thumb_func_end FUN_02003474

	thumb_func_start FUN_02003560
FUN_02003560: @ 0x02003560
	movs r3, #1
	adds r2, r3, #0
	lsls r2, r1
	tst r0, r2
	bne _0200356C
	movs r3, #0
_0200356C:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_02003560

	thumb_func_start FUN_02003574
FUN_02003574: @ 0x02003574
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _020035AC @ =0x0000011A
	adds r4, r1, #0
	ldrh r0, [r5, r0]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x12
	bl FUN_02003560
	cmp r0, #1
	beq _020035AA
	ldr r3, _020035AC @ =0x0000011A
	ldr r1, _020035B0 @ =0xFFFFC000
	ldrh r2, [r5, r3]
	adds r0, r2, #0
	lsls r2, r2, #0x12
	lsrs r6, r2, #0x12
	movs r2, #1
	lsls r2, r4
	orrs r2, r6
	lsls r2, r2, #0x10
	ands r0, r1
	lsrs r2, r2, #0x10
	lsrs r1, r1, #0x12
	ands r1, r2
	orrs r0, r1
	strh r0, [r5, r3]
_020035AA:
	pop {r4, r5, r6, pc}
	.align 2, 0
_020035AC: .4byte 0x0000011A
_020035B0: .4byte 0xFFFFC000
	thumb_func_end FUN_02003574

	thumb_func_start FUN_020035B4
FUN_020035B4: @ 0x020035B4
	push {r4, r5}
	cmp r0, #4
	ldr r0, [r1, #8]
	bge _020035C0
	lsls r0, r0, #0x13
	b _020035C4
_020035C0:
	lsrs r0, r0, #9
	lsls r0, r0, #0x18
_020035C4:
	movs r4, #0
	lsrs r0, r0, #0x18
	adds r5, r4, #0
	cmp r0, #0
	bls _020035E4
	movs r3, #1
_020035D0:
	adds r1, r3, #0
	lsls r1, r5
	adds r1, r4, r1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	adds r1, r5, #1
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r5, r0
	blo _020035D0
_020035E4:
	ldrh r0, [r2]
	ands r0, r4
	strh r0, [r2]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020035B4

	thumb_func_start FUN_020035F0
FUN_020035F0: @ 0x020035F0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r3, #0
	cmp r2, #0
	bge _02003620
	adds r0, r2, #0
	blx FUN_020E4A90
	adds r0, r0, #2
	ldrh r1, [r5, #6]
	movs r2, #0xf
	lsls r0, r0, #0x10
	bics r1, r2
	lsrs r2, r0, #0x10
	movs r0, #0xf
	ands r0, r2
	orrs r0, r1
	strh r0, [r5, #6]
	ldrh r1, [r5, #2]
	movs r0, #0x3f
	bics r1, r0
	strh r1, [r5, #2]
	b _0200363E
_02003620:
	ldrh r1, [r5, #6]
	movs r0, #0xf
	bics r1, r0
	movs r0, #2
	orrs r0, r1
	strh r0, [r5, #6]
	ldrh r0, [r5, #2]
	movs r1, #0x3f
	bics r0, r1
	lsls r1, r2, #0x10
	lsrs r2, r1, #0x10
	movs r1, #0x3f
	ands r1, r2
	orrs r0, r1
	strh r0, [r5, #2]
_0200363E:
	strh r6, [r5]
	ldrh r1, [r5, #2]
	ldr r0, _020036A0 @ =0xFFFFF83F
	add r3, sp, #0
	ands r1, r0
	lsls r0, r4, #0x1b
	lsrs r0, r0, #0x15
	orrs r0, r1
	strh r0, [r5, #2]
	ldrh r1, [r5, #2]
	ldr r0, _020036A4 @ =0xFFFF07FF
	adds r2, r1, #0
	ldrb r1, [r3, #0x10]
	ands r2, r0
	lsls r0, r1, #0x1b
	lsrs r0, r0, #0x10
	orrs r0, r2
	strh r0, [r5, #2]
	ldrh r0, [r5, #4]
	ldr r2, _020036A8 @ =0xFFFF8000
	ldrh r6, [r3, #0x14]
	lsrs r3, r2, #0x11
	ands r0, r2
	ands r3, r6
	orrs r0, r3
	strh r0, [r5, #4]
	ldrh r3, [r5, #6]
	ldr r0, _020036AC @ =0xFFFFFC0F
	ands r0, r3
	ldrh r3, [r5, #2]
	lsls r3, r3, #0x1a
	lsrs r3, r3, #0x1a
	lsls r3, r3, #0x1a
	lsrs r3, r3, #0x16
	orrs r0, r3
	strh r0, [r5, #6]
	cmp r4, r1
	ldrh r1, [r5, #4]
	bhs _02003694
	subs r0, r2, #1
	ands r0, r1
	strh r0, [r5, #4]
	pop {r4, r5, r6, pc}
_02003694:
	movs r0, #2
	lsls r0, r0, #0xe
	orrs r0, r1
	strh r0, [r5, #4]
	pop {r4, r5, r6, pc}
	nop
_020036A0: .4byte 0xFFFFF83F
_020036A4: .4byte 0xFFFF07FF
_020036A8: .4byte 0xFFFF8000
_020036AC: .4byte 0xFFFFFC0F
	thumb_func_end FUN_020035F0

	thumb_func_start FUN_020036B0
FUN_020036B0: @ 0x020036B0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	movs r1, #0x47
	lsls r1, r1, #2
	ldrb r2, [r4, r1]
	adds r5, r0, #0
	cmp r2, #1
	bne _020036F0
	movs r2, #0
	strb r2, [r4, r1]
	subs r2, r1, #2
	ldrh r3, [r4, r2]
	ldr r2, _02003740 @ =0xFFFFC000
	adds r5, r3, #0
	ands r5, r2
	subs r3, r1, #2
	strh r5, [r4, r3]
	subs r3, r1, #4
	ldrh r5, [r4, r3]
	ldr r3, _02003744 @ =0xFFFF0003
	subs r2, r2, #1
	ands r5, r3
	subs r3, r1, #4
	strh r5, [r4, r3]
	subs r3, r1, #2
	ldrh r3, [r4, r3]
	subs r1, r1, #2
	ands r2, r3
	strh r2, [r4, r1]
	bl FUN_0200E390
	pop {r4, r5, r6, pc}
_020036F0:
	subs r0, r1, #4
	ldrh r2, [r4, r0]
	lsls r0, r2, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0200373C
	subs r0, r1, #2
	ldrh r0, [r4, r0]
	ldr r3, _02003740 @ =0xFFFFC000
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x12
	lsrs r2, r3, #0x12
	ands r0, r3
	ands r2, r6
	orrs r2, r0
	subs r0, r1, #2
	strh r2, [r4, r0]
	adds r0, r4, #0
	bl FUN_02003760
	adds r0, r4, #0
	bl FUN_02003780
	movs r1, #0x46
	lsls r1, r1, #2
	ldrh r0, [r4, r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x12
	bne _0200373C
	adds r0, r1, #2
	ldrh r2, [r4, r0]
	ldr r0, _02003748 @ =0xFFFFBFFF
	ands r2, r0
	adds r0, r1, #2
	strh r2, [r4, r0]
	adds r0, r5, #0
	bl FUN_0200E390
_0200373C:
	pop {r4, r5, r6, pc}
	nop
_02003740: .4byte 0xFFFFC000
_02003744: .4byte 0xFFFF0003
_02003748: .4byte 0xFFFFBFFF
	thumb_func_end FUN_020036B0

	thumb_func_start FUN_0200374C
FUN_0200374C: @ 0x0200374C
	movs r1, #0x46
	lsls r1, r1, #2
	ldrh r2, [r0, r1]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x12
	beq _0200375E
	movs r2, #1
	adds r1, r1, #4
	strb r2, [r0, r1]
_0200375E:
	bx lr
	thumb_func_end FUN_0200374C

	thumb_func_start FUN_02003760
FUN_02003760: @ 0x02003760
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r6, #0x10
_02003768:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_020037A0
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	blo _02003768
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02003760

	thumb_func_start FUN_02003780
FUN_02003780: @ 0x02003780
	push {r4, r5, r6, lr}
	movs r4, #4
	adds r6, r4, #0
	adds r5, r0, #0
	adds r6, #0xfc
_0200378A:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_020037A0
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xe
	blo _0200378A
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02003780

	thumb_func_start FUN_020037A0
FUN_020037A0: @ 0x020037A0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #0x46
	lsls r0, r0, #2
	ldrh r0, [r5, r0]
	adds r4, r1, #0
	adds r6, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x12
	bl FUN_02003560
	cmp r0, #0
	beq _020037F4
	movs r0, #0x14
	muls r0, r4, r0
	adds r2, r5, r0
	ldrh r0, [r2, #0x12]
	ldrh r3, [r2, #0xe]
	lsls r1, r0, #0x16
	lsls r3, r3, #0x1a
	lsrs r1, r1, #0x1a
	lsrs r3, r3, #0x1a
	cmp r1, r3
	bhs _020037E4
	ldr r3, _020037F8 @ =0xFFFFFC0F
	ands r3, r0
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x16
	orrs r0, r3
	strh r0, [r2, #0x12]
	pop {r4, r5, r6, pc}
_020037E4:
	ldr r1, _020037F8 @ =0xFFFFFC0F
	ands r0, r1
	strh r0, [r2, #0x12]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl FUN_020037FC
_020037F4:
	pop {r4, r5, r6, pc}
	nop
_020037F8: .4byte 0xFFFFFC0F
	thumb_func_end FUN_020037A0

	thumb_func_start FUN_020037FC
FUN_020037FC: @ 0x020037FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp, #4]
	str r0, [sp]
	ldr r0, [sp, #4]
	movs r1, #0x14
	muls r1, r0, r1
	ldr r0, [sp]
	movs r6, #0
	adds r5, r0, r1
	adds r0, r5, #0
	str r0, [sp, #8]
	adds r0, #0xc
	adds r7, r2, #0
	adds r4, r6, #0
	str r0, [sp, #8]
_0200381C:
	ldrh r0, [r5, #0xc]
	lsls r1, r6, #0x10
	lsrs r1, r1, #0x10
	bl FUN_02003560
	cmp r0, #0
	beq _0200383C
	ldr r0, [r5]
	lsls r1, r4, #1
	ldr r2, [r5, #4]
	adds r0, r0, r1
	adds r1, r2, r1
	ldr r2, [sp, #8]
	adds r3, r7, #0
	bl FUN_02003858
_0200383C:
	adds r6, r6, #1
	adds r4, r4, r7
	cmp r6, #0x10
	blo _0200381C
	ldr r1, [sp, #4]
	adds r5, #0xc
	lsls r1, r1, #0x18
	ldr r0, [sp]
	lsrs r1, r1, #0x18
	adds r2, r5, #0
	bl FUN_020038E4
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_020037FC

	thumb_func_start FUN_02003858
FUN_02003858: @ 0x02003858
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp, #4]
	movs r0, #0
	adds r6, r1, #0
	mov ip, r0
	str r2, [sp]
	mov lr, r3
	adds r0, r3, #0
	beq _020038E0
_0200386C:
	ldr r0, [sp, #4]
	movs r1, #0x1f
	ldrh r0, [r0]
	asrs r2, r0, #5
	adds r5, r2, #0
	ands r5, r1
	ldr r1, [sp]
	asrs r4, r0, #0xa
	ldrh r1, [r1, #4]
	lsls r1, r1, #0x11
	lsrs r3, r1, #0x11
	ldr r1, [sp]
	ldrh r1, [r1, #2]
	lsls r1, r1, #0x15
	lsrs r2, r1, #0x1b
	movs r1, #0x1f
	ands r1, r4
	movs r4, #0x1f
	ands r0, r4
	ands r4, r3
	subs r4, r4, r0
	muls r4, r2, r4
	asrs r4, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	asrs r4, r3, #0xa
	movs r0, #0x1f
	ands r0, r4
	subs r0, r0, r1
	muls r0, r2, r0
	asrs r0, r0, #4
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	asrs r3, r3, #5
	movs r1, #0x1f
	ands r1, r3
	subs r1, r1, r5
	muls r1, r2, r1
	asrs r1, r1, #4
	adds r1, r5, r1
	lsls r1, r1, #0x18
	lsls r0, r0, #0xa
	lsrs r1, r1, #0x13
	orrs r0, r1
	orrs r0, r7
	strh r0, [r6]
	ldr r0, [sp, #4]
	adds r6, r6, #2
	adds r0, r0, #2
	str r0, [sp, #4]
	mov r0, ip
	adds r1, r0, #1
	mov r0, lr
	mov ip, r1
	cmp r1, r0
	blo _0200386C
_020038E0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02003858

	thumb_func_start FUN_020038E4
FUN_020038E4: @ 0x020038E4
	push {r4, r5}
	ldrh r4, [r2, #2]
	lsls r3, r4, #0x10
	lsls r4, r4, #0x15
	lsrs r3, r3, #0x1b
	lsrs r4, r4, #0x1b
	cmp r4, r3
	bne _0200391E
	movs r3, #0x46
	lsls r3, r3, #2
	ldrh r4, [r0, r3]
	movs r2, #1
	lsls r2, r1
	lsls r1, r4, #0x10
	lsrs r5, r1, #0x12
	adds r1, r5, #0
	tst r1, r2
	beq _0200397E
	eors r2, r5
	lsls r2, r2, #0x10
	ldr r1, _02003984 @ =0xFFFF0003
	lsrs r2, r2, #0x10
	lsls r2, r2, #0x12
	ands r1, r4
	lsrs r2, r2, #0x10
	orrs r1, r2
	strh r1, [r0, r3]
	pop {r4, r5}
	bx lr
_0200391E:
	ldrh r0, [r2, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	bne _02003954
	lsls r0, r4, #0x10
	asrs r1, r0, #0x10
	ldrh r0, [r2, #6]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	adds r0, r1, r0
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, r3
	ble _0200393E
	lsls r0, r3, #0x10
	asrs r4, r0, #0x10
_0200393E:
	ldrh r1, [r2, #2]
	ldr r0, _02003988 @ =0xFFFFF83F
	ands r1, r0
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x15
	orrs r0, r1
	strh r0, [r2, #2]
	pop {r4, r5}
	bx lr
_02003954:
	lsls r0, r4, #0x10
	asrs r1, r0, #0x10
	ldrh r0, [r2, #6]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	subs r0, r1, r0
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, r3
	bge _0200396C
	lsls r0, r3, #0x10
	asrs r4, r0, #0x10
_0200396C:
	ldrh r1, [r2, #2]
	ldr r0, _02003988 @ =0xFFFFF83F
	ands r1, r0
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x15
	orrs r0, r1
	strh r0, [r2, #2]
_0200397E:
	pop {r4, r5}
	bx lr
	nop
_02003984: .4byte 0xFFFF0003
_02003988: .4byte 0xFFFFF83F
	thumb_func_end FUN_020038E4

	thumb_func_start FUN_0200398C
FUN_0200398C: @ 0x0200398C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldr r0, _02003B3C @ =0x0000011A
	ldrh r1, [r6, r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x1f
	bne _020039A8
	subs r0, r0, #2
	ldrh r0, [r6, r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _020039A8
	b _02003B3A
_020039A8:
	movs r7, #2
	movs r5, #0
	adds r4, r6, #0
	lsls r7, r7, #0xc
_020039B0:
	ldr r0, _02003B3C @ =0x0000011A
	ldrh r1, [r6, r0]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1f
	bne _020039D0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _020039DC
	lsls r0, r1, #0x12
	lsls r1, r5, #0x10
	lsrs r0, r0, #0x12
	lsrs r1, r1, #0x10
	bl FUN_02003560
	cmp r0, #0
	beq _020039DC
_020039D0:
	ldr r0, [r4, #4]
	ldr r1, [r4, #8]
	blx FUN_020D2894
	cmp r5, #0xd
	bls _020039DE
_020039DC:
	b _02003B04
_020039DE:
	adds r0, r5, r5
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_020039EA: @ jump table
	.2byte _02003A06 - _020039EA - 2 @ case 0
	.2byte _02003A12 - _020039EA - 2 @ case 1
	.2byte _02003A1E - _020039EA - 2 @ case 2
	.2byte _02003A2A - _020039EA - 2 @ case 3
	.2byte _02003A36 - _020039EA - 2 @ case 4
	.2byte _02003A4A - _020039EA - 2 @ case 5
	.2byte _02003A5E - _020039EA - 2 @ case 6
	.2byte _02003A74 - _020039EA - 2 @ case 7
	.2byte _02003A8A - _020039EA - 2 @ case 8
	.2byte _02003A9E - _020039EA - 2 @ case 9
	.2byte _02003AB2 - _020039EA - 2 @ case 10
	.2byte _02003AC8 - _020039EA - 2 @ case 11
	.2byte _02003ADE - _020039EA - 2 @ case 12
	.2byte _02003AF2 - _020039EA - 2 @ case 13
_02003A06:
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020CFC6C
	b _02003B04
_02003A12:
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020CFCC0
	b _02003B04
_02003A1E:
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020CFD18
	b _02003B04
_02003A2A:
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020CFD70
	b _02003B04
_02003A36:
	blx FUN_020D0524
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020D05C4
	blx FUN_020D0634
	b _02003B04
_02003A4A:
	blx FUN_020D0524
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	adds r1, r7, #0
	blx FUN_020D05C4
	blx FUN_020D0634
	b _02003B04
_02003A5E:
	blx FUN_020D0524
	movs r1, #1
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0xe
	blx FUN_020D05C4
	blx FUN_020D0634
	b _02003B04
_02003A74:
	blx FUN_020D0524
	movs r1, #6
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0xc
	blx FUN_020D05C4
	blx FUN_020D0634
	b _02003B04
_02003A8A:
	blx FUN_020D0774
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020D078C
	blx FUN_020D07F0
	b _02003B04
_02003A9E:
	blx FUN_020D0774
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	adds r1, r7, #0
	blx FUN_020D078C
	blx FUN_020D07F0
	b _02003B04
_02003AB2:
	blx FUN_020D0774
	movs r1, #1
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0xe
	blx FUN_020D078C
	blx FUN_020D07F0
	b _02003B04
_02003AC8:
	blx FUN_020D0774
	movs r1, #6
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	lsls r1, r1, #0xc
	blx FUN_020D078C
	blx FUN_020D07F0
	b _02003B04
_02003ADE:
	blx FUN_020D067C
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020D06C4
	blx FUN_020D0730
	b _02003B04
_02003AF2:
	blx FUN_020D0830
	ldr r0, [r4, #4]
	ldr r2, [r4, #8]
	movs r1, #0
	blx FUN_020D0848
	blx FUN_020D08AC
_02003B04:
	adds r5, r5, #1
	adds r4, #0x14
	cmp r5, #0xe
	bge _02003B0E
	b _020039B0
_02003B0E:
	ldr r3, _02003B3C @ =0x0000011A
	ldr r1, _02003B40 @ =0xFFFFC000
	subs r2, r3, #2
	ldrh r2, [r6, r2]
	ldrh r0, [r6, r3]
	lsls r2, r2, #0x10
	ands r0, r1
	lsrs r2, r2, #0x12
	lsrs r1, r1, #0x12
	ands r1, r2
	orrs r0, r1
	strh r0, [r6, r3]
	ldrh r0, [r6, r3]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x12
	bne _02003B3A
	subs r0, r3, #2
	ldrh r1, [r6, r0]
	movs r0, #3
	bics r1, r0
	subs r0, r3, #2
	strh r1, [r6, r0]
_02003B3A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02003B3C: .4byte 0x0000011A
_02003B40: .4byte 0xFFFFC000
	thumb_func_end FUN_0200398C

	thumb_func_start FUN_02003B44
FUN_02003B44: @ 0x02003B44
	movs r1, #0x46
	lsls r1, r1, #2
	ldrh r0, [r0, r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x12
	bx lr
	thumb_func_end FUN_02003B44

	thumb_func_start FUN_02003B50
FUN_02003B50: @ 0x02003B50
	push {r3, r4}
	ldr r3, _02003B6C @ =0x0000011A
	lsls r1, r1, #0x10
	ldrh r4, [r0, r3]
	ldr r2, _02003B70 @ =0xFFFF7FFF
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x1f
	ands r2, r4
	lsrs r1, r1, #0x10
	orrs r1, r2
	strh r1, [r0, r3]
	pop {r3, r4}
	bx lr
	nop
_02003B6C: .4byte 0x0000011A
_02003B70: .4byte 0xFFFF7FFF
	thumb_func_end FUN_02003B50

	thumb_func_start FUN_02003B74
FUN_02003B74: @ 0x02003B74
	push {r3, r4}
	movs r2, #0x46
	lsls r2, r2, #2
	ldrh r3, [r0, r2]
	movs r4, #3
	bics r3, r4
	movs r4, #1
	ands r1, r4
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	movs r1, #3
	ands r1, r4
	orrs r1, r3
	strh r1, [r0, r2]
	ldrh r3, [r0, r2]
	ldr r1, _02003BA0 @ =0xFFFF0003
	ands r3, r1
	ldr r1, _02003BA4 @ =0x0000FFFC
	orrs r1, r3
	strh r1, [r0, r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
_02003BA0: .4byte 0xFFFF0003
_02003BA4: .4byte 0x0000FFFC
	thumb_func_end FUN_02003B74

	thumb_func_start FUN_02003BA8
FUN_02003BA8: @ 0x02003BA8
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	movs r1, #2
	adds r4, r0, #0
	adds r0, r6, #0
	lsls r1, r1, #8
	bl FUN_0201AA8C
	movs r2, #2
	movs r1, #0
	lsls r2, r2, #8
	adds r5, r0, #0
	blx FUN_020E5B44
	movs r1, #2
	adds r0, r5, #0
	lsls r1, r1, #8
	blx FUN_020D2894
	movs r2, #1
	adds r0, r4, #0
	tst r0, r2
	beq _02003BE0
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #9
	blx FUN_020CFC6C
_02003BE0:
	movs r2, #2
	adds r0, r4, #0
	tst r0, r2
	beq _02003BF2
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #8
	blx FUN_020CFCC0
_02003BF2:
	movs r2, #4
	adds r0, r4, #0
	tst r0, r2
	beq _02003C04
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #7
	blx FUN_020CFD18
_02003C04:
	movs r2, #8
	adds r0, r4, #0
	tst r0, r2
	beq _02003C16
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #6
	blx FUN_020CFD70
_02003C16:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201AB80
	movs r1, #2
	adds r0, r6, #0
	lsls r1, r1, #0xc
	bl FUN_0201AA8C
	movs r2, #2
	movs r1, #0
	lsls r2, r2, #0xc
	adds r5, r0, #0
	blx FUN_020E5B44
	movs r1, #2
	adds r0, r5, #0
	lsls r1, r1, #0xc
	blx FUN_020D2894
	movs r0, #0x10
	tst r0, r4
	beq _02003C58
	blx FUN_020D0524
	movs r2, #2
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #0xc
	blx FUN_020D05C4
	blx FUN_020D0634
_02003C58:
	movs r0, #0x20
	tst r0, r4
	beq _02003C72
	blx FUN_020D0524
	movs r1, #2
	lsls r1, r1, #0xc
	adds r0, r5, #0
	adds r2, r1, #0
	blx FUN_020D05C4
	blx FUN_020D0634
_02003C72:
	movs r0, #0x40
	tst r0, r4
	beq _02003C8C
	blx FUN_020D0524
	movs r1, #1
	lsls r1, r1, #0xe
	adds r0, r5, #0
	lsrs r2, r1, #1
	blx FUN_020D05C4
	blx FUN_020D0634
_02003C8C:
	movs r0, #0x80
	tst r0, r4
	beq _02003CA8
	blx FUN_020D0524
	movs r1, #6
	movs r2, #2
	adds r0, r5, #0
	lsls r1, r1, #0xc
	lsls r2, r2, #0xc
	blx FUN_020D05C4
	blx FUN_020D0634
_02003CA8:
	movs r0, #1
	lsls r0, r0, #8
	tst r0, r4
	beq _02003CC4
	blx FUN_020D0774
	movs r2, #2
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #0xc
	blx FUN_020D078C
	blx FUN_020D07F0
_02003CC4:
	movs r0, #2
	lsls r0, r0, #8
	tst r0, r4
	beq _02003CE0
	blx FUN_020D0774
	movs r1, #2
	lsls r1, r1, #0xc
	adds r0, r5, #0
	adds r2, r1, #0
	blx FUN_020D078C
	blx FUN_020D07F0
_02003CE0:
	movs r0, #1
	lsls r0, r0, #0xa
	tst r0, r4
	beq _02003CFC
	blx FUN_020D0774
	movs r1, #1
	lsls r1, r1, #0xe
	adds r0, r5, #0
	lsrs r2, r1, #1
	blx FUN_020D078C
	blx FUN_020D07F0
_02003CFC:
	movs r0, #2
	lsls r0, r0, #0xa
	tst r0, r4
	beq _02003D1A
	blx FUN_020D0774
	movs r1, #6
	movs r2, #2
	adds r0, r5, #0
	lsls r1, r1, #0xc
	lsls r2, r2, #0xc
	blx FUN_020D078C
	blx FUN_020D07F0
_02003D1A:
	movs r0, #1
	lsls r0, r0, #0xc
	tst r0, r4
	beq _02003D36
	blx FUN_020D067C
	movs r2, #2
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #0xc
	blx FUN_020D06C4
	blx FUN_020D0730
_02003D36:
	movs r0, #2
	lsls r0, r0, #0xc
	tst r0, r4
	beq _02003D52
	blx FUN_020D0830
	movs r2, #2
	adds r0, r5, #0
	movs r1, #0
	lsls r2, r2, #0xc
	blx FUN_020D0848
	blx FUN_020D08AC
_02003D52:
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201AB80
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02003BA8

	thumb_func_start FUN_02003D5C
FUN_02003D5C: @ 0x02003D5C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	str r3, [sp]
	movs r0, #0x14
	adds r4, r1, #0
	muls r4, r0, r4
	add r0, sp, #0x10
	ldrh r0, [r0, #0x14]
	adds r7, r2, #0
	ldr r5, [sp, #0x20]
	str r0, [sp, #4]
	lsls r1, r0, #1
	adds r0, r6, r4
	ldr r0, [r0, #8]
	cmp r1, r0
	bls _02003D82
	bl FUN_0202551C
_02003D82:
	subs r0, r7, #1
	cmp r0, #1
	bhi _02003D9A
	ldr r2, [r6, r4]
	lsls r1, r5, #1
	adds r1, r2, r1
	ldr r2, [sp, #4]
	ldr r0, [sp]
	subs r2, r2, r5
	lsls r2, r2, #1
	blx FUN_020D4790
_02003D9A:
	cmp r7, #0
	beq _02003DA2
	cmp r7, #2
	bne _02003DB6
_02003DA2:
	adds r1, r6, r4
	ldr r2, [r1, #4]
	lsls r1, r5, #1
	adds r1, r2, r1
	ldr r2, [sp, #4]
	ldr r0, [sp]
	subs r2, r2, r5
	lsls r2, r2, #1
	blx FUN_020D4790
_02003DB6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02003D5C

	thumb_func_start FUN_02003DBC
FUN_02003DBC: @ 0x02003DBC
	push {r3, lr}
	cmp r2, #1
	bne _02003DCE
	movs r2, #0x14
	muls r2, r1, r2
	ldr r1, [r0, r2]
	lsls r0, r3, #1
	ldrh r0, [r1, r0]
	pop {r3, pc}
_02003DCE:
	cmp r2, #0
	bne _02003DE0
	movs r2, #0x14
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r1, [r0, #4]
	lsls r0, r3, #1
	ldrh r0, [r1, r0]
	pop {r3, pc}
_02003DE0:
	bl FUN_0202551C
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_02003DBC

	thumb_func_start FUN_02003DE8
FUN_02003DE8: @ 0x02003DE8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	add r0, sp, #0x10
	ldrh r0, [r0, #0x10]
	str r1, [sp, #4]
	adds r7, r2, #0
	lsls r1, r0, #0x1b
	lsrs r1, r1, #0x1b
	mov ip, r1
	lsls r1, r0, #0x16
	lsls r0, r0, #0x11
	lsrs r1, r1, #0x1b
	lsrs r0, r0, #0x1b
	movs r2, #0
	mov lr, r1
	str r0, [sp, #8]
	cmp r7, #0
	bls _02003E56
_02003E0E:
	ldr r0, [sp]
	lsls r6, r2, #1
	ldrh r4, [r0, r6]
	lsls r0, r4, #0x1b
	lsrs r1, r0, #0x1b
	lsls r0, r4, #0x16
	lsls r4, r4, #0x11
	lsrs r5, r4, #0x1b
	ldr r4, [sp, #8]
	lsrs r0, r0, #0x1b
	subs r4, r4, r5
	muls r4, r3, r4
	asrs r4, r4, #4
	adds r4, r5, r4
	lsls r5, r4, #0xa
	mov r4, ip
	subs r4, r4, r1
	muls r4, r3, r4
	asrs r4, r4, #4
	adds r1, r1, r4
	mov r4, lr
	subs r4, r4, r0
	muls r4, r3, r4
	asrs r4, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #5
	orrs r0, r1
	adds r1, r5, #0
	orrs r1, r0
	ldr r0, [sp, #4]
	strh r1, [r0, r6]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, r7
	blo _02003E0E
_02003E56:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02003DE8

	thumb_func_start FUN_02003E5C
FUN_02003E5C: @ 0x02003E5C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r2, #0
	adds r5, r0, #0
	movs r2, #0x14
	adds r6, r1, #0
	muls r6, r2, r6
	str r3, [sp, #4]
	ldr r1, [r5, r6]
	movs r0, #0
	adds r4, r5, r6
	cmp r1, #0
	beq _02003E7E
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _02003E7E
	movs r0, #1
_02003E7E:
	cmp r0, #0
	bne _02003E86
	bl FUN_0202551C
_02003E86:
	add r3, sp, #0x10
	ldrh r0, [r3, #0x14]
	adds r2, r5, r6
	lsls r1, r7, #1
	str r0, [sp]
	ldr r0, [r4]
	ldr r2, [r2, #4]
	adds r0, r0, r1
	adds r1, r2, r1
	ldrb r3, [r3, #0x10]
	ldr r2, [sp, #4]
	bl FUN_02003DE8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02003E5C

	thumb_func_start FUN_02003EA4
FUN_02003EA4: @ 0x02003EA4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r3, [sp, #8]
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r0, [sp, #0x20]
	adds r5, r2, #0
	movs r1, #0x14
	adds r2, r7, #0
	str r0, [sp, #0x20]
	muls r2, r1, r2
	movs r4, #0
	ldr r1, [r6, r2]
	adds r0, r4, #0
	cmp r1, #0
	beq _02003ECE
	adds r1, r6, r2
	ldr r1, [r1, #4]
	cmp r1, #0
	beq _02003ECE
	movs r0, #1
_02003ECE:
	cmp r0, #0
	bne _02003ED6
	bl FUN_0202551C
_02003ED6:
	cmp r5, #0
	beq _02003F00
_02003EDA:
	movs r0, #1
	tst r0, r5
	beq _02003EF6
	ldr r0, [sp, #8]
	lsls r2, r4, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x20]
	adds r1, r7, #0
	str r0, [sp, #4]
	adds r0, r6, #0
	lsrs r2, r2, #0x10
	movs r3, #0x10
	bl FUN_02003E5C
_02003EF6:
	lsls r0, r5, #0xf
	lsrs r5, r0, #0x10
	adds r4, #0x10
	cmp r5, #0
	bne _02003EDA
_02003F00:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02003EA4

	thumb_func_start FUN_02003F04
FUN_02003F04: @ 0x02003F04
	push {r4, r5, r6, r7}
	movs r7, #0
	cmp r1, #0
	ble _02003F46
	movs r2, #0x97
_02003F0E:
	ldrh r6, [r0]
	movs r3, #0x1f
	adds r7, r7, #1
	asrs r4, r6, #0xa
	ands r4, r3
	adds r5, r4, #0
	movs r3, #0x1d
	muls r5, r3, r5
	movs r3, #0x1f
	ands r3, r6
	movs r4, #0x4c
	muls r4, r3, r4
	asrs r6, r6, #5
	movs r3, #0x1f
	ands r3, r6
	adds r6, r3, #0
	muls r6, r2, r6
	adds r3, r4, r6
	adds r3, r5, r3
	asrs r5, r3, #8
	lsls r4, r5, #0xa
	lsls r3, r5, #5
	orrs r3, r4
	orrs r3, r5
	strh r3, [r0]
	adds r0, r0, #2
	cmp r7, r1
	blt _02003F0E
_02003F46:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02003F04

	thumb_func_start FUN_02003F4C
FUN_02003F4C: @ 0x02003F4C
	push {r3, r4, r5, r6, r7, lr}
	mov lr, r1
	mov ip, r2
	adds r7, r3, #0
	movs r4, #0
	cmp r1, #0
	ble _02003FC4
	ldr r6, [sp, #0x18]
_02003F5C:
	ldrh r3, [r0]
	movs r1, #0x1f
	adds r2, r3, #0
	asrs r5, r3, #0xa
	ands r2, r1
	ands r5, r1
	movs r1, #0x1d
	muls r1, r5, r1
	movs r5, #0x4c
	muls r5, r2, r5
	asrs r3, r3, #5
	movs r2, #0x1f
	ands r3, r2
	movs r2, #0x97
	muls r2, r3, r2
	adds r2, r5, r2
	adds r1, r1, r2
	asrs r3, r1, #8
	mov r1, ip
	adds r2, r1, #0
	muls r2, r3, r2
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	asrs r2, r1, #8
	adds r1, r7, #0
	muls r1, r3, r1
	muls r3, r6, r3
	lsls r1, r1, #0x10
	lsls r3, r3, #0x10
	lsrs r1, r1, #0x10
	lsrs r3, r3, #0x10
	asrs r1, r1, #8
	asrs r3, r3, #8
	cmp r2, #0x1f
	ble _02003FA4
	movs r2, #0x1f
_02003FA4:
	cmp r1, #0x1f
	ble _02003FAA
	movs r1, #0x1f
_02003FAA:
	cmp r3, #0x1f
	ble _02003FB0
	movs r3, #0x1f
_02003FB0:
	lsls r3, r3, #0xa
	lsls r1, r1, #5
	orrs r1, r3
	orrs r1, r2
	strh r1, [r0]
	adds r4, r4, #1
	mov r1, lr
	adds r0, r0, #2
	cmp r4, r1
	blt _02003F5C
_02003FC4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02003F4C

	thumb_func_start FUN_02003FC8
FUN_02003FC8: @ 0x02003FC8
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	add r2, sp, #4
	bl FUN_020079F4
	adds r4, r0, #0
	bne _02003FE0
	bl FUN_0202551C
_02003FE0:
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _02003FEC
	ldr r0, [sp, #4]
	ldr r0, [r0, #8]
	str r0, [sp, #0x1c]
_02003FEC:
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x24]
	str r0, [sp]
	ldr r0, [sp, #4]
	ldr r3, [sp, #0x28]
	ldr r0, [r0, #0xc]
	movs r1, #0x10
	bl FUN_02003F4C
	ldr r0, [sp, #0x1c]
	add r3, sp, #8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r1, [sp, #4]
	ldrh r3, [r3, #0x18]
	ldr r1, [r1, #0xc]
	ldr r2, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0200316C
	adds r0, r4, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02003FC8

	thumb_func_start FUN_02004020
FUN_02004020: @ 0x02004020
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x28]
	str r1, [sp, #4]
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x2c]
	adds r7, r2, #0
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x30]
	adds r6, r3, #0
	str r0, [sp, #0x30]
	movs r0, #0
	str r0, [sp, #0xc]
_0200403C:
	ldr r0, [sp]
	movs r1, #0x1f
	ldrh r0, [r0]
	asrs r2, r0, #5
	adds r4, r0, #0
	adds r5, r2, #0
	ands r4, r1
	ands r5, r1
	asrs r1, r0, #0xa
	movs r0, #0x1f
	ands r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #0x28]
	adds r1, r7, #0
	subs r0, r0, r4
	muls r0, r6, r0
	blx FUN_020F2998
	adds r4, r4, r0
	ldr r0, [sp, #0x2c]
	adds r1, r7, #0
	subs r0, r0, r5
	muls r0, r6, r0
	blx FUN_020F2998
	adds r5, r5, r0
	ldr r1, [sp, #0x30]
	ldr r0, [sp, #8]
	subs r0, r1, r0
	muls r0, r6, r0
	adds r1, r7, #0
	blx FUN_020F2998
	ldr r1, [sp, #8]
	adds r0, r1, r0
	lsls r1, r0, #0xa
	lsls r0, r5, #5
	orrs r0, r1
	adds r1, r4, #0
	orrs r1, r0
	ldr r0, [sp, #4]
	strh r1, [r0]
	ldr r0, [sp]
	adds r0, r0, #2
	str r0, [sp]
	ldr r0, [sp, #4]
	adds r0, r0, #2
	str r0, [sp, #4]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, #0x10
	blt _0200403C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02004020

	thumb_func_start FUN_020040AC
FUN_020040AC: @ 0x020040AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r7, r2, #0
	movs r2, #0x46
	adds r5, r0, #0
	ldr r0, [sp, #0x38]
	lsls r2, r2, #2
	str r1, [sp, #0xc]
	str r0, [sp, #0x38]
	ldrh r1, [r5, r2]
	movs r0, #3
	str r3, [sp, #0x10]
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	strh r0, [r5, r2]
	adds r0, r2, #2
	ldr r1, [sp, #0xc]
	ldrh r0, [r5, r0]
	ldr r3, _02004170 @ =0xFFFFC000
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsrs r1, r3, #0x12
	ands r0, r3
	ands r1, r4
	orrs r1, r0
	adds r0, r2, #2
	strh r1, [r5, r0]
	add r0, sp, #0x28
	ldrh r2, [r0, #0x14]
	movs r1, #0x1f
	adds r0, r2, #0
	ands r0, r1
	str r0, [sp, #0x1c]
	asrs r0, r2, #5
	ands r0, r1
	str r0, [sp, #0x18]
	asrs r0, r2, #0xa
	ands r0, r1
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x20]
_02004100:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0200415E
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x20]
	asrs r1, r0
	movs r0, #1
	tst r1, r0
	beq _0200415E
	movs r6, #0
	strh r7, [r5, #0xc]
	lsls r0, r0, #9
	str r0, [r5, #8]
	adds r4, r6, #0
_0200411C:
	adds r1, r7, #0
	asrs r1, r6
	movs r0, #1
	tst r0, r1
	beq _02004146
	ldr r0, [sp, #0x1c]
	lsls r1, r4, #1
	str r0, [sp]
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x38]
	str r0, [sp, #4]
	ldr r0, [sp, #0x14]
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r2, [r5, #4]
	adds r0, r0, r1
	adds r1, r2, r1
	ldr r2, [sp, #0x10]
	bl FUN_02004020
	b _02004156
_02004146:
	ldr r0, [r5]
	lsls r1, r4, #1
	ldr r2, [r5, #4]
	adds r0, r0, r1
	adds r1, r2, r1
	movs r2, #0x20
	blx FUN_020D48B4
_02004156:
	adds r6, r6, #1
	adds r4, #0x10
	cmp r6, #0x10
	blt _0200411C
_0200415E:
	ldr r0, [sp, #0x20]
	adds r5, #0x14
	adds r0, r0, #1
	str r0, [sp, #0x20]
	cmp r0, #0xe
	blt _02004100
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_02004170: .4byte 0xFFFFC000
	thumb_func_end FUN_020040AC

	thumb_func_start FUN_02004174
FUN_02004174: @ 0x02004174
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	bl FUN_020043F8
	adds r4, r0, #0
	blx FUN_020C78D0
	adds r0, r4, #0
	bl FUN_02004858
	adds r0, r4, #0
	bl FUN_020048C8
	adds r0, r4, #0
	ldr r1, _020041F8 @ =0x000BEAE0
	adds r0, #0x98
	blx FUN_020C9A0C
	adds r1, r4, #0
	adds r1, #0x94
	str r0, [r1]
	adds r2, r4, #0
	adds r2, #0x94
	ldr r1, _020041FC @ =0x0210E980
	ldr r2, [r2]
	adds r0, r4, #0
	movs r3, #0
	blx FUN_020C9300
	adds r0, r4, #0
	adds r0, #0x94
	ldr r0, [r0]
	blx FUN_020CA848
	adds r0, r4, #0
	adds r0, #0x94
	bl FUN_0200498C
	adds r0, r4, #0
	bl FUN_0200487C
	adds r0, r4, #0
	adds r0, #0x94
	ldr r0, [r0]
	blx FUN_020C9CD8
	ldr r1, _02004200 @ =0x0211194C
	str r0, [r1, #8]
	bl FUN_0200472C
	adds r0, r4, #0
	bl FUN_02004898
	ldr r0, _02004200 @ =0x0211194C
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, _02004204 @ =0x000BEC3C
	str r5, [r4, r0]
	ldrh r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	bl FUN_0200597C
	pop {r4, r5, r6, pc}
	nop
_020041F8: .4byte 0x000BEAE0
_020041FC: .4byte 0x0210E980
_02004200: .4byte 0x0211194C
_02004204: .4byte 0x000BEC3C
	thumb_func_end FUN_02004174

	thumb_func_start FUN_02004208
FUN_02004208: @ 0x02004208
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	bl FUN_020043F8
	adds r4, r0, #0
	movs r0, #0x12
	bl FUN_02004400
	movs r0, #0x20
	bl FUN_02004400
	bl FUN_020043CC
	cmp r0, #0
	bne _02004236
	ldr r0, _020042E4 @ =0x000BEBF0
	ldr r1, [r4, r0]
	cmp r1, #0
	ble _02004232
	subs r1, r1, #1
	str r1, [r4, r0]
_02004232:
	bl FUN_02004300
_02004236:
	blx FUN_020C79B4
	ldr r0, _020042E8 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #2
	lsls r0, r0, #0xc
	tst r0, r1
	beq _02004264
	ldr r6, _020042EC @ =0x000BEB94
	movs r5, #0
	add r7, sp, #8
_0200424C:
	adds r0, r4, r6
	adds r1, r5, #0
	adds r2, r7, #0
	blx FUN_020C83C0
	adds r0, r5, #0
	add r1, sp, #0x24
	blx FUN_020C7A94
	adds r5, r5, #1
	cmp r5, #0x10
	blt _0200424C
_02004264:
	bl FUN_02006C8C
	movs r6, #0
	adds r5, r4, #0
	adds r7, r4, #0
_0200426E:
	ldr r1, _020042F0 @ =0x000BEC74
	adds r0, r4, r6
	ldrb r1, [r0, r1]
	cmp r1, #0
	beq _020042AA
	ldr r1, _020042F0 @ =0x000BEC74
	ldrb r1, [r0, r1]
	subs r2, r1, #1
	ldr r1, _020042F0 @ =0x000BEC74
	strb r2, [r0, r1]
	ldrb r0, [r0, r1]
	cmp r0, #0
	bne _020042AA
	adds r0, r1, #0
	subs r0, #0xc
	ldr r0, [r5, r0]
	ldr r2, _020042F4 @ =0x000BEC58
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r1, #0
	subs r1, r1, #4
	ldr r3, _020042F8 @ =0x000BEC60
	subs r0, #0x24
	ldrh r1, [r7, r1]
	ldr r0, [r5, r0]
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	bl FUN_020063A4
_020042AA:
	adds r6, r6, #1
	adds r5, r5, #4
	adds r7, r7, #2
	cmp r6, #2
	blt _0200426E
	ldr r0, _020042FC @ =0x000BEC80
	ldr r0, [r4, r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _020042DA
	bl FUN_02004924
	cmp r0, #0
	bne _020042DA
	ldr r1, _020042FC @ =0x000BEC80
	movs r0, #1
	ldr r2, [r4, r1]
	adds r3, r2, #0
	ands r3, r0
	lsrs r0, r2, #1
	adds r0, r0, #1
	lsls r0, r0, #1
	orrs r0, r3
	str r0, [r4, r1]
_020042DA:
	blx FUN_020C7958
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020042E4: .4byte 0x000BEBF0
_020042E8: .4byte 0x021D110C
_020042EC: .4byte 0x000BEB94
_020042F0: .4byte 0x000BEC74
_020042F4: .4byte 0x000BEC58
_020042F8: .4byte 0x000BEC60
_020042FC: .4byte 0x000BEC80
	thumb_func_end FUN_02004208

	thumb_func_start FUN_02004300
FUN_02004300: @ 0x02004300
	push {r4, lr}
	bl FUN_020043F8
	adds r4, r0, #0
	ldr r0, _020043A4 @ =0x0211194C
	ldr r0, [r0]
	cmp r0, #6
	bhi _020043A0
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0200431C: @ jump table
	.2byte _020043A0 - _0200431C - 2 @ case 0
	.2byte _0200432A - _0200431C - 2 @ case 1
	.2byte _020043A0 - _0200431C - 2 @ case 2
	.2byte _02004332 - _0200431C - 2 @ case 3
	.2byte _02004342 - _0200431C - 2 @ case 4
	.2byte _02004352 - _0200431C - 2 @ case 5
	.2byte _02004374 - _0200431C - 2 @ case 6
_0200432A:
	movs r0, #2
	bl FUN_020043B0
	pop {r4, pc}
_02004332:
	bl FUN_02005F88
	cmp r0, #0
	bne _020043A0
	movs r0, #2
	bl FUN_020043B0
	pop {r4, pc}
_02004342:
	bl FUN_02005F88
	cmp r0, #0
	bne _020043A0
	movs r0, #2
	bl FUN_020043B0
	pop {r4, pc}
_02004352:
	bl FUN_02005F88
	cmp r0, #0
	bne _020043A0
	bl FUN_020059B0
	cmp r0, #0
	bne _020043A0
	bl FUN_020048F0
	ldr r0, _020043A8 @ =0x000BEBFE
	ldrh r0, [r4, r0]
	cmp r0, #0
	beq _020043A0
	bl FUN_02005D48
	pop {r4, pc}
_02004374:
	bl FUN_02005F88
	cmp r0, #0
	bne _020043A0
	bl FUN_020059B0
	cmp r0, #0
	bne _020043A0
	bl FUN_020048F0
	ldr r0, _020043A8 @ =0x000BEBFE
	ldrh r0, [r4, r0]
	cmp r0, #0
	beq _02004394
	bl FUN_02005D48
_02004394:
	ldr r1, _020043AC @ =0x000BEBF8
	movs r0, #0x7f
	ldr r1, [r4, r1]
	movs r2, #0
	bl FUN_02005F10
_020043A0:
	pop {r4, pc}
	nop
_020043A4: .4byte 0x0211194C
_020043A8: .4byte 0x000BEBFE
_020043AC: .4byte 0x000BEBF8
	thumb_func_end FUN_02004300

	thumb_func_start FUN_020043B0
FUN_020043B0: @ 0x020043B0
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	ldr r1, _020043C4 @ =0x000BEBEC
	movs r2, #0
	strh r2, [r0, r1]
	ldr r0, _020043C8 @ =0x0211194C
	str r4, [r0]
	pop {r4, pc}
	.align 2, 0
_020043C4: .4byte 0x000BEBEC
_020043C8: .4byte 0x0211194C
	thumb_func_end FUN_020043B0

	thumb_func_start FUN_020043CC
FUN_020043CC: @ 0x020043CC
	push {r4, lr}
	bl FUN_020043F8
	adds r4, r0, #0
	movs r0, #2
	bl FUN_020054C0
	cmp r0, #0
	beq _020043E2
	movs r0, #1
	pop {r4, pc}
_020043E2:
	ldr r0, _020043F4 @ =0x000BEC02
	ldrh r0, [r4, r0]
	cmp r0, #0
	beq _020043EE
	movs r0, #1
	pop {r4, pc}
_020043EE:
	movs r0, #0
	pop {r4, pc}
	nop
_020043F4: .4byte 0x000BEC02
	thumb_func_end FUN_020043CC

	thumb_func_start FUN_020043F8
FUN_020043F8: @ 0x020043F8
	ldr r0, _020043FC @ =0x02111958
	bx lr
	.align 2, 0
_020043FC: .4byte 0x02111958
	thumb_func_end FUN_020043F8

	thumb_func_start FUN_02004400
FUN_02004400: @ 0x02004400
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	cmp r4, #0x3a
	bls _0200440E
	b _020045F2
_0200440E:
	adds r1, r4, r4
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0200441A: @ jump table
	.2byte _0200449C - _0200441A - 2 @ case 0
	.2byte _020044A2 - _0200441A - 2 @ case 1
	.2byte _020044A8 - _0200441A - 2 @ case 2
	.2byte _020044AE - _0200441A - 2 @ case 3
	.2byte _020044B4 - _0200441A - 2 @ case 4
	.2byte _02004490 - _0200441A - 2 @ case 5
	.2byte _02004496 - _0200441A - 2 @ case 6
	.2byte _020044BA - _0200441A - 2 @ case 7
	.2byte _020044C0 - _0200441A - 2 @ case 8
	.2byte _020044C6 - _0200441A - 2 @ case 9
	.2byte _020044CC - _0200441A - 2 @ case 10
	.2byte _020044D2 - _0200441A - 2 @ case 11
	.2byte _020044D8 - _0200441A - 2 @ case 12
	.2byte _020044DE - _0200441A - 2 @ case 13
	.2byte _020044E4 - _0200441A - 2 @ case 14
	.2byte _020044EA - _0200441A - 2 @ case 15
	.2byte _020044F0 - _0200441A - 2 @ case 16
	.2byte _020044F6 - _0200441A - 2 @ case 17
	.2byte _020044FC - _0200441A - 2 @ case 18
	.2byte _02004502 - _0200441A - 2 @ case 19
	.2byte _02004508 - _0200441A - 2 @ case 20
	.2byte _0200450E - _0200441A - 2 @ case 21
	.2byte _02004514 - _0200441A - 2 @ case 22
	.2byte _0200451A - _0200441A - 2 @ case 23
	.2byte _02004520 - _0200441A - 2 @ case 24
	.2byte _02004526 - _0200441A - 2 @ case 25
	.2byte _0200452C - _0200441A - 2 @ case 26
	.2byte _02004532 - _0200441A - 2 @ case 27
	.2byte _02004538 - _0200441A - 2 @ case 28
	.2byte _0200453E - _0200441A - 2 @ case 29
	.2byte _02004544 - _0200441A - 2 @ case 30
	.2byte _0200454A - _0200441A - 2 @ case 31
	.2byte _02004550 - _0200441A - 2 @ case 32
	.2byte _02004556 - _0200441A - 2 @ case 33
	.2byte _0200455C - _0200441A - 2 @ case 34
	.2byte _02004562 - _0200441A - 2 @ case 35
	.2byte _02004568 - _0200441A - 2 @ case 36
	.2byte _0200456E - _0200441A - 2 @ case 37
	.2byte _02004574 - _0200441A - 2 @ case 38
	.2byte _0200457A - _0200441A - 2 @ case 39
	.2byte _02004580 - _0200441A - 2 @ case 40
	.2byte _02004586 - _0200441A - 2 @ case 41
	.2byte _0200458C - _0200441A - 2 @ case 42
	.2byte _02004592 - _0200441A - 2 @ case 43
	.2byte _02004598 - _0200441A - 2 @ case 44
	.2byte _0200459E - _0200441A - 2 @ case 45
	.2byte _020045A4 - _0200441A - 2 @ case 46
	.2byte _020045AA - _0200441A - 2 @ case 47
	.2byte _020045B0 - _0200441A - 2 @ case 48
	.2byte _020045B6 - _0200441A - 2 @ case 49
	.2byte _020045BC - _0200441A - 2 @ case 50
	.2byte _020045C2 - _0200441A - 2 @ case 51
	.2byte _020045C8 - _0200441A - 2 @ case 52
	.2byte _020045CE - _0200441A - 2 @ case 53
	.2byte _020045D4 - _0200441A - 2 @ case 54
	.2byte _020045DA - _0200441A - 2 @ case 55
	.2byte _020045E0 - _0200441A - 2 @ case 56
	.2byte _020045E6 - _0200441A - 2 @ case 57
	.2byte _020045EC - _0200441A - 2 @ case 58
_02004490:
	ldr r1, _020045FC @ =0x000BEBEE
	adds r0, r0, r1
	pop {r4, pc}
_02004496:
	ldr r1, _02004600 @ =0x000BEBEF
	adds r0, r0, r1
	pop {r4, pc}
_0200449C:
	ldr r1, _02004604 @ =0x000BEB9C
	adds r0, r0, r1
	pop {r4, pc}
_020044A2:
	ldr r1, _02004608 @ =0x000BEBA0
	adds r0, r0, r1
	pop {r4, pc}
_020044A8:
	ldr r1, _0200460C @ =0x000BEBA4
	adds r0, r0, r1
	pop {r4, pc}
_020044AE:
	ldr r1, _02004610 @ =0x000BEBC0
	adds r0, r0, r1
	pop {r4, pc}
_020044B4:
	ldr r1, _02004614 @ =0x000BEBD0
	adds r0, r0, r1
	pop {r4, pc}
_020044BA:
	ldr r1, _02004618 @ =0x000BEBF0
	adds r0, r0, r1
	pop {r4, pc}
_020044C0:
	ldr r1, _0200461C @ =0x000BEBF4
	adds r0, r0, r1
	pop {r4, pc}
_020044C6:
	ldr r1, _02004620 @ =0x000BEBF8
	adds r0, r0, r1
	pop {r4, pc}
_020044CC:
	ldr r1, _02004624 @ =0x000BEBFC
	adds r0, r0, r1
	pop {r4, pc}
_020044D2:
	ldr r1, _02004628 @ =0x000BEBFE
	adds r0, r0, r1
	pop {r4, pc}
_020044D8:
	ldr r1, _0200462C @ =0x000BEC00
	adds r0, r0, r1
	pop {r4, pc}
_020044DE:
	ldr r1, _02004630 @ =0x000BEC01
	adds r0, r0, r1
	pop {r4, pc}
_020044E4:
	ldr r1, _02004634 @ =0x000BEC02
	adds r0, r0, r1
	pop {r4, pc}
_020044EA:
	ldr r1, _02004638 @ =0x000BEC04
	adds r0, r0, r1
	pop {r4, pc}
_020044F0:
	ldr r1, _0200463C @ =0x000BEC05
	adds r0, r0, r1
	pop {r4, pc}
_020044F6:
	ldr r1, _02004640 @ =0x000BEC06
	adds r0, r0, r1
	pop {r4, pc}
_020044FC:
	ldr r1, _02004644 @ =0x000BEC07
	adds r0, r0, r1
	pop {r4, pc}
_02004502:
	ldr r1, _02004648 @ =0x000BEC08
	adds r0, r0, r1
	pop {r4, pc}
_02004508:
	ldr r1, _0200464C @ =0x000BEC09
	adds r0, r0, r1
	pop {r4, pc}
_0200450E:
	ldr r1, _02004650 @ =0x000BEC0A
	adds r0, r0, r1
	pop {r4, pc}
_02004514:
	ldr r1, _02004654 @ =0x000BEC0B
	adds r0, r0, r1
	pop {r4, pc}
_0200451A:
	ldr r1, _02004658 @ =0x000BEC0C
	adds r0, r0, r1
	pop {r4, pc}
_02004520:
	ldr r1, _0200465C @ =0x000BEC10
	adds r0, r0, r1
	pop {r4, pc}
_02004526:
	ldr r1, _02004660 @ =0x000BEC14
	adds r0, r0, r1
	pop {r4, pc}
_0200452C:
	ldr r1, _02004664 @ =0x000BEC18
	adds r0, r0, r1
	pop {r4, pc}
_02004532:
	ldr r1, _02004668 @ =0x000BEC1C
	adds r0, r0, r1
	pop {r4, pc}
_02004538:
	ldr r1, _0200466C @ =0x000BEC20
	adds r0, r0, r1
	pop {r4, pc}
_0200453E:
	ldr r1, _02004670 @ =0x000BEC24
	adds r0, r0, r1
	pop {r4, pc}
_02004544:
	ldr r1, _02004674 @ =0x000BEC28
	adds r0, r0, r1
	pop {r4, pc}
_0200454A:
	ldr r1, _02004678 @ =0x000BEC29
	adds r0, r0, r1
	pop {r4, pc}
_02004550:
	ldr r1, _0200467C @ =0x000BEC2A
	adds r0, r0, r1
	pop {r4, pc}
_02004556:
	ldr r1, _02004680 @ =0x000BEC2C
	adds r0, r0, r1
	pop {r4, pc}
_0200455C:
	ldr r1, _02004684 @ =0x000BEC30
	adds r0, r0, r1
	pop {r4, pc}
_02004562:
	ldr r1, _02004688 @ =0x000BEC38
	adds r0, r0, r1
	pop {r4, pc}
_02004568:
	ldr r1, _0200468C @ =0x000BEC3C
	adds r0, r0, r1
	pop {r4, pc}
_0200456E:
	ldr r1, _02004690 @ =0x000BEC40
	adds r0, r0, r1
	pop {r4, pc}
_02004574:
	ldr r1, _02004694 @ =0x000BEC44
	adds r0, r0, r1
	pop {r4, pc}
_0200457A:
	ldr r1, _02004698 @ =0x000BEC48
	adds r0, r0, r1
	pop {r4, pc}
_02004580:
	ldr r1, _0200469C @ =0x000BEC4C
	adds r0, r0, r1
	pop {r4, pc}
_02004586:
	ldr r1, _020046A0 @ =0x000BEC50
	adds r0, r0, r1
	pop {r4, pc}
_0200458C:
	ldr r1, _020046A4 @ =0x000BEC58
	adds r0, r0, r1
	pop {r4, pc}
_02004592:
	ldr r1, _020046A8 @ =0x000BEC60
	adds r0, r0, r1
	pop {r4, pc}
_02004598:
	ldr r1, _020046AC @ =0x000BEC68
	adds r0, r0, r1
	pop {r4, pc}
_0200459E:
	ldr r1, _020046B0 @ =0x000BEC70
	adds r0, r0, r1
	pop {r4, pc}
_020045A4:
	ldr r1, _020046B4 @ =0x000BEC74
	adds r0, r0, r1
	pop {r4, pc}
_020045AA:
	ldr r1, _020046B8 @ =0x000BEC54
	adds r0, r0, r1
	pop {r4, pc}
_020045B0:
	ldr r1, _020046BC @ =0x000BEC5C
	adds r0, r0, r1
	pop {r4, pc}
_020045B6:
	ldr r1, _020046C0 @ =0x000BEC64
	adds r0, r0, r1
	pop {r4, pc}
_020045BC:
	ldr r1, _020046C4 @ =0x000BEC6C
	adds r0, r0, r1
	pop {r4, pc}
_020045C2:
	ldr r1, _020046C8 @ =0x000BEC72
	adds r0, r0, r1
	pop {r4, pc}
_020045C8:
	ldr r1, _020046CC @ =0x000BEC75
	adds r0, r0, r1
	pop {r4, pc}
_020045CE:
	ldr r1, _020046D0 @ =0x000BEC76
	adds r0, r0, r1
	pop {r4, pc}
_020045D4:
	ldr r1, _020046D4 @ =0x000BEC77
	adds r0, r0, r1
	pop {r4, pc}
_020045DA:
	ldr r1, _020046D8 @ =0x000BEC78
	adds r0, r0, r1
	pop {r4, pc}
_020045E0:
	ldr r1, _020046DC @ =0x000BEC79
	adds r0, r0, r1
	pop {r4, pc}
_020045E6:
	ldr r1, _020046E0 @ =0x000BEC7A
	adds r0, r0, r1
	pop {r4, pc}
_020045EC:
	ldr r1, _020046E4 @ =0x000BEC7C
	adds r0, r0, r1
	pop {r4, pc}
_020045F2:
	bl FUN_0202551C
	movs r0, #0
	pop {r4, pc}
	nop
_020045FC: .4byte 0x000BEBEE
_02004600: .4byte 0x000BEBEF
_02004604: .4byte 0x000BEB9C
_02004608: .4byte 0x000BEBA0
_0200460C: .4byte 0x000BEBA4
_02004610: .4byte 0x000BEBC0
_02004614: .4byte 0x000BEBD0
_02004618: .4byte 0x000BEBF0
_0200461C: .4byte 0x000BEBF4
_02004620: .4byte 0x000BEBF8
_02004624: .4byte 0x000BEBFC
_02004628: .4byte 0x000BEBFE
_0200462C: .4byte 0x000BEC00
_02004630: .4byte 0x000BEC01
_02004634: .4byte 0x000BEC02
_02004638: .4byte 0x000BEC04
_0200463C: .4byte 0x000BEC05
_02004640: .4byte 0x000BEC06
_02004644: .4byte 0x000BEC07
_02004648: .4byte 0x000BEC08
_0200464C: .4byte 0x000BEC09
_02004650: .4byte 0x000BEC0A
_02004654: .4byte 0x000BEC0B
_02004658: .4byte 0x000BEC0C
_0200465C: .4byte 0x000BEC10
_02004660: .4byte 0x000BEC14
_02004664: .4byte 0x000BEC18
_02004668: .4byte 0x000BEC1C
_0200466C: .4byte 0x000BEC20
_02004670: .4byte 0x000BEC24
_02004674: .4byte 0x000BEC28
_02004678: .4byte 0x000BEC29
_0200467C: .4byte 0x000BEC2A
_02004680: .4byte 0x000BEC2C
_02004684: .4byte 0x000BEC30
_02004688: .4byte 0x000BEC38
_0200468C: .4byte 0x000BEC3C
_02004690: .4byte 0x000BEC40
_02004694: .4byte 0x000BEC44
_02004698: .4byte 0x000BEC48
_0200469C: .4byte 0x000BEC4C
_020046A0: .4byte 0x000BEC50
_020046A4: .4byte 0x000BEC58
_020046A8: .4byte 0x000BEC60
_020046AC: .4byte 0x000BEC68
_020046B0: .4byte 0x000BEC70
_020046B4: .4byte 0x000BEC74
_020046B8: .4byte 0x000BEC54
_020046BC: .4byte 0x000BEC5C
_020046C0: .4byte 0x000BEC64
_020046C4: .4byte 0x000BEC6C
_020046C8: .4byte 0x000BEC72
_020046CC: .4byte 0x000BEC75
_020046D0: .4byte 0x000BEC76
_020046D4: .4byte 0x000BEC77
_020046D8: .4byte 0x000BEC78
_020046DC: .4byte 0x000BEC79
_020046E0: .4byte 0x000BEC7A
_020046E4: .4byte 0x000BEC7C
	thumb_func_end FUN_02004400

	thumb_func_start FUN_020046E8
FUN_020046E8: @ 0x020046E8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	adds r0, #0x94
	ldr r0, [r0]
	blx FUN_020C9BB8
	adds r4, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r4, r0
	bne _02004706
	bl FUN_0202551C
_02004706:
	cmp r5, #0
	beq _0200470C
	str r4, [r5]
_0200470C:
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020046E8

	thumb_func_start FUN_02004714
FUN_02004714: @ 0x02004714
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	adds r0, #0x94
	ldr r0, [r0]
	adds r1, r4, #0
	blx FUN_020C9C04
	bl FUN_0200472C
	pop {r4, pc}
	thumb_func_end FUN_02004714

	thumb_func_start FUN_0200472C
FUN_0200472C: @ 0x0200472C
	push {r3, lr}
	bl FUN_020043F8
	adds r0, #0x94
	ldr r0, [r0]
	blx FUN_020C9CE8
	ldr r1, _02004740 @ =0x0211194C
	str r0, [r1, #8]
	pop {r3, pc}
	.align 2, 0
_02004740: .4byte 0x0211194C
	thumb_func_end FUN_0200472C

	thumb_func_start FUN_02004744
FUN_02004744: @ 0x02004744
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	adds r1, r0, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r4, #0
	blx FUN_020C9DAC
	adds r4, r0, #0
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004744

	thumb_func_start FUN_02004764
FUN_02004764: @ 0x02004764
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	adds r1, r0, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r4, #0
	blx FUN_020C9DC4
	adds r4, r0, #0
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004764

	thumb_func_start FUN_02004784
FUN_02004784: @ 0x02004784
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_020043F8
	adds r2, r0, #0
	adds r2, #0x94
	ldr r2, [r2]
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020C9E48
	adds r4, r0, #0
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02004784

	thumb_func_start FUN_020047A8
FUN_020047A8: @ 0x020047A8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	adds r1, r0, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r4, #0
	blx FUN_020C9E1C
	adds r4, r0, #0
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020047A8

	thumb_func_start FUN_020047C8
FUN_020047C8: @ 0x020047C8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	adds r1, r0, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r4, #0
	blx FUN_020C9DF0
	adds r4, r0, #0
	bl FUN_0200472C
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020047C8

	thumb_func_start FUN_020047E8
FUN_020047E8: @ 0x020047E8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	adds r4, r0, #0
	cmp r5, #9
	blt _020047FC
	bl FUN_0202551C
	movs r5, #0
_020047FC:
	ldr r0, _02004808 @ =0x000BEB78
	adds r1, r4, r0
	lsls r0, r5, #2
	adds r0, r1, r0
	pop {r3, r4, r5, pc}
	nop
_02004808: .4byte 0x000BEB78
	thumb_func_end FUN_020047E8

	thumb_func_start FUN_0200480C
FUN_0200480C: @ 0x0200480C
	push {r3, lr}
	cmp r0, #7
	bhi _0200484E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0200481E: @ jump table
	.2byte _02004832 - _0200481E - 2 @ case 0
	.2byte _0200482E - _0200481E - 2 @ case 1
	.2byte _02004836 - _0200481E - 2 @ case 2
	.2byte _0200483A - _0200481E - 2 @ case 3
	.2byte _0200483E - _0200481E - 2 @ case 4
	.2byte _02004842 - _0200481E - 2 @ case 5
	.2byte _02004846 - _0200481E - 2 @ case 6
	.2byte _0200484A - _0200481E - 2 @ case 7
_0200482E:
	movs r0, #0
	pop {r3, pc}
_02004832:
	movs r0, #1
	pop {r3, pc}
_02004836:
	movs r0, #2
	pop {r3, pc}
_0200483A:
	movs r0, #3
	pop {r3, pc}
_0200483E:
	movs r0, #4
	pop {r3, pc}
_02004842:
	movs r0, #5
	pop {r3, pc}
_02004846:
	movs r0, #6
	pop {r3, pc}
_0200484A:
	movs r0, #7
	pop {r3, pc}
_0200484E:
	bl FUN_0202551C
	movs r0, #3
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200480C

	thumb_func_start FUN_02004858
FUN_02004858: @ 0x02004858
	push {r4, lr}
	ldr r2, _02004874 @ =0x000BEC88
	movs r1, #0
	adds r4, r0, #0
	blx FUN_020E5B44
	ldr r0, _02004878 @ =0x000BEC0C
	movs r1, #0
_02004868:
	adds r1, r1, #1
	str r1, [r4, r0]
	adds r4, r4, #4
	cmp r1, #7
	blt _02004868
	pop {r4, pc}
	.align 2, 0
_02004874: .4byte 0x000BEC88
_02004878: .4byte 0x000BEC0C
	thumb_func_end FUN_02004858

	thumb_func_start FUN_0200487C
FUN_0200487C: @ 0x0200487C
	push {r3, r4, r5, lr}
	ldr r1, _02004894 @ =0x000BEB78
	movs r4, #0
	adds r5, r0, r1
_02004884:
	adds r0, r5, #0
	blx FUN_020C81C4
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #9
	blt _02004884
	pop {r3, r4, r5, pc}
	.align 2, 0
_02004894: .4byte 0x000BEB78
	thumb_func_end FUN_0200487C

	thumb_func_start FUN_02004898
FUN_02004898: @ 0x02004898
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _020048BC @ =0x000BEC0C
	adds r0, r4, r0
	bl FUN_020046E8
	movs r0, #0
	bl FUN_02004744
	ldr r0, _020048C0 @ =0x000002BD
	bl FUN_020047C8
	ldr r0, _020048C4 @ =0x000BEC10
	adds r0, r4, r0
	bl FUN_020046E8
	pop {r4, pc}
	nop
_020048BC: .4byte 0x000BEC0C
_020048C0: .4byte 0x000002BD
_020048C4: .4byte 0x000BEC10
	thumb_func_end FUN_02004898

	thumb_func_start FUN_020048C8
FUN_020048C8: @ 0x020048C8
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020DA830
	movs r0, #1
	blx FUN_020DB358
	movs r0, #2
	blx FUN_020DB39C
	ldr r1, _020048EC @ =0x000BEC80
	movs r0, #1
	ldr r2, [r4, r1]
	bics r2, r0
	movs r0, #1
	orrs r0, r2
	str r0, [r4, r1]
	pop {r4, pc}
	.align 2, 0
_020048EC: .4byte 0x000BEC80
	thumb_func_end FUN_020048C8

	thumb_func_start FUN_020048F0
FUN_020048F0: @ 0x020048F0
	push {r3, lr}
	movs r0, #7
	movs r1, #0
	blx FUN_020C8068
	movs r0, #7
	bl FUN_020047E8
	blx FUN_020C81D0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020048F0

	thumb_func_start FUN_02004908
FUN_02004908: @ 0x02004908
	push {r3, lr}
	movs r0, #1
	movs r1, #0
	blx FUN_020C8068
	movs r0, #0
	bl FUN_020047E8
	blx FUN_020C81D0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02004908

	thumb_func_start FUN_02004920
FUN_02004920: @ 0x02004920
	bx lr
	.align 2, 0
	thumb_func_end FUN_02004920

	thumb_func_start FUN_02004924
FUN_02004924: @ 0x02004924
	push {r3, lr}
	bl FUN_020043F8
	ldr r1, _0200493C @ =0x000BEC80
	ldr r0, [r0, r1]
	lsrs r0, r0, #1
	cmp r0, #0x5a
	bls _02004938
	movs r0, #1
	pop {r3, pc}
_02004938:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
_0200493C: .4byte 0x000BEC80
	thumb_func_end FUN_02004924

	thumb_func_start FUN_02004940
FUN_02004940: @ 0x02004940
	push {r3, lr}
	bl FUN_020043F8
	ldr r2, _02004954 @ =0x000BEC80
	movs r1, #1
	ldr r3, [r0, r2]
	ands r1, r3
	str r1, [r0, r2]
	pop {r3, pc}
	nop
_02004954: .4byte 0x000BEC80
	thumb_func_end FUN_02004940

	thumb_func_start FUN_02004958
FUN_02004958: @ 0x02004958
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	ldr r1, _02004968 @ =0x000BEC84
	str r4, [r0, r1]
	pop {r4, pc}
	nop
_02004968: .4byte 0x000BEC84
	thumb_func_end FUN_02004958

	thumb_func_start FUN_0200496C
FUN_0200496C: @ 0x0200496C
	push {r3, lr}
	bl FUN_020043F8
	ldr r1, _0200497C @ =0x000BEC84
	ldr r0, [r0, r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	.align 2, 0
_0200497C: .4byte 0x000BEC84
	thumb_func_end FUN_0200496C

	thumb_func_start FUN_02004980
FUN_02004980: @ 0x02004980
	push {r3, lr}
	bl FUN_02004908
	bl FUN_020048F0
	pop {r3, pc}
	thumb_func_end FUN_02004980

	thumb_func_start FUN_0200498C
FUN_0200498C: @ 0x0200498C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _020049C0 @ =0x021D05E4
	blx FUN_020C81C4
	ldr r1, _020049C4 @ =0x0000A7FE
	movs r0, #9
	blx FUN_020C7FAC
	movs r0, #9
	movs r1, #1
	blx FUN_020C7F8C
	ldr r1, [r4]
	ldr r2, _020049C8 @ =0x00002EE0
	movs r0, #9
	blx FUN_020C7FC4
	cmp r0, #1
	beq _020049B8
	bl FUN_0202551C
_020049B8:
	ldr r0, _020049CC @ =0x021D05E0
	movs r1, #0
	str r1, [r0]
	pop {r4, pc}
	.align 2, 0
_020049C0: .4byte 0x021D05E4
_020049C4: .4byte 0x0000A7FE
_020049C8: .4byte 0x00002EE0
_020049CC: .4byte 0x021D05E0
	thumb_func_end FUN_0200498C

	thumb_func_start FUN_020049D0
FUN_020049D0: @ 0x020049D0
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	bl FUN_02004980
	adds r0, r4, #0
	blx FUN_020C9644
	adds r2, r0, #0
	str r4, [sp]
	ldrh r2, [r2]
	ldr r0, _02004A00 @ =0x021D05E4
	movs r1, #9
	movs r3, #0x41
	blx FUN_020CA8E4
	cmp r0, #1
	beq _020049F6
	movs r4, #0
_020049F6:
	ldr r1, _02004A04 @ =0x021D05E0
	str r4, [r1]
	add sp, #4
	pop {r3, r4, pc}
	nop
_02004A00: .4byte 0x021D05E4
_02004A04: .4byte 0x021D05E0
	thumb_func_end FUN_020049D0

	thumb_func_start FUN_02004A08
FUN_02004A08: @ 0x02004A08
	push {r3, lr}
	adds r1, r0, #0
	movs r0, #9
	blx FUN_020C8068
	ldr r0, _02004A1C @ =0x021D05E0
	movs r1, #0
	str r1, [r0]
	pop {r3, pc}
	nop
_02004A1C: .4byte 0x021D05E0
	thumb_func_end FUN_02004A08

	thumb_func_start FUN_02004A20
FUN_02004A20: @ 0x02004A20
	ldr r0, _02004A28 @ =0x021D05E0
	ldr r0, [r0]
	bx lr
	nop
_02004A28: .4byte 0x021D05E0
	thumb_func_end FUN_02004A20

	thumb_func_start FUN_02004A2C
FUN_02004A2C: @ 0x02004A2C
	ldr r3, _02004A34 @ =FUN_020C816C
	adds r1, r0, #0
	movs r0, #9
	bx r3
	.align 2, 0
_02004A34: .4byte FUN_020C816C
	thumb_func_end FUN_02004A2C

	thumb_func_start FUN_02004A38
FUN_02004A38: @ 0x02004A38
	ldr r3, _02004A40 @ =FUN_020C81F0
	movs r0, #9
	bx r3
	nop
_02004A40: .4byte FUN_020C81F0
	thumb_func_end FUN_02004A38

	thumb_func_start FUN_02004A44
FUN_02004A44: @ 0x02004A44
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #5
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004A44

	thumb_func_start FUN_02004A54
FUN_02004A54: @ 0x02004A54
	push {r3, lr}
	movs r0, #5
	bl FUN_02004400
	ldrb r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02004A54

	thumb_func_start FUN_02004A60
FUN_02004A60: @ 0x02004A60
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0xa
	bl FUN_02004400
	adds r4, r0, #0
	ldr r0, _02004A8C @ =0x000004C1
	cmp r5, r0
	bls _02004A82
	adds r0, r5, #0
	bl FUN_02004AB8
	adds r0, r5, #0
	bl FUN_02005C98
	strh r0, [r4]
	b _02004A84
_02004A82:
	strh r5, [r4]
_02004A84:
	movs r0, #0
	bl FUN_02004A9C
	pop {r3, r4, r5, pc}
	.align 2, 0
_02004A8C: .4byte 0x000004C1
	thumb_func_end FUN_02004A60

	thumb_func_start FUN_02004A90
FUN_02004A90: @ 0x02004A90
	push {r3, lr}
	movs r0, #0xa
	bl FUN_02004400
	ldrh r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02004A90

	thumb_func_start FUN_02004A9C
FUN_02004A9C: @ 0x02004A9C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xb
	bl FUN_02004400
	strh r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004A9C

	thumb_func_start FUN_02004AAC
FUN_02004AAC: @ 0x02004AAC
	push {r3, lr}
	movs r0, #0xb
	bl FUN_02004400
	ldrh r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02004AAC

	thumb_func_start FUN_02004AB8
FUN_02004AB8: @ 0x02004AB8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x3a
	bl FUN_02004400
	strh r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004AB8

	thumb_func_start FUN_02004AC8
FUN_02004AC8: @ 0x02004AC8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x20
	bl FUN_02004400
	strh r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02004AC8

	thumb_func_start FUN_02004AD8
FUN_02004AD8: @ 0x02004AD8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x15
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0x16
	bl FUN_02004400
	cmp r5, #0x33
	bhs _02004AF6
	strb r5, [r4]
	movs r1, #0
	strb r1, [r0]
	pop {r3, r4, r5, pc}
_02004AF6:
	strb r5, [r0]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02004AD8

	thumb_func_start FUN_02004AFC
FUN_02004AFC: @ 0x02004AFC
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x15
	bl FUN_02004400
	movs r0, #0x16
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	thumb_func_end FUN_02004AFC

	thumb_func_start FUN_02004B10
FUN_02004B10: @ 0x02004B10
	push {r4, lr}
	movs r0, #0x16
	bl FUN_02004400
	adds r4, r0, #0
	bl FUN_02005318
	movs r0, #0
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02004B10

	thumb_func_start FUN_02004B24
FUN_02004B24: @ 0x02004B24
	push {r4, lr}
	cmp r0, #0x4b
	bls _02004B2C
	b _02004E42
_02004B2C:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02004B38: @ jump table
	.2byte _02004E42 - _02004B38 - 2 @ case 0
	.2byte _02004BD0 - _02004B38 - 2 @ case 1
	.2byte _02004C76 - _02004B38 - 2 @ case 2
	.2byte _02004C94 - _02004B38 - 2 @ case 3
	.2byte _02004C9E - _02004B38 - 2 @ case 4
	.2byte _02004CA8 - _02004B38 - 2 @ case 5
	.2byte _02004CBC - _02004B38 - 2 @ case 6
	.2byte _02004D32 - _02004B38 - 2 @ case 7
	.2byte _02004CC6 - _02004B38 - 2 @ case 8
	.2byte _02004BD0 - _02004B38 - 2 @ case 9
	.2byte _02004BD0 - _02004B38 - 2 @ case 10
	.2byte _02004CB2 - _02004B38 - 2 @ case 11
	.2byte _02004CD0 - _02004B38 - 2 @ case 12
	.2byte _02004C76 - _02004B38 - 2 @ case 13
	.2byte _02004C6C - _02004B38 - 2 @ case 14
	.2byte _02004CEA - _02004B38 - 2 @ case 15
	.2byte _02004CDA - _02004B38 - 2 @ case 16
	.2byte _02004BD0 - _02004B38 - 2 @ case 17
	.2byte _02004E42 - _02004B38 - 2 @ case 18
	.2byte _02004BDA - _02004B38 - 2 @ case 19
	.2byte _02004BD0 - _02004B38 - 2 @ case 20
	.2byte _02004C80 - _02004B38 - 2 @ case 21
	.2byte _02004C9E - _02004B38 - 2 @ case 22
	.2byte _02004BD0 - _02004B38 - 2 @ case 23
	.2byte _02004CF4 - _02004B38 - 2 @ case 24
	.2byte _02004D04 - _02004B38 - 2 @ case 25
	.2byte _02004E42 - _02004B38 - 2 @ case 26
	.2byte _02004E42 - _02004B38 - 2 @ case 27
	.2byte _02004E42 - _02004B38 - 2 @ case 28
	.2byte _02004E42 - _02004B38 - 2 @ case 29
	.2byte _02004E42 - _02004B38 - 2 @ case 30
	.2byte _02004E42 - _02004B38 - 2 @ case 31
	.2byte _02004E42 - _02004B38 - 2 @ case 32
	.2byte _02004E42 - _02004B38 - 2 @ case 33
	.2byte _02004E42 - _02004B38 - 2 @ case 34
	.2byte _02004E42 - _02004B38 - 2 @ case 35
	.2byte _02004E42 - _02004B38 - 2 @ case 36
	.2byte _02004E42 - _02004B38 - 2 @ case 37
	.2byte _02004E42 - _02004B38 - 2 @ case 38
	.2byte _02004E42 - _02004B38 - 2 @ case 39
	.2byte _02004E42 - _02004B38 - 2 @ case 40
	.2byte _02004E42 - _02004B38 - 2 @ case 41
	.2byte _02004E42 - _02004B38 - 2 @ case 42
	.2byte _02004E42 - _02004B38 - 2 @ case 43
	.2byte _02004E42 - _02004B38 - 2 @ case 44
	.2byte _02004E42 - _02004B38 - 2 @ case 45
	.2byte _02004E42 - _02004B38 - 2 @ case 46
	.2byte _02004E42 - _02004B38 - 2 @ case 47
	.2byte _02004E42 - _02004B38 - 2 @ case 48
	.2byte _02004E42 - _02004B38 - 2 @ case 49
	.2byte _02004E42 - _02004B38 - 2 @ case 50
	.2byte _02004D14 - _02004B38 - 2 @ case 51
	.2byte _02004D28 - _02004B38 - 2 @ case 52
	.2byte _02004D32 - _02004B38 - 2 @ case 53
	.2byte _02004D3C - _02004B38 - 2 @ case 54
	.2byte _02004D46 - _02004B38 - 2 @ case 55
	.2byte _02004D56 - _02004B38 - 2 @ case 56
	.2byte _02004D60 - _02004B38 - 2 @ case 57
	.2byte _02004D6A - _02004B38 - 2 @ case 58
	.2byte _02004D74 - _02004B38 - 2 @ case 59
	.2byte _02004D7E - _02004B38 - 2 @ case 60
	.2byte _02004D88 - _02004B38 - 2 @ case 61
	.2byte _02004D92 - _02004B38 - 2 @ case 62
	.2byte _02004D9C - _02004B38 - 2 @ case 63
	.2byte _02004D1E - _02004B38 - 2 @ case 64
	.2byte _02004D46 - _02004B38 - 2 @ case 65
	.2byte _02004DA6 - _02004B38 - 2 @ case 66
	.2byte _02004D28 - _02004B38 - 2 @ case 67
	.2byte _02004DC6 - _02004B38 - 2 @ case 68
	.2byte _02004DB6 - _02004B38 - 2 @ case 69
	.2byte _02004DDA - _02004B38 - 2 @ case 70
	.2byte _02004DEA - _02004B38 - 2 @ case 71
	.2byte _02004DFA - _02004B38 - 2 @ case 72
	.2byte _02004E0E - _02004B38 - 2 @ case 73
	.2byte _02004E22 - _02004B38 - 2 @ case 74
	.2byte _02004E32 - _02004B38 - 2 @ case 75
_02004BD0:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004BDA:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	ldr r0, _02004E4C @ =0x0000058F
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E50 @ =0x00000591
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E54 @ =0x00000593
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E58 @ =0x0000058E
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E5C @ =0x00000594
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E60 @ =0x00000596
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E64 @ =0x0000064F
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E68 @ =0x00000582
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E6C @ =0x00000722
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E70 @ =0x00000583
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E74 @ =0x00000584
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E78 @ =0x00000585
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E7C @ =0x00000587
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E80 @ =0x0000063D
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E84 @ =0x00000642
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E88 @ =0x0000058A
	movs r1, #1
	bl FUN_02004784
	ldr r0, _02004E8C @ =0x00000581
	movs r1, #1
	bl FUN_02004784
	b _02004E48
_02004C6C:
	movs r0, #0xe
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004C76:
	movs r0, #2
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004C80:
	movs r0, #3
	lsls r0, r0, #8
	bl FUN_020047C8
	movs r0, #3
	lsls r0, r0, #8
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004C94:
	movs r0, #0xd
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004C9E:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CA8:
	movs r0, #2
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CB2:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CBC:
	movs r0, #0xb
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CC6:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CD0:
	movs r0, #0xe
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CDA:
	movs r0, #1
	bl FUN_02004744
	movs r0, #8
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CEA:
	movs r0, #1
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004CF4:
	ldr r0, _02004E90 @ =0x00000302
	bl FUN_020047C8
	ldr r0, _02004E90 @ =0x00000302
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004D04:
	ldr r0, _02004E94 @ =0x00000303
	bl FUN_020047C8
	ldr r0, _02004E94 @ =0x00000303
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004D14:
	movs r0, #3
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D1E:
	movs r0, #6
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D28:
	movs r0, #5
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D32:
	movs r0, #9
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D3C:
	movs r0, #0xa
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D46:
	ldr r0, _02004E98 @ =0x000002F5
	bl FUN_020047C8
	ldr r0, _02004E98 @ =0x000002F5
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004D56:
	movs r0, #0xc
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D60:
	movs r0, #7
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D6A:
	movs r0, #8
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D74:
	movs r0, #0xf
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D7E:
	movs r0, #3
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D88:
	movs r0, #5
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D92:
	movs r0, #0xf
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004D9C:
	movs r0, #4
	bl FUN_02004744
	adds r4, r0, #0
	b _02004E48
_02004DA6:
	ldr r0, _02004E9C @ =0x000002FF
	bl FUN_020047C8
	ldr r0, _02004E9C @ =0x000002FF
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004DB6:
	ldr r0, _02004EA0 @ =0x00000301
	bl FUN_020047C8
	ldr r0, _02004EA0 @ =0x00000301
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004DC6:
	movs r0, #0xbf
	lsls r0, r0, #2
	bl FUN_020047C8
	movs r0, #0xbf
	lsls r0, r0, #2
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004DDA:
	ldr r0, _02004EA4 @ =0x00000305
	bl FUN_020047C8
	ldr r0, _02004EA4 @ =0x00000305
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004DEA:
	ldr r0, _02004EA8 @ =0x00000306
	bl FUN_020047C8
	ldr r0, _02004EA8 @ =0x00000306
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004DFA:
	movs r0, #0xc1
	lsls r0, r0, #2
	bl FUN_020047C8
	movs r0, #0xc1
	lsls r0, r0, #2
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004E0E:
	movs r0, #0xc2
	lsls r0, r0, #2
	bl FUN_020047C8
	movs r0, #0xc2
	lsls r0, r0, #2
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004E22:
	ldr r0, _02004EAC @ =0x00000307
	bl FUN_020047C8
	ldr r0, _02004EAC @ =0x00000307
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004E32:
	ldr r0, _02004EB0 @ =0x00000309
	bl FUN_020047C8
	ldr r0, _02004EB0 @ =0x00000309
	bl FUN_020047A8
	adds r4, r0, #0
	b _02004E48
_02004E42:
	bl FUN_0202551C
	movs r4, #0
_02004E48:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02004E4C: .4byte 0x0000058F
_02004E50: .4byte 0x00000591
_02004E54: .4byte 0x00000593
_02004E58: .4byte 0x0000058E
_02004E5C: .4byte 0x00000594
_02004E60: .4byte 0x00000596
_02004E64: .4byte 0x0000064F
_02004E68: .4byte 0x00000582
_02004E6C: .4byte 0x00000722
_02004E70: .4byte 0x00000583
_02004E74: .4byte 0x00000584
_02004E78: .4byte 0x00000585
_02004E7C: .4byte 0x00000587
_02004E80: .4byte 0x0000063D
_02004E84: .4byte 0x00000642
_02004E88: .4byte 0x0000058A
_02004E8C: .4byte 0x00000581
_02004E90: .4byte 0x00000302
_02004E94: .4byte 0x00000303
_02004E98: .4byte 0x000002F5
_02004E9C: .4byte 0x000002FF
_02004EA0: .4byte 0x00000301
_02004EA4: .4byte 0x00000305
_02004EA8: .4byte 0x00000306
_02004EAC: .4byte 0x00000307
_02004EB0: .4byte 0x00000309
	thumb_func_end FUN_02004B24

	thumb_func_start FUN_02004EB4
FUN_02004EB4: @ 0x02004EB4
	ldr r3, _02004EC0 @ =FUN_02004EC4
	adds r1, r0, #0
	movs r0, #4
	movs r2, #1
	bx r3
	nop
_02004EC0: .4byte FUN_02004EC4
	thumb_func_end FUN_02004EB4

	thumb_func_start FUN_02004EC4
FUN_02004EC4: @ 0x02004EC4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0x15
	adds r5, r1, #0
	adds r6, r2, #0
	bl FUN_02004400
	str r0, [sp]
	movs r0, #0x16
	bl FUN_02004400
	str r0, [sp, #4]
	movs r0, #0xe
	bl FUN_02004400
	adds r7, r0, #0
	cmp r4, #0x33
	bhs _02004EF8
	ldr r0, [sp]
	ldrb r0, [r0]
	cmp r0, r4
	bne _02004F06
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02004EF8:
	ldr r0, [sp, #4]
	ldrb r0, [r0]
	cmp r0, r4
	bne _02004F06
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02004F06:
	adds r0, r4, #0
	bl FUN_02004AD8
	cmp r4, #0x4a
	bls _02004F12
	b _02005054
_02004F12:
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02004F1E: @ jump table
	.2byte _02005054 - _02004F1E - 2 @ case 0
	.2byte _02005006 - _02004F1E - 2 @ case 1
	.2byte _0200502A - _02004F1E - 2 @ case 2
	.2byte _0200503C - _02004F1E - 2 @ case 3
	.2byte _02004FB4 - _02004F1E - 2 @ case 4
	.2byte _02004FC8 - _02004F1E - 2 @ case 5
	.2byte _02004FDC - _02004F1E - 2 @ case 6
	.2byte _02004FE6 - _02004F1E - 2 @ case 7
	.2byte _0200503C - _02004F1E - 2 @ case 8
	.2byte _0200503C - _02004F1E - 2 @ case 9
	.2byte _0200503C - _02004F1E - 2 @ case 10
	.2byte _02004FD2 - _02004F1E - 2 @ case 11
	.2byte _0200503C - _02004F1E - 2 @ case 12
	.2byte _0200503C - _02004F1E - 2 @ case 13
	.2byte _02005018 - _02004F1E - 2 @ case 14
	.2byte _0200503C - _02004F1E - 2 @ case 15
	.2byte _0200503C - _02004F1E - 2 @ case 16
	.2byte _0200503C - _02004F1E - 2 @ case 17
	.2byte _0200503C - _02004F1E - 2 @ case 18
	.2byte _0200503C - _02004F1E - 2 @ case 19
	.2byte _0200503C - _02004F1E - 2 @ case 20
	.2byte _0200503C - _02004F1E - 2 @ case 21
	.2byte _02005048 - _02004F1E - 2 @ case 22
	.2byte _0200503C - _02004F1E - 2 @ case 23
	.2byte _0200503C - _02004F1E - 2 @ case 24
	.2byte _0200503C - _02004F1E - 2 @ case 25
	.2byte _02005054 - _02004F1E - 2 @ case 26
	.2byte _02005054 - _02004F1E - 2 @ case 27
	.2byte _02005054 - _02004F1E - 2 @ case 28
	.2byte _02005054 - _02004F1E - 2 @ case 29
	.2byte _02005054 - _02004F1E - 2 @ case 30
	.2byte _02005054 - _02004F1E - 2 @ case 31
	.2byte _02005054 - _02004F1E - 2 @ case 32
	.2byte _02005054 - _02004F1E - 2 @ case 33
	.2byte _02005054 - _02004F1E - 2 @ case 34
	.2byte _02005054 - _02004F1E - 2 @ case 35
	.2byte _02005054 - _02004F1E - 2 @ case 36
	.2byte _02005054 - _02004F1E - 2 @ case 37
	.2byte _02005054 - _02004F1E - 2 @ case 38
	.2byte _02005054 - _02004F1E - 2 @ case 39
	.2byte _02005054 - _02004F1E - 2 @ case 40
	.2byte _02005054 - _02004F1E - 2 @ case 41
	.2byte _02005054 - _02004F1E - 2 @ case 42
	.2byte _02005054 - _02004F1E - 2 @ case 43
	.2byte _02005054 - _02004F1E - 2 @ case 44
	.2byte _02005054 - _02004F1E - 2 @ case 45
	.2byte _02005054 - _02004F1E - 2 @ case 46
	.2byte _02005054 - _02004F1E - 2 @ case 47
	.2byte _02005054 - _02004F1E - 2 @ case 48
	.2byte _02005054 - _02004F1E - 2 @ case 49
	.2byte _02005054 - _02004F1E - 2 @ case 50
	.2byte _02004FF0 - _02004F1E - 2 @ case 51
	.2byte _02004FF0 - _02004F1E - 2 @ case 52
	.2byte _02004FF0 - _02004F1E - 2 @ case 53
	.2byte _02004FF0 - _02004F1E - 2 @ case 54
	.2byte _02004FF0 - _02004F1E - 2 @ case 55
	.2byte _02004FF0 - _02004F1E - 2 @ case 56
	.2byte _02004FF0 - _02004F1E - 2 @ case 57
	.2byte _02004FF0 - _02004F1E - 2 @ case 58
	.2byte _02004FF0 - _02004F1E - 2 @ case 59
	.2byte _02004FF0 - _02004F1E - 2 @ case 60
	.2byte _02004FF0 - _02004F1E - 2 @ case 61
	.2byte _02004FF0 - _02004F1E - 2 @ case 62
	.2byte _02004FF0 - _02004F1E - 2 @ case 63
	.2byte _02004FF0 - _02004F1E - 2 @ case 64
	.2byte _02004FF0 - _02004F1E - 2 @ case 65
	.2byte _02004FF0 - _02004F1E - 2 @ case 66
	.2byte _02004FF0 - _02004F1E - 2 @ case 67
	.2byte _02004FF8 - _02004F1E - 2 @ case 68
	.2byte _02004FF0 - _02004F1E - 2 @ case 69
	.2byte _02004FF0 - _02004F1E - 2 @ case 70
	.2byte _02004FF0 - _02004F1E - 2 @ case 71
	.2byte _02004FF0 - _02004F1E - 2 @ case 72
	.2byte _0200503C - _02004F1E - 2 @ case 73
	.2byte _02004FF0 - _02004F1E - 2 @ case 74
_02004FB4:
	movs r0, #0
	bl FUN_02005AF8
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0200508C
	movs r0, #0
	strh r0, [r7]
	b _0200505A
_02004FC8:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02005228
	b _0200505A
_02004FD2:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02005260
	b _0200505A
_02004FDC:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02005280
	b _0200505A
_02004FE6:
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_020052A4
	b _0200505A
_02004FF0:
	adds r0, r4, #0
	bl FUN_020052C8
	b _0200505A
_02004FF8:
	adds r0, r4, #0
	bl FUN_020052C8
	adds r0, r5, #0
	bl FUN_02005D48
	b _0200505A
_02005006:
	movs r0, #1
	bl FUN_02005AF8
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020052E4
	b _0200505A
_02005018:
	movs r0, #2
	bl FUN_02005AF8
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020052E4
	b _0200505A
_0200502A:
	movs r0, #0
	bl FUN_02005AF8
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020052E4
	b _0200505A
_0200503C:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020052E4
	b _0200505A
_02005048:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020052E4
	b _0200505A
_02005054:
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200505A:
	movs r0, #1
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02004EC4

	thumb_func_start FUN_02005060
FUN_02005060: @ 0x02005060
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	ldr r0, [r0]
	bl FUN_02004714
	movs r0, #0x19
	bl FUN_02004400
	bl FUN_020046E8
	adds r0, r4, #0
	bl FUN_02004B24
	movs r0, #0x1a
	bl FUN_02004400
	bl FUN_020046E8
	pop {r4, pc}
	thumb_func_end FUN_02005060

	thumb_func_start FUN_0200508C
FUN_0200508C: @ 0x0200508C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0xc
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	movs r0, #0x20
	bl FUN_02004400
	movs r0, #0
	bl FUN_020047E8
	bl FUN_020054F0
	adds r7, r0, #0
	lsls r0, r7, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _02005144 @ =0x000004C1
	cmp r7, r0
	ble _020050C2
	adds r0, r4, #0
	bl FUN_02005C98
	adds r4, r0, #0
_020050C2:
	ldrb r0, [r6]
	cmp r0, #0
	bne _020050D6
	cmp r4, r5
	bne _020050D6
	bl FUN_02004AAC
	ldr r1, _02005148 @ =0x000003F5
	cmp r0, r1
	bne _02005142
_020050D6:
	movs r0, #1
	bl FUN_020059E0
	ldr r0, _0200514C @ =0x021D05E8
	ldr r1, [r0, #0xc]
	cmp r1, #0
	beq _020050EA
	ldr r0, [r0, #4]
	cmp r0, #0
	bne _020050F4
_020050EA:
	bl FUN_02005FD8
	ldr r0, _0200514C @ =0x021D05E8
	movs r1, #1
	str r1, [r0, #4]
_020050F4:
	cmp r4, r5
	beq _02005104
	movs r0, #1
	movs r1, #0
	bl FUN_020053A8
	bl FUN_02005FA0
_02005104:
	ldrb r0, [r6]
	cmp r0, #1
	bne _0200513C
	movs r0, #2
	bl FUN_02005328
	bl FUN_02004714
	movs r0, #4
	bl FUN_02004B24
	movs r0, #0x1a
	bl FUN_02004400
	bl FUN_020046E8
	cmp r4, r5
	beq _02005130
	movs r0, #1
	movs r1, #0
	bl FUN_020053A8
_02005130:
	lsls r1, r7, #0x10
	adds r0, r5, #0
	lsrs r1, r1, #0x10
	bl FUN_02005150
	pop {r3, r4, r5, r6, r7, pc}
_0200513C:
	adds r0, r5, #0
	bl FUN_02005D48
_02005142:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02005144: .4byte 0x000004C1
_02005148: .4byte 0x000003F5
_0200514C: .4byte 0x021D05E8
	thumb_func_end FUN_0200508C

	thumb_func_start FUN_02005150
FUN_02005150: @ 0x02005150
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x20
	bl FUN_02004400
	adds r4, r0, #0
	ldrh r0, [r4]
	bl FUN_02005504
	movs r1, #0xaf
	lsls r1, r1, #2
	cmp r0, r1
	bne _02005178
	adds r0, r5, #0
	movs r1, #4
	bl FUN_02004784
	bl FUN_0202551C
	b _02005180
_02005178:
	ldrh r0, [r4]
	movs r1, #6
	bl FUN_02004784
_02005180:
	movs r0, #0x1b
	bl FUN_02004400
	bl FUN_020046E8
	movs r0, #1
	movs r1, #0
	bl FUN_020053A8
	movs r0, #0x7f
	movs r1, #0x28
	movs r2, #0
	bl FUN_02005F10
	movs r0, #0
	bl FUN_020059E0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005150

	thumb_func_start FUN_020051A4
FUN_020051A4: @ 0x020051A4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	movs r0, #0x13
	adds r5, r1, #0
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x20
	bl FUN_02004400
	adds r4, r0, #0
	ldrb r0, [r6]
	cmp r0, #1
	beq _020051C4
	cmp r5, #0
	bne _02005224
_020051C4:
	movs r0, #1
	bl FUN_02005328
	bl FUN_02004714
	movs r0, #0
	bl FUN_02004AFC
	ldrh r0, [r4]
	movs r1, #2
	bl FUN_02004784
	movs r0, #0x19
	bl FUN_02004400
	bl FUN_020046E8
	movs r0, #4
	bl FUN_02004B24
	movs r0, #0x1a
	bl FUN_02004400
	bl FUN_020046E8
	ldrh r0, [r4]
	bl FUN_02005504
	movs r1, #0xaf
	lsls r1, r1, #2
	cmp r0, r1
	bne _02005212
	adds r0, r7, #0
	movs r1, #4
	bl FUN_02004784
	bl FUN_0202551C
	b _0200521A
_02005212:
	ldrh r0, [r4]
	movs r1, #4
	bl FUN_02004784
_0200521A:
	movs r0, #0x1b
	bl FUN_02004400
	bl FUN_020046E8
_02005224:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020051A4

	thumb_func_start FUN_02005228
FUN_02005228: @ 0x02005228
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	bl FUN_02005B20
	movs r0, #2
	bl FUN_02005328
	bl FUN_02004714
	movs r0, #5
	bl FUN_02004B24
	movs r0, #0x1a
	bl FUN_02004400
	bl FUN_020046E8
	movs r0, #1
	bl FUN_020059E0
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005228

	thumb_func_start FUN_02005260
FUN_02005260: @ 0x02005260
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	bl FUN_02005FA0
	bl FUN_020053F0
	movs r0, #4
	bl FUN_02005060
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r4, pc}
	thumb_func_end FUN_02005260

	thumb_func_start FUN_02005280
FUN_02005280: @ 0x02005280
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	bl FUN_02005FA0
	movs r0, #6
	bl FUN_02005060
	movs r0, #1
	bl FUN_020059E0
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005280

	thumb_func_start FUN_020052A4
FUN_020052A4: @ 0x020052A4
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x18
	bl FUN_02004400
	bl FUN_02005FA0
	movs r0, #7
	bl FUN_02005060
	movs r0, #1
	bl FUN_020059E0
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020052A4

	thumb_func_start FUN_020052C8
FUN_020052C8: @ 0x020052C8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02005318
	adds r0, r4, #0
	bl FUN_02004B24
	movs r0, #0x1c
	bl FUN_02004400
	bl FUN_020046E8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020052C8

	thumb_func_start FUN_020052E4
FUN_020052E4: @ 0x020052E4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x18
	adds r4, r1, #0
	bl FUN_02004400
	bl FUN_02005FA0
	adds r0, r5, #0
	bl FUN_02005060
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020052E4

	thumb_func_start FUN_02005304
FUN_02005304: @ 0x02005304
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	bl FUN_02005B20
	adds r0, r4, #0
	bl FUN_02005D48
	pop {r4, pc}
	thumb_func_end FUN_02005304

	thumb_func_start FUN_02005318
FUN_02005318: @ 0x02005318
	push {r3, lr}
	movs r0, #4
	bl FUN_02005328
	bl FUN_02004714
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005318

	thumb_func_start FUN_02005328
FUN_02005328: @ 0x02005328
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bl FUN_020043F8
	cmp r4, #7
	blt _02005342
	bl FUN_0202551C
	movs r0, #0x1b
	bl FUN_02004400
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
_02005342:
	cmp r4, #6
	bhi _020053A4
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02005352: @ jump table
	.2byte _02005360 - _02005352 - 2 @ case 0
	.2byte _0200536A - _02005352 - 2 @ case 1
	.2byte _02005374 - _02005352 - 2 @ case 2
	.2byte _0200537E - _02005352 - 2 @ case 3
	.2byte _02005388 - _02005352 - 2 @ case 4
	.2byte _02005392 - _02005352 - 2 @ case 5
	.2byte _0200539C - _02005352 - 2 @ case 6
_02005360:
	movs r0, #0x17
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_0200536A:
	movs r0, #0x18
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_02005374:
	movs r0, #0x19
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_0200537E:
	movs r0, #0x1a
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_02005388:
	movs r0, #0x1b
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_02005392:
	movs r0, #0x1c
	bl FUN_02004400
	adds r5, r0, #0
	b _020053A4
_0200539C:
	movs r0, #0x1d
	bl FUN_02004400
	adds r5, r0, #0
_020053A4:
	ldr r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005328

	thumb_func_start FUN_020053A8
FUN_020053A8: @ 0x020053A8
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	cmp r0, #1
	bne _020053BC
	movs r0, #0xc
	bl FUN_02004400
	adds r6, r0, #0
	movs r4, #0
	b _020053CA
_020053BC:
	cmp r0, #7
	bne _020053EE
	movs r0, #0xd
	bl FUN_02004400
	adds r6, r0, #0
	movs r4, #7
_020053CA:
	cmp r5, #0
	bne _020053E0
	adds r0, r4, #0
	bl FUN_020047E8
	bl FUN_020054F0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl FUN_02004A60
_020053E0:
	adds r0, r4, #0
	bl FUN_020047E8
	adds r1, r5, #0
	blx FUN_020C815C
	strb r5, [r6]
_020053EE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020053A8

	thumb_func_start FUN_020053F0
FUN_020053F0: @ 0x020053F0
	push {r4, lr}
	movs r0, #0xc
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0xd
	bl FUN_02004400
	movs r1, #0
	strb r1, [r4]
	strb r1, [r0]
	pop {r4, pc}
	thumb_func_end FUN_020053F0

	thumb_func_start FUN_02005408
FUN_02005408: @ 0x02005408
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r0, #0
	bl FUN_020047E8
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_020C8230
	cmp r6, #0
	bne _02005428
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl FUN_02004958
_02005428:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005408

	thumb_func_start FUN_0200542C
FUN_0200542C: @ 0x0200542C
	push {r4, lr}
	adds r4, r1, #0
	bpl _02005434
	movs r4, #0
_02005434:
	cmp r4, #0x7f
	ble _0200543A
	movs r4, #0x7f
_0200543A:
	bl FUN_020047E8
	adds r1, r4, #0
	blx FUN_020C821C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200542C

	thumb_func_start FUN_02005448
FUN_02005448: @ 0x02005448
	push {r4, lr}
	adds r4, r0, #0
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	bl FUN_020054D4
	bl FUN_0200480C
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_02005464
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005448

	thumb_func_start FUN_02005464
FUN_02005464: @ 0x02005464
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	blx FUN_020C9644
	cmp r5, #1
	beq _02005474
	cmp r5, #8
	bne _02005478
_02005474:
	movs r4, #0x7f
	b _0200547E
_02005478:
	cmp r0, #0
	beq _02005496
	ldrb r4, [r0, #2]
_0200547E:
	bl FUN_020378CC
	cmp r0, #1
	bne _02005496
	adds r0, r4, #0
	movs r1, #5
	blx FUN_020F2998
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_0200542C
_02005496:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005464

	thumb_func_start FUN_02005498
FUN_02005498: @ 0x02005498
	push {r3, lr}
	blx FUN_020C9644
	cmp r0, #0
	bne _020054A6
	movs r0, #0
	pop {r3, pc}
_020054A6:
	ldrb r0, [r0, #2]
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005498

	thumb_func_start FUN_020054AC
FUN_020054AC: @ 0x020054AC
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020054D4
	bl FUN_0200480C
	adds r1, r4, #0
	bl FUN_0200542C
	pop {r4, pc}
	thumb_func_end FUN_020054AC

	thumb_func_start FUN_020054C0
FUN_020054C0: @ 0x020054C0
	push {r4, lr}
	adds r4, r0, #0
	bpl _020054CA
	bl FUN_0202551C
_020054CA:
	adds r0, r4, #0
	blx FUN_020C81F0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020054C0

	thumb_func_start FUN_020054D4
FUN_020054D4: @ 0x020054D4
	push {r3, lr}
	cmp r0, #0
	bne _020054DE
	movs r0, #0xff
	pop {r3, pc}
_020054DE:
	blx FUN_020C9644
	cmp r0, #0
	bne _020054EA
	movs r0, #0xff
	pop {r3, pc}
_020054EA:
	ldrb r0, [r0, #5]
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020054D4

	thumb_func_start FUN_020054F0
FUN_020054F0: @ 0x020054F0
	ldr r3, _020054F4 @ =FUN_020C834C
	bx r3
	.align 2, 0
_020054F4: .4byte FUN_020C834C
	thumb_func_end FUN_020054F0

	thumb_func_start FUN_020054F8
FUN_020054F8: @ 0x020054F8
	push {r3, lr}
	bl FUN_02005504
	blx FUN_020C9724
	pop {r3, pc}
	thumb_func_end FUN_020054F8

	thumb_func_start FUN_02005504
FUN_02005504: @ 0x02005504
	push {r3, lr}
	blx FUN_020C9644
	cmp r0, #0
	bne _02005512
	movs r0, #0
	pop {r3, pc}
_02005512:
	ldrh r0, [r0]
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005504

	thumb_func_start FUN_02005518
FUN_02005518: @ 0x02005518
	ldr r3, _0200551C @ =FUN_02004924
	bx r3
	.align 2, 0
_0200551C: .4byte FUN_02004924
	thumb_func_end FUN_02005518

	thumb_func_start FUN_02005520
FUN_02005520: @ 0x02005520
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020DA9CC
	adds r3, r0, #0
	ldr r0, _02005548 @ =0x021D05E8
	movs r1, #1
	strb r1, [r0]
	ldr r2, _0200554C @ =0x021D05F8
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
	adds r0, r3, #0
	pop {r4, pc}
	nop
_02005548: .4byte 0x021D05E8
_0200554C: .4byte 0x021D05F8
	thumb_func_end FUN_02005520

	thumb_func_start FUN_02005550
FUN_02005550: @ 0x02005550
	push {r3, lr}
	bl FUN_020043F8
	ldr r0, _02005564 @ =0x021D05E8
	movs r1, #0
	strb r1, [r0]
	blx FUN_020DAA60
	pop {r3, pc}
	nop
_02005564: .4byte 0x021D05E8
	thumb_func_end FUN_02005550

	thumb_func_start FUN_02005568
FUN_02005568: @ 0x02005568
	push {r3, lr}
	ldr r0, _02005580 @ =0x021D05E8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0200557E
	blx FUN_020DAA60
	cmp r0, #0
	beq _0200557E
	bl FUN_0202551C
_0200557E:
	pop {r3, pc}
	.align 2, 0
_02005580: .4byte 0x021D05E8
	thumb_func_end FUN_02005568

	thumb_func_start FUN_02005584
FUN_02005584: @ 0x02005584
	push {r3, lr}
	ldr r0, _020055A4 @ =0x021D05E8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0200559C
	ldr r0, _020055A8 @ =0x021D05F8
	blx FUN_020DA9CC
	cmp r0, #0
	beq _0200559C
	bl FUN_0202551C
_0200559C:
	bl FUN_02004940
	pop {r3, pc}
	nop
_020055A4: .4byte 0x021D05E8
_020055A8: .4byte 0x021D05F8
	thumb_func_end FUN_02005584

	thumb_func_start FUN_020055AC
FUN_020055AC: @ 0x020055AC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	movs r0, #0x10
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	cmp r5, #0xe
	beq _020055D0
	cmp r5, #0xf
	beq _020055D0
	bl FUN_0202551C
_020055D0:
	cmp r5, #0xe
	bne _020055DE
	ldrb r0, [r6]
	cmp r0, #0
	bne _020055DE
	bl FUN_0202551C
_020055DE:
	cmp r5, #0xf
	bne _020055EC
	ldrb r0, [r4]
	cmp r0, #0
	bne _020055EC
	bl FUN_0202551C
_020055EC:
	cmp r5, #0xe
	bne _020055F8
	movs r0, #0
	bl FUN_02004400
	pop {r4, r5, r6, pc}
_020055F8:
	movs r0, #1
	bl FUN_02004400
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020055AC

	thumb_func_start FUN_02005600
FUN_02005600: @ 0x02005600
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	movs r0, #0x10
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	cmp r5, #0xe
	beq _02005624
	cmp r5, #0xf
	beq _02005624
	bl FUN_0202551C
_02005624:
	cmp r5, #0xe
	bne _02005652
	ldrb r0, [r6]
	cmp r0, #0
	bne _0200564C
	movs r0, #0
	bl FUN_02004400
	adds r4, r0, #0
	adds r0, r5, #0
	blx FUN_020C7C90
	str r0, [r4]
	cmp r0, #0
	bne _02005646
	movs r0, #0
	pop {r4, r5, r6, pc}
_02005646:
	movs r0, #1
	strb r0, [r6]
	b _0200567A
_0200564C:
	bl FUN_0202551C
	b _0200567A
_02005652:
	ldrb r0, [r4]
	cmp r0, #0
	bne _02005676
	movs r0, #1
	bl FUN_02004400
	adds r6, r0, #0
	adds r0, r5, #0
	blx FUN_020C7C90
	str r0, [r6]
	cmp r0, #0
	bne _02005670
	movs r0, #0
	pop {r4, r5, r6, pc}
_02005670:
	movs r0, #1
	strb r0, [r4]
	b _0200567A
_02005676:
	bl FUN_0202551C
_0200567A:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005600

	thumb_func_start FUN_02005680
FUN_02005680: @ 0x02005680
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	movs r0, #0x10
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	cmp r5, #0xe
	beq _020056A6
	cmp r5, #0xf
	beq _020056A6
	bl FUN_0202551C
	pop {r4, r5, r6, pc}
_020056A6:
	cmp r5, #0xe
	bne _020056C8
	ldrb r0, [r6]
	cmp r0, #1
	bne _020056C2
	adds r0, r5, #0
	bl FUN_020055AC
	ldr r0, [r0]
	blx FUN_020C7CD4
	movs r0, #0
	strb r0, [r6]
	pop {r4, r5, r6, pc}
_020056C2:
	bl FUN_0202551C
	pop {r4, r5, r6, pc}
_020056C8:
	ldrb r0, [r4]
	cmp r0, #1
	bne _020056E0
	adds r0, r5, #0
	bl FUN_020055AC
	ldr r0, [r0]
	blx FUN_020C7CD4
	movs r0, #0
	strb r0, [r4]
	pop {r4, r5, r6, pc}
_020056E0:
	bl FUN_0202551C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005680

	thumb_func_start FUN_020056E8
FUN_020056E8: @ 0x020056E8
	push {r3, r4, r5, lr}
	sub sp, #0x18
	adds r3, r0, #0
	ldr r0, [r3, #0x10]
	adds r4, r1, #0
	str r0, [sp]
	ldr r0, [r3, #0x14]
	str r0, [sp, #4]
	ldr r0, [r3, #0x18]
	str r0, [sp, #8]
	ldr r0, [r3, #0x1c]
	str r0, [sp, #0xc]
	ldr r0, [r3, #0x20]
	str r0, [sp, #0x10]
	ldr r0, [r3, #0x24]
	str r0, [sp, #0x14]
	ldr r0, [r3]
	ldr r1, [r3, #4]
	ldr r2, [r3, #8]
	ldr r0, [r0]
	ldr r3, [r3, #0xc]
	blx FUN_020C7CEC
	adds r5, r0, #0
	bne _02005720
	adds r0, r4, #0
	bl FUN_02005680
_02005720:
	adds r0, r5, #0
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020056E8

	thumb_func_start FUN_02005728
FUN_02005728: @ 0x02005728
	push {r3, lr}
	bl FUN_020055AC
	ldr r0, [r0]
	blx FUN_020C7E0C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005728

	thumb_func_start FUN_02005738
FUN_02005738: @ 0x02005738
	push {r3, lr}
	bl FUN_020055AC
	ldr r0, [r0]
	blx FUN_020C7F18
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005738

	thumb_func_start FUN_02005748
FUN_02005748: @ 0x02005748
	push {r4, lr}
	adds r4, r1, #0
	cmp r4, #0x7f
	bls _02005752
	movs r4, #0x7f
_02005752:
	bl FUN_020055AC
	ldr r0, [r0]
	adds r1, r4, #0
	blx FUN_020C7EF4
	pop {r4, pc}
	thumb_func_end FUN_02005748

	thumb_func_start FUN_02005760
FUN_02005760: @ 0x02005760
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020055AC
	ldr r0, [r0]
	adds r1, r4, #0
	blx FUN_020C7E70
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005760

	thumb_func_start FUN_02005774
FUN_02005774: @ 0x02005774
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl FUN_020378CC
	cmp r0, #1
	bne _0200579C
	adds r0, r4, #0
	bl FUN_020055AC
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #5
	blx FUN_020F2998
	adds r1, r0, #0
	ldr r0, [r4]
	blx FUN_020C7E48
	pop {r3, r4, r5, pc}
_0200579C:
	adds r0, r4, #0
	bl FUN_020055AC
	ldr r0, [r0]
	adds r1, r5, #0
	blx FUN_020C7E48
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005774

	thumb_func_start FUN_020057AC
FUN_020057AC: @ 0x020057AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r6, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	adds r5, r3, #0
	bl FUN_020043F8
	movs r0, #0x22
	bl FUN_02004400
	adds r4, r0, #0
	cmp r5, #0xe
	beq _020057D0
	cmp r5, #0xf
	beq _020057D0
	bl FUN_0202551C
_020057D0:
	adds r0, r6, #0
	blx FUN_020C9788
	adds r7, r0, #0
	bne _020057E4
	bl FUN_0202551C
	add sp, #0x30
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020057E4:
	ldr r0, [r7]
	lsls r0, r0, #8
	lsrs r0, r0, #8
	blx FUN_020C98B4
	adds r6, r0, #0
	bne _020057FC
	bl FUN_0202551C
	add sp, #0x30
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020057FC:
	cmp r5, #0xe
	bne _0200584A
	ldr r0, [sp, #0x48]
	adds r1, r6, #0
	bl FUN_0201AA8C
	str r0, [r4]
	cmp r0, #0
	bne _02005818
	bl FUN_0202551C
	add sp, #0x30
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02005818:
	movs r1, #0
	adds r2, r6, #0
	blx FUN_020E5B44
	ldr r0, [r7]
	ldr r1, [r4]
	lsls r0, r0, #8
	lsrs r0, r0, #8
	adds r2, r6, #0
	movs r3, #0
	blx FUN_020C98DC
	movs r1, #0
	mvns r1, r1
	cmp r0, r1
	bne _02005842
	bl FUN_0202551C
	add sp, #0x30
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02005842:
	ldr r0, [r4]
	adds r1, r6, #0
	bl FUN_02005898
_0200584A:
	adds r0, r5, #0
	bl FUN_020055AC
	movs r1, #0
	str r1, [sp, #0xc]
	str r0, [sp, #8]
	ldr r0, [r4]
	str r0, [sp, #0x10]
	ldr r0, _02005894 @ =0x00003443
	str r1, [sp, #0x14]
	str r0, [sp, #0x20]
	ldr r0, [sp]
	str r1, [sp, #0x18]
	str r0, [sp, #0x24]
	movs r0, #6
	lsls r0, r0, #0xc
	str r0, [sp, #0x28]
	ldr r0, [sp, #4]
	adds r1, r5, #0
	str r0, [sp, #0x2c]
	add r0, sp, #8
	str r6, [sp, #0x1c]
	bl FUN_020056E8
	adds r4, r0, #0
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_02005774
	movs r0, #0xf
	bl FUN_02004400
	movs r1, #1
	strb r1, [r0]
	adds r0, r4, #0
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02005894: .4byte 0x00003443
	thumb_func_end FUN_020057AC

	thumb_func_start FUN_02005898
FUN_02005898: @ 0x02005898
	push {r3, r4, r5, r6}
	movs r5, #0
	lsrs r6, r1, #1
	beq _020058B2
	subs r2, r1, #1
_020058A2:
	subs r3, r2, r5
	ldrb r4, [r0, r5]
	ldrb r1, [r0, r3]
	strb r1, [r0, r5]
	adds r5, r5, #1
	strb r4, [r0, r3]
	cmp r5, r6
	blo _020058A2
_020058B2:
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02005898

	thumb_func_start FUN_020058B8
FUN_020058B8: @ 0x020058B8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bl FUN_020043F8
	movs r0, #0xf
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0x22
	bl FUN_02004400
	adds r6, r0, #0
	cmp r5, #0xe
	beq _020058DC
	cmp r5, #0xf
	beq _020058DC
	bl FUN_0202551C
_020058DC:
	adds r0, r5, #0
	bl FUN_02005728
	ldrb r0, [r4]
	cmp r0, #1
	bne _020058F2
	movs r0, #0
	strb r0, [r4]
	ldr r0, [r6]
	bl FUN_0201AB0C
_020058F2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020058B8

	thumb_func_start FUN_020058F4
FUN_020058F4: @ 0x020058F4
	push {r4, lr}
	blx FUN_020C906C
	adds r4, r0, #0
	cmp r4, #1
	bne _02005904
	bl FUN_02005908
_02005904:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_020058F4

	thumb_func_start FUN_02005908
FUN_02005908: @ 0x02005908
	ldr r3, _0200590C @ =FUN_020C907C
	bx r3
	.align 2, 0
_0200590C: .4byte FUN_020C907C
	thumb_func_end FUN_02005908

	thumb_func_start FUN_02005910
FUN_02005910: @ 0x02005910
	ldr r3, _02005914 @ =FUN_020C9014
	bx r3
	.align 2, 0
_02005914: .4byte FUN_020C9014
	thumb_func_end FUN_02005910

	thumb_func_start FUN_02005918
FUN_02005918: @ 0x02005918
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020047E8
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_020C827C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005918

	thumb_func_start FUN_0200592C
FUN_0200592C: @ 0x0200592C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020054D4
	bl FUN_0200480C
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02005918
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200592C

	thumb_func_start FUN_02005944
FUN_02005944: @ 0x02005944
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_0200480C
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02005918
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005944

	thumb_func_start FUN_02005958
FUN_02005958: @ 0x02005958
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020047E8
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_020C829C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005958

	thumb_func_start FUN_0200596C
FUN_0200596C: @ 0x0200596C
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020047E8
	adds r1, r4, #0
	blx FUN_020C82DC
	pop {r4, pc}
	thumb_func_end FUN_0200596C

	thumb_func_start FUN_0200597C
FUN_0200597C: @ 0x0200597C
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020C7994
	ldr r0, _0200598C @ =0x021D05E8
	str r4, [r0, #8]
	pop {r4, pc}
	nop
_0200598C: .4byte 0x021D05E8
	thumb_func_end FUN_0200597C

	thumb_func_start FUN_02005990
FUN_02005990: @ 0x02005990
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #7
	bl FUN_02004400
	str r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005990

	thumb_func_start FUN_020059A0
FUN_020059A0: @ 0x020059A0
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #8
	bl FUN_02004400
	str r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020059A0

	thumb_func_start FUN_020059B0
FUN_020059B0: @ 0x020059B0
	push {r3, lr}
	movs r0, #8
	bl FUN_02004400
	ldrh r1, [r0]
	cmp r1, #0
	bne _020059C6
	movs r1, #0
	strh r1, [r0]
	adds r0, r1, #0
	pop {r3, pc}
_020059C6:
	subs r1, r1, #1
	strh r1, [r0]
	ldrh r0, [r0]
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020059B0

	thumb_func_start FUN_020059D0
FUN_020059D0: @ 0x020059D0
	ldr r3, _020059D4 @ =FUN_020C7988
	bx r3
	.align 2, 0
_020059D4: .4byte FUN_020C7988
	thumb_func_end FUN_020059D0

	thumb_func_start FUN_020059D8
FUN_020059D8: @ 0x020059D8
	ldr r0, _020059DC @ =0x021D0620
	bx lr
	.align 2, 0
_020059DC: .4byte 0x021D0620
	thumb_func_end FUN_020059D8

	thumb_func_start FUN_020059E0
FUN_020059E0: @ 0x020059E0
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x13
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020059E0

	thumb_func_start FUN_020059F0
FUN_020059F0: @ 0x020059F0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	str r3, [sp]
	ldr r0, [sp, #0x18]
	adds r1, r6, #0
	str r0, [sp, #4]
	movs r0, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_02005A10
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020059F0

	thumb_func_start FUN_02005A10
FUN_02005A10: @ 0x02005A10
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0x16
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_02004400
	adds r4, r0, #0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	ldr r3, [sp, #8]
	adds r1, r6, #0
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r2, r7, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_02005AB0
	movs r0, #0
	strb r0, [r4]
	movs r0, #5
	bl FUN_020043B0
	movs r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02005A10

	thumb_func_start FUN_02005A4C
FUN_02005A4C: @ 0x02005A4C
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	str r3, [sp]
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	adds r5, r1, #0
	adds r4, r2, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #8]
	movs r0, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_02005A74
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005A4C

	thumb_func_start FUN_02005A74
FUN_02005A74: @ 0x02005A74
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #9
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_02004400
	adds r4, r0, #0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x14]
	ldr r3, [sp, #8]
	adds r1, r6, #0
	str r0, [sp]
	ldr r0, [sp, #0x28]
	adds r2, r7, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_02005AB0
	ldr r0, [sp, #0x20]
	str r0, [r4]
	movs r0, #6
	bl FUN_020043B0
	movs r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02005A74

	thumb_func_start FUN_02005AB0
FUN_02005AB0: @ 0x02005AB0
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	movs r0, #2
	adds r5, r1, #0
	adds r7, r3, #0
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0
	adds r1, r6, #0
	bl FUN_02005F50
	movs r0, #0
	bl FUN_02004A60
	adds r0, r5, #0
	bl FUN_02004A9C
	adds r0, r7, #0
	bl FUN_020059A0
	adds r0, r5, #0
	bl FUN_020054F8
	str r0, [r4]
	add r0, sp, #8
	ldrb r0, [r0, #0x10]
	bl FUN_020059E0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02005AB0

	thumb_func_start FUN_02005AEC
FUN_02005AEC: @ 0x02005AEC
	ldr r3, _02005AF4 @ =FUN_020C7FAC
	adds r1, r0, #0
	movs r0, #7
	bx r3
	.align 2, 0
_02005AF4: .4byte FUN_020C7FAC
	thumb_func_end FUN_02005AEC

	thumb_func_start FUN_02005AF8
FUN_02005AF8: @ 0x02005AF8
	push {r3, lr}
	cmp r0, #0
	bne _02005B0C
	ldr r0, _02005B18 @ =0x0000A7FE
	bl FUN_02005AEC
	movs r0, #0
	bl FUN_02005910
	b _02005B12
_02005B0C:
	ldr r0, _02005B1C @ =0x00003FFF
	bl FUN_02005AEC
_02005B12:
	bl FUN_020058F4
	pop {r3, pc}
	.align 2, 0
_02005B18: .4byte 0x0000A7FE
_02005B1C: .4byte 0x00003FFF
	thumb_func_end FUN_02005AF8

	thumb_func_start FUN_02005B20
FUN_02005B20: @ 0x02005B20
	push {r3, lr}
	bl FUN_02005F88
	cmp r0, #0
	bne _02005B4A
	movs r0, #0
	bl FUN_020047E8
	bl FUN_020054F0
	movs r1, #0
	mvns r1, r1
	cmp r0, r1
	beq _02005B4A
	bl FUN_02005FD8
	movs r0, #1
	adds r1, r0, #0
	bl FUN_020053A8
	pop {r3, pc}
_02005B4A:
	bl FUN_02005FA0
	pop {r3, pc}
	thumb_func_end FUN_02005B20

	thumb_func_start FUN_02005B50
FUN_02005B50: @ 0x02005B50
	ldr r3, _02005B54 @ =FUN_020C7F74
	bx r3
	.align 2, 0
_02005B54: .4byte FUN_020C7F74
	thumb_func_end FUN_02005B50

	thumb_func_start FUN_02005B58
FUN_02005B58: @ 0x02005B58
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x35
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005B58

	thumb_func_start FUN_02005B68
FUN_02005B68: @ 0x02005B68
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x36
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005B68

	thumb_func_start FUN_02005B78
FUN_02005B78: @ 0x02005B78
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	bne _02005B86
	bl FUN_0202551C
_02005B86:
	cmp r4, #0xf
	bls _02005B8E
	bl FUN_0202551C
_02005B8E:
	adds r0, r5, #0
	bl FUN_020054D4
	bl FUN_0200480C
	bl FUN_020047E8
	adds r1, r4, #0
	adds r2, r6, #0
	blx FUN_020C8374
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005B78

	thumb_func_start FUN_02005BA8
FUN_02005BA8: @ 0x02005BA8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x37
	bl FUN_02004400
	adds r4, r0, #0
	ldrb r1, [r4]
	adds r0, r5, #0
	lsls r2, r1, #2
	ldr r1, _02005BE0 @ =_020F5711
	ldrb r1, [r1, r2]
	bl FUN_020054AC
	ldrb r2, [r4]
	ldr r1, _02005BE4 @ =0x0000FFFF
	movs r0, #4
	lsls r3, r2, #2
	ldr r2, _02005BE8 @ =_020F5710
	ldrb r2, [r2, r3]
	bl FUN_02005918
	ldrb r0, [r4, #1]
	cmp r0, #8
	blo _02005BDC
	movs r0, #0
	strb r0, [r4, #1]
_02005BDC:
	pop {r3, r4, r5, pc}
	nop
_02005BE0: .4byte _020F5711
_02005BE4: .4byte 0x0000FFFF
_02005BE8: .4byte _020F5710
	thumb_func_end FUN_02005BA8

	thumb_func_start FUN_02005BEC
FUN_02005BEC: @ 0x02005BEC
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x38
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005BEC

	thumb_func_start FUN_02005BFC
FUN_02005BFC: @ 0x02005BFC
	push {r3, lr}
	movs r0, #0x38
	bl FUN_02004400
	ldrb r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02005BFC

	thumb_func_start FUN_02005C08
FUN_02005C08: @ 0x02005C08
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x39
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02005C08

	thumb_func_start FUN_02005C18
FUN_02005C18: @ 0x02005C18
	push {r3, lr}
	movs r0, #0x39
	bl FUN_02004400
	ldrb r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02005C18

	thumb_func_start FUN_02005C24
FUN_02005C24: @ 0x02005C24
	push {r3, r4, r5, lr}
	bl FUN_02005C18
	cmp r0, #0
	bne _02005C36
	movs r0, #1
	bl FUN_02005C08
	b _02005C3C
_02005C36:
	movs r0, #0
	bl FUN_02005C08
_02005C3C:
	bl FUN_02004AAC
	cmp r0, #0
	bne _02005C6A
	bl FUN_02004A90
	adds r4, r0, #0
	bl FUN_0200496C
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_02005C6C
	cmp r4, r0
	beq _02005C60
	adds r0, r4, #0
	bl FUN_02005D48
_02005C60:
	movs r0, #0
	adds r1, r5, #0
	adds r2, r0, #0
	bl FUN_02005408
_02005C6A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005C24

	thumb_func_start FUN_02005C6C
FUN_02005C6C: @ 0x02005C6C
	push {r3, r4}
	ldr r2, _02005C90 @ =_020F5730
	movs r4, #0
_02005C72:
	lsls r3, r4, #2
	ldrh r1, [r2, r3]
	cmp r0, r1
	bne _02005C82
	ldr r0, _02005C94 @ =_020F5732
	ldrh r0, [r0, r3]
	pop {r3, r4}
	bx lr
_02005C82:
	adds r1, r4, #1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	cmp r4, #0x88
	blo _02005C72
	pop {r3, r4}
	bx lr
	.align 2, 0
_02005C90: .4byte _020F5730
_02005C94: .4byte _020F5732
	thumb_func_end FUN_02005C6C

	thumb_func_start FUN_02005C98
FUN_02005C98: @ 0x02005C98
	push {r3, r4}
	ldr r2, _02005CBC @ =_020F5730
	movs r4, #0
_02005C9E:
	lsls r3, r4, #2
	adds r1, r2, r3
	ldrh r1, [r1, #2]
	cmp r0, r1
	bne _02005CAE
	ldrh r0, [r2, r3]
	pop {r3, r4}
	bx lr
_02005CAE:
	adds r1, r4, #1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	cmp r4, #0x88
	blo _02005C9E
	pop {r3, r4}
	bx lr
	.align 2, 0
_02005CBC: .4byte _020F5730
	thumb_func_end FUN_02005C98

	thumb_func_start FUN_02005CC0
FUN_02005CC0: @ 0x02005CC0
	push {r3, lr}
	movs r0, #0
	bl FUN_020047E8
	ldr r2, _02005CF0 @ =0x0000A7FE
	movs r1, #0xf
	blx FUN_020C82BC
	movs r0, #7
	bl FUN_020047E8
	ldr r2, _02005CF0 @ =0x0000A7FE
	movs r1, #0xf
	blx FUN_020C82BC
	movs r0, #2
	bl FUN_020047E8
	ldr r2, _02005CF0 @ =0x0000A7FE
	movs r1, #0xf
	blx FUN_020C82BC
	pop {r3, pc}
	nop
_02005CF0: .4byte 0x0000A7FE
	thumb_func_end FUN_02005CC0

	thumb_func_start FUN_02005CF4
FUN_02005CF4: @ 0x02005CF4
	ldr r1, _02005CFC @ =0x021D05E8
	str r0, [r1, #0xc]
	bx lr
	nop
_02005CFC: .4byte 0x021D05E8
	thumb_func_end FUN_02005CF4

	thumb_func_start FUN_02005D00
FUN_02005D00: @ 0x02005D00
	ldr r0, _02005D0C @ =0x021D05E8
	movs r1, #0
	str r1, [r0, #0xc]
	str r1, [r0, #4]
	bx lr
	nop
_02005D0C: .4byte 0x021D05E8
	thumb_func_end FUN_02005D00

	thumb_func_start FUN_02005D10
FUN_02005D10: @ 0x02005D10
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	bl FUN_020054D4
	bl FUN_0200480C
	str r5, [sp]
	movs r1, #1
	str r1, [sp, #4]
	subs r1, r1, #2
	adds r2, r1, #0
	adds r3, r1, #0
	adds r4, r0, #0
	bl FUN_02006C14
	adds r6, r0, #0
	bne _02005D3A
	adds r0, r5, #0
	bl FUN_02004920
_02005D3A:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02005DA0
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02005D10

	thumb_func_start FUN_02005D48
FUN_02005D48: @ 0x02005D48
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl FUN_020054D4
	adds r5, r0, #0
	bl FUN_0200480C
	adds r6, r0, #0
	cmp r5, #7
	bne _02005D6A
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_02005DC4
	adds r5, r0, #0
	b _02005D84
_02005D6A:
	cmp r5, #1
	bne _02005D7C
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_02005DF4
	adds r5, r0, #0
	b _02005D84
_02005D7C:
	bl FUN_0202551C
	movs r0, #0
	pop {r4, r5, r6, pc}
_02005D84:
	movs r0, #0
	bl FUN_020059E0
	cmp r5, #0
	bne _02005D94
	adds r0, r4, #0
	bl FUN_02004920
_02005D94:
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_02005DA0
	adds r0, r5, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02005D48

	thumb_func_start FUN_02005DA0
FUN_02005DA0: @ 0x02005DA0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_02004A60
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02005464
	movs r0, #1
	bl FUN_020043B0
	cmp r4, #0
	bne _02005DC2
	movs r0, #0x80
	bl FUN_02004958
_02005DC2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005DA0

	thumb_func_start FUN_02005DC4
FUN_02005DC4: @ 0x02005DC4
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #3
	adds r4, r2, #0
	bl FUN_02005328
	bl FUN_02004714
	adds r0, r5, #0
	bl FUN_02004764
	str r5, [sp]
	movs r1, #1
	str r1, [sp, #4]
	subs r1, r1, #2
	adds r0, r4, #0
	adds r2, r1, #0
	adds r3, r1, #0
	bl FUN_02006C14
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02005DC4

	thumb_func_start FUN_02005DF4
FUN_02005DF4: @ 0x02005DF4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #0x13
	adds r6, r2, #0
	bl FUN_02004400
	movs r0, #0x20
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0
	bl FUN_020047E8
	bl FUN_020054F0
	bl FUN_02005504
	adds r1, r0, #0
	adds r0, r5, #0
	bl FUN_020051A4
	movs r0, #0
	bl FUN_02004A08
	ldrh r0, [r4]
	bl FUN_02005504
	adds r2, r0, #0
	str r5, [sp]
	movs r1, #1
	str r1, [sp, #4]
	subs r1, r1, #2
	adds r0, r6, #0
	adds r3, r1, #0
	bl FUN_02006C14
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02005DF4

	thumb_func_start FUN_02005E44
FUN_02005E44: @ 0x02005E44
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0x15
	bl FUN_02004400
	ldrb r0, [r0]
	cmp r0, #4
	beq _02005E60
	bl FUN_0202551C
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, pc}
_02005E60:
	adds r0, r4, #0
	bl FUN_020054D4
	cmp r0, #7
	beq _02005E74
	bl FUN_0202551C
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, pc}
_02005E74:
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02004784
	str r4, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #7
	adds r1, r0, #0
	subs r1, #8
	adds r2, r1, #0
	adds r3, r1, #0
	bl FUN_02006C14
	adds r5, r0, #0
	bne _02005E9A
	adds r0, r4, #0
	bl FUN_02004920
_02005E9A:
	movs r0, #0
	bl FUN_02004A08
	adds r0, r4, #0
	bl FUN_02004A60
	movs r0, #1
	bl FUN_020043B0
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02005E44

	thumb_func_start FUN_02005EB4
FUN_02005EB4: @ 0x02005EB4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	blx FUN_020C80C4
	adds r0, r5, #0
	bl FUN_02005C6C
	cmp r5, r0
	beq _02005ECE
	adds r1, r4, #0
	blx FUN_020C80C4
_02005ECE:
	adds r0, r5, #0
	bl FUN_020054D4
	cmp r0, #0xff
	beq _02005EE4
	bl FUN_0200480C
	bl FUN_020047E8
	blx FUN_020C81D0
_02005EE4:
	bl FUN_02005EEC
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02005EB4

	thumb_func_start FUN_02005EEC
FUN_02005EEC: @ 0x02005EEC
	push {r3, lr}
	movs r0, #0
	bl FUN_02004A08
	movs r0, #0
	bl FUN_02004A60
	movs r0, #0
	bl FUN_02004A9C
	movs r0, #0
	bl FUN_02004AB8
	movs r0, #0
	bl FUN_020043B0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02005EEC

	thumb_func_start FUN_02005F10
FUN_02005F10: @ 0x02005F10
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_02004A90
	bl FUN_020054D4
	cmp r0, #0xff
	beq _02005F4C
	bl FUN_0200480C
	adds r7, r0, #0
	cmp r4, #0
	bne _02005F36
	movs r1, #0
	adds r2, r1, #0
	bl FUN_02005408
_02005F36:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_02005408
	adds r0, r5, #0
	bl FUN_02005990
	movs r0, #3
	bl FUN_020043B0
_02005F4C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02005F10

	thumb_func_start FUN_02005F50
FUN_02005F50: @ 0x02005F50
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_02004A90
	bl FUN_020054D4
	adds r6, r0, #0
	cmp r6, #0xff
	beq _02005F86
	bl FUN_02005F88
	cmp r0, #0
	bne _02005F80
	adds r0, r6, #0
	bl FUN_0200480C
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02005408
	adds r0, r4, #0
	bl FUN_02005990
_02005F80:
	movs r0, #4
	bl FUN_020043B0
_02005F86:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02005F50

	thumb_func_start FUN_02005F88
FUN_02005F88: @ 0x02005F88
	push {r3, lr}
	movs r0, #7
	bl FUN_02004400
	ldrh r0, [r0]
	pop {r3, pc}
	thumb_func_end FUN_02005F88

	thumb_func_start FUN_02005F94
FUN_02005F94: @ 0x02005F94
	push {r3, lr}
	bl FUN_020054D4
	bl FUN_020054C0
	pop {r3, pc}
	thumb_func_end FUN_02005F94

	thumb_func_start FUN_02005FA0
FUN_02005FA0: @ 0x02005FA0
	push {r3, r4, r5, lr}
	movs r0, #0x10
	bl FUN_02004400
	adds r5, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0
	blx FUN_020C811C
	ldrb r0, [r5]
	cmp r0, #1
	bne _02005FC4
	movs r0, #0xe
	bl FUN_02005728
_02005FC4:
	ldrb r0, [r4]
	cmp r0, #1
	bne _02005FD0
	movs r0, #0xf
	bl FUN_02005728
_02005FD0:
	movs r0, #0
	bl FUN_020043B0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02005FA0

	thumb_func_start FUN_02005FD8
FUN_02005FD8: @ 0x02005FD8
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #0x10
	bl FUN_02004400
	adds r7, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #7
	bl FUN_020047E8
	movs r1, #0
	blx FUN_020C8058
	bl FUN_02005EEC
	movs r5, #0
	adds r4, r5, #0
_02005FFE:
	adds r0, r5, #3
	adds r1, r4, #0
	bl FUN_0200615C
	adds r5, r5, #1
	cmp r5, #4
	blt _02005FFE
	movs r0, #0
	bl FUN_02006300
	ldrb r0, [r7]
	cmp r0, #1
	bne _0200601E
	movs r0, #0xe
	bl FUN_02005728
_0200601E:
	ldrb r0, [r6]
	cmp r0, #1
	bne _0200602A
	movs r0, #0xf
	bl FUN_02005728
_0200602A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02005FD8

	thumb_func_start FUN_0200602C
FUN_0200602C: @ 0x0200602C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0200604C
	adds r6, r0, #0
	ldr r1, _02006048 @ =0x0000FFFF
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_020061B4
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	nop
_02006048: .4byte 0x0000FFFF
	thumb_func_end FUN_0200602C

	thumb_func_start FUN_0200604C
FUN_0200604C: @ 0x0200604C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	bl FUN_020054D4
	bl FUN_0200480C
	movs r1, #0
	mvns r1, r1
	adds r2, r1, #0
	adds r3, r1, #0
	str r4, [sp]
	bl FUN_020060BC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_0200604C

	thumb_func_start FUN_0200606C
FUN_0200606C: @ 0x0200606C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_0200480C
	movs r2, #0
	mvns r2, r2
	adds r1, r4, #0
	adds r3, r2, #0
	str r5, [sp]
	bl FUN_020060BC
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200606C

	thumb_func_start FUN_02006088
FUN_02006088: @ 0x02006088
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r0, #0x20
	bl FUN_02004400
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_020054D4
	bl FUN_0200480C
	adds r6, r0, #0
	ldrh r0, [r4]
	bl FUN_02005504
	movs r1, #0
	mvns r1, r1
	adds r2, r0, #0
	adds r0, r6, #0
	adds r3, r1, #0
	str r5, [sp]
	bl FUN_020060BC
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_02006088

	thumb_func_start FUN_020060BC
FUN_020060BC: @ 0x020060BC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	ldr r5, [sp, #0x20]
	bl FUN_02005BFC
	cmp r0, #1
	bne _020060E0
	ldr r0, _02006114 @ =0x000005DC
	subs r0, r5, r0
	cmp r0, #1
	bhi _020060E0
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_020060E0:
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r3, [sp, #8]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_02006C14
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02005464
	cmp r4, #0
	bne _0200610C
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	bl FUN_02004920
_0200610C:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02006114: .4byte 0x000005DC
	thumb_func_end FUN_020060BC

	thumb_func_start FUN_02006118
FUN_02006118: @ 0x02006118
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0200604C
	adds r6, r0, #0
	beq _0200612E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020054AC
_0200612E:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02006118

	thumb_func_start FUN_02006134
FUN_02006134: @ 0x02006134
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0200604C
	adds r6, r0, #0
	beq _0200614C
	ldr r1, _02006150 @ =0x0000FFFF
	adds r0, r5, #0
	adds r2, r4, #0
	bl FUN_0200592C
_0200614C:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02006150: .4byte 0x0000FFFF
	thumb_func_end FUN_02006134

	thumb_func_start FUN_02006154
FUN_02006154: @ 0x02006154
	ldr r3, _02006158 @ =FUN_020C80C4
	bx r3
	.align 2, 0
_02006158: .4byte FUN_020C80C4
	thumb_func_end FUN_02006154

	thumb_func_start FUN_0200615C
FUN_0200615C: @ 0x0200615C
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020047E8
	adds r1, r4, #0
	blx FUN_020C8058
	pop {r4, pc}
	thumb_func_end FUN_0200615C

	thumb_func_start FUN_0200616C
FUN_0200616C: @ 0x0200616C
	push {r3, r4, r5, lr}
	movs r5, #0
	adds r4, r5, #0
_02006172:
	adds r0, r5, #3
	adds r1, r4, #0
	bl FUN_0200615C
	adds r5, r5, #1
	cmp r5, #4
	blt _02006172
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200616C

	thumb_func_start FUN_02006184
FUN_02006184: @ 0x02006184
	push {r3, lr}
	bl FUN_020054D4
	bl FUN_020054C0
	pop {r3, pc}
	thumb_func_end FUN_02006184

	thumb_func_start FUN_02006190
FUN_02006190: @ 0x02006190
	ldr r3, _02006194 @ =FUN_020054C0
	bx r3
	.align 2, 0
_02006194: .4byte FUN_020054C0
	thumb_func_end FUN_02006190

	thumb_func_start FUN_02006198
FUN_02006198: @ 0x02006198
	push {r4, lr}
	movs r4, #0
_0200619C:
	adds r0, r4, #3
	bl FUN_020054C0
	cmp r0, #1
	bne _020061AA
	movs r0, #1
	pop {r4, pc}
_020061AA:
	adds r4, r4, #1
	cmp r4, #4
	blt _0200619C
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_02006198

	thumb_func_start FUN_020061B4
FUN_020061B4: @ 0x020061B4
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020054D4
	bl FUN_0200480C
	bl FUN_020047E8
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_020C829C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020061B4

	thumb_func_start FUN_020061D0
FUN_020061D0: @ 0x020061D0
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0200480C
	bl FUN_020047E8
	ldr r1, _020061E8 @ =0x0000FFFF
	adds r2, r4, #0
	blx FUN_020C829C
	pop {r4, pc}
	nop
_020061E8: .4byte 0x0000FFFF
	thumb_func_end FUN_020061D0

	thumb_func_start FUN_020061EC
FUN_020061EC: @ 0x020061EC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r0, #3
	bl FUN_0200480C
	ldr r7, _02006214 @ =0x0000FFFF
	adds r4, r0, #0
	movs r5, #0
_020061FC:
	adds r0, r4, r5
	bl FUN_020047E8
	adds r1, r7, #0
	adds r2, r6, #0
	blx FUN_020C829C
	adds r5, r5, #1
	cmp r5, #4
	blt _020061FC
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02006214: .4byte 0x0000FFFF
	thumb_func_end FUN_020061EC

	thumb_func_start FUN_02006218
FUN_02006218: @ 0x02006218
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0x12
	str r1, [sp, #8]
	bl FUN_02004400
	adds r7, r0, #0
	movs r0, #0x24
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x35
	bl FUN_02004400
	adds r4, r0, #0
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_02006A0C
	cmp r0, #1
	bne _02006246
	ldr r5, _020062D8 @ =0x000001EE
_02006246:
	ldr r0, _020062D8 @ =0x000001EE
	cmp r5, r0
	beq _02006258
	adds r0, r0, #1
	cmp r5, r0
	bhi _02006256
	cmp r5, #0
	bne _02006258
_02006256:
	movs r5, #1
_02006258:
	ldr r0, _020062DC @ =0x000001B9
	cmp r5, r0
	bne _0200627A
	movs r1, #0
	ldr r0, [r6]
	movs r2, #0x7f
	adds r3, r1, #0
	bl FUN_02006D04
	cmp r0, #1
	bne _0200627A
	movs r0, #0
	bl FUN_02006E3C
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200627A:
	ldrb r0, [r7]
	cmp r0, #0
	bne _020062AC
	ldrb r0, [r4]
	cmp r0, #0
	bne _0200628C
	movs r0, #0
	bl FUN_02006300
_0200628C:
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	subs r1, r0, #2
	adds r2, r5, #0
	adds r3, r1, #0
	bl FUN_02006C14
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02005464
	b _020062CC
_020062AC:
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #8
	adds r1, r0, #0
	subs r1, #9
	adds r2, r5, #0
	adds r3, r1, #0
	bl FUN_02006C14
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #8
	bl FUN_02005464
_020062CC:
	movs r0, #0
	bl FUN_02006E3C
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020062D8: .4byte 0x000001EE
_020062DC: .4byte 0x000001B9
	thumb_func_end FUN_02006218

	thumb_func_start FUN_020062E0
FUN_020062E0: @ 0x020062E0
	push {lr}
	sub sp, #0xc
	adds r3, r0, #0
	movs r0, #0xb
	str r0, [sp]
	str r1, [sp, #4]
	adds r1, r3, #0
	movs r0, #0
	str r2, [sp, #8]
	adds r2, r0, #0
	movs r3, #0x7f
	bl FUN_02006920
	movs r0, #1
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_020062E0

	thumb_func_start FUN_02006300
FUN_02006300: @ 0x02006300
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #0x10
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0xf
	bl FUN_02004400
	movs r0, #1
	bl FUN_020047E8
	adds r1, r5, #0
	blx FUN_020C8058
	movs r0, #8
	bl FUN_020047E8
	adds r1, r5, #0
	blx FUN_020C8058
	ldrb r0, [r6]
	cmp r0, #1
	bne _02006344
	movs r0, #0xe
	bl FUN_020058B8
	movs r0, #0xe
	bl FUN_02005680
_02006344:
	ldrb r0, [r4]
	cmp r0, #1
	bne _02006356
	movs r0, #0xf
	bl FUN_020058B8
	movs r0, #0xf
	bl FUN_02005680
_02006356:
	bl FUN_02006DB8
	bl FUN_02006A30
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02006300

	thumb_func_start FUN_02006360
FUN_02006360: @ 0x02006360
	push {r3, r4, r5, lr}
	movs r0, #0x10
	bl FUN_02004400
	adds r5, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0xf
	bl FUN_02004400
	movs r0, #0x2e
	bl FUN_02004400
	ldrb r0, [r5]
	cmp r0, #1
	bne _0200638C
	movs r0, #0xe
	bl FUN_02005738
	pop {r3, r4, r5, pc}
_0200638C:
	ldrb r0, [r4]
	cmp r0, #1
	bne _0200639A
	movs r0, #0xf
	bl FUN_02005738
	pop {r3, r4, r5, pc}
_0200639A:
	movs r0, #0
	bl FUN_020054C0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02006360

	thumb_func_start FUN_020063A4
FUN_020063A4: @ 0x020063A4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp, #4]
	ldr r0, [sp, #0x38]
	adds r4, r1, #0
	str r0, [sp, #0x38]
	movs r0, #0x10
	adds r6, r2, #0
	adds r7, r3, #0
	ldr r5, [sp, #0x3c]
	bl FUN_02004400
	str r0, [sp, #0x14]
	movs r0, #0x11
	bl FUN_02004400
	str r0, [sp, #0x10]
	movs r0, #0x12
	bl FUN_02004400
	str r0, [sp, #0xc]
	movs r0, #0x1e
	bl FUN_02004400
	str r0, [sp, #8]
	movs r0, #0x24
	bl FUN_02004400
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006A0C
	cmp r0, #1
	bne _020063EA
	ldr r4, _02006740 @ =0x000001EE
_020063EA:
	ldr r0, _02006740 @ =0x000001EE
	cmp r4, r0
	beq _020063FC
	adds r0, r0, #1
	cmp r4, r0
	bhi _020063FA
	cmp r4, #0
	bne _020063FC
_020063FA:
	movs r4, #1
_020063FC:
	lsrs r0, r6, #0x1f
	adds r0, r6, r0
	asrs r0, r0, #1
	str r0, [sp, #0x1c]
	adds r0, #0x40
	str r0, [sp, #0x1c]
	adds r0, r7, #0
	str r0, [sp, #0x18]
	subs r0, #0x1e
	str r0, [sp, #0x18]
	cmp r0, #0
	bgt _02006418
	movs r0, #1
	str r0, [sp, #0x18]
_02006418:
	ldr r0, [sp, #0xc]
	movs r1, #0
	strb r1, [r0]
	ldr r0, [sp, #0x14]
	ldrb r0, [r0]
	cmp r0, #1
	bne _02006432
	movs r0, #0xe
	bl FUN_020058B8
	movs r0, #0xe
	bl FUN_02005680
_02006432:
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	cmp r0, #1
	bne _02006446
	movs r0, #0xf
	bl FUN_020058B8
	movs r0, #0xf
	bl FUN_02005680
_02006446:
	ldr r0, _02006744 @ =0x000001B9
	cmp r4, r0
	bne _020064DA
	ldr r1, [sp, #4]
	cmp r1, #0xc
	bhi _020064D4
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0200645E: @ jump table
	.2byte _02006478 - _0200645E - 2 @ case 0
	.2byte _02006478 - _0200645E - 2 @ case 1
	.2byte _02006478 - _0200645E - 2 @ case 2
	.2byte _020064D4 - _0200645E - 2 @ case 3
	.2byte _020064D4 - _0200645E - 2 @ case 4
	.2byte _02006478 - _0200645E - 2 @ case 5
	.2byte _020064D4 - _0200645E - 2 @ case 6
	.2byte _020064D4 - _0200645E - 2 @ case 7
	.2byte _020064D4 - _0200645E - 2 @ case 8
	.2byte _020064D4 - _0200645E - 2 @ case 9
	.2byte _020064D4 - _0200645E - 2 @ case 10
	.2byte _02006478 - _0200645E - 2 @ case 11
	.2byte _02006478 - _0200645E - 2 @ case 12
_02006478:
	adds r1, r5, #0
	bl FUN_02006218
	ldr r0, [sp, #8]
	ldrb r0, [r0]
	cmp r0, #0
	bne _0200649C
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	b _020064CE
_0200649C:
	ldr r0, [sp, #0x14]
	ldrb r0, [r0]
	cmp r0, #1
	bne _020064BA
	ldr r1, [sp, #0x1c]
	movs r0, #0xe
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_02005748
	movs r0, #0xe
	adds r1, r7, #0
	bl FUN_02005774
	b _020064CE
_020064BA:
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
_020064CE:
	add sp, #0x20
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_020064D4:
	movs r0, #1
	bl FUN_02006E3C
_020064DA:
	ldr r0, [sp, #4]
	cmp r0, #0xe
	bls _020064E2
	b _02006814
_020064E2:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_020064EE: @ jump table
	.2byte _0200650C - _020064EE - 2 @ case 0
	.2byte _0200652A - _020064EE - 2 @ case 1
	.2byte _02006550 - _020064EE - 2 @ case 2
	.2byte _02006596 - _020064EE - 2 @ case 3
	.2byte _020065E4 - _020064EE - 2 @ case 4
	.2byte _02006636 - _020064EE - 2 @ case 5
	.2byte _02006660 - _020064EE - 2 @ case 6
	.2byte _020066A8 - _020064EE - 2 @ case 7
	.2byte _020066DA - _020064EE - 2 @ case 8
	.2byte _0200670A - _020064EE - 2 @ case 9
	.2byte _0200674C - _020064EE - 2 @ case 10
	.2byte _0200677E - _020064EE - 2 @ case 11
	.2byte _020067A8 - _020064EE - 2 @ case 12
	.2byte _020067DA - _020064EE - 2 @ case 13
	.2byte _0200680C - _020064EE - 2 @ case 14
_0200650C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	b _02006814
_0200652A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0x14
	bl FUN_02006838
	b _02006814
_02006550:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	movs r2, #0x40
	bl FUN_02005918
	adds r0, r4, #0
	movs r1, #0x14
	adds r2, r5, #0
	bl FUN_02006AC0
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #8
	adds r2, r6, #0
	bl FUN_02005958
	ldr r2, [sp, #0x18]
	adds r0, r4, #0
	movs r1, #8
	bl FUN_02006820
	b _02006814
_02006596:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0x1e
	bl FUN_02006838
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	movs r2, #0xc0
	bl FUN_02005918
	adds r0, r4, #0
	movs r1, #0x10
	adds r2, r5, #0
	bl FUN_02006AC0
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #8
	adds r2, r6, #0
	bl FUN_02005958
	ldr r2, [sp, #0x18]
	adds r0, r4, #0
	movs r1, #8
	bl FUN_02006820
	b _02006814
_020065E4:
	movs r0, #0xe
	bl FUN_02005600
	ldr r0, [sp, #0x38]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r3, #0xe
	bl FUN_020057AC
	ldr r1, [sp, #0x1c]
	movs r0, #0xe
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_02005748
	ldr r1, [sp, #0x38]
	movs r0, #0xf
	bl FUN_02006838
	movs r1, #0x86
	movs r0, #0xe
	lsls r1, r1, #8
	bl FUN_02005760
	ldr r0, [sp, #0x38]
	movs r1, #0x3f
	str r0, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	adds r0, r4, #0
	mvns r1, r1
	bl FUN_02006AF4
	movs r1, #0x86
	movs r0, #0xf
	lsls r1, r1, #8
	bl FUN_02005760
	b _02006814
_02006636:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	movs r0, #1
	adds r2, r0, #0
	ldr r1, _02006748 @ =0x0000FFFF
	subs r2, #0xe1
	bl FUN_02005918
	b _02006814
_02006660:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	movs r2, #0x2c
	bl FUN_02005918
	movs r1, #0x3f
	adds r0, r4, #0
	mvns r1, r1
	adds r2, r5, #0
	bl FUN_02006AC0
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #8
	adds r2, r6, #0
	bl FUN_02005958
	ldr r2, [sp, #0x18]
	adds r0, r4, #0
	movs r1, #8
	bl FUN_02006820
	b _02006814
_020066A8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0xb
	bl FUN_02006838
	movs r0, #1
	adds r2, r0, #0
	ldr r1, _02006748 @ =0x0000FFFF
	subs r2, #0x81
	bl FUN_02005918
	b _02006814
_020066DA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0x3c
	bl FUN_02006838
	ldr r1, _02006748 @ =0x0000FFFF
	movs r0, #1
	movs r2, #0x3c
	bl FUN_02005918
	b _02006814
_0200670A:
	movs r0, #0xe
	bl FUN_02005600
	ldr r0, [sp, #0x38]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r3, #0xe
	bl FUN_020057AC
	ldr r1, [sp, #0x1c]
	movs r0, #0xe
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_02005748
	ldr r1, [sp, #0x38]
	movs r0, #0xd
	bl FUN_02006838
	movs r1, #0x1a
	movs r0, #0xe
	lsls r1, r1, #0xa
	bl FUN_02005760
	b _02006814
	.align 2, 0
_02006740: .4byte 0x000001EE
_02006744: .4byte 0x000001B9
_02006748: .4byte 0x0000FFFF
_0200674C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _0200681C @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0x64
	bl FUN_02006838
	movs r0, #1
	adds r2, r0, #0
	ldr r1, _0200681C @ =0x0000FFFF
	subs r2, #0x2d
	bl FUN_02005918
	b _02006814
_0200677E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _0200681C @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	movs r0, #1
	adds r2, r0, #0
	ldr r1, _0200681C @ =0x0000FFFF
	subs r2, #0x61
	bl FUN_02005918
	b _02006814
_020067A8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	ldr r1, _0200681C @ =0x0000FFFF
	movs r0, #1
	adds r2, r6, #0
	bl FUN_02005958
	adds r0, r4, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02006820
	ldr r1, [sp, #0x38]
	movs r0, #0x14
	bl FUN_02006838
	movs r0, #1
	adds r2, r0, #0
	ldr r1, _0200681C @ =0x0000FFFF
	subs r2, #0x61
	bl FUN_02005918
	b _02006814
_020067DA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x7f
	bl FUN_02006820
	adds r0, r4, #0
	movs r1, #0x14
	adds r2, r5, #0
	bl FUN_02006AC0
	ldr r1, _0200681C @ =0x0000FFFF
	movs r0, #8
	adds r2, r6, #0
	bl FUN_02005958
	movs r0, #8
	adds r1, r7, #0
	movs r2, #0
	bl FUN_02005408
	b _02006814
_0200680C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02006218
_02006814:
	movs r0, #1
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200681C: .4byte 0x0000FFFF
	thumb_func_end FUN_020063A4

	thumb_func_start FUN_02006820
FUN_02006820: @ 0x02006820
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r2, #0
	bl FUN_0200542C
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02005464
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02006820

	thumb_func_start FUN_02006838
FUN_02006838: @ 0x02006838
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #0x23
	bl FUN_02004400
	adds r6, r0, #0
	bl FUN_020068F8
	adds r0, r4, #0
	movs r1, #8
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _0200685C
	bl FUN_0202551C
	pop {r4, r5, r6, pc}
_0200685C:
	movs r2, #0
	strb r2, [r4]
	strb r2, [r4, #1]
	strb r2, [r4, #2]
	strb r2, [r4, #3]
	strb r2, [r4, #4]
	strb r2, [r4, #5]
	strb r2, [r4, #6]
	strb r2, [r4, #7]
	ldr r0, _02006880 @ =FUN_02006884
	adds r1, r4, #0
	str r5, [r4]
	bl FUN_0200E320
	str r0, [r4, #4]
	str r0, [r6]
	pop {r4, r5, r6, pc}
	nop
_02006880: .4byte FUN_02006884
	thumb_func_end FUN_02006838

	thumb_func_start FUN_02006884
FUN_02006884: @ 0x02006884
	push {r4, r5, r6, lr}
	movs r0, #0x10
	adds r5, r1, #0
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x11
	bl FUN_02004400
	ldr r2, [r5]
	adds r4, r0, #0
	cmp r2, #0xa
	bne _020068B0
	movs r0, #1
	movs r1, #0
	bl FUN_02005408
	ldr r2, [r5]
	movs r0, #8
	movs r1, #0
	bl FUN_02005408
_020068B0:
	ldr r0, [r5]
	subs r0, r0, #1
	str r0, [r5]
	bl FUN_02006360
	cmp r0, #0
	bne _020068C2
	movs r0, #0
	str r0, [r5]
_020068C2:
	ldr r0, [r5]
	cmp r0, #0
	bgt _020068F6
	movs r0, #0
	bl FUN_02006300
	ldrb r0, [r6]
	cmp r0, #1
	bne _020068E0
	movs r0, #0xe
	bl FUN_020058B8
	movs r0, #0xe
	bl FUN_02005680
_020068E0:
	ldrb r0, [r4]
	cmp r0, #1
	bne _020068F2
	movs r0, #0xf
	bl FUN_020058B8
	movs r0, #0xf
	bl FUN_02005680
_020068F2:
	bl FUN_020068F8
_020068F6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02006884

	thumb_func_start FUN_020068F8
FUN_020068F8: @ 0x020068F8
	push {r3, r4, r5, lr}
	movs r0, #0x23
	bl FUN_02004400
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0200691A
	bl FUN_0201F988
	adds r5, r0, #0
	ldr r0, [r4]
	bl FUN_0200E390
	adds r0, r5, #0
	bl FUN_0201AB0C
_0200691A:
	movs r0, #0
	str r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020068F8

	thumb_func_start FUN_02006920
FUN_02006920: @ 0x02006920
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r6, r0, #0
	movs r0, #6
	adds r5, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0x35
	bl FUN_02004400
	str r0, [sp, #0xc]
	ldrb r0, [r4]
	cmp r0, #0
	bne _02006974
	movs r0, #0x29
	bl FUN_02004400
	str r0, [sp, #0x24]
	movs r0, #0x2d
	bl FUN_02004400
	str r0, [sp, #0x20]
	movs r0, #0x2a
	bl FUN_02004400
	str r0, [sp, #0x1c]
	movs r0, #0x2b
	bl FUN_02004400
	str r0, [sp, #0x18]
	movs r0, #0x2c
	bl FUN_02004400
	str r0, [sp, #0x14]
	movs r0, #0x2e
	bl FUN_02004400
	str r0, [sp, #0x10]
	b _020069A4
_02006974:
	movs r0, #0x2f
	bl FUN_02004400
	str r0, [sp, #0x24]
	movs r0, #0x33
	bl FUN_02004400
	str r0, [sp, #0x20]
	movs r0, #0x30
	bl FUN_02004400
	str r0, [sp, #0x1c]
	movs r0, #0x31
	bl FUN_02004400
	str r0, [sp, #0x18]
	movs r0, #0x32
	bl FUN_02004400
	str r0, [sp, #0x14]
	movs r0, #0x34
	bl FUN_02004400
	str r0, [sp, #0x10]
_020069A4:
	ldr r0, [sp, #0xc]
	ldrb r0, [r0]
	cmp r0, #1
	bne _020069B4
	ldrb r1, [r4]
	movs r0, #1
	eors r0, r1
	strb r0, [r4]
_020069B4:
	add r1, sp, #0x30
	ldrb r1, [r1, #0x18]
	adds r0, r5, #0
	bl FUN_02006A0C
	cmp r0, #1
	bne _020069C4
	ldr r5, _02006A08 @ =0x000001EE
_020069C4:
	cmp r5, #0
	beq _02006A04
	add r1, sp, #0x30
	ldrb r0, [r1, #0x14]
	cmp r0, #0
	bne _020069E8
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldrb r0, [r1, #0x18]
	adds r1, r5, #0
	adds r2, r7, #0
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_020063A4
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
_020069E8:
	ldr r1, [sp, #0x24]
	ldr r2, [sp, #8]
	str r6, [r1]
	ldr r1, [sp, #0x20]
	strh r5, [r1]
	ldr r1, [sp, #0x1c]
	str r7, [r1]
	ldr r1, [sp, #0x18]
	str r2, [r1]
	ldr r2, [sp, #0x40]
	ldr r1, [sp, #0x14]
	str r2, [r1]
	ldr r1, [sp, #0x10]
	strb r0, [r1]
_02006A04:
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02006A08: .4byte 0x000001EE
	thumb_func_end FUN_02006920

	thumb_func_start FUN_02006A0C
FUN_02006A0C: @ 0x02006A0C
	movs r2, #0x7b
	lsls r2, r2, #2
	cmp r0, r2
	bne _02006A1C
	cmp r1, #1
	bne _02006A1C
	movs r0, #1
	bx lr
_02006A1C:
	ldr r1, _02006A2C @ =0x000001EE
	cmp r0, r1
	bne _02006A26
	movs r0, #1
	bx lr
_02006A26:
	movs r0, #0
	bx lr
	nop
_02006A2C: .4byte 0x000001EE
	thumb_func_end FUN_02006A0C

	thumb_func_start FUN_02006A30
FUN_02006A30: @ 0x02006A30
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	movs r0, #0x29
	bl FUN_02004400
	adds r5, r0, #0
	movs r0, #0x2d
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0x2a
	bl FUN_02004400
	adds r6, r0, #0
	movs r0, #0x2b
	bl FUN_02004400
	adds r7, r0, #0
	movs r0, #0x2c
	bl FUN_02004400
	str r0, [sp]
	movs r0, #0x2e
	bl FUN_02004400
	str r0, [sp, #4]
	movs r0, #0x2f
	bl FUN_02004400
	str r0, [sp, #8]
	movs r0, #0x33
	bl FUN_02004400
	str r0, [sp, #0xc]
	movs r0, #0x30
	bl FUN_02004400
	str r0, [sp, #0x10]
	movs r0, #0x31
	bl FUN_02004400
	str r0, [sp, #0x14]
	movs r0, #0x32
	bl FUN_02004400
	str r0, [sp, #0x18]
	movs r0, #0x34
	bl FUN_02004400
	movs r1, #0
	str r1, [r5]
	strh r1, [r4]
	str r1, [r6]
	ldr r2, [sp]
	str r1, [r7]
	str r1, [r2]
	ldr r2, [sp, #4]
	strb r1, [r2]
	ldr r2, [sp, #8]
	str r1, [r2]
	ldr r2, [sp, #0xc]
	strh r1, [r2]
	ldr r2, [sp, #0x10]
	str r1, [r2]
	ldr r2, [sp, #0x14]
	str r1, [r2]
	ldr r2, [sp, #0x18]
	str r1, [r2]
	strb r1, [r0]
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02006A30

	thumb_func_start FUN_02006AC0
FUN_02006AC0: @ 0x02006AC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #0x12
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_02004400
	movs r1, #1
	strb r1, [r0]
	adds r0, r1, #0
	bl FUN_02006E3C
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02006218
	adds r5, r0, #0
	ldr r1, _02006AF0 @ =0x0000FFFF
	movs r0, #8
	adds r2, r4, #0
	bl FUN_02005918
	adds r0, r5, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02006AF0: .4byte 0x0000FFFF
	thumb_func_end FUN_02006AC0

	thumb_func_start FUN_02006AF4
FUN_02006AF4: @ 0x02006AF4
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r0, #0x12
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_02004400
	movs r1, #1
	strb r1, [r0]
	movs r0, #0xf
	bl FUN_02005600
	ldr r0, [sp, #0x18]
	adds r1, r4, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r6, #0
	movs r3, #0xf
	bl FUN_020057AC
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02006AF4

	thumb_func_start FUN_02006B24
FUN_02006B24: @ 0x02006B24
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	bl FUN_020054F8
	adds r0, r4, #0
	bl FUN_02006C04
	bl FUN_02004A90
	bl FUN_020054D4
	cmp r0, #0xff
	beq _02006B48
	movs r1, #1
	bl FUN_020053A8
	b _02006B4E
_02006B48:
	movs r0, #1
	bl FUN_02004A2C
_02006B4E:
	movs r0, #0x1d
	bl FUN_02004400
	bl FUN_020046E8
	adds r0, r4, #0
	movs r1, #3
	bl FUN_02004784
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #2
	subs r1, r0, #3
	adds r2, r1, #0
	adds r3, r1, #0
	bl FUN_02006C14
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl FUN_02005464
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02006B24

	thumb_func_start FUN_02006B84
FUN_02006B84: @ 0x02006B84
	push {r4, lr}
	movs r0, #0xe
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #2
	bl FUN_020054C0
	cmp r0, #0
	beq _02006B9C
	movs r0, #1
	pop {r4, pc}
_02006B9C:
	ldrh r0, [r4]
	cmp r0, #0
	beq _02006BAA
	subs r0, r0, #1
	strh r0, [r4]
	movs r0, #1
	pop {r4, pc}
_02006BAA:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02006B84

	thumb_func_start FUN_02006BB0
FUN_02006BB0: @ 0x02006BB0
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #2
	bl FUN_020047E8
	adds r1, r4, #0
	blx FUN_020C8058
	movs r0, #6
	bl FUN_02005328
	bl FUN_02004714
	pop {r4, pc}
	thumb_func_end FUN_02006BB0

	thumb_func_start FUN_02006BCC
FUN_02006BCC: @ 0x02006BCC
	push {r3, lr}
	movs r0, #0xe
	bl FUN_02004400
	bl FUN_02006B84
	cmp r0, #1
	bne _02006BE0
	movs r0, #1
	pop {r3, pc}
_02006BE0:
	movs r0, #0
	bl FUN_02006BB0
	bl FUN_02004A90
	bl FUN_020054D4
	cmp r0, #0xff
	beq _02006BF8
	movs r1, #0
	bl FUN_020053A8
_02006BF8:
	movs r0, #0
	bl FUN_02004A2C
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02006BCC

	thumb_func_start FUN_02006C04
FUN_02006C04: @ 0x02006C04
	push {r3, lr}
	movs r0, #0xe
	bl FUN_02004400
	movs r1, #0xf
	strh r1, [r0]
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02006C04

	thumb_func_start FUN_02006C14
FUN_02006C14: @ 0x02006C14
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp, #4]
	add r0, sp, #0x10
	ldrh r6, [r0, #0x10]
	ldrb r0, [r0, #0x14]
	adds r5, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	cmp r0, #1
	bne _02006C6A
	bl FUN_02005C18
	cmp r0, #1
	bne _02006C6A
	add r0, sp, #0x10
	ldrh r0, [r0, #0x10]
	bl FUN_02005C6C
	add r1, sp, #0x10
	ldrh r1, [r1, #0x10]
	adds r4, r0, #0
	cmp r1, r4
	beq _02006C6A
	adds r6, r4, #0
	ldr r7, _02006C88 @ =0x000002BD
	bl FUN_02004AB8
	adds r0, r4, #0
	bl FUN_020054D4
	movs r1, #0
	mvns r1, r1
	cmp r5, r1
	beq _02006C5E
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
_02006C5E:
	cmp r0, #7
	bne _02006C6A
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02004784
_02006C6A:
	ldr r0, [sp, #4]
	bl FUN_020047E8
	ldr r3, [sp, #8]
	adds r1, r5, #0
	adds r2, r7, #0
	str r6, [sp]
	blx FUN_020CA8E4
	adds r4, r0, #0
	bl FUN_02005CC0
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02006C88: .4byte 0x000002BD
	thumb_func_end FUN_02006C14

	thumb_func_start FUN_02006C8C
FUN_02006C8C: @ 0x02006C8C
	push {r4, lr}
	movs r0, #0x10
	bl FUN_02004400
	adds r4, r0, #0
	movs r0, #0x1e
	bl FUN_02004400
	ldrb r0, [r0]
	cmp r0, #1
	bne _02006CC2
	ldrb r0, [r4]
	cmp r0, #1
	bne _02006CBA
	movs r0, #0xe
	bl FUN_02005738
	cmp r0, #0
	bne _02006CC2
	bl FUN_02006DB8
	movs r0, #1
	pop {r4, pc}
_02006CBA:
	bl FUN_02006DB8
	movs r0, #1
	pop {r4, pc}
_02006CC2:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02006C8C

	thumb_func_start FUN_02006CC8
FUN_02006CC8: @ 0x02006CC8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r0, #0x1f
	bl FUN_02004400
	adds r5, r0, #0
	movs r0, #0x36
	bl FUN_02004400
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0202CE70
	cmp r0, #0
	bne _02006CEA
	movs r0, #0
	pop {r4, r5, r6, pc}
_02006CEA:
	ldrb r0, [r4]
	cmp r0, #1
	bne _02006CF4
	movs r0, #0
	pop {r4, r5, r6, pc}
_02006CF4:
	ldrb r0, [r5]
	cmp r0, #1
	beq _02006CFE
	movs r0, #1
	pop {r4, r5, r6, pc}
_02006CFE:
	movs r0, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02006CC8

	thumb_func_start FUN_02006D04
FUN_02006D04: @ 0x02006D04
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r6, r0, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_020059D8
	str r0, [sp]
	movs r0, #0x1e
	bl FUN_02004400
	str r0, [sp, #4]
	adds r0, r6, #0
	bl FUN_02006CC8
	cmp r0, #0
	bne _02006D2C
	add sp, #0x30
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02006D2C:
	movs r0, #0
	bl FUN_02006300
	bl FUN_02006DB8
	movs r0, #0xe
	bl FUN_02005600
	bl FUN_0201FD44
	lsrs r2, r0, #0x1f
	lsls r1, r0, #0x13
	subs r1, r1, r2
	movs r0, #0x13
	rors r1, r0
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r6, #0
	bl FUN_0202CE7C
	adds r1, r0, #0
	ldr r0, [sp]
	bl FUN_0202CE80
	movs r0, #0xe
	bl FUN_020055AC
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	bl FUN_020059D8
	str r0, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	movs r0, #0x7d
	lsls r0, r0, #4
	str r0, [sp, #0x1c]
	str r0, [sp, #0x20]
	movs r0, #2
	lsls r0, r0, #0xe
	adds r0, r4, r0
	str r0, [sp, #0x28]
	lsrs r0, r7, #0x1f
	adds r0, r7, r0
	asrs r0, r0, #1
	adds r0, #0x40
	str r0, [sp, #0x2c]
	add r0, sp, #8
	movs r1, #0xe
	str r5, [sp, #0x24]
	bl FUN_020056E8
	adds r4, r0, #0
	movs r0, #0xe
	adds r1, r5, #0
	bl FUN_02005774
	ldr r0, [sp, #4]
	movs r1, #1
	strb r1, [r0]
	movs r0, #0
	bl FUN_02006E3C
	adds r0, r4, #0
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02006D04

	thumb_func_start FUN_02006DB8
FUN_02006DB8: @ 0x02006DB8
	push {r3, r4, r5, lr}
	movs r0, #0x10
	bl FUN_02004400
	adds r5, r0, #0
	movs r0, #0x1e
	bl FUN_02004400
	adds r4, r0, #0
	ldrb r0, [r5]
	cmp r0, #1
	bne _02006DDC
	movs r0, #0xe
	bl FUN_020058B8
	movs r0, #0xe
	bl FUN_02005680
_02006DDC:
	movs r0, #0
	strb r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02006DB8

	thumb_func_start FUN_02006DE4
FUN_02006DE4: @ 0x02006DE4
	push {lr}
	sub sp, #0x1c
	movs r0, #2
	str r0, [sp]
	bl FUN_020059D8
	movs r1, #0x7d
	str r0, [sp, #4]
	lsls r1, r1, #4
	movs r0, #0x1f
	str r1, [sp, #8]
	tst r0, r1
	beq _02006E04
	movs r0, #0x1f
	bics r1, r0
	str r1, [sp, #8]
_02006E04:
	ldr r0, _02006E1C @ =0x00004174
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	add r0, sp, #0
	bl FUN_02005520
	add sp, #0x1c
	pop {pc}
	nop
_02006E1C: .4byte 0x00004174
	thumb_func_end FUN_02006DE4

	thumb_func_start FUN_02006E20
FUN_02006E20: @ 0x02006E20
	ldr r3, _02006E24 @ =FUN_02005550
	bx r3
	.align 2, 0
_02006E24: .4byte FUN_02005550
	thumb_func_end FUN_02006E20

	thumb_func_start FUN_02006E28
FUN_02006E28: @ 0x02006E28
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020059D8
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_0202CEB8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02006E28

	thumb_func_start FUN_02006E3C
FUN_02006E3C: @ 0x02006E3C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x1f
	bl FUN_02004400
	strb r4, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02006E3C

	thumb_func_start FUN_02006E4C
FUN_02006E4C: @ 0x02006E4C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r0, #0x24
	adds r7, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_02004400
	cmp r5, #0
	bne _02006E70
	ldr r0, [r0]
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_02006D04
	b _02006E7C
_02006E70:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_02006D04
_02006E7C:
	cmp r0, #0
	bne _02006E98
	movs r0, #1
	bl FUN_02006E3C
	movs r0, #0xb
	str r0, [sp]
	movs r0, #0
	ldr r1, _02006E9C @ =0x000001B9
	adds r2, r6, #0
	adds r3, r4, #0
	str r0, [sp, #4]
	bl FUN_020063A4
_02006E98:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02006E9C: .4byte 0x000001B9
	thumb_func_end FUN_02006E4C

	thumb_func_start FUN_02006EA0
FUN_02006EA0: @ 0x02006EA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #0x24
	adds r7, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_02004400
	cmp r5, #0
	bne _02006EC4
	ldr r0, [r0]
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_02006D04
	b _02006ED0
_02006EC4:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_02006D04
_02006ED0:
	cmp r0, #0
	bne _02006EF4
	movs r0, #1
	bl FUN_02006E3C
	movs r0, #0xb
	str r0, [sp]
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	ldr r1, _02006EF8 @ =0x000001B9
	adds r2, r6, #0
	str r0, [sp, #4]
	movs r0, #0
	adds r3, r4, #0
	str r0, [sp, #8]
	bl FUN_02006920
	movs r0, #1
_02006EF4:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02006EF8: .4byte 0x000001B9
	thumb_func_end FUN_02006EA0

	thumb_func_start FUN_02006EFC
FUN_02006EFC: @ 0x02006EFC
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0202CE70
	cmp r0, #0
	bne _02006F0C
	movs r0, #0
	pop {r4, pc}
_02006F0C:
	adds r0, r4, #0
	bl FUN_0202CE7C
	movs r1, #0xf
	ldrsb r0, [r0, r1]
	subs r1, #0x2d
	cmp r0, r1
	bge _02006F20
	movs r0, #1
	pop {r4, pc}
_02006F20:
	cmp r0, #0x1e
	blt _02006F2C
	cmp r0, #0x80
	bge _02006F2C
	movs r0, #2
	pop {r4, pc}
_02006F2C:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_02006EFC

	thumb_func_start FUN_02006F30
FUN_02006F30: @ 0x02006F30
	cmp r0, #0xb
	bgt _02006F4A
	bge _02006F4E
	cmp r0, #5
	bgt _02006F52
	cmp r0, #0
	blt _02006F52
	beq _02006F4E
	cmp r0, #1
	beq _02006F4E
	cmp r0, #5
	beq _02006F4E
	b _02006F52
_02006F4A:
	cmp r0, #0xc
	bne _02006F52
_02006F4E:
	movs r0, #1
	bx lr
_02006F52:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02006F30

	thumb_func_start FUN_02006F58
FUN_02006F58: @ 0x02006F58
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _02006F66
	bl FUN_0202551C
_02006F66:
	ldr r1, [r4]
	movs r0, #0
	blx FUN_020D8DB4
	cmp r0, #1
	beq _02006F76
	bl FUN_0202551C
_02006F76:
	movs r0, #0
	str r0, [r4, #4]
	pop {r4, pc}
	thumb_func_end FUN_02006F58

	thumb_func_start FUN_02006F7C
FUN_02006F7C: @ 0x02006F7C
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02006FAC
	bl FUN_02007124
	movs r2, #0
	adds r3, r0, #0
_02006F8C:
	ldr r1, [r3, #4]
	cmp r1, #1
	bne _02006FA2
	ldr r1, [r3]
	cmp r4, r1
	bne _02006FA2
	lsls r1, r2, #3
	adds r0, r0, r1
	bl FUN_02006F58
	pop {r4, pc}
_02006FA2:
	adds r2, r2, #1
	adds r3, #8
	cmp r2, #8
	blt _02006F8C
	pop {r4, pc}
	thumb_func_end FUN_02006F7C

	thumb_func_start FUN_02006FAC
FUN_02006FAC: @ 0x02006FAC
	push {lr}
	sub sp, #0x2c
	adds r2, r0, #0
	add r0, sp, #0
	movs r1, #0
	blx FUN_020D88C0
	cmp r0, #1
	beq _02006FC2
	bl FUN_0202551C
_02006FC2:
	movs r0, #2
	ldr r2, [sp, #4]
	lsls r0, r0, #0x18
	cmp r2, r0
	bhi _02006FD8
	lsrs r0, r0, #1
	cmp r2, r0
	blo _02006FD8
	add sp, #0x2c
	movs r0, #1
	pop {pc}
_02006FD8:
	movs r0, #1
	ldr r1, _02006FF4 @ =OSi_IntrTable
	lsls r0, r0, #0xe
	adds r0, r1, r0
	cmp r2, r0
	bhi _02006FEE
	cmp r2, r1
	blo _02006FEE
	add sp, #0x2c
	movs r0, #2
	pop {pc}
_02006FEE:
	movs r0, #0
	add sp, #0x2c
	pop {pc}
	.align 2, 0
_02006FF4: .4byte OSi_IntrTable
	thumb_func_end FUN_02006FAC

	thumb_func_start FUN_02006FF8
FUN_02006FF8: @ 0x02006FF8
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	movs r1, #0
	mvns r1, r1
	adds r5, r0, #0
	str r1, [sp]
	bl FUN_020070AC
	cmp r0, #0
	bne _02007010
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02007010:
	adds r0, r5, #0
	bl FUN_02006FAC
	adds r7, r0, #0
	bl FUN_02007124
	adds r3, r0, #0
	movs r6, #0
	adds r1, r3, #0
_02007022:
	ldr r0, [r1, #4]
	cmp r0, #0
	bne _02007034
	lsls r1, r6, #3
	adds r2, r3, r1
	movs r0, #1
	str r0, [r2, #4]
	str r5, [r3, r1]
	b _0200703C
_02007034:
	adds r6, r6, #1
	adds r1, #8
	cmp r6, #8
	blt _02007022
_0200703C:
	cmp r6, #8
	blt _02007048
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02007048:
	subs r6, r7, #1
	cmp r6, #1
	bhi _02007058
	movs r0, #0
	mvns r0, r0
	blx FUN_020D86D8
	str r0, [sp]
_02007058:
	cmp r4, #0
	beq _02007066
	cmp r4, #1
	beq _02007072
	cmp r4, #2
	beq _0200707E
	b _0200708A
_02007066:
	movs r0, #0
	adds r1, r5, #0
	bl FUN_02007180
	adds r4, r0, #0
	b _02007092
_02007072:
	movs r0, #0
	adds r1, r5, #0
	bl FUN_02007188
	adds r4, r0, #0
	b _02007092
_0200707E:
	movs r0, #0
	adds r1, r5, #0
	bl FUN_020071C0
	adds r4, r0, #0
	b _02007092
_0200708A:
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02007092:
	cmp r6, #1
	bhi _0200709C
	ldr r0, [sp]
	blx FUN_020D86D8
_0200709C:
	cmp r4, #0
	bne _020070A8
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020070A8:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02006FF8

	thumb_func_start FUN_020070AC
FUN_020070AC: @ 0x020070AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r1, sp, #0xc
	add r2, sp, #8
	adds r4, r0, #0
	bl FUN_02007148
	cmp r0, #0
	bne _020070C4
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020070C4:
	adds r0, r4, #0
	bl FUN_02006FAC
	bl FUN_02007124
	adds r5, r0, #0
	movs r4, #0
	add r6, sp, #4
	add r7, sp, #0
_020070D6:
	ldr r0, [r5, #4]
	cmp r0, #1
	bne _02007114
	ldr r0, [r5]
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_02007148
	cmp r0, #1
	bne _02007114
	ldr r1, [sp, #4]
	ldr r2, [sp, #0xc]
	cmp r2, r1
	blo _020070F8
	ldr r0, [sp]
	cmp r2, r0
	blo _0200710E
_020070F8:
	ldr r3, [sp, #8]
	cmp r3, r1
	bls _02007104
	ldr r0, [sp]
	cmp r3, r0
	bls _0200710E
_02007104:
	cmp r2, r1
	bhi _02007114
	ldr r0, [sp]
	cmp r3, r0
	blo _02007114
_0200710E:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02007114:
	adds r4, r4, #1
	adds r5, #8
	cmp r4, #8
	blt _020070D6
	movs r0, #1
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020070AC

	thumb_func_start FUN_02007124
FUN_02007124: @ 0x02007124
	cmp r0, #0
	beq _02007130
	cmp r0, #1
	beq _02007134
	cmp r0, #2
	beq _02007138
_02007130:
	ldr r0, _0200713C @ =0x021D0DF0
	bx lr
_02007134:
	ldr r0, _02007140 @ =0x021D0E30
	bx lr
_02007138:
	ldr r0, _02007144 @ =0x021D0E70
	bx lr
	.align 2, 0
_0200713C: .4byte 0x021D0DF0
_02007140: .4byte 0x021D0E30
_02007144: .4byte 0x021D0E70
	thumb_func_end FUN_02007124

	thumb_func_start FUN_02007148
FUN_02007148: @ 0x02007148
	push {r4, r5, lr}
	sub sp, #0x2c
	adds r3, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	add r0, sp, #0
	movs r1, #0
	adds r2, r3, #0
	blx FUN_020D88C0
	cmp r0, #0
	bne _0200716A
	bl FUN_0202551C
	add sp, #0x2c
	movs r0, #0
	pop {r4, r5, pc}
_0200716A:
	ldr r2, [sp, #4]
	str r2, [r5]
	ldr r1, [sp, #8]
	ldr r0, [sp, #0xc]
	adds r0, r1, r0
	adds r0, r2, r0
	str r0, [r4]
	movs r0, #1
	add sp, #0x2c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007148

	thumb_func_start FUN_02007180
FUN_02007180: @ 0x02007180
	ldr r3, _02007184 @ =FUN_020D8D60
	bx r3
	.align 2, 0
_02007184: .4byte FUN_020D8D60
	thumb_func_end FUN_02007180

	thumb_func_start FUN_02007188
FUN_02007188: @ 0x02007188
	push {lr}
	sub sp, #0x2c
	adds r3, r0, #0
	adds r2, r1, #0
	add r0, sp, #0
	adds r1, r3, #0
	blx FUN_020D88C0
	cmp r0, #0
	bne _020071A2
	add sp, #0x2c
	movs r0, #0
	pop {pc}
_020071A2:
	add r0, sp, #0
	blx FUN_020D8A48
	cmp r0, #0
	bne _020071B2
	add sp, #0x2c
	movs r0, #0
	pop {pc}
_020071B2:
	add r0, sp, #0
	blx FUN_020D8B6C
	movs r0, #1
	add sp, #0x2c
	pop {pc}
	.align 2, 0
	thumb_func_end FUN_02007188

	thumb_func_start FUN_020071C0
FUN_020071C0: @ 0x020071C0
	push {lr}
	sub sp, #0x74
	adds r3, r0, #0
	adds r2, r1, #0
	add r0, sp, #0
	adds r1, r3, #0
	blx FUN_020D88C0
	cmp r0, #0
	bne _020071DA
	add sp, #0x74
	movs r0, #0
	pop {pc}
_020071DA:
	add r0, sp, #0x2c
	blx FUN_020D7F98
	add r0, sp, #0
	add r1, sp, #0x2c
	blx FUN_020D89BC
	add r0, sp, #0x2c
	blx FUN_020D82FC
	add r0, sp, #0x2c
	blx FUN_020D82C0
	add r0, sp, #0
	blx FUN_020D8B6C
	movs r0, #1
	add sp, #0x74
	pop {pc}
	thumb_func_end FUN_020071C0

	thumb_func_start FUN_02007200
FUN_02007200: @ 0x02007200
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r7, r2, #0
	cmp r5, #0
	beq _02007224
	adds r0, r3, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _0200721A
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200721A:
	movs r1, #0
	adds r2, r5, #0
	blx FUN_020E5B44
	b _02007226
_02007224:
	movs r4, #0
_02007226:
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_0200E320
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02007200

	thumb_func_start FUN_02007234
FUN_02007234: @ 0x02007234
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201F988
	cmp r0, #0
	beq _02007244
	bl FUN_0201AB0C
_02007244:
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	thumb_func_end FUN_02007234

	thumb_func_start FUN_0200724C
FUN_0200724C: @ 0x0200724C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	movs r1, #0x28
	bl FUN_0201AA8C
	adds r3, r0, #0
	adds r2, r3, #0
	ldm r5!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r2!, {r0, r1}
	movs r0, #0
	str r0, [r3, #0x10]
	str r0, [r3, #0x14]
	str r4, [r3, #0x18]
	str r0, [r3, #0x1c]
	str r0, [r3, #0x20]
	str r0, [r3, #0x24]
	adds r0, r3, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200724C

	thumb_func_start FUN_02007278
FUN_02007278: @ 0x02007278
	ldr r3, _0200727C @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_0200727C: .4byte FUN_0201AB0C
	thumb_func_end FUN_02007278

	thumb_func_start FUN_02007280
FUN_02007280: @ 0x02007280
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r2, #0
	bl FUN_0201AA8C
	str r0, [r4, #0x1c]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007280

	thumb_func_start FUN_02007290
FUN_02007290: @ 0x02007290
	ldr r0, [r0, #0x1c]
	bx lr
	thumb_func_end FUN_02007290

	thumb_func_start FUN_02007294
FUN_02007294: @ 0x02007294
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x1c]
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, #0x1c]
	pop {r4, pc}
	thumb_func_end FUN_02007294

	thumb_func_start FUN_020072A4
FUN_020072A4: @ 0x020072A4
	ldr r0, [r0, #0x18]
	bx lr
	thumb_func_end FUN_020072A4

	thumb_func_start FUN_020072A8
FUN_020072A8: @ 0x020072A8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x10]
	cmp r1, #3
	bhi _02007326
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_020072BE: @ jump table
	.2byte _020072C6 - _020072BE - 2 @ case 0
	.2byte _020072DA - _020072BE - 2 @ case 1
	.2byte _020072F2 - _020072BE - 2 @ case 2
	.2byte _02007308 - _020072BE - 2 @ case 3
_020072C6:
	movs r1, #0
	ldr r0, [r4, #0xc]
	mvns r1, r1
	cmp r0, r1
	beq _020072D6
	movs r1, #2
	bl FUN_02006FF8
_020072D6:
	movs r0, #1
	str r0, [r4, #0x10]
_020072DA:
	adds r1, r4, #0
	ldr r2, [r4]
	adds r0, r4, #0
	adds r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	movs r0, #2
	str r0, [r4, #0x10]
	movs r0, #0
	str r0, [r4, #0x14]
	b _02007326
_020072F2:
	adds r1, r4, #0
	ldr r2, [r4, #4]
	adds r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	movs r0, #3
	str r0, [r4, #0x10]
	movs r0, #0
	str r0, [r4, #0x14]
	b _02007326
_02007308:
	adds r1, r4, #0
	ldr r2, [r4, #8]
	adds r1, #0x14
	blx r2
	cmp r0, #1
	bne _02007326
	movs r1, #0
	ldr r0, [r4, #0xc]
	mvns r1, r1
	cmp r0, r1
	beq _02007322
	bl FUN_02006F7C
_02007322:
	movs r0, #1
	pop {r4, pc}
_02007326:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020072A8

	thumb_func_start FUN_0200732C
FUN_0200732C: @ 0x0200732C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x60
	adds r4, r1, #0
	movs r1, #0
	str r0, [sp]
	str r1, [sp, #0x14]
	str r1, [sp, #0x10]
	str r1, [sp, #0xc]
	add r0, sp, #8
	strh r1, [r0]
	add r0, sp, #0x18
	adds r5, r2, #0
	str r3, [sp, #4]
	blx FUN_020D7F98
	add r0, sp, #0x18
	adds r1, r4, #0
	blx FUN_020D8278
	add r0, sp, #0x18
	movs r1, #0xc
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #2
	blx FUN_020D83CC
	ldr r4, [sp, #0x14]
	add r0, sp, #0x18
	adds r1, r4, #4
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x18
	add r1, sp, #8
	movs r2, #2
	blx FUN_020D83CC
	add r0, sp, #8
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007392
	bl FUN_0202551C
_02007392:
	ldr r0, [sp, #0x14]
	movs r2, #0
	adds r6, r4, r0
	add r0, sp, #0x18
	adds r1, r6, #4
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #4
	blx FUN_020D83CC
	adds r4, #0xc
	lsls r1, r5, #3
	add r0, sp, #0x18
	adds r1, r4, r1
	movs r2, #0
	ldr r7, [sp, #0x14]
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x10
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x18
	add r1, sp, #0xc
	movs r2, #4
	blx FUN_020D83CC
	adds r2, r6, r7
	ldr r1, [sp, #0x10]
	adds r2, #8
	adds r2, r2, r1
	ldr r1, [sp, #4]
	add r0, sp, #0x18
	adds r1, r1, r2
	movs r2, #0
	blx FUN_020D83DC
	ldr r0, [sp, #0x78]
	cmp r0, #0
	bne _020073EE
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x10]
	subs r0, r1, r0
_020073EE:
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _020073F8
	bl FUN_0202551C
_020073F8:
	ldr r1, [sp]
	ldr r2, [sp, #0x14]
	add r0, sp, #0x18
	blx FUN_020D83CC
	add r0, sp, #0x18
	blx FUN_020D82C0
	add sp, #0x60
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200732C

	thumb_func_start FUN_0200740C
FUN_0200740C: @ 0x0200740C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x60
	adds r5, r1, #0
	movs r1, #0
	adds r4, r0, #0
	str r1, [sp, #0x14]
	str r1, [sp, #0x10]
	str r1, [sp, #0xc]
	add r0, sp, #8
	strh r1, [r0]
	add r0, sp, #0x18
	str r2, [sp]
	str r3, [sp, #4]
	blx FUN_020D7F98
	add r0, sp, #0x18
	adds r1, r4, #0
	blx FUN_020D8278
	add r0, sp, #0x18
	movs r1, #0xc
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #2
	blx FUN_020D83CC
	ldr r4, [sp, #0x14]
	add r0, sp, #0x18
	adds r1, r4, #4
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x18
	add r1, sp, #8
	movs r2, #2
	blx FUN_020D83CC
	add r0, sp, #8
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007472
	bl FUN_0202551C
_02007472:
	ldr r0, [sp, #0x14]
	movs r2, #0
	adds r6, r4, r0
	add r0, sp, #0x18
	adds r1, r6, #4
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x14
	movs r2, #4
	blx FUN_020D83CC
	adds r4, #0xc
	lsls r1, r5, #3
	add r0, sp, #0x18
	adds r1, r4, r1
	movs r2, #0
	ldr r7, [sp, #0x14]
	blx FUN_020D83DC
	add r0, sp, #0x18
	add r1, sp, #0x10
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x18
	add r1, sp, #0xc
	movs r2, #4
	blx FUN_020D83CC
	adds r2, r6, r7
	ldr r1, [sp, #0x10]
	adds r2, #8
	adds r2, r2, r1
	ldr r1, [sp, #4]
	add r0, sp, #0x18
	adds r1, r1, r2
	movs r2, #0
	blx FUN_020D83DC
	ldr r0, [sp, #0x78]
	cmp r0, #0
	bne _020074CE
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x10]
	subs r0, r1, r0
_020074CE:
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _020074D8
	bl FUN_0202551C
_020074D8:
	ldr r0, [sp, #0x7c]
	cmp r0, #0
	bne _020074E8
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	bl FUN_0201AA8C
	b _020074F0
_020074E8:
	ldr r0, [sp]
	ldr r1, [sp, #0x14]
	bl FUN_0201AACC
_020074F0:
	adds r4, r0, #0
	ldr r2, [sp, #0x14]
	add r0, sp, #0x18
	adds r1, r4, #0
	blx FUN_020D83CC
	add r0, sp, #0x18
	blx FUN_020D82C0
	adds r0, r4, #0
	add sp, #0x60
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200740C

	thumb_func_start FUN_02007508
FUN_02007508: @ 0x02007508
	push {r3, r4, lr}
	sub sp, #4
	movs r3, #0
	lsls r4, r1, #2
	ldr r1, _02007520 @ =0x0210F210
	str r3, [sp]
	ldr r1, [r1, r4]
	bl FUN_0200732C
	add sp, #4
	pop {r3, r4, pc}
	nop
_02007520: .4byte 0x0210F210
	thumb_func_end FUN_02007508

	thumb_func_start FUN_02007524
FUN_02007524: @ 0x02007524
	push {r4, lr}
	sub sp, #8
	movs r3, #0
	str r3, [sp]
	lsls r4, r0, #2
	ldr r0, _0200753C @ =0x0210F210
	str r3, [sp, #4]
	ldr r0, [r0, r4]
	bl FUN_0200740C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_0200753C: .4byte 0x0210F210
	thumb_func_end FUN_02007524

	thumb_func_start FUN_02007540
FUN_02007540: @ 0x02007540
	push {r4, lr}
	sub sp, #8
	movs r3, #0
	str r3, [sp]
	movs r4, #1
	str r4, [sp, #4]
	lsls r4, r0, #2
	ldr r0, _0200755C @ =0x0210F210
	ldr r0, [r0, r4]
	bl FUN_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_0200755C: .4byte 0x0210F210
	thumb_func_end FUN_02007540

	thumb_func_start FUN_02007560
FUN_02007560: @ 0x02007560
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [sp, #0x10]
	str r4, [sp]
	lsls r4, r1, #2
	ldr r1, _02007578 @ =0x0210F210
	ldr r1, [r1, r4]
	bl FUN_0200732C
	add sp, #4
	pop {r3, r4, pc}
	nop
_02007578: .4byte 0x0210F210
	thumb_func_end FUN_02007560

	thumb_func_start FUN_0200757C
FUN_0200757C: @ 0x0200757C
	push {r4, lr}
	sub sp, #8
	ldr r4, [sp, #0x10]
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	lsls r4, r0, #2
	ldr r0, _02007598 @ =0x0210F210
	ldr r0, [r0, r4]
	bl FUN_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_02007598: .4byte 0x0210F210
	thumb_func_end FUN_0200757C

	thumb_func_start FUN_0200759C
FUN_0200759C: @ 0x0200759C
	push {r4, lr}
	sub sp, #8
	ldr r4, [sp, #0x10]
	str r4, [sp]
	movs r4, #1
	str r4, [sp, #4]
	lsls r4, r0, #2
	ldr r0, _020075B8 @ =0x0210F210
	ldr r0, [r0, r4]
	bl FUN_0200740C
	add sp, #8
	pop {r4, pc}
	nop
_020075B8: .4byte 0x0210F210
	thumb_func_end FUN_0200759C

	thumb_func_start FUN_020075BC
FUN_020075BC: @ 0x020075BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x58
	adds r5, r1, #0
	movs r1, #0
	adds r4, r0, #0
	str r1, [sp, #0xc]
	str r1, [sp, #8]
	str r1, [sp, #4]
	add r0, sp, #0
	strh r1, [r0]
	add r0, sp, #0x10
	blx FUN_020D7F98
	ldr r1, _02007684 @ =0x0210F210
	lsls r2, r4, #2
	ldr r1, [r1, r2]
	add r0, sp, #0x10
	blx FUN_020D8278
	add r0, sp, #0x10
	movs r1, #0xc
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	movs r2, #2
	blx FUN_020D83CC
	ldr r4, [sp, #0xc]
	add r0, sp, #0x10
	adds r1, r4, #4
	movs r2, #0
	blx FUN_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x10
	add r1, sp, #0
	movs r2, #2
	blx FUN_020D83CC
	add r0, sp, #0
	ldrh r0, [r0]
	cmp r0, r5
	bgt _02007622
	bl FUN_0202551C
_02007622:
	ldr r0, [sp, #0xc]
	movs r2, #0
	adds r6, r4, r0
	add r0, sp, #0x10
	adds r1, r6, #4
	blx FUN_020D83DC
	add r0, sp, #0x10
	add r1, sp, #0xc
	movs r2, #4
	blx FUN_020D83CC
	adds r4, #0xc
	lsls r1, r5, #3
	add r0, sp, #0x10
	adds r1, r4, r1
	movs r2, #0
	ldr r7, [sp, #0xc]
	blx FUN_020D83DC
	add r0, sp, #0x10
	add r1, sp, #8
	movs r2, #4
	blx FUN_020D83CC
	add r0, sp, #0x10
	add r1, sp, #4
	movs r2, #4
	blx FUN_020D83CC
	adds r2, r6, r7
	ldr r1, [sp, #8]
	adds r2, #8
	adds r1, r2, r1
	add r0, sp, #0x10
	movs r2, #0
	blx FUN_020D83DC
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	subs r0, r1, r0
	str r0, [sp, #0xc]
	bne _0200767C
	bl FUN_0202551C
_0200767C:
	ldr r0, [sp, #0xc]
	add sp, #0x58
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02007684: .4byte 0x0210F210
	thumb_func_end FUN_020075BC

	thumb_func_start FUN_02007688
FUN_02007688: @ 0x02007688
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #0x54
	bl FUN_0201AA8C
	adds r4, r0, #0
	beq _02007704
	movs r1, #0
	str r1, [r4, #0x48]
	blx FUN_020D7F98
	ldr r1, _02007708 @ =0x0210F210
	lsls r2, r5, #2
	ldr r1, [r1, r2]
	adds r0, r4, #0
	blx FUN_020D8278
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #0
	blx FUN_020D83DC
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0x48
	movs r2, #2
	blx FUN_020D83CC
	ldr r1, [r4, #0x48]
	adds r0, r4, #0
	adds r1, r1, #4
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r4, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0x50
	movs r2, #2
	blx FUN_020D83CC
	ldr r1, [r4, #0x48]
	ldr r0, [sp]
	movs r2, #0
	adds r5, r1, r0
	adds r0, r4, #0
	adds r1, r5, #4
	blx FUN_020D83DC
	adds r0, r4, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r0, [sp]
	adds r0, r5, r0
	str r0, [r4, #0x4c]
_02007704:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02007708: .4byte 0x0210F210
	thumb_func_end FUN_02007688

	thumb_func_start FUN_0200770C
FUN_0200770C: @ 0x0200770C
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020D82C0
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_0200770C

	thumb_func_start FUN_0200771C
FUN_0200771C: @ 0x0200771C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, #0x50
	ldrh r0, [r0]
	adds r4, r1, #0
	adds r6, r2, #0
	cmp r0, r4
	bhi _02007732
	bl FUN_0202551C
_02007732:
	ldr r2, [r5, #0x48]
	lsls r1, r4, #3
	adds r2, #0xc
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	add r1, sp, #4
	movs r2, #4
	blx FUN_020D83CC
	adds r0, r5, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp, #4]
	adds r2, #8
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	ldr r2, [sp]
	ldr r1, [sp, #4]
	adds r0, r6, #0
	subs r1, r2, r1
	bl FUN_0201AA8C
	adds r4, r0, #0
	beq _02007784
	ldr r3, [sp]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	subs r2, r3, r2
	blx FUN_020D83CC
_02007784:
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200771C

	thumb_func_start FUN_0200778C
FUN_0200778C: @ 0x0200778C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, #0x50
	ldrh r0, [r0]
	adds r4, r1, #0
	adds r6, r2, #0
	cmp r0, r4
	bhi _020077A2
	bl FUN_0202551C
_020077A2:
	ldr r2, [r5, #0x48]
	lsls r1, r4, #3
	adds r2, #0xc
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	add r1, sp, #4
	movs r2, #4
	blx FUN_020D83CC
	adds r0, r5, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp, #4]
	adds r2, #8
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	ldr r3, [sp]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	subs r2, r3, r2
	blx FUN_020D83CC
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200778C

	thumb_func_start FUN_020077E8
FUN_020077E8: @ 0x020077E8
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r0, #0x50
	ldrh r0, [r0]
	adds r4, r1, #0
	cmp r0, r4
	bhi _020077FC
	bl FUN_0202551C
_020077FC:
	ldr r2, [r5, #0x48]
	lsls r1, r4, #3
	adds r2, #0xc
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	add r1, sp, #4
	movs r2, #4
	blx FUN_020D83CC
	adds r0, r5, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r1, [sp]
	ldr r0, [sp, #4]
	subs r0, r1, r0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020077E8

	thumb_func_start FUN_0200782C
FUN_0200782C: @ 0x0200782C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, #0x50
	ldrh r0, [r0]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r0, r4
	bhi _02007842
	bl FUN_0202551C
_02007842:
	ldr r2, [r5, #0x48]
	lsls r1, r4, #3
	adds r2, #0xc
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r2, [r5, #0x4c]
	ldr r1, [sp]
	adds r2, #8
	adds r1, r2, r1
	adds r0, r5, #0
	adds r1, r6, r1
	movs r2, #0
	blx FUN_020D83DC
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	adds r2, r7, #0
	blx FUN_020D83CC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200782C

	thumb_func_start FUN_0200787C
FUN_0200787C: @ 0x0200787C
	push {r4, r5, r6, lr}
	adds r4, r2, #0
	adds r5, r0, #0
	adds r6, r3, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	blx FUN_020D83CC
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200787C

	thumb_func_start FUN_02007898
FUN_02007898: @ 0x02007898
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r0, #0x50
	ldrh r0, [r0]
	adds r4, r1, #0
	adds r6, r2, #0
	cmp r0, r4
	bhi _020078AE
	bl FUN_0202551C
_020078AE:
	ldr r2, [r5, #0x48]
	lsls r1, r4, #3
	adds r2, #0xc
	adds r1, r2, r1
	adds r0, r5, #0
	movs r2, #0
	blx FUN_020D83DC
	adds r0, r5, #0
	add r1, sp, #0
	movs r2, #4
	blx FUN_020D83CC
	ldr r1, [r5, #0x4c]
	ldr r0, [sp]
	adds r1, #8
	adds r0, r1, r0
	str r0, [r6]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02007898

	thumb_func_start FUN_020078D8
FUN_020078D8: @ 0x020078D8
	adds r3, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, _020078E4 @ =FUN_020D83CC
	bx r3
	nop
_020078E4: .4byte FUN_020D83CC
	thumb_func_end FUN_020078D8

	thumb_func_start FUN_020078E8
FUN_020078E8: @ 0x020078E8
	adds r0, #0x50
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020078E8

	thumb_func_start FUN_020078F0
FUN_020078F0: @ 0x020078F0
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	movs r2, #0
	adds r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl FUN_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007D2C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020078F0

	thumb_func_start FUN_02007914
FUN_02007914: @ 0x02007914
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	movs r2, #1
	adds r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl FUN_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007D70
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007914

	thumb_func_start FUN_02007938
FUN_02007938: @ 0x02007938
	push {lr}
	sub sp, #0xc
	str r3, [sp]
	ldr r3, [sp, #0x10]
	str r3, [sp, #4]
	ldr r3, [sp, #0x14]
	str r3, [sp, #8]
	movs r3, #0
	bl FUN_02007950
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_02007938

	thumb_func_start FUN_02007950
FUN_02007950: @ 0x02007950
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	adds r4, r3, #0
	movs r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x18]
	movs r2, #0
	bl FUN_02007A44
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007DD0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007950

	thumb_func_start FUN_02007974
FUN_02007974: @ 0x02007974
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	adds r4, r3, #0
	movs r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x10]
	movs r2, #0
	bl FUN_02007A44
	ldr r3, [sp, #0x14]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007EB0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007974

	thumb_func_start FUN_02007994
FUN_02007994: @ 0x02007994
	push {r4, lr}
	sub sp, #8
	adds r4, r3, #0
	movs r3, #1
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	bl FUN_02007A44
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r1, [sp]
	ldr r1, [sp, #0x20]
	ldr r3, [sp, #0x14]
	str r1, [sp, #4]
	adds r1, r4, #0
	bl FUN_02007F00
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007994

	thumb_func_start FUN_020079BC
FUN_020079BC: @ 0x020079BC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007A44
	adds r1, r4, #0
	bl FUN_02007F48
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_020079BC

	thumb_func_start FUN_020079D8
FUN_020079D8: @ 0x020079D8
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007A44
	adds r1, r4, #0
	bl FUN_02007F64
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_020079D8

	thumb_func_start FUN_020079F4
FUN_020079F4: @ 0x020079F4
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r2, #0
	movs r2, #0
	str r2, [sp]
	bl FUN_02007A44
	adds r1, r4, #0
	bl FUN_02007F80
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_020079F4

	thumb_func_start FUN_02007A0C
FUN_02007A0C: @ 0x02007A0C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007A44
	adds r1, r4, #0
	bl FUN_02007F9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007A0C

	thumb_func_start FUN_02007A28
FUN_02007A28: @ 0x02007A28
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007A44
	adds r1, r4, #0
	bl FUN_02007FB8
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007A28

	thumb_func_start FUN_02007A44
FUN_02007A44: @ 0x02007A44
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r2, #0
	adds r7, r0, #0
	adds r6, r3, #0
	str r1, [sp]
	cmp r5, #0
	bne _02007A58
	ldr r2, [sp, #0x18]
	cmp r2, #1
	bne _02007A6C
_02007A58:
	ldr r1, [sp]
	adds r0, r7, #0
	bl FUN_020075BC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_0201AACC
	adds r4, r0, #0
	b _02007A7A
_02007A6C:
	bl FUN_020075BC
	adds r1, r0, #0
	adds r0, r6, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
_02007A7A:
	cmp r4, #0
	beq _02007ABE
	ldr r2, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_02007508
	cmp r5, #0
	beq _02007ABE
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _02007A9E
	ldr r1, [r4]
	adds r0, r6, #0
	lsrs r1, r1, #8
	bl FUN_0201AA8C
	b _02007AA8
_02007A9E:
	ldr r1, [r4]
	adds r0, r6, #0
	lsrs r1, r1, #8
	bl FUN_0201AACC
_02007AA8:
	adds r5, r0, #0
	cmp r5, #0
	beq _02007ABC
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020D4BE8
	adds r0, r4, #0
	bl FUN_0201AB0C
_02007ABC:
	adds r4, r5, #0
_02007ABE:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02007A44

	thumb_func_start FUN_02007AC4
FUN_02007AC4: @ 0x02007AC4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, [sp, #0x24]
	str r0, [sp]
	str r1, [sp, #4]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_020075BC
	str r0, [r5]
	cmp r6, #0
	bne _02007AE2
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _02007AEE
_02007AE2:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AACC
	adds r4, r0, #0
	b _02007AF8
_02007AEE:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
_02007AF8:
	cmp r4, #0
	beq _02007B3E
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r4, #0
	bl FUN_02007508
	cmp r6, #0
	beq _02007B3E
	ldr r0, [r4]
	lsrs r0, r0, #8
	str r0, [r5]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	bne _02007B20
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AA8C
	b _02007B28
_02007B20:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AACC
_02007B28:
	adds r5, r0, #0
	cmp r5, #0
	beq _02007B3C
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020D4BE8
	adds r0, r4, #0
	bl FUN_0201AB0C
_02007B3C:
	adds r4, r5, #0
_02007B3E:
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02007AC4

	thumb_func_start FUN_02007B44
FUN_02007B44: @ 0x02007B44
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	movs r2, #0
	adds r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl FUN_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007D2C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007B44

	thumb_func_start FUN_02007B68
FUN_02007B68: @ 0x02007B68
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	movs r2, #1
	adds r4, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl FUN_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007D70
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007B68

	thumb_func_start FUN_02007B8C
FUN_02007B8C: @ 0x02007B8C
	push {lr}
	sub sp, #0xc
	str r3, [sp]
	ldr r3, [sp, #0x10]
	str r3, [sp, #4]
	ldr r3, [sp, #0x14]
	str r3, [sp, #8]
	movs r3, #0
	bl FUN_02007BA4
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_02007B8C

	thumb_func_start FUN_02007BA4
FUN_02007BA4: @ 0x02007BA4
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	adds r4, r3, #0
	movs r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x18]
	movs r2, #0
	bl FUN_02007C98
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x10]
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007DD0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007BA4

	thumb_func_start FUN_02007BC8
FUN_02007BC8: @ 0x02007BC8
	push {r3, r4, r5, lr}
	adds r5, r2, #0
	adds r4, r3, #0
	movs r2, #1
	str r2, [sp]
	ldr r3, [sp, #0x10]
	movs r2, #0
	bl FUN_02007C98
	ldr r3, [sp, #0x14]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02007EB0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02007BC8

	thumb_func_start FUN_02007BE8
FUN_02007BE8: @ 0x02007BE8
	push {r4, lr}
	sub sp, #8
	adds r4, r3, #0
	movs r3, #1
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	bl FUN_02007C98
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r1, [sp]
	ldr r1, [sp, #0x20]
	ldr r3, [sp, #0x14]
	str r1, [sp, #4]
	adds r1, r4, #0
	bl FUN_02007F00
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007BE8

	thumb_func_start FUN_02007C10
FUN_02007C10: @ 0x02007C10
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007C98
	adds r1, r4, #0
	bl FUN_02007F48
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007C10

	thumb_func_start FUN_02007C2C
FUN_02007C2C: @ 0x02007C2C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007C98
	adds r1, r4, #0
	bl FUN_02007F64
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007C2C

	thumb_func_start FUN_02007C48
FUN_02007C48: @ 0x02007C48
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r2, #0
	movs r2, #0
	str r2, [sp]
	bl FUN_02007C98
	adds r1, r4, #0
	bl FUN_02007F80
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_02007C48

	thumb_func_start FUN_02007C60
FUN_02007C60: @ 0x02007C60
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007C98
	adds r1, r4, #0
	bl FUN_02007F9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007C60

	thumb_func_start FUN_02007C7C
FUN_02007C7C: @ 0x02007C7C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp]
	ldr r3, [sp, #0x10]
	bl FUN_02007C98
	adds r1, r4, #0
	bl FUN_02007FB8
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02007C7C

	thumb_func_start FUN_02007C98
FUN_02007C98: @ 0x02007C98
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	add r4, sp, #8
	str r4, [sp, #4]
	bl FUN_02007CAC
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_02007C98

	thumb_func_start FUN_02007CAC
FUN_02007CAC: @ 0x02007CAC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, [sp, #0x24]
	str r0, [sp]
	str r1, [sp, #4]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_020077E8
	str r0, [r5]
	cmp r6, #0
	bne _02007CCA
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _02007CD6
_02007CCA:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AACC
	adds r4, r0, #0
	b _02007CE0
_02007CD6:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
_02007CE0:
	cmp r4, #0
	beq _02007D26
	ldr r0, [sp]
	ldr r1, [sp, #4]
	adds r2, r4, #0
	bl FUN_0200778C
	cmp r6, #0
	beq _02007D26
	ldr r0, [r4]
	lsrs r0, r0, #8
	str r0, [r5]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	bne _02007D08
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AA8C
	b _02007D10
_02007D08:
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_0201AACC
_02007D10:
	adds r5, r0, #0
	cmp r5, #0
	beq _02007D24
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020D4BE8
	adds r0, r4, #0
	bl FUN_0201AB0C
_02007D24:
	adds r4, r5, #0
_02007D26:
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02007CAC

	thumb_func_start FUN_02007D2C
FUN_02007D2C: @ 0x02007D2C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	str r1, [sp, #4]
	adds r6, r2, #0
	adds r7, r3, #0
	ldr r4, [sp, #0x20]
	cmp r5, #0
	beq _02007D68
	add r1, sp, #8
	blx FUN_020B70F4
	cmp r0, #0
	beq _02007D62
	cmp r4, #0
	bne _02007D50
	ldr r0, [sp, #8]
	ldr r4, [r0, #0x10]
_02007D50:
	str r7, [sp]
	ldr r2, [sp, #8]
	lsls r1, r6, #0x18
	ldr r0, [sp, #4]
	ldr r2, [r2, #0x14]
	lsrs r1, r1, #0x18
	adds r3, r4, #0
	bl FUN_0201C0C0
_02007D62:
	adds r0, r5, #0
	bl FUN_0201AB0C
_02007D68:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02007D2C

	thumb_func_start FUN_02007D70
FUN_02007D70: @ 0x02007D70
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	str r3, [sp, #4]
	ldr r4, [sp, #0x20]
	cmp r6, #0
	beq _02007DCC
	add r1, sp, #8
	blx FUN_020B71D8
	cmp r0, #0
	beq _02007DC6
	cmp r4, #0
	bne _02007D94
	ldr r0, [sp, #8]
	ldr r4, [r0, #8]
_02007D94:
	lsls r1, r5, #0x18
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	bl FUN_0201CC08
	cmp r0, #0
	beq _02007DB2
	ldr r2, [sp, #8]
	lsls r1, r5, #0x18
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	adds r2, #0xc
	adds r3, r4, #0
	bl FUN_0201C0A8
_02007DB2:
	ldr r0, [sp, #4]
	lsls r1, r5, #0x18
	str r0, [sp]
	ldr r2, [sp, #8]
	adds r0, r7, #0
	lsrs r1, r1, #0x18
	adds r2, #0xc
	adds r3, r4, #0
	bl FUN_0201BF94
_02007DC6:
	adds r0, r6, #0
	bl FUN_0201AB0C
_02007DCC:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02007D70

	thumb_func_start FUN_02007DD0
FUN_02007DD0: @ 0x02007DD0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	adds r4, r1, #0
	adds r7, r2, #0
	adds r6, r3, #0
	ldr r5, [sp, #0x20]
	adds r1, r0, #0
	beq _02007EA6
	add r1, sp, #4
	blx FUN_020B7140
	cmp r0, #0
	beq _02007EA0
	ldr r0, [sp, #4]
	ldr r1, [r0, #0xc]
	adds r1, r1, r7
	str r1, [r0, #0xc]
	cmp r5, #0
	bne _02007DFE
	ldr r0, [sp, #4]
	ldr r0, [r0, #8]
	subs r5, r0, r7
_02007DFE:
	ldr r0, [sp, #4]
	adds r1, r5, #0
	ldr r0, [r0, #0xc]
	blx FUN_020D2894
	cmp r4, #7
	bhi _02007E90
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02007E18: @ jump table
	.2byte _02007E90 - _02007E18 - 2 @ case 0
	.2byte _02007E90 - _02007E18 - 2 @ case 1
	.2byte _02007E28 - _02007E18 - 2 @ case 2
	.2byte _02007E5C - _02007E18 - 2 @ case 3
	.2byte _02007E90 - _02007E18 - 2 @ case 4
	.2byte _02007E90 - _02007E18 - 2 @ case 5
	.2byte _02007E42 - _02007E18 - 2 @ case 6
	.2byte _02007E76 - _02007E18 - 2 @ case 7
_02007E28:
	blx FUN_020D0524
	ldr r0, [sp, #4]
	ldr r3, _02007EAC @ =_020F5968
	lsls r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	adds r1, r6, #0
	adds r2, r5, #0
	blx r3
	blx FUN_020D0634
	b _02007EA0
_02007E42:
	blx FUN_020D0774
	ldr r0, [sp, #4]
	ldr r3, _02007EAC @ =_020F5968
	lsls r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	adds r1, r6, #0
	adds r2, r5, #0
	blx r3
	blx FUN_020D07F0
	b _02007EA0
_02007E5C:
	blx FUN_020D067C
	ldr r0, [sp, #4]
	ldr r3, _02007EAC @ =_020F5968
	lsls r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	adds r1, r6, #0
	adds r2, r5, #0
	blx r3
	blx FUN_020D0730
	b _02007EA0
_02007E76:
	blx FUN_020D0830
	ldr r0, [sp, #4]
	ldr r3, _02007EAC @ =_020F5968
	lsls r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	adds r1, r6, #0
	adds r2, r5, #0
	blx r3
	blx FUN_020D08AC
	b _02007EA0
_02007E90:
	ldr r0, [sp, #4]
	ldr r3, _02007EAC @ =_020F5968
	lsls r4, r4, #2
	ldr r0, [r0, #0xc]
	ldr r3, [r3, r4]
	adds r1, r6, #0
	adds r2, r5, #0
	blx r3
_02007EA0:
	ldr r0, [sp]
	bl FUN_0201AB0C
_02007EA6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02007EAC: .4byte _020F5968
	thumb_func_end FUN_02007DD0

	thumb_func_start FUN_02007EB0
FUN_02007EB0: @ 0x02007EB0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	cmp r5, #0
	beq _02007EFC
	add r1, sp, #8
	blx FUN_020B717C
	str r0, [sp, #4]
	adds r0, r5, #0
	add r1, sp, #0xc
	blx FUN_020B7140
	cmp r0, #0
	beq _02007EF6
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02007EEA
	str r4, [sp]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #8]
	adds r2, r7, #0
	adds r3, r6, #0
	blx FUN_020B87C4
	b _02007EF6
_02007EEA:
	ldr r0, [sp, #0xc]
	adds r1, r7, #0
	adds r2, r6, #0
	adds r3, r4, #0
	blx FUN_020B86CC
_02007EF6:
	adds r0, r5, #0
	bl FUN_0201AB0C
_02007EFC:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02007EB0

	thumb_func_start FUN_02007F00
FUN_02007F00: @ 0x02007F00
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r2, #0
	movs r6, #0
	str r3, [sp]
	cmp r5, #0
	beq _02007F3E
	add r1, sp, #4
	blx FUN_020B70A8
	cmp r0, #0
	beq _02007F38
	cmp r4, #0
	beq _02007F24
	ldr r0, [sp, #4]
	str r4, [r0, #0x10]
_02007F24:
	ldr r4, _02007F44 @ =_020F5950
	lsls r6, r7, #2
	ldr r0, [sp, #4]
	ldr r1, [sp, #0x20]
	ldr r2, [sp]
	ldr r3, [sp, #0x24]
	ldr r4, [r4, r6]
	blx r4
	ldr r0, [sp, #4]
	ldr r6, [r0, #0x10]
_02007F38:
	adds r0, r5, #0
	bl FUN_0201AB0C
_02007F3E:
	adds r0, r6, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02007F44: .4byte _020F5950
	thumb_func_end FUN_02007F00

	thumb_func_start FUN_02007F48
FUN_02007F48: @ 0x02007F48
	push {r4, lr}
	adds r4, r0, #0
	beq _02007F60
	blx FUN_020B70F4
	cmp r0, #0
	bne _02007F60
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r4, pc}
_02007F60:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02007F48

	thumb_func_start FUN_02007F64
FUN_02007F64: @ 0x02007F64
	push {r4, lr}
	adds r4, r0, #0
	beq _02007F7C
	blx FUN_020B71D8
	cmp r0, #0
	bne _02007F7C
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r4, pc}
_02007F7C:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02007F64

	thumb_func_start FUN_02007F80
FUN_02007F80: @ 0x02007F80
	push {r4, lr}
	adds r4, r0, #0
	beq _02007F98
	blx FUN_020B7140
	cmp r0, #0
	bne _02007F98
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r4, pc}
_02007F98:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02007F80

	thumb_func_start FUN_02007F9C
FUN_02007F9C: @ 0x02007F9C
	push {r4, lr}
	adds r4, r0, #0
	beq _02007FB4
	blx FUN_020B6EC8
	cmp r0, #0
	bne _02007FB4
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r4, pc}
_02007FB4:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02007F9C

	thumb_func_start FUN_02007FB8
FUN_02007FB8: @ 0x02007FB8
	push {r4, lr}
	adds r4, r0, #0
	beq _02007FD0
	blx FUN_020B6D18
	cmp r0, #0
	bne _02007FD0
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r4, pc}
_02007FD0:
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02007FB8

	thumb_func_start FUN_02007FD4
FUN_02007FD4: @ 0x02007FD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r1, #0xce
	lsls r1, r1, #2
	adds r5, r0, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r2, #0xce
	movs r0, #0
	adds r1, r4, #0
	lsls r2, r2, #2
	blx FUN_020D4858
	movs r0, #0xba
	lsls r0, r0, #2
	adds r1, r0, #0
	adds r3, r0, #0
	str r5, [r4, r0]
	movs r2, #0
	adds r1, #0x48
	strb r2, [r4, r1]
	adds r1, r0, #4
	str r2, [r4, r1]
	movs r1, #2
	lsls r1, r1, #0xe
	adds r3, #8
	str r1, [r4, r3]
	adds r3, r0, #0
	adds r3, #0xc
	str r2, [r4, r3]
	movs r2, #0x80
	adds r0, #0x10
	str r2, [r4, r0]
	adds r0, r5, #0
	bl FUN_0201AA8C
	movs r1, #0xbf
	lsls r1, r1, #2
	str r0, [r4, r1]
	adds r0, r5, #0
	movs r1, #0xc0
	bl FUN_0201AA8C
	movs r1, #3
	lsls r1, r1, #8
	str r0, [r4, r1]
	ldr r1, [r4, r1]
	movs r0, #0
	movs r2, #4
	blx FUN_020D4858
	adds r0, r5, #0
	movs r1, #0xc0
	bl FUN_0201AA8C
	movs r1, #0xc1
	lsls r1, r1, #2
	str r0, [r4, r1]
	ldr r1, [r4, r1]
	movs r0, #0
	movs r2, #4
	blx FUN_020D4858
	movs r6, #0
	adds r5, r4, #0
	adds r7, r6, #0
_0200805A:
	adds r0, r7, #0
	adds r1, r5, #0
	movs r2, #0xac
	blx FUN_020D4858
	adds r6, r6, #1
	adds r5, #0xac
	cmp r6, #4
	blt _0200805A
	blx FUN_020B7350
	ldr r2, _02008114 @ =0x00000333
	movs r0, #0
	strb r0, [r4, r2]
	movs r0, #0x72
	subs r2, #0x4b
	adds r1, r0, #0
	ldr r2, [r4, r2]
	adds r1, #0x91
	bl FUN_02007524
	add r1, sp, #0xc
	str r0, [sp, #4]
	blx FUN_020B70A8
	ldr r0, [sp, #0xc]
	movs r1, #0xc3
	ldr r0, [r0, #4]
	lsls r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [sp, #0xc]
	ldr r2, [r0, #8]
	adds r0, r1, #4
	str r2, [r4, r0]
	ldr r0, [sp, #0xc]
	adds r1, #8
	ldr r0, [r0, #0xc]
	str r0, [r4, r1]
	ldr r0, [sp, #0xc]
	ldr r0, [r0, #0x14]
	str r0, [sp, #8]
	bl FUN_02009CD0
	ldr r1, [sp, #8]
	movs r0, #0xbf
	lsls r0, r0, #2
	movs r2, #2
	ldrb r1, [r1]
	ldr r0, [r4, r0]
	lsls r2, r2, #0xe
	blx FUN_020D4994
	movs r0, #0
	movs r7, #0xbf
	ldr r6, _02008118 @ =0x00005050
	mov ip, r0
	str r0, [sp]
	adds r3, r0, #0
	lsls r7, r7, #2
_020080D0:
	ldr r2, [sp, #8]
	ldr r0, [sp]
	movs r1, #0
	adds r2, r2, r0
_020080D8:
	ldr r5, [r4, r7]
	ldrb r0, [r2]
	adds r5, r3, r5
	adds r5, r1, r5
	adds r1, r1, #1
	adds r2, r2, #1
	strb r0, [r5, r6]
	cmp r1, #0x28
	blt _020080D8
	ldr r0, [sp]
	adds r3, #0x80
	adds r0, #0x50
	str r0, [sp]
	mov r0, ip
	adds r0, r0, #1
	mov ip, r0
	cmp r0, #0x50
	blt _020080D0
	ldr r0, [sp, #4]
	bl FUN_0201AB0C
	ldr r0, _0200811C @ =0x00000331
	movs r1, #1
	strb r1, [r4, r0]
	adds r0, r0, #1
	strb r1, [r4, r0]
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02008114: .4byte 0x00000333
_02008118: .4byte 0x00005050
_0200811C: .4byte 0x00000331
	thumb_func_end FUN_02007FD4

	thumb_func_start FUN_02008120
FUN_02008120: @ 0x02008120
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	bl FUN_020094FC
	adds r0, r5, #0
	bl FUN_0200994C
	blx FUN_020C23F4
	movs r6, #0xb3
	movs r0, #0
	ldr r4, _02008494 @ =0x04000444
	lsls r6, r6, #2
	str r0, [r4]
	str r0, [sp, #0x18]
	adds r0, r6, #0
	subs r0, #0xc
	ldr r1, [r5, r0]
	adds r3, r6, #0
	ldr r2, [r5, r6]
	adds r0, r6, #0
	subs r3, #8
	adds r6, #0x20
	ldr r3, [r5, r3]
	ldr r6, [r5, r6]
	subs r0, #0x10
	ldr r0, [r5, r0]
	lsrs r6, r6, #3
	lsls r3, r3, #0x1a
	orrs r6, r3
	movs r3, #1
	lsls r3, r3, #0x1e
	lsls r0, r0, #0x14
	orrs r3, r6
	lsls r1, r1, #0x17
	orrs r0, r3
	lsls r2, r2, #0x1d
	orrs r0, r1
	orrs r0, r2
	str r0, [r4, #0x64]
	ldr r0, [sp, #0x18]
	ldr r7, _02008498 @ =_020F5B04
	adds r4, r5, #0
	str r0, [sp, #0x14]
_0200817A:
	ldr r0, [r4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _02008190
	ldr r0, [r4, #0x54]
	lsls r1, r0, #0x1f
	lsrs r1, r1, #0x1f
	bne _02008190
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1f
	beq _02008192
_02008190:
	b _020084FA
_02008192:
	ldr r2, [r4, #0x68]
	cmp r2, #0
	beq _020081A0
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0x24
	blx r2
_020081A0:
	blx FUN_020C23F4
	ldr r0, _0200849C @ =0x00000333
	ldrb r0, [r5, r0]
	cmp r0, #1
	beq _020081B2
	ldr r0, _020084A0 @ =0x04000454
	movs r1, #0
	str r1, [r0]
_020081B2:
	adds r0, r4, #0
	bl FUN_0200925C
	movs r0, #0xb1
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	cmp r0, #2
	bne _020081C6
	movs r0, #1
	b _020081C8
_020081C6:
	movs r0, #0
_020081C8:
	movs r1, #0xbd
	lsls r1, r1, #2
	ldr r2, [r5, r1]
	ldr r1, [sp, #0x14]
	movs r3, #0x40
	adds r2, r2, r1
	movs r1, #4
	subs r0, r1, r0
	adds r1, r2, #0
	lsrs r1, r0
	ldr r0, _020084A4 @ =0x040004AC
	str r1, [r0]
	ldr r0, [r4, #0x28]
	ldrsh r3, [r4, r3]
	lsls r2, r0, #0xc
	movs r0, #0x26
	ldrsh r1, [r4, r0]
	movs r0, #0x42
	ldrsh r0, [r4, r0]
	adds r0, r1, r0
	lsls r1, r0, #0xc
	movs r0, #0x24
	ldrsh r0, [r4, r0]
	adds r0, r0, r3
	lsls r3, r0, #0xc
	ldr r0, _020084A8 @ =0x04000470
	str r3, [r0]
	str r1, [r0]
	str r2, [r0]
	ldrh r0, [r4, #0x38]
	asrs r0, r0, #4
	lsls r2, r0, #2
	ldr r0, _020084AC @ =0x021094DC
	adds r1, r0, r2
	ldrsh r0, [r0, r2]
	movs r2, #2
	ldrsh r1, [r1, r2]
	blx FUN_020CFBB8
	ldrh r0, [r4, #0x3a]
	asrs r0, r0, #4
	lsls r2, r0, #2
	ldr r0, _020084AC @ =0x021094DC
	adds r1, r0, r2
	ldrsh r0, [r0, r2]
	movs r2, #2
	ldrsh r1, [r1, r2]
	blx FUN_020CFBF4
	ldrh r0, [r4, #0x3c]
	asrs r0, r0, #4
	lsls r2, r0, #2
	ldr r0, _020084AC @ =0x021094DC
	adds r1, r0, r2
	ldrsh r0, [r0, r2]
	movs r2, #2
	ldrsh r1, [r1, r2]
	blx FUN_020CFC30
	ldr r0, [r4, #0x28]
	movs r3, #0x40
	lsls r0, r0, #0xc
	rsbs r2, r0, #0
	movs r0, #0x26
	ldrsh r1, [r4, r0]
	movs r0, #0x42
	ldrsh r0, [r4, r0]
	ldrsh r3, [r4, r3]
	adds r0, r1, r0
	lsls r0, r0, #0xc
	rsbs r1, r0, #0
	movs r0, #0x24
	ldrsh r0, [r4, r0]
	adds r0, r0, r3
	lsls r0, r0, #0xc
	rsbs r3, r0, #0
	ldr r0, _020084A8 @ =0x04000470
	str r3, [r0]
	str r1, [r0]
	str r2, [r0]
	ldr r0, [r4, #0x50]
	lsls r1, r0, #0x11
	lsrs r1, r1, #0x1b
	lsls r3, r0, #0x16
	lsls r2, r1, #0xa
	lsls r1, r0, #0x1b
	lsrs r3, r3, #0x1b
	lsrs r1, r1, #0x1b
	lsls r3, r3, #5
	orrs r1, r3
	orrs r1, r2
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	lsls r1, r0, #2
	lsrs r1, r1, #0x1b
	lsls r2, r1, #0xa
	lsls r1, r0, #0xc
	lsls r0, r0, #7
	lsrs r0, r0, #0x1b
	lsrs r1, r1, #0x1b
	lsls r0, r0, #5
	orrs r0, r1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	adds r1, r3, #0
	orrs r1, r0
	movs r0, #2
	lsls r0, r0, #0xe
	orrs r1, r0
	ldr r0, _020084B0 @ =0x040004C0
	str r1, [r0]
	ldr r1, _020084B4 @ =0x00004210
	adds r0, r0, #4
	str r1, [r0]
	ldr r1, [r4]
	ldr r0, [r4, #0x54]
	lsls r1, r1, #0x19
	lsls r0, r0, #0x19
	lsrs r1, r1, #0x1a
	lsrs r0, r0, #0x1b
	lsls r2, r1, #0x18
	movs r1, #0xc0
	lsls r0, r0, #0x10
	orrs r1, r2
	orrs r1, r0
	ldr r0, _020084B8 @ =0x040004A4
	str r1, [r0]
	ldr r0, [r4, #0x54]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	beq _0200834A
	adds r0, r4, #0
	adds r0, #0x5b
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x44
	lsls r3, r0, #4
	ldrb r2, [r1]
	ldr r1, [r7, r3]
	adds r0, r7, r3
	adds r6, r2, r1
	adds r1, r4, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r3, r4, #0
	adds r3, #0x47
	str r1, [sp, #0x1c]
	adds r1, r4, #0
	adds r1, #0x45
	ldrb r3, [r3]
	ldrb r1, [r1]
	ldr r0, [r0, #4]
	mov ip, r3
	str r3, [sp]
	ldr r3, [sp, #0x1c]
	adds r0, r1, r0
	str r6, [sp, #4]
	str r0, [sp, #8]
	adds r3, r3, r6
	str r3, [sp, #0xc]
	mov r3, ip
	adds r0, r3, r0
	str r0, [sp, #0x10]
	movs r3, #0x24
	ldrsh r3, [r4, r3]
	movs r0, #0x2c
	ldrsh r0, [r4, r0]
	subs r3, #0x28
	adds r2, r3, r2
	adds r0, r0, r2
	movs r3, #0x26
	ldrsh r3, [r4, r3]
	movs r2, #0x2e
	lsls r0, r0, #0x10
	subs r3, #0x28
	adds r1, r3, r1
	ldrsh r2, [r4, r2]
	ldr r3, [r4, #0x28]
	asrs r0, r0, #0x10
	adds r2, r2, r1
	movs r1, #0x6e
	ldrsb r1, [r4, r1]
	subs r1, r2, r1
	ldr r2, [r4, #0x30]
	lsls r1, r1, #0x10
	adds r2, r3, r2
	ldr r3, [sp, #0x1c]
	asrs r1, r1, #0x10
	blx FUN_020B7418
	b _020083B6
_0200834A:
	movs r0, #0x34
	ldrsh r1, [r4, r0]
	movs r0, #0x50
	muls r0, r1, r0
	asrs r3, r0, #8
	movs r0, #0x36
	ldrsh r1, [r4, r0]
	movs r0, #0x50
	muls r0, r1, r0
	asrs r6, r0, #8
	adds r0, r4, #0
	adds r0, #0x5b
	ldrb r0, [r0]
	lsls r1, r0, #4
	str r6, [sp]
	adds r0, r7, r1
	ldr r1, [r7, r1]
	str r1, [sp, #4]
	ldr r1, [r0, #4]
	str r1, [sp, #8]
	ldr r1, [r0, #8]
	str r1, [sp, #0xc]
	ldr r0, [r0, #0xc]
	lsrs r1, r3, #0x1f
	str r0, [sp, #0x10]
	movs r0, #0x24
	adds r1, r3, r1
	ldrsh r0, [r4, r0]
	asrs r1, r1, #1
	subs r0, r0, r1
	movs r1, #0x2c
	ldrsh r1, [r4, r1]
	adds r0, r0, r1
	movs r1, #0x26
	ldrsh r2, [r4, r1]
	lsrs r1, r6, #0x1f
	adds r1, r6, r1
	asrs r1, r1, #1
	subs r1, r2, r1
	movs r2, #0x2e
	ldrsh r2, [r4, r2]
	lsls r0, r0, #0x10
	ldr r6, [r4, #0x28]
	adds r1, r1, r2
	movs r2, #0x6e
	ldrsb r2, [r4, r2]
	asrs r0, r0, #0x10
	subs r1, r1, r2
	ldr r2, [r4, #0x30]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r2, r6, r2
	blx FUN_020B7418
_020083B6:
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r1, r0, #0x1e
	lsrs r1, r1, #0x1e
	beq _020083DC
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	beq _020083DC
	ldr r0, [r4, #0x54]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	bne _020083DC
	movs r0, #0xcd
	lsls r0, r0, #2
	ldr r1, [r5, r0]
	movs r0, #1
	tst r0, r1
	beq _020083DE
_020083DC:
	b _020084FA
_020083DE:
	ldr r0, _0200849C @ =0x00000333
	ldrb r0, [r5, r0]
	cmp r0, #1
	beq _020083EC
	ldr r0, _020084A0 @ =0x04000454
	movs r1, #0
	str r1, [r0]
_020083EC:
	movs r0, #0xb1
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	cmp r0, #2
	bne _020083FA
	movs r1, #1
	b _020083FC
_020083FA:
	movs r1, #0
_020083FC:
	adds r2, r4, #0
	adds r2, #0x6c
	ldrh r2, [r2]
	movs r0, #0xbd
	lsls r0, r0, #2
	lsls r2, r2, #0x1e
	lsrs r2, r2, #0x1e
	adds r2, r2, #3
	ldr r0, [r5, r0]
	lsls r2, r2, #5
	adds r2, r0, r2
	movs r0, #4
	subs r0, r0, r1
	adds r1, r2, #0
	lsrs r1, r0
	ldr r0, _020084A4 @ =0x040004AC
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	beq _0200843C
	movs r0, #0x34
	ldrsh r0, [r4, r0]
	lsls r0, r0, #6
	asrs r3, r0, #8
	movs r0, #0x36
	ldrsh r0, [r4, r0]
	lsls r0, r0, #4
	asrs r1, r0, #8
	b _02008440
_0200843C:
	movs r3, #0x40
	movs r1, #0x10
_02008440:
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	beq _02008462
	movs r0, #0x74
	ldrsh r2, [r4, r0]
	movs r0, #0x24
	movs r6, #0x2c
	ldrsh r0, [r4, r0]
	ldrsh r6, [r4, r6]
	adds r0, r0, r6
	adds r2, r2, r0
	adds r0, r4, #0
	adds r0, #0x70
	strh r2, [r0]
_02008462:
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1f
	beq _02008484
	movs r0, #0x76
	ldrsh r2, [r4, r0]
	movs r0, #0x26
	movs r6, #0x2e
	ldrsh r0, [r4, r0]
	ldrsh r6, [r4, r6]
	adds r0, r0, r6
	adds r2, r2, r0
	adds r0, r4, #0
	adds r0, #0x72
	strh r2, [r0]
_02008484:
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	lsls r2, r0, #4
	ldr r0, _020084BC @ =_020F5988
	b _020084C0
	.align 2, 0
_02008494: .4byte 0x04000444
_02008498: .4byte _020F5B04
_0200849C: .4byte 0x00000333
_020084A0: .4byte 0x04000454
_020084A4: .4byte 0x040004AC
_020084A8: .4byte 0x04000470
_020084AC: .4byte 0x021094DC
_020084B0: .4byte 0x040004C0
_020084B4: .4byte 0x00004210
_020084B8: .4byte 0x040004A4
_020084BC: .4byte _020F5988
_020084C0:
	str r1, [sp]
	adds r6, r0, r2
	ldr r0, [r0, r2]
	lsrs r2, r3, #0x1f
	str r0, [sp, #4]
	ldr r0, [r6, #4]
	adds r2, r3, r2
	str r0, [sp, #8]
	ldr r0, [r6, #8]
	asrs r2, r2, #1
	str r0, [sp, #0xc]
	ldr r0, [r6, #0xc]
	str r0, [sp, #0x10]
	movs r0, #0x70
	ldrsh r0, [r4, r0]
	subs r0, r0, r2
	movs r2, #0x72
	ldrsh r6, [r4, r2]
	lsrs r2, r1, #0x1f
	adds r2, r1, r2
	asrs r1, r2, #1
	subs r1, r6, r1
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	ldr r2, _0200851C @ =0xFFFFFC18
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	blx FUN_020B7418
_020084FA:
	ldr r0, [sp, #0x14]
	adds r4, #0xac
	adds r0, #0x20
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x18]
	adds r7, #0x20
	adds r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, #4
	bge _02008510
	b _0200817A
_02008510:
	ldr r0, _02008520 @ =0x04000448
	movs r1, #1
	str r1, [r0]
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200851C: .4byte 0xFFFFFC18
_02008520: .4byte 0x04000448
	thumb_func_end FUN_02008120

	thumb_func_start FUN_02008524
FUN_02008524: @ 0x02008524
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0201AB0C
	movs r0, #3
	lsls r0, r0, #8
	ldr r0, [r4, r0]
	bl FUN_0201AB0C
	movs r0, #0xc1
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02008524

	thumb_func_start FUN_02008550
FUN_02008550: @ 0x02008550
	push {r3, r4}
	adds r1, r0, #0
	movs r3, #0
	adds r1, #0x59
	strb r3, [r1]
	adds r1, r3, #0
_0200855C:
	adds r2, r0, r3
	adds r2, #0x5c
	adds r3, r3, #1
	strb r1, [r2]
	cmp r3, #0xa
	blt _0200855C
	adds r2, r0, #0
	adds r2, #0x59
	ldrb r2, [r2]
	lsls r2, r2, #2
	adds r3, r0, r2
	movs r2, #0x84
	ldrsb r4, [r3, r2]
	adds r3, r2, #0
	subs r3, #0x85
	cmp r4, r3
	bne _02008586
	adds r0, #0x5b
	strb r1, [r0]
	pop {r3, r4}
	bx lr
_02008586:
	adds r1, r0, #0
	movs r3, #1
	adds r1, #0x58
	strb r3, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r0, r1
	ldrsb r2, [r1, r2]
	adds r1, r0, #0
	adds r1, #0x5b
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r0, r1
	adds r1, #0x85
	ldrb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x5a
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r2, r0, r1
	movs r1, #0x86
	ldrsb r1, [r2, r1]
	strh r1, [r0, #0x2c]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02008550

	thumb_func_start FUN_020085C8
FUN_020085C8: @ 0x020085C8
	adds r2, r0, #0
	ldr r3, _020085D8 @ =FUN_020D4A50
	adds r2, #0x84
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #0x28
	bx r3
	nop
_020085D8: .4byte FUN_020D4A50
	thumb_func_end FUN_020085C8

	thumb_func_start FUN_020085DC
FUN_020085DC: @ 0x020085DC
	adds r0, #0x58
	ldrb r0, [r0]
	cmp r0, #0
	beq _020085E8
	movs r0, #1
	bx lr
_020085E8:
	movs r0, #0
	bx lr
	thumb_func_end FUN_020085DC

	thumb_func_start FUN_020085EC
FUN_020085EC: @ 0x020085EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp, #0x14]
	movs r4, #0
_020085FA:
	ldr r1, [r0]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	beq _0200860A
	adds r4, r4, #1
	adds r0, #0xac
	cmp r4, #4
	blt _020085FA
_0200860A:
	cmp r4, #4
	bne _02008612
	bl FUN_0202551C
_02008612:
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x14]
	str r0, [sp]
	ldr r0, [sp, #0x34]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x38]
	str r4, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	adds r2, r7, #0
	str r0, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_02008634
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020085EC

	thumb_func_start FUN_02008634
FUN_02008634: @ 0x02008634
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp, #8]
	ldr r1, [sp, #0x28]
	adds r4, r0, #0
	movs r0, #0xac
	adds r6, r1, #0
	muls r6, r0, r6
	ldr r0, [r4, r6]
	str r2, [sp]
	lsls r0, r0, #0x1f
	str r3, [sp, #4]
	lsrs r0, r0, #0x1f
	beq _02008654
	bl FUN_0202551C
_02008654:
	adds r5, r4, r6
	movs r0, #0
	adds r1, r5, #0
	movs r2, #0xac
	blx FUN_020D4858
	ldr r1, [r4, r6]
	movs r0, #1
	bics r1, r0
	movs r0, #1
	orrs r0, r1
	str r0, [r4, r6]
	ldr r1, [r4, r6]
	movs r0, #0x80
	orrs r0, r1
	str r0, [r4, r6]
	movs r0, #0x80
	ldr r1, [r4, r6]
	adds r0, #0x80
	orrs r0, r1
	str r0, [r4, r6]
	adds r2, r5, #0
	ldr r0, [r4, r6]
	movs r1, #0x7e
	bics r0, r1
	ldr r1, [sp, #0x24]
	adds r7, r2, #4
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x19
	orrs r0, r1
	str r0, [r4, r6]
	ldr r0, [sp, #8]
	mov ip, r0
	mov r3, ip
	ldm r3!, {r0, r1}
	stm r7!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r7!, {r0, r1}
	adds r7, r2, #0
	ldr r3, [sp, #8]
	adds r7, #0x14
	ldm r3!, {r0, r1}
	stm r7!, {r0, r1}
	str r3, [sp, #8]
	ldm r3!, {r0, r1}
	stm r7!, {r0, r1}
	ldr r0, [sp]
	ldr r1, [sp, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r7, r1, #0x10
	strh r0, [r2, #0x24]
	str r3, [sp, #8]
	ldr r1, [sp, #0x20]
	strh r7, [r2, #0x26]
	str r1, [r2, #0x28]
	movs r1, #0x80
	adds r1, #0x80
	strh r1, [r2, #0x34]
	strh r1, [r2, #0x36]
	ldr r1, [r5, #0x54]
	movs r3, #0x7c
	bics r1, r3
	movs r3, #0x7c
	orrs r1, r3
	str r1, [r5, #0x54]
	ldr r1, [r5, #0x50]
	movs r3, #0x1f
	bics r1, r3
	movs r3, #0x1f
	orrs r3, r1
	ldr r1, _0200876C @ =0xFFFFFC1F
	ands r1, r3
	movs r3, #0x1f
	lsls r3, r3, #5
	orrs r3, r1
	ldr r1, _02008770 @ =0xFFFF83FF
	ands r1, r3
	movs r3, #0x1f
	lsls r3, r3, #0xa
	orrs r3, r1
	ldr r1, _02008774 @ =0xFFF07FFF
	ands r1, r3
	movs r3, #0x80
	lsls r3, r3, #0xc
	orrs r3, r1
	ldr r1, _02008778 @ =0xFE0FFFFF
	ands r1, r3
	movs r3, #0x80
	lsls r3, r3, #0x11
	orrs r3, r1
	ldr r1, _0200877C @ =0xC1FFFFFF
	ands r1, r3
	movs r3, #0x80
	lsls r3, r3, #0x16
	orrs r1, r3
	str r1, [r5, #0x50]
	ldr r1, [sp, #0x30]
	str r1, [r2, #0x68]
	adds r1, r2, #0
	adds r1, #0x70
	strh r0, [r1]
	adds r2, #0x72
	adds r0, r5, #0
	strh r7, [r2]
	adds r0, #0x6c
	ldrh r1, [r0]
	movs r0, #4
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x6c
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x6c
	ldrh r1, [r0]
	movs r0, #8
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x6c
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x6c
	ldrh r1, [r0]
	movs r0, #0x10
	adds r5, #0x6c
	orrs r0, r1
	strh r0, [r5]
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	beq _02008764
	adds r1, r4, r6
	adds r1, #0x84
	movs r2, #0x28
	blx FUN_020D4A50
_02008764:
	adds r0, r4, r6
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0200876C: .4byte 0xFFFFFC1F
_02008770: .4byte 0xFFFF83FF
_02008774: .4byte 0xFFF07FFF
_02008778: .4byte 0xFE0FFFFF
_0200877C: .4byte 0xC1FFFFFF
	thumb_func_end FUN_02008634

	thumb_func_start FUN_02008780
FUN_02008780: @ 0x02008780
	ldr r2, [r0]
	movs r1, #1
	bics r2, r1
	str r2, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02008780

	thumb_func_start FUN_0200878C
FUN_0200878C: @ 0x0200878C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r4, #0
_02008792:
	adds r0, r5, #0
	bl FUN_02008780
	adds r4, r4, #1
	adds r5, #0xac
	cmp r4, #4
	blt _02008792
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200878C

	thumb_func_start FUN_020087A4
FUN_020087A4: @ 0x020087A4
	cmp r1, #0x2e
	bls _020087AA
	b _02008A4C
_020087AA:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_020087B6: @ jump table
	.2byte _02008814 - _020087B6 - 2 @ case 0
	.2byte _02008818 - _020087B6 - 2 @ case 1
	.2byte _0200881C - _020087B6 - 2 @ case 2
	.2byte _02008820 - _020087B6 - 2 @ case 3
	.2byte _02008824 - _020087B6 - 2 @ case 4
	.2byte _02008828 - _020087B6 - 2 @ case 5
	.2byte _0200882C - _020087B6 - 2 @ case 6
	.2byte _0200883C - _020087B6 - 2 @ case 7
	.2byte _02008840 - _020087B6 - 2 @ case 8
	.2byte _02008844 - _020087B6 - 2 @ case 9
	.2byte _02008848 - _020087B6 - 2 @ case 10
	.2byte _0200884E - _020087B6 - 2 @ case 11
	.2byte _02008854 - _020087B6 - 2 @ case 12
	.2byte _02008858 - _020087B6 - 2 @ case 13
	.2byte _0200885C - _020087B6 - 2 @ case 14
	.2byte _0200886C - _020087B6 - 2 @ case 15
	.2byte _02008872 - _020087B6 - 2 @ case 16
	.2byte _02008878 - _020087B6 - 2 @ case 17
	.2byte _0200887E - _020087B6 - 2 @ case 18
	.2byte _02008884 - _020087B6 - 2 @ case 19
	.2byte _0200888A - _020087B6 - 2 @ case 20
	.2byte _02008890 - _020087B6 - 2 @ case 21
	.2byte _02008896 - _020087B6 - 2 @ case 22
	.2byte _0200889C - _020087B6 - 2 @ case 23
	.2byte _020088AC - _020087B6 - 2 @ case 24
	.2byte _020088BC - _020087B6 - 2 @ case 25
	.2byte _020088CC - _020087B6 - 2 @ case 26
	.2byte _020088DC - _020087B6 - 2 @ case 27
	.2byte _020088EC - _020087B6 - 2 @ case 28
	.2byte _020088FC - _020087B6 - 2 @ case 29
	.2byte _0200890C - _020087B6 - 2 @ case 30
	.2byte _02008926 - _020087B6 - 2 @ case 31
	.2byte _02008934 - _020087B6 - 2 @ case 32
	.2byte _02008946 - _020087B6 - 2 @ case 33
	.2byte _02008958 - _020087B6 - 2 @ case 34
	.2byte _0200895E - _020087B6 - 2 @ case 35
	.2byte _02008976 - _020087B6 - 2 @ case 36
	.2byte _0200898E - _020087B6 - 2 @ case 37
	.2byte _0200899E - _020087B6 - 2 @ case 38
	.2byte _02008A4C - _020087B6 - 2 @ case 39
	.2byte _020089A4 - _020087B6 - 2 @ case 40
	.2byte _020089BC - _020087B6 - 2 @ case 41
	.2byte _020089C2 - _020087B6 - 2 @ case 42
	.2byte _020089E6 - _020087B6 - 2 @ case 43
	.2byte _02008A00 - _020087B6 - 2 @ case 44
	.2byte _02008A1A - _020087B6 - 2 @ case 45
	.2byte _02008A34 - _020087B6 - 2 @ case 46
_02008814:
	strh r2, [r0, #0x24]
	bx lr
_02008818:
	strh r2, [r0, #0x26]
	bx lr
_0200881C:
	str r2, [r0, #0x28]
	bx lr
_02008820:
	strh r2, [r0, #0x2c]
	bx lr
_02008824:
	strh r2, [r0, #0x2e]
	bx lr
_02008828:
	str r2, [r0, #0x30]
	bx lr
_0200882C:
	ldr r3, [r0, #0x54]
	movs r1, #1
	bics r3, r1
	movs r1, #1
	ands r1, r2
	orrs r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200883C:
	strh r2, [r0, #0x38]
	bx lr
_02008840:
	strh r2, [r0, #0x3a]
	bx lr
_02008844:
	strh r2, [r0, #0x3c]
	bx lr
_02008848:
	adds r0, #0x40
	strh r2, [r0]
	bx lr
_0200884E:
	adds r0, #0x42
	strh r2, [r0]
	bx lr
_02008854:
	strh r2, [r0, #0x34]
	bx lr
_02008858:
	strh r2, [r0, #0x36]
	bx lr
_0200885C:
	ldr r3, [r0, #0x54]
	movs r1, #2
	bics r3, r1
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x1e
	orrs r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200886C:
	adds r0, #0x44
	strb r2, [r0]
	bx lr
_02008872:
	adds r0, #0x45
	strb r2, [r0]
	bx lr
_02008878:
	adds r0, #0x46
	strb r2, [r0]
	bx lr
_0200887E:
	adds r0, #0x47
	strb r2, [r0]
	bx lr
_02008884:
	adds r0, #0x70
	strh r2, [r0]
	bx lr
_0200888A:
	adds r0, #0x72
	strh r2, [r0]
	bx lr
_02008890:
	adds r0, #0x74
	strh r2, [r0]
	bx lr
_02008896:
	adds r0, #0x76
	strh r2, [r0]
	bx lr
_0200889C:
	ldr r3, [r0, #0x54]
	movs r1, #0x7c
	bics r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #0x19
	orrs r1, r3
	str r1, [r0, #0x54]
	bx lr
_020088AC:
	ldr r3, [r0, #0x50]
	movs r1, #0x1f
	bics r3, r1
	movs r1, #0x1f
	ands r1, r2
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088BC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A50 @ =0xFFFFFC1F
	ands r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #0x16
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088CC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A54 @ =0xFFFF83FF
	ands r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #0x11
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088DC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A58 @ =0xFFF07FFF
	ands r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #0xc
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088EC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A5C @ =0xFE0FFFFF
	ands r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #7
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_020088FC:
	ldr r3, [r0, #0x50]
	ldr r1, _02008A60 @ =0xC1FFFFFF
	ands r3, r1
	lsls r1, r2, #0x1b
	lsrs r1, r1, #2
	orrs r1, r3
	str r1, [r0, #0x50]
	bx lr
_0200890C:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A64 @ =0xFFFFEFFF
	ands r3, r1
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x13
	orrs r1, r3
	str r1, [r0, #0x54]
	movs r1, #1
	ldr r2, [r0]
	lsls r1, r1, #8
	orrs r1, r2
	str r1, [r0]
	bx lr
_02008926:
	str r2, [r0, #0x4c]
	movs r1, #1
	ldr r2, [r0]
	lsls r1, r1, #8
	orrs r1, r2
	str r1, [r0]
	bx lr
_02008934:
	adds r1, r0, #0
	adds r1, #0x48
	strb r2, [r1]
	movs r1, #1
	ldr r2, [r0]
	lsls r1, r1, #8
	orrs r1, r2
	str r1, [r0]
	bx lr
_02008946:
	adds r1, r0, #0
	adds r1, #0x49
	strb r2, [r1]
	movs r1, #1
	ldr r2, [r0]
	lsls r1, r1, #8
	orrs r1, r2
	str r1, [r0]
	bx lr
_02008958:
	adds r0, #0x4a
	strb r2, [r0]
	bx lr
_0200895E:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A68 @ =0xFFFFFDFF
	ands r3, r1
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x16
	orrs r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	movs r1, #0x80
	orrs r1, r2
	str r1, [r0]
	bx lr
_02008976:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A6C @ =0xFFFFFBFF
	ands r3, r1
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x15
	orrs r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	movs r1, #0x80
	orrs r1, r2
	str r1, [r0]
	bx lr
_0200898E:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A70 @ =0xFFFFF7FF
	ands r3, r1
	lsls r1, r2, #0x1f
	lsrs r1, r1, #0x14
	orrs r1, r3
	str r1, [r0, #0x54]
	bx lr
_0200899E:
	adds r0, #0x5b
	strb r2, [r0]
	bx lr
_020089A4:
	ldr r3, [r0, #0x54]
	ldr r1, _02008A74 @ =0xFFFE1FFF
	ands r3, r1
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0xf
	orrs r1, r3
	str r1, [r0, #0x54]
	ldr r2, [r0]
	movs r1, #0x80
	orrs r1, r2
	str r1, [r0]
	bx lr
_020089BC:
	adds r0, #0x6e
	strb r2, [r0]
	bx lr
_020089C2:
	adds r1, r0, #0
	adds r1, #0x6c
	ldrh r3, [r1]
	movs r1, #3
	bics r3, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	movs r2, #3
	ands r1, r2
	orrs r3, r1
	adds r1, r0, #0
	adds r1, #0x6c
	strh r3, [r1]
	ldr r1, [r0]
	adds r2, #0xfd
	orrs r1, r2
	str r1, [r0]
	bx lr
_020089E6:
	adds r1, r0, #0
	adds r1, #0x6c
	ldrh r3, [r1]
	movs r1, #4
	adds r0, #0x6c
	bics r3, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1d
	orrs r1, r3
	strh r1, [r0]
	bx lr
_02008A00:
	adds r1, r0, #0
	adds r1, #0x6c
	ldrh r3, [r1]
	movs r1, #8
	adds r0, #0x6c
	bics r3, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1c
	orrs r1, r3
	strh r1, [r0]
	bx lr
_02008A1A:
	adds r1, r0, #0
	adds r1, #0x6c
	ldrh r3, [r1]
	movs r1, #0x10
	adds r0, #0x6c
	bics r3, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1b
	orrs r1, r3
	strh r1, [r0]
	bx lr
_02008A34:
	adds r1, r0, #0
	adds r1, #0x6c
	ldrh r3, [r1]
	movs r1, #0x60
	adds r0, #0x6c
	bics r3, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	lsls r1, r1, #0x1e
	lsrs r1, r1, #0x19
	orrs r1, r3
	strh r1, [r0]
_02008A4C:
	bx lr
	nop
_02008A50: .4byte 0xFFFFFC1F
_02008A54: .4byte 0xFFFF83FF
_02008A58: .4byte 0xFFF07FFF
_02008A5C: .4byte 0xFE0FFFFF
_02008A60: .4byte 0xC1FFFFFF
_02008A64: .4byte 0xFFFFEFFF
_02008A68: .4byte 0xFFFFFDFF
_02008A6C: .4byte 0xFFFFFBFF
_02008A70: .4byte 0xFFFFF7FF
_02008A74: .4byte 0xFFFE1FFF
	thumb_func_end FUN_020087A4

	thumb_func_start FUN_02008A78
FUN_02008A78: @ 0x02008A78
	push {r3, lr}
	cmp r1, #0x2e
	bls _02008A80
	b _02008C22
_02008A80:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02008A8C: @ jump table
	.2byte _02008AEA - _02008A8C - 2 @ case 0
	.2byte _02008AF0 - _02008A8C - 2 @ case 1
	.2byte _02008AF6 - _02008A8C - 2 @ case 2
	.2byte _02008AFA - _02008A8C - 2 @ case 3
	.2byte _02008B00 - _02008A8C - 2 @ case 4
	.2byte _02008B06 - _02008A8C - 2 @ case 5
	.2byte _02008B0A - _02008A8C - 2 @ case 6
	.2byte _02008B12 - _02008A8C - 2 @ case 7
	.2byte _02008B16 - _02008A8C - 2 @ case 8
	.2byte _02008B1A - _02008A8C - 2 @ case 9
	.2byte _02008B1E - _02008A8C - 2 @ case 10
	.2byte _02008B24 - _02008A8C - 2 @ case 11
	.2byte _02008B2A - _02008A8C - 2 @ case 12
	.2byte _02008B30 - _02008A8C - 2 @ case 13
	.2byte _02008B36 - _02008A8C - 2 @ case 14
	.2byte _02008B3E - _02008A8C - 2 @ case 15
	.2byte _02008B44 - _02008A8C - 2 @ case 16
	.2byte _02008B4A - _02008A8C - 2 @ case 17
	.2byte _02008B50 - _02008A8C - 2 @ case 18
	.2byte _02008B56 - _02008A8C - 2 @ case 19
	.2byte _02008B5C - _02008A8C - 2 @ case 20
	.2byte _02008B62 - _02008A8C - 2 @ case 21
	.2byte _02008B68 - _02008A8C - 2 @ case 22
	.2byte _02008B6E - _02008A8C - 2 @ case 23
	.2byte _02008B76 - _02008A8C - 2 @ case 24
	.2byte _02008B7E - _02008A8C - 2 @ case 25
	.2byte _02008B86 - _02008A8C - 2 @ case 26
	.2byte _02008B8E - _02008A8C - 2 @ case 27
	.2byte _02008B96 - _02008A8C - 2 @ case 28
	.2byte _02008B9E - _02008A8C - 2 @ case 29
	.2byte _02008BA6 - _02008A8C - 2 @ case 30
	.2byte _02008BAE - _02008A8C - 2 @ case 31
	.2byte _02008BB2 - _02008A8C - 2 @ case 32
	.2byte _02008BB8 - _02008A8C - 2 @ case 33
	.2byte _02008BBE - _02008A8C - 2 @ case 34
	.2byte _02008BC4 - _02008A8C - 2 @ case 35
	.2byte _02008BCC - _02008A8C - 2 @ case 36
	.2byte _02008BD4 - _02008A8C - 2 @ case 37
	.2byte _02008BDC - _02008A8C - 2 @ case 38
	.2byte _02008C22 - _02008A8C - 2 @ case 39
	.2byte _02008BE2 - _02008A8C - 2 @ case 40
	.2byte _02008BEA - _02008A8C - 2 @ case 41
	.2byte _02008BF0 - _02008A8C - 2 @ case 42
	.2byte _02008BFA - _02008A8C - 2 @ case 43
	.2byte _02008C04 - _02008A8C - 2 @ case 44
	.2byte _02008C0E - _02008A8C - 2 @ case 45
	.2byte _02008C18 - _02008A8C - 2 @ case 46
_02008AEA:
	movs r1, #0x24
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008AF0:
	movs r1, #0x26
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008AF6:
	ldr r0, [r0, #0x28]
	pop {r3, pc}
_02008AFA:
	movs r1, #0x2c
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B00:
	movs r1, #0x2e
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B06:
	ldr r0, [r0, #0x30]
	pop {r3, pc}
_02008B0A:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008B12:
	ldrh r0, [r0, #0x38]
	pop {r3, pc}
_02008B16:
	ldrh r0, [r0, #0x3a]
	pop {r3, pc}
_02008B1A:
	ldrh r0, [r0, #0x3c]
	pop {r3, pc}
_02008B1E:
	movs r1, #0x40
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B24:
	movs r1, #0x42
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B2A:
	movs r1, #0x34
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B30:
	movs r1, #0x36
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B36:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008B3E:
	adds r0, #0x44
	ldrb r0, [r0]
	pop {r3, pc}
_02008B44:
	adds r0, #0x45
	ldrb r0, [r0]
	pop {r3, pc}
_02008B4A:
	adds r0, #0x46
	ldrb r0, [r0]
	pop {r3, pc}
_02008B50:
	adds r0, #0x47
	ldrb r0, [r0]
	pop {r3, pc}
_02008B56:
	movs r1, #0x70
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B5C:
	movs r1, #0x72
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B62:
	movs r1, #0x74
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B68:
	movs r1, #0x76
	ldrsh r0, [r0, r1]
	pop {r3, pc}
_02008B6E:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B76:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B7E:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B86:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B8E:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #0xc
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B96:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #7
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008B9E:
	ldr r0, [r0, #0x50]
	lsls r0, r0, #2
	lsrs r0, r0, #0x1b
	pop {r3, pc}
_02008BA6:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x13
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008BAE:
	ldr r0, [r0, #0x4c]
	pop {r3, pc}
_02008BB2:
	adds r0, #0x48
	ldrb r0, [r0]
	pop {r3, pc}
_02008BB8:
	adds r0, #0x49
	ldrb r0, [r0]
	pop {r3, pc}
_02008BBE:
	adds r0, #0x4a
	ldrb r0, [r0]
	pop {r3, pc}
_02008BC4:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008BCC:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008BD4:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008BDC:
	adds r0, #0x5b
	ldrb r0, [r0]
	pop {r3, pc}
_02008BE2:
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1c
	pop {r3, pc}
_02008BEA:
	movs r1, #0x6e
	ldrsb r0, [r0, r1]
	pop {r3, pc}
_02008BF0:
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	pop {r3, pc}
_02008BFA:
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008C04:
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008C0E:
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	pop {r3, pc}
_02008C18:
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	pop {r3, pc}
_02008C22:
	bl FUN_0202551C
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02008A78

	thumb_func_start FUN_02008C2C
FUN_02008C2C: @ 0x02008C2C
	push {r3, r4}
	adds r3, r0, #0
	adds r0, r2, #0
	cmp r1, #0x2e
	bls _02008C38
	b _0200905E
_02008C38:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02008C44: @ jump table
	.2byte _02008CA2 - _02008C44 - 2 @ case 0
	.2byte _02008CAE - _02008C44 - 2 @ case 1
	.2byte _02008CBA - _02008C44 - 2 @ case 2
	.2byte _02008CC4 - _02008C44 - 2 @ case 3
	.2byte _02008CD0 - _02008C44 - 2 @ case 4
	.2byte _02008CDC - _02008C44 - 2 @ case 5
	.2byte _02008CE6 - _02008C44 - 2 @ case 6
	.2byte _02008D00 - _02008C44 - 2 @ case 7
	.2byte _02008D0A - _02008C44 - 2 @ case 8
	.2byte _02008D14 - _02008C44 - 2 @ case 9
	.2byte _02008D1E - _02008C44 - 2 @ case 10
	.2byte _02008D2C - _02008C44 - 2 @ case 11
	.2byte _02008D3A - _02008C44 - 2 @ case 12
	.2byte _02008D46 - _02008C44 - 2 @ case 13
	.2byte _02008D52 - _02008C44 - 2 @ case 14
	.2byte _02008D6C - _02008C44 - 2 @ case 15
	.2byte _02008D7C - _02008C44 - 2 @ case 16
	.2byte _02008D8C - _02008C44 - 2 @ case 17
	.2byte _02008D9C - _02008C44 - 2 @ case 18
	.2byte _02008DAC - _02008C44 - 2 @ case 19
	.2byte _02008DBA - _02008C44 - 2 @ case 20
	.2byte _02008DC8 - _02008C44 - 2 @ case 21
	.2byte _02008DD6 - _02008C44 - 2 @ case 22
	.2byte _02008DE4 - _02008C44 - 2 @ case 23
	.2byte _02008DFE - _02008C44 - 2 @ case 24
	.2byte _02008E18 - _02008C44 - 2 @ case 25
	.2byte _02008E30 - _02008C44 - 2 @ case 26
	.2byte _02008E48 - _02008C44 - 2 @ case 27
	.2byte _02008E60 - _02008C44 - 2 @ case 28
	.2byte _02008E78 - _02008C44 - 2 @ case 29
	.2byte _02008E90 - _02008C44 - 2 @ case 30
	.2byte _02008EB2 - _02008C44 - 2 @ case 31
	.2byte _02008EC6 - _02008C44 - 2 @ case 32
	.2byte _02008EE2 - _02008C44 - 2 @ case 33
	.2byte _02008EFE - _02008C44 - 2 @ case 34
	.2byte _02008F0E - _02008C44 - 2 @ case 35
	.2byte _02008F2E - _02008C44 - 2 @ case 36
	.2byte _02008F4E - _02008C44 - 2 @ case 37
	.2byte _02008F66 - _02008C44 - 2 @ case 38
	.2byte _0200905E - _02008C44 - 2 @ case 39
	.2byte _02008F76 - _02008C44 - 2 @ case 40
	.2byte _02008F96 - _02008C44 - 2 @ case 41
	.2byte _02008FA4 - _02008C44 - 2 @ case 42
	.2byte _02008FD2 - _02008C44 - 2 @ case 43
	.2byte _02008FF6 - _02008C44 - 2 @ case 44
	.2byte _0200901A - _02008C44 - 2 @ case 45
	.2byte _0200903E - _02008C44 - 2 @ case 46
_02008CA2:
	movs r1, #0x24
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x24]
	pop {r3, r4}
	bx lr
_02008CAE:
	movs r1, #0x26
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x26]
	pop {r3, r4}
	bx lr
_02008CBA:
	ldr r1, [r3, #0x28]
	adds r0, r1, r0
	str r0, [r3, #0x28]
	pop {r3, r4}
	bx lr
_02008CC4:
	movs r1, #0x2c
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x2c]
	pop {r3, r4}
	bx lr
_02008CD0:
	movs r1, #0x2e
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x2e]
	pop {r3, r4}
	bx lr
_02008CDC:
	ldr r1, [r3, #0x30]
	adds r0, r1, r0
	str r0, [r3, #0x30]
	pop {r3, r4}
	bx lr
_02008CE6:
	ldr r4, [r3, #0x54]
	movs r2, #1
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1f
	lsrs r2, r2, #0x1f
	adds r2, r2, r0
	movs r0, #1
	ands r0, r2
	orrs r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008D00:
	ldrh r1, [r3, #0x38]
	adds r0, r1, r0
	strh r0, [r3, #0x38]
	pop {r3, r4}
	bx lr
_02008D0A:
	ldrh r1, [r3, #0x3a]
	adds r0, r1, r0
	strh r0, [r3, #0x3a]
	pop {r3, r4}
	bx lr
_02008D14:
	ldrh r1, [r3, #0x3c]
	adds r0, r1, r0
	strh r0, [r3, #0x3c]
	pop {r3, r4}
	bx lr
_02008D1E:
	movs r1, #0x40
	ldrsh r1, [r3, r1]
	adds r3, #0x40
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008D2C:
	movs r1, #0x42
	ldrsh r1, [r3, r1]
	adds r3, #0x42
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008D3A:
	movs r1, #0x34
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x34]
	pop {r3, r4}
	bx lr
_02008D46:
	movs r1, #0x36
	ldrsh r1, [r3, r1]
	adds r0, r1, r0
	strh r0, [r3, #0x36]
	pop {r3, r4}
	bx lr
_02008D52:
	ldr r4, [r3, #0x54]
	movs r2, #2
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1e
	orrs r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008D6C:
	adds r1, r3, #0
	adds r1, #0x44
	ldrb r1, [r1]
	adds r3, #0x44
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D7C:
	adds r1, r3, #0
	adds r1, #0x45
	ldrb r1, [r1]
	adds r3, #0x45
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D8C:
	adds r1, r3, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r3, #0x46
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008D9C:
	adds r1, r3, #0
	adds r1, #0x47
	ldrb r1, [r1]
	adds r3, #0x47
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008DAC:
	movs r1, #0x70
	ldrsh r1, [r3, r1]
	adds r3, #0x70
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DBA:
	movs r1, #0x72
	ldrsh r1, [r3, r1]
	adds r3, #0x72
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DC8:
	movs r1, #0x74
	ldrsh r1, [r3, r1]
	adds r3, #0x74
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DD6:
	movs r1, #0x76
	ldrsh r1, [r3, r1]
	adds r3, #0x76
	adds r0, r1, r0
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008DE4:
	ldr r4, [r3, #0x54]
	movs r2, #0x7c
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x19
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x19
	orrs r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008DFE:
	ldr r4, [r3, #0x50]
	movs r2, #0x1f
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1b
	lsrs r2, r2, #0x1b
	adds r2, r2, r0
	movs r0, #0x1f
	ands r0, r2
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E18:
	ldr r2, [r3, #0x50]
	ldr r1, _02009064 @ =0xFFFFFC1F
	ands r1, r2
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x16
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E30:
	ldr r2, [r3, #0x50]
	ldr r1, _02009068 @ =0xFFFF83FF
	ands r1, r2
	lsls r2, r2, #0x11
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x11
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E48:
	ldr r2, [r3, #0x50]
	ldr r1, _0200906C @ =0xFFF07FFF
	ands r1, r2
	lsls r2, r2, #0xc
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0xc
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E60:
	ldr r2, [r3, #0x50]
	ldr r1, _02009070 @ =0xFE0FFFFF
	ands r1, r2
	lsls r2, r2, #7
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #7
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E78:
	ldr r2, [r3, #0x50]
	ldr r1, _02009074 @ =0xC1FFFFFF
	ands r1, r2
	lsls r2, r2, #2
	lsrs r2, r2, #0x1b
	adds r0, r2, r0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #2
	orrs r0, r1
	str r0, [r3, #0x50]
	pop {r3, r4}
	bx lr
_02008E90:
	ldr r2, [r3, #0x54]
	ldr r1, _02009078 @ =0xFFFFEFFF
	ands r1, r2
	lsls r2, r2, #0x13
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x13
	orrs r0, r1
	str r0, [r3, #0x54]
	movs r0, #1
	ldr r1, [r3]
	lsls r0, r0, #8
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EB2:
	ldr r1, [r3, #0x4c]
	adds r0, r1, r0
	str r0, [r3, #0x4c]
	movs r0, #1
	ldr r1, [r3]
	lsls r0, r0, #8
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EC6:
	adds r1, r3, #0
	adds r1, #0x48
	ldrb r1, [r1]
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x48
	strb r1, [r0]
	movs r0, #1
	ldr r1, [r3]
	lsls r0, r0, #8
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EE2:
	adds r1, r3, #0
	adds r1, #0x49
	ldrb r1, [r1]
	adds r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x49
	strb r1, [r0]
	movs r0, #1
	ldr r1, [r3]
	lsls r0, r0, #8
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008EFE:
	adds r1, r3, #0
	adds r1, #0x4a
	ldrb r1, [r1]
	adds r3, #0x4a
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008F0E:
	ldr r2, [r3, #0x54]
	ldr r1, _0200907C @ =0xFFFFFDFF
	ands r1, r2
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x16
	orrs r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	movs r0, #0x80
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F2E:
	ldr r2, [r3, #0x54]
	ldr r1, _02009080 @ =0xFFFFFBFF
	ands r1, r2
	lsls r2, r2, #0x15
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x15
	orrs r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	movs r0, #0x80
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F4E:
	ldr r2, [r3, #0x54]
	ldr r1, _02009084 @ =0xFFFFF7FF
	ands r1, r2
	lsls r2, r2, #0x14
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x14
	orrs r0, r1
	str r0, [r3, #0x54]
	pop {r3, r4}
	bx lr
_02008F66:
	adds r1, r3, #0
	adds r1, #0x5b
	ldrb r1, [r1]
	adds r3, #0x5b
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008F76:
	ldr r2, [r3, #0x54]
	ldr r1, _02009088 @ =0xFFFE1FFF
	ands r1, r2
	lsls r2, r2, #0xf
	lsrs r2, r2, #0x1c
	adds r0, r2, r0
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0xf
	orrs r0, r1
	str r0, [r3, #0x54]
	ldr r1, [r3]
	movs r0, #0x80
	orrs r0, r1
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008F96:
	movs r1, #0x6e
	ldrsb r1, [r3, r1]
	adds r3, #0x6e
	adds r0, r1, r0
	strb r0, [r3]
	pop {r3, r4}
	bx lr
_02008FA4:
	adds r1, r3, #0
	adds r1, #0x6c
	ldrh r4, [r1]
	movs r2, #3
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #3
	ands r0, r2
	orrs r1, r0
	adds r0, r3, #0
	adds r0, #0x6c
	strh r1, [r0]
	ldr r0, [r3]
	adds r2, #0xfd
	orrs r0, r2
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02008FD2:
	adds r1, r3, #0
	adds r1, #0x6c
	ldrh r4, [r1]
	movs r2, #4
	adds r3, #0x6c
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1d
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1d
	orrs r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_02008FF6:
	adds r1, r3, #0
	adds r1, #0x6c
	ldrh r4, [r1]
	movs r2, #8
	adds r3, #0x6c
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1c
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1c
	orrs r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_0200901A:
	adds r1, r3, #0
	adds r1, #0x6c
	ldrh r4, [r1]
	movs r2, #0x10
	adds r3, #0x6c
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x1b
	lsrs r2, r2, #0x1f
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1b
	orrs r0, r1
	strh r0, [r3]
	pop {r3, r4}
	bx lr
_0200903E:
	adds r1, r3, #0
	adds r1, #0x6c
	ldrh r4, [r1]
	movs r2, #0x60
	adds r3, #0x6c
	adds r1, r4, #0
	bics r1, r2
	lsls r2, r4, #0x19
	lsrs r2, r2, #0x1e
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x19
	orrs r0, r1
	strh r0, [r3]
_0200905E:
	pop {r3, r4}
	bx lr
	nop
_02009064: .4byte 0xFFFFFC1F
_02009068: .4byte 0xFFFF83FF
_0200906C: .4byte 0xFFF07FFF
_02009070: .4byte 0xFE0FFFFF
_02009074: .4byte 0xC1FFFFFF
_02009078: .4byte 0xFFFFEFFF
_0200907C: .4byte 0xFFFFFDFF
_02009080: .4byte 0xFFFFFBFF
_02009084: .4byte 0xFFFFF7FF
_02009088: .4byte 0xFFFE1FFF
	thumb_func_end FUN_02008C2C

	thumb_func_start FUN_0200908C
FUN_0200908C: @ 0x0200908C
	push {r4, r5}
	ldr r5, [r0, #0x54]
	movs r4, #2
	orrs r4, r5
	str r4, [r0, #0x54]
	adds r4, r0, #0
	adds r4, #0x44
	strb r1, [r4]
	adds r1, r0, #0
	adds r1, #0x45
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x46
	strb r3, [r1]
	ldr r1, [sp, #8]
	adds r0, #0x47
	strb r1, [r0]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200908C

	thumb_func_start FUN_020090B4
FUN_020090B4: @ 0x020090B4
	push {r4, r5}
	movs r4, #1
	ldr r5, [r0, #0x54]
	lsls r4, r4, #0xc
	orrs r4, r5
	str r4, [r0, #0x54]
	adds r4, r0, #0
	adds r4, #0x48
	strb r1, [r4]
	adds r1, r0, #0
	adds r1, #0x49
	strb r2, [r1]
	adds r1, r0, #0
	movs r2, #0
	adds r1, #0x4a
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x4b
	strb r3, [r1]
	ldr r1, [sp, #8]
	str r1, [r0, #0x4c]
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020090B4

	thumb_func_start FUN_020090E4
FUN_020090E4: @ 0x020090E4
	push {r4, r5, r6, r7}
	adds r4, r0, #0
	adds r0, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r0, r5, #0x18
	lsrs r5, r0, #0x18
	lsls r0, r3, #0x18
	ldr r2, [sp, #0x10]
	movs r1, #0
	lsrs r0, r0, #0x18
_020090FC:
	ldr r3, [r4]
	lsls r3, r3, #0x1f
	lsrs r3, r3, #0x1f
	beq _0200912A
	movs r3, #1
	ldr r7, [r4, #0x54]
	lsls r3, r3, #0xc
	orrs r3, r7
	str r3, [r4, #0x54]
	adds r3, r4, #0
	adds r3, #0x48
	strb r6, [r3]
	adds r3, r4, #0
	adds r3, #0x49
	adds r7, r4, #0
	strb r5, [r3]
	adds r7, #0x4a
	movs r3, #0
	strb r3, [r7]
	adds r3, r4, #0
	adds r3, #0x4b
	strb r0, [r3]
	str r2, [r4, #0x4c]
_0200912A:
	adds r1, r1, #1
	adds r4, #0xac
	cmp r1, #4
	blt _020090FC
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020090E4

	thumb_func_start FUN_02009138
FUN_02009138: @ 0x02009138
	ldr r0, [r0, #0x54]
	lsls r0, r0, #0x13
	lsrs r0, r0, #0x1f
	cmp r0, #1
	bne _02009146
	movs r0, #1
	bx lr
_02009146:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02009138

	thumb_func_start FUN_0200914C
FUN_0200914C: @ 0x0200914C
	movs r2, #0x28
	subs r2, r2, r1
	movs r1, #0x36
	ldrsh r1, [r0, r1]
	muls r1, r2, r1
	asrs r1, r1, #8
	subs r1, r2, r1
	strh r1, [r0, #0x2e]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200914C

	thumb_func_start FUN_02009160
FUN_02009160: @ 0x02009160
	push {r4, r5, r6, r7}
	adds r1, r0, #0
	adds r1, #0x58
	ldrb r1, [r1]
	cmp r1, #0
	beq _02009256
	adds r1, r0, #0
	adds r1, #0x5a
	ldrb r1, [r1]
	cmp r1, #0
	bne _0200924A
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	adds r6, r0, #0
	adds r6, #0x59
	adds r2, r1, #1
	adds r1, r0, #0
	adds r1, #0x59
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r3, [r1]
	lsls r1, r3, #2
	adds r2, r0, r1
	movs r1, #0x84
	ldrsb r4, [r2, r1]
	subs r1, #0x85
	cmp r4, r1
	bge _020091FC
	movs r2, #0
	subs r1, r2, #2
_020091A0:
	adds r4, r0, r3
	adds r4, #0x5c
	ldrb r4, [r4]
	adds r3, r0, r3
	adds r3, #0x5c
	adds r4, r4, #1
	strb r4, [r3]
	adds r3, r0, #0
	adds r3, #0x59
	ldrb r5, [r3]
	lsls r3, r5, #2
	adds r4, r0, r3
	adds r3, r4, #0
	adds r7, r0, r5
	adds r3, #0x85
	adds r7, #0x5c
	ldrb r3, [r3]
	ldrb r7, [r7]
	cmp r3, r7
	beq _020091CC
	cmp r3, #0
	bne _020091DA
_020091CC:
	adds r3, r0, r5
	adds r3, #0x5c
	strb r2, [r3]
	ldrb r3, [r6]
	adds r3, r3, #1
	strb r3, [r6]
	b _020091E6
_020091DA:
	movs r3, #0x84
	ldrsb r3, [r4, r3]
	subs r4, r1, r3
	adds r3, r0, #0
	adds r3, #0x59
	strb r4, [r3]
_020091E6:
	adds r3, r0, #0
	adds r3, #0x59
	ldrb r3, [r3]
	lsls r4, r3, #2
	adds r5, r0, r4
	movs r4, #0x84
	ldrsb r4, [r5, r4]
	movs r5, #0
	mvns r5, r5
	cmp r4, r5
	blt _020091A0
_020091FC:
	cmp r3, #0xa
	bhs _02009208
	movs r1, #0
	mvns r1, r1
	cmp r4, r1
	bne _0200921C
_02009208:
	adds r1, r0, #0
	movs r2, #0
	adds r1, #0x5b
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x58
	strb r2, [r1]
	strh r2, [r0, #0x2c]
	pop {r4, r5, r6, r7}
	bx lr
_0200921C:
	adds r1, r0, #0
	adds r1, #0x5b
	strb r4, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r0, r1
	adds r1, #0x85
	ldrb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x5a
	strb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x59
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r2, r0, r1
	movs r1, #0x86
	ldrsb r1, [r2, r1]
	strh r1, [r0, #0x2c]
	pop {r4, r5, r6, r7}
	bx lr
_0200924A:
	adds r1, r0, #0
	adds r1, #0x5a
	ldrb r1, [r1]
	adds r0, #0x5a
	subs r1, r1, #1
	strb r1, [r0]
_02009256:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02009160

	thumb_func_start FUN_0200925C
FUN_0200925C: @ 0x0200925C
	ldr r3, _02009260 @ =FUN_02009160
	bx r3
	.align 2, 0
_02009260: .4byte FUN_02009160
	thumb_func_end FUN_0200925C

	thumb_func_start FUN_02009264
FUN_02009264: @ 0x02009264
	movs r2, #1
	strb r2, [r0]
	movs r3, #0
	strb r3, [r0, #2]
	ldrsb r2, [r1, r3]
	strb r2, [r0, #1]
	ldrb r2, [r1, #1]
	strb r2, [r0, #3]
	str r1, [r0, #0x10]
	adds r2, r3, #0
_02009278:
	adds r1, r0, r3
	adds r3, r3, #1
	strb r2, [r1, #4]
	cmp r3, #0xa
	blt _02009278
	bx lr
	thumb_func_end FUN_02009264

	thumb_func_start FUN_02009284
FUN_02009284: @ 0x02009284
	push {r4, r5, r6, r7}
	ldrb r1, [r0]
	cmp r1, #0
	beq _0200931A
	adds r3, r0, #2
	ldr r4, [r0, #0x10]
	cmp r1, #0
	beq _02009314
	ldrb r1, [r0, #3]
	cmp r1, #0
	bne _02009310
	ldrb r1, [r3]
	adds r1, r1, #1
	strb r1, [r3]
	ldrb r2, [r3]
	movs r1, #0
	mvns r1, r1
	lsls r5, r2, #2
	ldrsb r6, [r4, r5]
	cmp r6, r1
	bge _020092EC
	movs r1, #0
_020092B0:
	adds r5, r0, r2
	ldrb r2, [r5, #4]
	adds r2, r2, #1
	strb r2, [r5, #4]
	ldrb r2, [r3]
	adds r5, r0, r2
	lsls r2, r2, #2
	adds r2, r4, r2
	ldrb r7, [r2, #1]
	ldrb r6, [r5, #4]
	cmp r7, r6
	beq _020092CC
	cmp r7, #0
	bne _020092D2
_020092CC:
	strb r1, [r5, #4]
	adds r3, r3, #1
	b _020092DE
_020092D2:
	movs r5, #0
	ldrsb r5, [r2, r5]
	movs r2, #1
	mvns r2, r2
	subs r2, r2, r5
	strb r2, [r3]
_020092DE:
	ldrb r2, [r3]
	movs r6, #0
	mvns r6, r6
	lsls r5, r2, #2
	ldrsb r7, [r4, r5]
	cmp r7, r6
	blt _020092B0
_020092EC:
	ldrsb r5, [r4, r5]
	movs r1, #0
	mvns r1, r1
	cmp r5, r1
	beq _020092FA
	cmp r2, #0xa
	blo _02009302
_020092FA:
	movs r1, #0
	strb r1, [r0, #1]
	strb r1, [r0]
	b _02009314
_02009302:
	strb r5, [r0, #1]
	ldrb r1, [r3]
	lsls r1, r1, #2
	adds r1, r4, r1
	ldrb r1, [r1, #1]
	strb r1, [r0, #3]
	b _02009314
_02009310:
	subs r1, r1, #1
	strb r1, [r0, #3]
_02009314:
	ldrb r0, [r0, #1]
	pop {r4, r5, r6, r7}
	bx lr
_0200931A:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02009284

	thumb_func_start FUN_02009324
FUN_02009324: @ 0x02009324
	ldr r2, [r0]
	movs r1, #0x80
	orrs r2, r1
	adds r1, #0x80
	orrs r1, r2
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02009324

	thumb_func_start FUN_02009334
FUN_02009334: @ 0x02009334
	push {r3, r4}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r4, r2, #4
	adds r3, #0x14
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	adds r0, r2, #0
	adds r0, #0x6c
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x78
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x6e
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7a
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x70
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x72
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7e
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x74
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x76
	ldrh r0, [r0]
	adds r2, #0x82
	strh r0, [r2]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02009334

	thumb_func_start FUN_02009390
FUN_02009390: @ 0x02009390
	push {r3, r4}
	adds r2, r0, #0
	adds r4, r2, #0
	adds r4, #0x14
	adds r3, r2, #4
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	adds r0, r2, #0
	adds r0, #0x78
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x6c
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7a
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x6e
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7c
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x70
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x7e
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x72
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x74
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x82
	ldrh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x76
	strh r1, [r0]
	ldr r1, [r2]
	movs r0, #0x80
	orrs r1, r0
	adds r0, #0x80
	orrs r0, r1
	str r0, [r2]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02009390

	thumb_func_start FUN_020093FC
FUN_020093FC: @ 0x020093FC
	movs r3, #0xbb
	lsls r3, r3, #2
	str r1, [r0, r3]
	adds r1, r3, #4
	str r2, [r0, r1]
	bx lr
	thumb_func_end FUN_020093FC

	thumb_func_start FUN_02009408
FUN_02009408: @ 0x02009408
	movs r3, #0xbd
	lsls r3, r3, #2
	str r1, [r0, r3]
	adds r1, r3, #4
	str r2, [r0, r1]
	bx lr
	thumb_func_end FUN_02009408

	thumb_func_start FUN_02009414
FUN_02009414: @ 0x02009414
	adds r0, r0, #4
	bx lr
	thumb_func_end FUN_02009414

	thumb_func_start FUN_02009418
FUN_02009418: @ 0x02009418
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _020094A8 @ =0x00000331
	ldrb r1, [r4, r0]
	cmp r1, #0
	beq _02009466
	movs r1, #0
	strb r1, [r4, r0]
	subs r0, #0x81
	adds r0, r4, r0
	blx FUN_020B8008
	movs r3, #0xc2
	lsls r3, r3, #2
	movs r1, #0x20
	strh r1, [r4, r3]
	adds r0, r3, #2
	strh r1, [r4, r0]
	adds r0, r3, #0
	subs r0, #0x18
	ldr r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x10
	str r1, [r4, r0]
	adds r0, r3, #0
	subs r0, #0xc
	ldr r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x14
	str r1, [r4, r0]
	adds r1, r3, #0
	subs r1, #0x1c
	adds r0, r4, r3
	subs r3, #0x58
	ldr r1, [r4, r1]
	movs r2, #0
	adds r3, r4, r3
	blx FUN_020B82CC
_02009466:
	ldr r0, _020094AC @ =0x00000332
	ldrb r1, [r4, r0]
	cmp r1, #0
	beq _020094A6
	movs r1, #0
	strb r1, [r4, r0]
	subs r0, #0x5e
	adds r0, r4, r0
	blx FUN_020B804C
	movs r3, #0xbe
	lsls r3, r3, #2
	adds r0, r3, #0
	ldr r1, [r4, r3]
	adds r0, #0x30
	str r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #8
	ldr r1, [r4, r0]
	adds r0, r3, #0
	adds r0, #0x34
	str r1, [r4, r0]
	adds r0, r3, #0
	subs r1, r3, #4
	adds r0, #0x28
	subs r3, #0x24
	ldr r1, [r4, r1]
	adds r0, r4, r0
	movs r2, #0
	adds r3, r4, r3
	blx FUN_020B86CC
_020094A6:
	pop {r4, pc}
	.align 2, 0
_020094A8: .4byte 0x00000331
_020094AC: .4byte 0x00000332
	thumb_func_end FUN_02009418

	thumb_func_start FUN_020094B0
FUN_020094B0: @ 0x020094B0
	ldr r2, _020094B8 @ =0x00000333
	strb r1, [r0, r2]
	bx lr
	nop
_020094B8: .4byte 0x00000333
	thumb_func_end FUN_020094B0

	thumb_func_start FUN_020094BC
FUN_020094BC: @ 0x020094BC
	push {r4, lr}
	adds r4, r0, #0
	bne _020094C6
	bl FUN_0202551C
_020094C6:
	ldr r0, [r4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _020094D2
	movs r0, #1
	pop {r4, pc}
_020094D2:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020094BC

	thumb_func_start FUN_020094D8
FUN_020094D8: @ 0x020094D8
	movs r2, #0xcd
	lsls r2, r2, #2
	ldr r3, [r0, r2]
	orrs r1, r3
	str r1, [r0, r2]
	bx lr
	thumb_func_end FUN_020094D8

	thumb_func_start FUN_020094E4
FUN_020094E4: @ 0x020094E4
	push {r3, r4}
	movs r3, #0xcd
	lsls r3, r3, #2
	movs r2, #0
	mvns r2, r2
	ldr r4, [r0, r3]
	eors r1, r2
	ands r1, r4
	str r1, [r0, r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020094E4

	thumb_func_start FUN_020094FC
FUN_020094FC: @ 0x020094FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x5c
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp, #0x48]
	str r0, [sp, #0x54]
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x44]
	str r0, [sp, #0x38]
_0200950E:
	ldr r0, [sp, #0x44]
	ldr r1, [r0]
	lsls r0, r1, #0x1f
	lsrs r0, r0, #0x1f
	beq _0200951E
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x1f
	bne _02009520
_0200951E:
	b _0200991A
_02009520:
	movs r0, #0x80
	bics r1, r0
	ldr r0, [sp, #0x44]
	movs r2, #0xba
	str r1, [r0]
	movs r0, #1
	str r0, [sp, #0x48]
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x44]
	lsls r2, r2, #2
	ldrh r0, [r0, #4]
	ldrh r1, [r1, #6]
	ldr r2, [r6, r2]
	bl FUN_02007524
	add r1, sp, #0x58
	str r0, [sp, #0x4c]
	blx FUN_020B70A8
	ldr r0, [sp, #0x58]
	movs r1, #0xc3
	ldr r0, [r0, #4]
	lsls r1, r1, #2
	str r0, [r6, r1]
	ldr r0, [sp, #0x58]
	ldr r2, [r0, #8]
	adds r0, r1, #4
	str r2, [r6, r0]
	ldr r0, [sp, #0x58]
	adds r1, #8
	ldr r0, [r0, #0xc]
	str r0, [r6, r1]
	ldr r0, [sp, #0x58]
	ldr r1, [sp, #0x44]
	ldr r0, [r0, #0x14]
	ldrh r1, [r1, #4]
	str r0, [sp, #0x50]
	bl FUN_02009D28
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x50]
	bl FUN_02009B48
	ldr r0, [sp, #0x54]
	cmp r0, #3
	beq _0200957E
	b _020097AC
_0200957E:
	movs r5, #0
	adds r0, r5, #0
	str r5, [sp, #0x14]
	str r0, [sp, #0x24]
_02009586:
	ldr r0, [sp, #0x14]
	movs r1, #0x4f
	subs r2, r1, r0
	movs r0, #0x50
	adds r1, r2, #0
	muls r1, r0, r1
	ldr r0, [sp, #0x50]
	movs r4, #0
	adds r0, r0, r1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x24]
	adds r7, r1, r0
	ldr r0, [sp, #0x20]
	str r7, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x14]
	subs r0, r0, #1
	lsls r0, r0, #7
	str r0, [sp, #0x10]
_020095AE:
	cmp r4, #0x28
	bge _0200969A
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x1f
	beq _020095DE
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1f
	beq _020095DE
	movs r0, #0x27
	subs r1, r0, r4
	ldr r0, [sp, #0x1c]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r1, r4, r1
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_020095DE:
	cmp r0, #0
	beq _020095FE
	movs r0, #0x27
	subs r1, r0, r4
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r1, r4, r1
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_020095FE:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsls r1, r0, #0x15
	lsrs r1, r1, #0x1f
	beq _0200961C
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r0, [sp, #0x20]
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	adds r1, r5, r1
	adds r1, r4, r1
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_0200961C:
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1c
	str r0, [sp, #0xc]
	beq _02009688
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x14]
	lsls r1, r1, #1
	blx FUN_020F2BA4
	cmp r1, #0
	beq _0200964C
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r1, [r6, r0]
	ldr r0, [sp, #0x10]
	adds r0, r0, r1
	adds r0, r4, r0
	adds r0, #0x50
	adds r1, r5, r1
	adds r1, r4, r1
	ldrb r0, [r0]
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_0200964C:
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	blx FUN_020F2BA4
	cmp r1, #0
	beq _0200966E
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	adds r2, r5, r0
	adds r0, r2, r4
	adds r0, #0x4f
	ldrb r1, [r0]
	adds r0, r2, r4
	adds r0, #0x50
	strb r1, [r0]
	b _02009786
_0200966E:
	ldrb r1, [r7]
	movs r0, #0xf
	ands r1, r0
	lsls r0, r1, #4
	orrs r0, r1
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r1, r4, r1
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_02009688:
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	adds r1, r5, r1
	adds r1, r4, r1
	adds r1, #0x50
	strb r0, [r1]
	b _02009786
_0200969A:
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x1f
	beq _020096CA
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1f
	beq _020096CA
	adds r1, r4, #0
	subs r1, #0x28
	movs r0, #0x4f
	subs r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
	b _02009786
_020096CA:
	cmp r0, #0
	beq _020096EE
	adds r1, r4, #0
	subs r1, #0x28
	movs r0, #0x4f
	subs r1, r0, r1
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
	b _02009786
_020096EE:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsls r1, r0, #0x15
	lsrs r1, r1, #0x1f
	beq _0200970C
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r0, [sp, #0x20]
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	adds r1, r5, r1
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
	b _02009786
_0200970C:
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1c
	str r0, [sp, #8]
	beq _02009776
	ldr r1, [sp, #8]
	ldr r0, [sp, #0x14]
	lsls r1, r1, #1
	blx FUN_020F2BA4
	cmp r1, #0
	beq _0200973C
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r1, [r6, r0]
	ldr r0, [sp, #0x10]
	adds r0, r0, r1
	adds r2, r4, r0
	ldr r0, _02009940 @ =0x00002828
	adds r1, r5, r1
	ldrb r0, [r2, r0]
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
	b _02009786
_0200973C:
	ldr r1, [sp, #8]
	adds r0, r4, #0
	blx FUN_020F2BA4
	cmp r1, #0
	beq _0200975C
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	ldr r1, _02009944 @ =0x00002827
	adds r0, r5, r0
	adds r0, r0, r4
	ldrb r2, [r0, r1]
	adds r1, r1, #1
	strb r2, [r0, r1]
	b _02009786
_0200975C:
	ldrb r1, [r7]
	movs r0, #0xf
	ands r1, r0
	lsls r0, r1, #4
	orrs r0, r1
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
	b _02009786
_02009776:
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	adds r1, r5, r1
	adds r2, r4, r1
	ldr r1, _02009940 @ =0x00002828
	strb r0, [r2, r1]
_02009786:
	ldr r0, [sp, #0x20]
	adds r4, r4, #1
	adds r0, r0, #1
	adds r7, r7, #1
	str r0, [sp, #0x20]
	cmp r4, #0x50
	bge _02009796
	b _020095AE
_02009796:
	ldr r0, [sp, #0x24]
	adds r5, #0x80
	adds r0, #0x50
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x14]
	adds r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #0x50
	bge _020097AA
	b _02009586
_020097AA:
	b _02009914
_020097AC:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #0x40]
	str r0, [sp, #0x3c]
_020097B4:
	ldr r0, [sp]
	movs r1, #0x4f
	subs r2, r1, r0
	movs r0, #0x50
	adds r1, r2, #0
	muls r1, r0, r1
	ldr r0, [sp, #0x50]
	movs r4, #0
	adds r0, r0, r1
	str r0, [sp, #0x34]
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x3c]
	adds r7, r1, r0
	ldr r0, [sp, #0x34]
	ldr r1, [sp, #0x38]
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x40]
	str r7, [sp, #0x2c]
	adds r5, r1, r0
	ldr r0, [sp]
	subs r0, r0, #1
	lsls r1, r0, #7
	ldr r0, [sp, #0x38]
	adds r0, r0, r1
	str r0, [sp, #0x28]
_020097E6:
	ldr r0, [sp, #0x44]
	ldr r1, [r0, #0x54]
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x1f
	beq _0200982E
	lsls r1, r1, #0x15
	lsrs r1, r1, #0x1f
	beq _0200982E
	cmp r4, #0x28
	bge _02009812
	movs r0, #0x27
	subs r1, r0, r4
	ldr r0, [sp, #0x30]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_02009812:
	adds r1, r4, #0
	subs r1, #0x28
	movs r0, #0x4f
	subs r1, r0, r1
	ldr r0, [sp, #0x30]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200982E:
	cmp r0, #0
	beq _0200986A
	cmp r4, #0x28
	bge _0200984E
	movs r0, #0x27
	subs r1, r0, r4
	ldr r0, [sp, #0x2c]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200984E:
	adds r1, r4, #0
	subs r1, #0x28
	movs r0, #0x4f
	subs r1, r0, r1
	ldr r0, [sp, #0x2c]
	ldrb r0, [r0, r1]
	bl FUN_02009B34
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_0200986A:
	ldr r0, [sp, #0x44]
	ldr r0, [r0, #0x54]
	lsls r1, r0, #0x15
	lsrs r1, r1, #0x1f
	beq _02009884
	ldr r0, [sp, #0x34]
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r0]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_02009884:
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1c
	str r0, [sp, #4]
	beq _020098E0
	ldr r1, [sp, #4]
	ldr r0, [sp]
	lsls r1, r1, #1
	blx FUN_020F2BA4
	cmp r1, #0
	beq _020098AC
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	ldr r1, [sp, #0x28]
	adds r1, r1, r0
	ldrb r1, [r4, r1]
	adds r0, r5, r0
	strb r1, [r4, r0]
	b _020098EC
_020098AC:
	ldr r1, [sp, #4]
	adds r0, r4, #0
	blx FUN_020F2BA4
	cmp r1, #0
	beq _020098CA
	movs r0, #0xbf
	lsls r0, r0, #2
	ldr r0, [r6, r0]
	adds r1, r5, r0
	adds r0, r1, r4
	subs r0, r0, #1
	ldrb r0, [r0]
	strb r0, [r1, r4]
	b _020098EC
_020098CA:
	ldrb r1, [r7]
	movs r0, #0xf
	ands r1, r0
	lsls r0, r1, #4
	orrs r0, r1
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	adds r1, r5, r1
	strb r0, [r4, r1]
	b _020098EC
_020098E0:
	movs r1, #0xbf
	lsls r1, r1, #2
	ldr r1, [r6, r1]
	ldrb r0, [r7]
	adds r1, r5, r1
	strb r0, [r4, r1]
_020098EC:
	ldr r0, [sp, #0x34]
	adds r4, r4, #1
	adds r0, r0, #1
	adds r7, r7, #1
	str r0, [sp, #0x34]
	cmp r4, #0x50
	bge _020098FC
	b _020097E6
_020098FC:
	ldr r0, [sp, #0x40]
	adds r0, #0x80
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x3c]
	adds r0, #0x50
	str r0, [sp, #0x3c]
	ldr r0, [sp]
	adds r0, r0, #1
	str r0, [sp]
	cmp r0, #0x50
	bge _02009914
	b _020097B4
_02009914:
	ldr r0, [sp, #0x4c]
	bl FUN_0201AB0C
_0200991A:
	ldr r0, [sp, #0x44]
	movs r1, #0xa
	adds r0, #0xac
	str r0, [sp, #0x44]
	ldr r0, [sp, #0x38]
	lsls r1, r1, #0xa
	adds r0, r0, r1
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x54]
	adds r0, r0, #1
	str r0, [sp, #0x54]
	cmp r0, #4
	bge _02009936
	b _0200950E
_02009936:
	ldr r1, _02009948 @ =0x00000331
	ldr r0, [sp, #0x48]
	strb r0, [r6, r1]
	add sp, #0x5c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02009940: .4byte 0x00002828
_02009944: .4byte 0x00002827
_02009948: .4byte 0x00000331
	thumb_func_end FUN_020094FC

	thumb_func_start FUN_0200994C
FUN_0200994C: @ 0x0200994C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #0xc]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xc]
	adds r4, r5, #0
	str r0, [sp, #8]
_0200995E:
	ldr r1, [r4]
	lsls r0, r1, #0x1f
	lsrs r0, r0, #0x1f
	beq _02009A3A
	lsls r0, r1, #0x17
	lsrs r0, r0, #0x1f
	beq _02009A3A
	ldr r0, _02009B28 @ =0xFFFFFEFF
	movs r2, #0xba
	ands r0, r1
	str r0, [r4]
	movs r0, #1
	str r0, [sp, #0xc]
	lsls r2, r2, #2
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #8]
	ldr r2, [r5, r2]
	bl FUN_02007524
	add r1, sp, #0x18
	str r0, [sp, #0x10]
	blx FUN_020B7140
	ldr r0, [sp, #0x18]
	movs r7, #0
	ldr r1, [r0]
	movs r0, #0x32
	lsls r0, r0, #4
	str r1, [r5, r0]
	ldr r0, [sp, #0x18]
	adds r2, r7, #0
	ldr r1, [r0, #0xc]
	ldr r0, [sp, #8]
	lsls r3, r0, #1
_020099A2:
	movs r6, #3
	lsls r6, r6, #8
	ldr r6, [r5, r6]
	ldrh r0, [r1]
	adds r6, r3, r6
	adds r7, r7, #1
	strh r0, [r2, r6]
	movs r6, #0xc1
	lsls r6, r6, #2
	ldrh r0, [r1]
	ldr r6, [r5, r6]
	adds r1, r1, #2
	adds r6, r3, r6
	strh r0, [r2, r6]
	adds r2, r2, #2
	cmp r7, #0x10
	blt _020099A2
	ldr r0, [sp, #0x10]
	bl FUN_0201AB0C
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	beq _02009A3A
	movs r2, #0xba
	movs r0, #0x72
	lsls r2, r2, #2
	adds r1, r0, #0
	ldr r2, [r5, r2]
	adds r1, #0x92
	bl FUN_02007524
	add r1, sp, #0x18
	str r0, [sp, #4]
	blx FUN_020B7140
	ldr r0, [sp, #0x18]
	movs r7, #0xc1
	ldr r0, [r0, #0xc]
	movs r1, #0
	lsls r7, r7, #2
_020099F8:
	adds r6, r4, #0
	adds r6, #0x6c
	ldrh r6, [r6]
	movs r2, #3
	lsls r2, r2, #8
	lsls r6, r6, #0x1e
	lsrs r6, r6, #0x1e
	adds r6, r6, #3
	lsls r6, r6, #4
	adds r6, r1, r6
	ldrh r3, [r0]
	ldr r2, [r5, r2]
	lsls r6, r6, #1
	strh r3, [r2, r6]
	adds r6, r4, #0
	adds r6, #0x6c
	ldrh r6, [r6]
	ldrh r3, [r0]
	ldr r2, [r5, r7]
	lsls r6, r6, #0x1e
	lsrs r6, r6, #0x1e
	adds r6, r6, #3
	lsls r6, r6, #4
	adds r6, r1, r6
	lsls r6, r6, #1
	adds r1, r1, #1
	adds r0, r0, #2
	strh r3, [r2, r6]
	cmp r1, #0x10
	blt _020099F8
	ldr r0, [sp, #4]
	bl FUN_0201AB0C
_02009A3A:
	ldr r0, [r4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _02009B08
	ldr r0, [r4, #0x54]
	lsls r0, r0, #0x13
	lsrs r0, r0, #0x1f
	beq _02009B08
	adds r0, r4, #0
	adds r0, #0x4a
	ldrb r0, [r0]
	cmp r0, #0
	bne _02009AFA
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r0, #0x4b
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4a
	strb r1, [r0]
	ldr r0, [sp, #8]
	movs r2, #0xc1
	lsls r1, r0, #1
	ldr r0, [r4, #0x4c]
	adds r3, r4, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r2, #2
	str r0, [sp]
	ldr r0, [r5, r2]
	subs r2, r2, #4
	adds r3, #0x48
	ldr r2, [r5, r2]
	adds r0, r0, r1
	adds r1, r2, r1
	ldrb r3, [r3]
	movs r2, #0x10
	bl FUN_02003DE8
	adds r0, r4, #0
	adds r0, #0x6c
	ldrh r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	beq _02009ABC
	adds r0, r0, #3
	lsls r1, r0, #5
	ldr r0, [r4, #0x4c]
	movs r2, #0xc1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r3, r4, #0
	lsls r2, r2, #2
	str r0, [sp]
	ldr r0, [r5, r2]
	subs r2, r2, #4
	adds r3, #0x48
	ldr r2, [r5, r2]
	adds r0, r0, r1
	adds r1, r2, r1
	ldrb r3, [r3]
	movs r2, #0x10
	bl FUN_02003DE8
_02009ABC:
	adds r0, r4, #0
	adds r0, #0x49
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x48
	ldrb r0, [r0]
	cmp r0, r1
	bne _02009AD6
	ldr r1, [r4, #0x54]
	ldr r0, _02009B2C @ =0xFFFFEFFF
	ands r0, r1
	str r0, [r4, #0x54]
	b _02009B08
_02009AD6:
	cmp r0, r1
	bls _02009AEA
	adds r0, r4, #0
	adds r0, #0x48
	ldrb r0, [r0]
	subs r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x48
	strb r1, [r0]
	b _02009B08
_02009AEA:
	adds r0, r4, #0
	adds r0, #0x48
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x48
	strb r1, [r0]
	b _02009B08
_02009AFA:
	adds r0, r4, #0
	adds r0, #0x4a
	ldrb r0, [r0]
	subs r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x4a
	strb r1, [r0]
_02009B08:
	ldr r0, [sp, #8]
	adds r4, #0xac
	adds r0, #0x10
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	adds r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #4
	bge _02009B1C
	b _0200995E
_02009B1C:
	ldr r1, _02009B30 @ =0x00000332
	ldr r0, [sp, #0xc]
	strb r0, [r5, r1]
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02009B28: .4byte 0xFFFFFEFF
_02009B2C: .4byte 0xFFFFEFFF
_02009B30: .4byte 0x00000332
	thumb_func_end FUN_0200994C

	thumb_func_start FUN_02009B34
FUN_02009B34: @ 0x02009B34
	movs r1, #0xf0
	ands r1, r0
	lsls r1, r1, #0x14
	lsls r0, r0, #0x1c
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	thumb_func_end FUN_02009B34

	thumb_func_start FUN_02009B48
FUN_02009B48: @ 0x02009B48
	push {r3, lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0xa]
	cmp r0, #0
	beq _02009B5C
	adds r0, r1, #0
	ldr r1, [r2, #0x10]
	movs r2, #1
	bl FUN_02009B60
_02009B5C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02009B48

	thumb_func_start FUN_02009B60
FUN_02009B60: @ 0x02009B60
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r3, r0, #0
	adds r0, r1, #0
	mov lr, r0
	movs r0, #0
	mov ip, r0
	ldr r0, _02009CAC @ =0x0210F63C
	str r1, [sp]
	str r2, [sp, #4]
	str r0, [sp, #0x10]
_02009B76:
	ldr r0, [sp, #0x10]
	movs r1, #0
	ldr r6, [r0]
	ldrb r0, [r6]
	cmp r0, #0xff
	beq _02009BEE
	ldr r0, [sp]
	movs r2, #0xf
	ands r0, r2
	str r0, [sp, #0xc]
	subs r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp]
	movs r2, #0xf0
	ands r0, r2
	lsrs r7, r0, #4
	subs r7, #8
_02009B98:
	lsls r0, r1, #1
	adds r2, r6, r0
	ldrb r4, [r6, r0]
	ldrb r2, [r2, #1]
	ldr r0, [sp, #0xc]
	adds r0, r0, r4
	adds r2, r7, r2
	lsls r0, r0, #0x18
	lsls r2, r2, #0x18
	lsrs r0, r0, #0x18
	lsrs r4, r2, #0x18
	movs r2, #0x50
	muls r2, r4, r2
	lsrs r5, r0, #1
	adds r2, r5, r2
	movs r4, #1
	tst r0, r4
	ldrb r4, [r3, r2]
	beq _02009BD0
	movs r0, #0xf0
	ands r0, r4
	cmp r0, #0x10
	blt _02009BE0
	cmp r0, #0x30
	bgt _02009BE0
	adds r4, #0x50
	strb r4, [r3, r2]
	b _02009BE0
_02009BD0:
	movs r0, #0xf
	ands r0, r4
	cmp r0, #1
	blt _02009BE0
	cmp r0, #3
	bgt _02009BE0
	adds r0, r4, #5
	strb r0, [r3, r2]
_02009BE0:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r1, #1
	ldrb r0, [r6, r0]
	cmp r0, #0xff
	bne _02009B98
_02009BEE:
	ldr r0, [sp]
	lsrs r0, r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x10]
	adds r0, r0, #4
	str r0, [sp, #0x10]
	mov r0, ip
	adds r0, r0, #1
	mov ip, r0
	cmp r0, #4
	blt _02009B76
	mov r0, lr
	str r0, [sp]
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02009CA6
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, _02009CAC @ =0x0210F63C
	str r0, [sp, #0x18]
_02009C16:
	ldr r0, [sp, #0x18]
	movs r4, #0
	ldr r2, [r0]
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _02009C90
	ldr r0, [sp]
	movs r1, #0xf
	ands r0, r1
	str r0, [sp, #0x14]
	adds r0, #0x48
	str r0, [sp, #0x14]
	ldr r0, [sp]
	movs r1, #0xf0
	ands r0, r1
	lsrs r7, r0, #4
	subs r7, #8
_02009C38:
	lsls r0, r4, #1
	adds r5, r2, r0
	ldrb r1, [r2, r0]
	ldrb r5, [r5, #1]
	ldr r0, [sp, #0x14]
	subs r1, #0xe
	adds r0, r0, r1
	adds r5, r7, r5
	lsls r0, r0, #0x18
	lsls r5, r5, #0x18
	lsrs r1, r0, #0x18
	lsrs r6, r5, #0x18
	movs r5, #0x50
	lsrs r0, r1, #1
	muls r5, r6, r5
	adds r0, r0, r5
	movs r5, #1
	tst r1, r5
	ldrb r5, [r3, r0]
	beq _02009C72
	movs r1, #0xf0
	ands r1, r5
	cmp r1, #0x10
	blt _02009C82
	cmp r1, #0x30
	bgt _02009C82
	adds r5, #0x50
	strb r5, [r3, r0]
	b _02009C82
_02009C72:
	movs r1, #0xf
	ands r1, r5
	cmp r1, #1
	blt _02009C82
	cmp r1, #3
	bgt _02009C82
	adds r1, r5, #5
	strb r1, [r3, r0]
_02009C82:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r0, r4, #1
	ldrb r0, [r2, r0]
	cmp r0, #0xff
	bne _02009C38
_02009C90:
	ldr r0, [sp]
	lsrs r0, r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x18]
	adds r0, r0, #4
	str r0, [sp, #0x18]
	ldr r0, [sp, #8]
	adds r0, r0, #1
	str r0, [sp, #8]
	cmp r0, #4
	blt _02009C16
_02009CA6:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02009CAC: .4byte 0x0210F63C
	thumb_func_end FUN_02009B60

	thumb_func_start FUN_02009CB0
FUN_02009CB0: @ 0x02009CB0
	ldr r2, [r0]
	ldr r1, _02009CC8 @ =0x41C64E6D
	adds r3, r2, #0
	muls r3, r1, r3
	ldr r1, _02009CCC @ =0x00006073
	adds r1, r3, r1
	str r1, [r0]
	lsrs r0, r1, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	nop
_02009CC8: .4byte 0x41C64E6D
_02009CCC: .4byte 0x00006073
	thumb_func_end FUN_02009CB0

	thumb_func_start FUN_02009CD0
FUN_02009CD0: @ 0x02009CD0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r0, [r5]
	movs r6, #0x32
	movs r4, #0
	str r0, [sp]
	add r7, sp, #0
	lsls r6, r6, #6
_02009CE0:
	ldrh r1, [r5]
	ldr r0, [sp]
	eors r0, r1
	strh r0, [r5]
	adds r0, r7, #0
	bl FUN_02009CB0
	adds r4, r4, #1
	adds r5, r5, #2
	cmp r4, r6
	blt _02009CE0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02009CD0

	thumb_func_start FUN_02009CF8
FUN_02009CF8: @ 0x02009CF8
	push {r3, r4, r5, r6, r7, lr}
	ldr r1, _02009D24 @ =0x000018FE
	movs r6, #0
	ldrh r2, [r0, r1]
	lsrs r4, r1, #1
	adds r5, r0, r1
	str r2, [sp]
	add r7, sp, #0
	mvns r6, r6
_02009D0A:
	ldrh r1, [r5]
	ldr r0, [sp]
	eors r0, r1
	strh r0, [r5]
	adds r0, r7, #0
	bl FUN_02009CB0
	subs r4, r4, #1
	subs r5, r5, #2
	cmp r4, r6
	bgt _02009D0A
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02009D24: .4byte 0x000018FE
	thumb_func_end FUN_02009CF8

	thumb_func_start FUN_02009D28
FUN_02009D28: @ 0x02009D28
	push {r3, lr}
	cmp r1, #0xc2
	beq _02009D3A
	cmp r1, #0xc3
	beq _02009D3A
	cmp r1, #0x3a
	beq _02009D3A
	cmp r1, #6
	bne _02009D40
_02009D3A:
	bl FUN_02009CF8
	pop {r3, pc}
_02009D40:
	bl FUN_02009CD0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02009D28

	thumb_func_start FUN_02009D48
FUN_02009D48: @ 0x02009D48
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	movs r4, #0
	adds r5, r0, #0
	adds r0, r4, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x44]
	adds r6, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	str r4, [sp, #0xc]
	cmp r0, #0
	bne _02009D66
	bl FUN_0202551C
_02009D66:
	ldr r0, [sp, #0x48]
	cmp r0, #0
	bne _02009D70
	bl FUN_0202551C
_02009D70:
	ldr r0, [sp, #0x50]
	cmp r0, #0
	bne _02009D7A
	bl FUN_0202551C
_02009D7A:
	ldr r0, [sp, #0x4c]
	cmp r0, #0
	bne _02009D84
	bl FUN_0202551C
_02009D84:
	cmp r5, #0
	bne _02009D8C
	bl FUN_0202551C
_02009D8C:
	ldr r0, [sp, #0x44]
	adds r1, r6, #0
	bl FUN_0200A7BC
	adds r7, r0, #0
	bne _02009D9C
	bl FUN_0202551C
_02009D9C:
	ldr r0, [sp, #0x48]
	ldr r1, [sp]
	bl FUN_0200A7BC
	str r0, [sp, #0x14]
	cmp r0, #0
	bne _02009DAE
	bl FUN_0202551C
_02009DAE:
	ldr r0, [sp, #0x4c]
	ldr r1, [sp, #4]
	bl FUN_0200A7BC
	str r0, [sp, #0x10]
	cmp r0, #0
	bne _02009DC0
	bl FUN_0202551C
_02009DC0:
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _02009DDE
	movs r2, #0
	ldr r1, [sp, #0x30]
	mvns r2, r2
	cmp r1, r2
	beq _02009DDE
	bl FUN_0200A7BC
	str r0, [sp, #0xc]
	cmp r0, #0
	bne _02009DDE
	bl FUN_0202551C
_02009DDE:
	ldr r0, [sp, #0x54]
	cmp r0, #0
	beq _02009E06
	movs r2, #0
	ldr r1, [sp, #0x34]
	mvns r2, r2
	cmp r1, r2
	beq _02009DF4
	bl FUN_0200A7BC
	adds r4, r0, #0
_02009DF4:
	movs r0, #0
	ldr r1, [sp, #0x38]
	mvns r0, r0
	cmp r1, r0
	beq _02009E06
	ldr r0, [sp, #0x58]
	bl FUN_0200A7BC
	str r0, [sp, #8]
_02009E06:
	ldr r0, [sp, #0x3c]
	cmp r0, #0
	beq _02009E26
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	bl FUN_0200AF24
	adds r6, r0, #0
	bne _02009E1C
	bl FUN_0202551C
_02009E1C:
	adds r0, r7, #0
	bl FUN_0200A810
	str r0, [r5, #4]
	b _02009E38
_02009E26:
	adds r0, r7, #0
	bl FUN_0200AF00
	adds r6, r0, #0
	bne _02009E34
	bl FUN_0202551C
_02009E34:
	movs r0, #0
	str r0, [r5, #4]
_02009E38:
	ldr r0, [sp, #0x14]
	adds r1, r6, #0
	bl FUN_0200B0F8
	str r0, [r5, #8]
	ldr r0, [sp, #0x10]
	str r6, [r5]
	bl FUN_0200A840
	str r0, [r5, #0xc]
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _02009E58
	bl FUN_0200A858
	b _02009E5A
_02009E58:
	movs r0, #0
_02009E5A:
	str r0, [r5, #0x10]
	cmp r4, #0
	beq _02009E70
	adds r0, r4, #0
	bl FUN_0200A870
	str r0, [r5, #0x14]
	ldr r0, [sp, #8]
	bl FUN_0200A888
	b _02009E74
_02009E70:
	movs r0, #0
	str r0, [r5, #0x14]
_02009E74:
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x3c]
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x40]
	adds r5, #0x20
	strb r0, [r5]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02009D48

	thumb_func_start FUN_02009E84
FUN_02009E84: @ 0x02009E84
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	ldr r0, [sp, #0x48]
	adds r7, r1, #0
	str r0, [sp, #0x48]
	ldr r0, [sp, #0x4c]
	movs r4, #0
	str r0, [sp, #0x4c]
	ldr r0, [sp, #0x50]
	ldr r1, [r5]
	str r0, [sp, #0x50]
	ldr r0, [sp, #0x54]
	str r2, [sp, #0x2c]
	str r0, [sp, #0x54]
	subs r0, r4, #2
	str r3, [sp, #0x30]
	cmp r1, r0
	beq _02009EB8
	adds r2, r5, #0
	subs r0, r4, #2
_02009EAE:
	adds r2, #0x20
	ldr r1, [r2]
	adds r4, r4, #1
	cmp r1, r0
	bne _02009EAE
_02009EB8:
	adds r0, r7, #0
	movs r1, #8
	bl FUN_0201AA8C
	movs r1, #0x24
	adds r6, r0, #0
	adds r0, r7, #0
	muls r1, r4, r1
	bl FUN_0201AA8C
	str r0, [r6]
	movs r7, #0
	str r4, [r6, #4]
	cmp r4, #0
	ble _02009F1E
	adds r4, r7, #0
_02009ED8:
	ldr r0, [r5, #0xc]
	str r0, [sp]
	ldr r0, [r5, #0x10]
	str r0, [sp, #4]
	ldr r0, [r5, #0x14]
	str r0, [sp, #8]
	ldr r0, [r5, #0x18]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x30]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x54]
	str r0, [sp, #0x28]
	ldr r0, [r6]
	ldr r1, [r5]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r0, r0, r4
	bl FUN_02009D48
	ldr r0, [r6, #4]
	adds r7, r7, #1
	adds r5, #0x20
	adds r4, #0x24
	cmp r7, r0
	blt _02009ED8
_02009F1E:
	adds r0, r6, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02009E84

	thumb_func_start FUN_02009F24
FUN_02009F24: @ 0x02009F24
	push {r4, lr}
	adds r4, r0, #0
	bne _02009F2E
	bl FUN_0202551C
_02009F2E:
	ldr r0, [r4]
	cmp r0, #0
	beq _02009F38
	bl FUN_0201AB0C
_02009F38:
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02009F24

	thumb_func_start FUN_02009F40
FUN_02009F40: @ 0x02009F40
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r1, _02009FA4 @ =0xFFFFF000
	adds r0, r4, #0
	adds r6, r2, #0
	bl FUN_02025C44
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0xff
	lsls r0, r0, #0xc
	str r0, [sp, #8]
	movs r0, #3
	lsls r0, r0, #0x12
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r0, #0x98
	add r1, sp, #0
	movs r2, #1
	adds r3, r4, #0
	bl FUN_0200B27C
	movs r0, #0
	str r0, [sp]
	movs r0, #0xff
	movs r1, #3
	lsls r1, r1, #0x12
	lsls r0, r0, #0xc
	str r0, [sp, #8]
	adds r0, r4, #0
	str r1, [sp, #4]
	str r1, [sp, #0xc]
	adds r0, #0xe0
	add r1, sp, #0
	movs r2, #2
	adds r3, r4, #0
	bl FUN_0200B27C
	add r0, sp, #0x10
	str r5, [sp, #0x10]
	str r4, [sp, #0x14]
	str r6, [sp, #0x18]
	bl FUN_0202445C
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	nop
_02009FA4: .4byte 0xFFFFF000
	thumb_func_end FUN_02009F40

	thumb_func_start FUN_02009FA8
FUN_02009FA8: @ 0x02009FA8
	push {r3, lr}
	sub sp, #0x10
	str r1, [sp]
	movs r1, #0xff
	lsls r1, r1, #0xc
	str r1, [sp, #8]
	movs r1, #3
	lsls r1, r1, #0x12
	str r1, [sp, #0xc]
	adds r0, #0x98
	add r1, sp, #0
	str r2, [sp, #4]
	bl FUN_02025C88
	add sp, #0x10
	pop {r3, pc}
	thumb_func_end FUN_02009FA8

	thumb_func_start FUN_02009FC8
FUN_02009FC8: @ 0x02009FC8
	push {r3, lr}
	sub sp, #0x10
	str r1, [sp]
	movs r1, #0xff
	lsls r1, r1, #0xc
	str r1, [sp, #8]
	movs r1, #3
	lsls r1, r1, #0x12
	str r1, [sp, #0xc]
	adds r0, #0xe0
	add r1, sp, #0
	str r2, [sp, #4]
	bl FUN_02025C88
	add sp, #0x10
	pop {r3, pc}
	thumb_func_end FUN_02009FC8

	thumb_func_start FUN_02009FE8
FUN_02009FE8: @ 0x02009FE8
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0x10
	beq _02009FFE
	ldr r2, _0200A070 @ =0x00100010
	cmp r1, r2
	beq _0200A02E
	ldr r0, _0200A074 @ =0x00200010
	cmp r1, r0
	beq _0200A03C
	b _0200A068
_02009FFE:
	blx FUN_020CEBEC
	cmp r0, #0x40
	beq _0200A00E
	blx FUN_020CEBEC
	cmp r0, #0x20
	bne _0200A01E
_0200A00E:
	movs r0, #0x3e
	movs r1, #2
	lsls r0, r0, #8
	lsls r1, r1, #8
	adds r2, r4, #0
	bl FUN_020216F4
	pop {r4, pc}
_0200A01E:
	movs r0, #0x7e
	movs r1, #2
	lsls r0, r0, #8
	lsls r1, r1, #8
	adds r2, r4, #0
	bl FUN_020216F4
	pop {r4, pc}
_0200A02E:
	movs r0, #0xfe
	lsrs r1, r2, #0xb
	lsls r0, r0, #8
	adds r2, r4, #0
	bl FUN_020216F4
	pop {r4, pc}
_0200A03C:
	blx FUN_020CEBEC
	cmp r0, #0x30
	beq _0200A04C
	blx FUN_020CEBEC
	cmp r0, #0x50
	bne _0200A05A
_0200A04C:
	movs r1, #2
	ldr r0, _0200A078 @ =0x00013E00
	lsls r1, r1, #8
	adds r2, r4, #0
	bl FUN_020216F4
	pop {r4, pc}
_0200A05A:
	movs r1, #2
	ldr r0, _0200A07C @ =0x0001FE00
	lsls r1, r1, #8
	adds r2, r4, #0
	bl FUN_020216F4
	pop {r4, pc}
_0200A068:
	bl FUN_0202551C
	pop {r4, pc}
	nop
_0200A070: .4byte 0x00100010
_0200A074: .4byte 0x00200010
_0200A078: .4byte 0x00013E00
_0200A07C: .4byte 0x0001FE00
	thumb_func_end FUN_02009FE8

	thumb_func_start FUN_0200A080
FUN_0200A080: @ 0x0200A080
	ldr r3, _0200A08C @ =FUN_020225E4
	adds r1, r0, #0
	movs r0, #3
	lsls r0, r0, #0xe
	bx r3
	nop
_0200A08C: .4byte FUN_020225E4
	thumb_func_end FUN_0200A080

	thumb_func_start FUN_0200A090
FUN_0200A090: @ 0x0200A090
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	str r2, [sp]
	adds r0, r2, #0
	movs r1, #0x14
	bl FUN_0201AA8C
	adds r4, r0, #0
	ldr r1, [sp]
	adds r0, r5, #0
	bl FUN_02025534
	str r0, [r4]
	movs r0, #0xc
	adds r7, r5, #0
	muls r7, r0, r7
	ldr r0, [sp]
	adds r1, r7, #0
	bl FUN_0201AA8C
	movs r1, #0
	adds r2, r7, #0
	str r0, [r4, #4]
	blx FUN_020E5B44
	str r5, [r4, #8]
	movs r0, #0
	str r0, [r4, #0xc]
	str r6, [r4, #0x10]
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A090

	thumb_func_start FUN_0200A0D0
FUN_0200A0D0: @ 0x0200A0D0
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A0DA
	bl FUN_0202551C
_0200A0DA:
	ldr r0, [r4]
	cmp r0, #0
	bne _0200A0E4
	bl FUN_0202551C
_0200A0E4:
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0200A0EE
	bl FUN_0202551C
_0200A0EE:
	adds r0, r4, #0
	bl FUN_0200A790
	ldr r0, [r4]
	bl FUN_02025580
	movs r0, #0
	str r0, [r4]
	ldr r0, [r4, #4]
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, #4]
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_0200A0D0

	thumb_func_start FUN_0200A110
FUN_0200A110: @ 0x0200A110
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r5, #0
	bne _0200A124
	bl FUN_0202551C
_0200A124:
	cmp r4, #0
	bne _0200A12C
	bl FUN_0202551C
_0200A12C:
	ldr r0, [r4, #4]
	cmp r0, r6
	bgt _0200A136
	bl FUN_0202551C
_0200A136:
	ldr r1, [r5, #0x10]
	ldr r0, [r4, #8]
	cmp r1, r0
	beq _0200A142
	bl FUN_0202551C
_0200A142:
	adds r0, r5, #0
	bl FUN_0200AA70
	str r0, [sp, #0x1c]
	cmp r0, #0
	bne _0200A152
	bl FUN_0202551C
_0200A152:
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _0200A18E
	ldr r2, [r4]
	movs r0, #0x4c
	adds r1, r6, #0
	muls r1, r0, r1
	adds r6, r2, r1
	ldr r1, [r2, r1]
	adds r0, r5, #0
	bl FUN_0200A728
	cmp r0, #1
	beq _0200A172
	bl FUN_0202551C
_0200A172:
	ldr r0, [r6, #0x44]
	ldr r1, [sp, #0x1c]
	str r0, [sp]
	ldr r0, [r6, #0x48]
	adds r2, r6, #4
	str r0, [sp, #4]
	ldr r0, [r4, #8]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	ldr r3, [r6]
	adds r0, r5, #0
	bl FUN_0200ABEC
	b _0200A1CC
_0200A18E:
	movs r0, #0x18
	ldr r1, [r4]
	muls r0, r6, r0
	adds r6, r1, r0
	ldr r1, [r6, #0xc]
	adds r0, r5, #0
	bl FUN_0200A728
	cmp r0, #1
	beq _0200A1A6
	bl FUN_0202551C
_0200A1A6:
	ldr r0, [r6, #8]
	ldr r1, [sp, #0x1c]
	str r0, [sp]
	ldr r0, [r6, #0xc]
	str r0, [sp, #4]
	ldr r0, [r6, #0x10]
	str r0, [sp, #8]
	ldr r0, [r6, #0x14]
	str r0, [sp, #0xc]
	ldr r0, [r4, #8]
	str r0, [sp, #0x10]
	str r7, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r2, [r6]
	ldr r3, [r6, #4]
	adds r0, r5, #0
	bl FUN_0200AC18
_0200A1CC:
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	ldr r0, [sp, #0x1c]
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A110

	thumb_func_start FUN_0200A1D8
FUN_0200A1D8: @ 0x0200A1D8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A1EC
	bl FUN_0202551C
_0200A1EC:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A1F6
	bl FUN_0202551C
_0200A1F6:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A204
	bl FUN_0202551C
_0200A204:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	movs r1, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x40]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0200AC18
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A1D8

	thumb_func_start FUN_0200A234
FUN_0200A234: @ 0x0200A234
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A248
	bl FUN_0202551C
_0200A248:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A252
	bl FUN_0202551C
_0200A252:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A260
	bl FUN_0202551C
_0200A260:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	adds r1, r6, #0
	str r0, [sp, #0xc]
	movs r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	adds r2, r7, #0
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0200AC18
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A234

	thumb_func_start FUN_0200A294
FUN_0200A294: @ 0x0200A294
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A2A8
	bl FUN_0202551C
_0200A2A8:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A2B6
	bl FUN_0202551C
_0200A2B6:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0200AC18
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A294

	thumb_func_start FUN_0200A2E4
FUN_0200A2E4: @ 0x0200A2E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A2F8
	bl FUN_0202551C
_0200A2F8:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A302
	bl FUN_0202551C
_0200A302:
	cmp r4, #0
	bne _0200A30A
	bl FUN_0202551C
_0200A30A:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A314
	bl FUN_0202551C
_0200A314:
	adds r0, r4, #0
	bl FUN_0200A7FC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8B0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200A75C
	ldr r0, [sp, #0x38]
	movs r1, #0
	str r0, [sp]
	str r6, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200AC18
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A2E4

	thumb_func_start FUN_0200A350
FUN_0200A350: @ 0x0200A350
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A364
	bl FUN_0202551C
_0200A364:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A36E
	bl FUN_0202551C
_0200A36E:
	cmp r4, #0
	bne _0200A376
	bl FUN_0202551C
_0200A376:
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A380
	bl FUN_0202551C
_0200A380:
	adds r0, r4, #0
	bl FUN_0200A7FC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8B0
	adds r7, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8DC
	str r0, [sp, #0x24]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200A75C
	ldr r0, [sp, #0x40]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0x24]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	movs r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	ldr r3, [sp, #0x20]
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200AC18
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A350

	thumb_func_start FUN_0200A3C8
FUN_0200A3C8: @ 0x0200A3C8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A3DC
	bl FUN_0202551C
_0200A3DC:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A3E6
	bl FUN_0202551C
_0200A3E6:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A3F4
	bl FUN_0202551C
_0200A3F4:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	movs r1, #0
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x40]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0200AC50
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A3C8

	thumb_func_start FUN_0200A424
FUN_0200A424: @ 0x0200A424
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A438
	bl FUN_0202551C
_0200A438:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A442
	bl FUN_0202551C
_0200A442:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A450
	bl FUN_0202551C
_0200A450:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	adds r1, r6, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x44]
	adds r2, r7, #0
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0200AC50
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A424

	thumb_func_start FUN_0200A480
FUN_0200A480: @ 0x0200A480
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A494
	bl FUN_0202551C
_0200A494:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A49E
	bl FUN_0202551C
_0200A49E:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A4AC
	bl FUN_0202551C
_0200A4AC:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	adds r1, r6, #0
	str r0, [sp, #0xc]
	movs r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	adds r2, r7, #0
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0200AC50
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A480

	thumb_func_start FUN_0200A4E0
FUN_0200A4E0: @ 0x0200A4E0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A4F4
	bl FUN_0202551C
_0200A4F4:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A4FE
	bl FUN_0202551C
_0200A4FE:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A50C
	bl FUN_0202551C
_0200A50C:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	adds r1, r6, #0
	str r0, [sp, #0xc]
	movs r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	adds r2, r7, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0200AC50
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A4E0

	thumb_func_start FUN_0200A540
FUN_0200A540: @ 0x0200A540
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp, #0x1c]
	cmp r5, #0
	bne _0200A554
	bl FUN_0202551C
_0200A554:
	adds r0, r5, #0
	bl FUN_0200AA70
	adds r6, r0, #0
	bne _0200A562
	bl FUN_0202551C
_0200A562:
	ldr r0, [sp, #0x38]
	str r4, [sp]
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x40]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_0200AC50
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	adds r0, r6, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A540

	thumb_func_start FUN_0200A590
FUN_0200A590: @ 0x0200A590
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A5A4
	bl FUN_0202551C
_0200A5A4:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _0200A5AE
	bl FUN_0202551C
_0200A5AE:
	cmp r4, #0
	bne _0200A5B6
	bl FUN_0202551C
_0200A5B6:
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A5C0
	bl FUN_0202551C
_0200A5C0:
	adds r0, r4, #0
	bl FUN_0200A7FC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8B0
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200A75C
	ldr r0, [sp, #0x38]
	movs r1, #0
	str r0, [sp]
	str r6, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200AC50
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A590

	thumb_func_start FUN_0200A5FC
FUN_0200A5FC: @ 0x0200A5FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [sp, #0x1c]
	str r3, [sp, #0x20]
	cmp r5, #0
	bne _0200A610
	bl FUN_0202551C
_0200A610:
	ldr r0, [r5, #0x10]
	cmp r0, #1
	beq _0200A61A
	bl FUN_0202551C
_0200A61A:
	cmp r4, #0
	bne _0200A622
	bl FUN_0202551C
_0200A622:
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A62C
	bl FUN_0202551C
_0200A62C:
	adds r0, r4, #0
	bl FUN_0200A7FC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8B0
	adds r7, r0, #0
	adds r0, r4, #0
	bl FUN_0200A8DC
	str r0, [sp, #0x24]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200A75C
	ldr r0, [sp, #0x40]
	ldr r2, [sp, #0x1c]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0x24]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	movs r0, #1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	ldr r3, [sp, #0x20]
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x18]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200AC50
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A5FC

	thumb_func_start FUN_0200A674
FUN_0200A674: @ 0x0200A674
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r5, #0
	bne _0200A688
	bl FUN_0202551C
_0200A688:
	cmp r4, #0
	bne _0200A690
	bl FUN_0202551C
_0200A690:
	str r6, [sp]
	str r7, [sp, #4]
	ldr r3, [r4, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0200A6A8
	ldr r0, [r4, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200A674

	thumb_func_start FUN_0200A6A8
FUN_0200A6A8: @ 0x0200A6A8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	adds r5, r2, #0
	ldr r0, [sp, #0x24]
	adds r7, r5, r3
	str r1, [sp, #4]
	ldr r4, [sp, #0x20]
	str r0, [sp, #0x24]
	cmp r5, r7
	bge _0200A6EC
	adds r6, r4, #0
	adds r6, #8
_0200A6C2:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [sp, #0x24]
	adds r2, r5, #0
	bl FUN_0200A110
	cmp r4, #0
	beq _0200A6E6
	ldr r2, [r4, #8]
	ldr r1, [r4, #4]
	cmp r1, r2
	ble _0200A6E6
	ldr r1, [r4]
	lsls r2, r2, #2
	str r0, [r1, r2]
	ldr r0, [r6]
	adds r0, r0, #1
	str r0, [r6]
_0200A6E6:
	adds r5, r5, #1
	cmp r5, r7
	blt _0200A6C2
_0200A6EC:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A6A8

	thumb_func_start FUN_0200A6F0
FUN_0200A6F0: @ 0x0200A6F0
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0xc
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r6, #0
	lsls r1, r5, #2
	bl FUN_0201AA8C
	str r0, [r4]
	str r5, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200A6F0

	thumb_func_start FUN_0200A714
FUN_0200A714: @ 0x0200A714
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A714

	thumb_func_start FUN_0200A728
FUN_0200A728: @ 0x0200A728
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200A736
	bl FUN_0202551C
_0200A736:
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_020255A0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200A728

	thumb_func_start FUN_0200A740
FUN_0200A740: @ 0x0200A740
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A74A
	bl FUN_0202551C
_0200A74A:
	adds r0, r4, #0
	bl FUN_0200ABC0
	ldr r0, [r4]
	movs r1, #0
	bl FUN_0202570C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A740

	thumb_func_start FUN_0200A75C
FUN_0200A75C: @ 0x0200A75C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200A76A
	bl FUN_0202551C
_0200A76A:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _0200A774
	bl FUN_0202551C
_0200A774:
	adds r0, r4, #0
	bl FUN_0200ABC0
	ldr r0, [r5]
	ldr r1, [r4]
	bl FUN_02025658
	movs r0, #0
	str r0, [r4]
	ldr r0, [r5, #0xc]
	subs r0, r0, #1
	str r0, [r5, #0xc]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200A75C

	thumb_func_start FUN_0200A790
FUN_0200A790: @ 0x0200A790
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r6, #0
	cmp r0, #0
	ble _0200A7B8
	adds r4, r6, #0
_0200A79E:
	ldr r1, [r5, #4]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _0200A7AE
	adds r0, r5, #0
	adds r1, r1, r4
	bl FUN_0200A75C
_0200A7AE:
	ldr r0, [r5, #8]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _0200A79E
_0200A7B8:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200A790

	thumb_func_start FUN_0200A7BC
FUN_0200A7BC: @ 0x0200A7BC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _0200A7CA
	bl FUN_0202551C
_0200A7CA:
	ldr r0, [r5, #8]
	movs r6, #0
	cmp r0, #0
	ble _0200A7F8
	adds r4, r6, #0
_0200A7D4:
	ldr r0, [r5, #4]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200A7EE
	bl FUN_02025728
	cmp r0, r7
	bne _0200A7EE
	movs r0, #0xc
	ldr r1, [r5, #4]
	muls r0, r6, r0
	adds r0, r1, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200A7EE:
	ldr r0, [r5, #8]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _0200A7D4
_0200A7F8:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200A7BC

	thumb_func_start FUN_0200A7FC
FUN_0200A7FC: @ 0x0200A7FC
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A806
	bl FUN_0202551C
_0200A806:
	ldr r0, [r4]
	bl FUN_02025728
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A7FC

	thumb_func_start FUN_0200A810
FUN_0200A810: @ 0x0200A810
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200A81E
	bl FUN_0202551C
_0200A81E:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A810

	thumb_func_start FUN_0200A828
FUN_0200A828: @ 0x0200A828
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0200A836
	bl FUN_0202551C
_0200A836:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A828

	thumb_func_start FUN_0200A840
FUN_0200A840: @ 0x0200A840
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #2
	beq _0200A84E
	bl FUN_0202551C
_0200A84E:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A840

	thumb_func_start FUN_0200A858
FUN_0200A858: @ 0x0200A858
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #3
	beq _0200A866
	bl FUN_0202551C
_0200A866:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A858

	thumb_func_start FUN_0200A870
FUN_0200A870: @ 0x0200A870
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #4
	beq _0200A87E
	bl FUN_0202551C
_0200A87E:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A870

	thumb_func_start FUN_0200A888
FUN_0200A888: @ 0x0200A888
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #5
	beq _0200A896
	bl FUN_0202551C
_0200A896:
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0]
	pop {r4, pc}
	thumb_func_end FUN_0200A888

	thumb_func_start FUN_0200A8A0
FUN_0200A8A0: @ 0x0200A8A0
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A8AA
	bl FUN_0202551C
_0200A8AA:
	ldr r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A8A0

	thumb_func_start FUN_0200A8B0
FUN_0200A8B0: @ 0x0200A8B0
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A8BA
	bl FUN_0202551C
_0200A8BA:
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0200A8CA
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0, #4]
	pop {r4, pc}
_0200A8CA:
	cmp r0, #1
	bne _0200A8D8
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0, #4]
	pop {r4, pc}
_0200A8D8:
	movs r0, #0
	pop {r4, pc}
	thumb_func_end FUN_0200A8B0

	thumb_func_start FUN_0200A8DC
FUN_0200A8DC: @ 0x0200A8DC
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A8E6
	bl FUN_0202551C
_0200A8E6:
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _0200A8F6
	adds r0, r4, #0
	bl FUN_0200ABD4
	ldr r0, [r0, #8]
	pop {r4, pc}
_0200A8F6:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A8DC

	thumb_func_start FUN_0200A8FC
FUN_0200A8FC: @ 0x0200A8FC
	movs r0, #0x10
	bx lr
	thumb_func_end FUN_0200A8FC

	thumb_func_start FUN_0200A900
FUN_0200A900: @ 0x0200A900
	lsls r1, r1, #4
	adds r0, r0, r1
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200A900

	thumb_func_start FUN_0200A908
FUN_0200A908: @ 0x0200A908
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r4, #0
	bne _0200A918
	bl FUN_0202551C
_0200A918:
	ldr r0, [r5]
	str r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0xc]
	adds r0, r5, #4
	bl FUN_0200AC88
	adds r2, r0, #0
	str r0, [r4, #4]
	cmp r2, #0
	ble _0200A93A
	movs r1, #0x18
	adds r0, r6, #0
	muls r1, r2, r1
	bl FUN_0201AA8C
	b _0200A93C
_0200A93A:
	movs r0, #0
_0200A93C:
	str r0, [r4]
	ldr r0, [r4]
	cmp r0, #0
	beq _0200A950
	ldr r3, [r4, #4]
	movs r2, #0x18
	adds r1, r5, #4
	muls r2, r3, r2
	blx FUN_020E5AD8
_0200A950:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200A908

	thumb_func_start FUN_0200A954
FUN_0200A954: @ 0x0200A954
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0200A962
	bl FUN_0201AB0C
_0200A962:
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A954

	thumb_func_start FUN_0200A96C
FUN_0200A96C: @ 0x0200A96C
	push {r4, lr}
	adds r4, r0, #0
	bne _0200A976
	bl FUN_0202551C
_0200A976:
	ldr r0, [r4, #4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200A96C

	thumb_func_start FUN_0200A97C
FUN_0200A97C: @ 0x0200A97C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200A98A
	bl FUN_0202551C
_0200A98A:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A994
	bl FUN_0202551C
_0200A994:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200A9A4
	movs r0, #0x4c
	muls r0, r4, r0
	ldr r0, [r1, r0]
	pop {r3, r4, r5, pc}
_0200A9A4:
	movs r0, #0x18
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0xc]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200A97C

	thumb_func_start FUN_0200A9B0
FUN_0200A9B0: @ 0x0200A9B0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200A9BE
	bl FUN_0202551C
_0200A9BE:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A9C8
	bl FUN_0202551C
_0200A9C8:
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _0200A9D8
	movs r0, #0x18
	ldr r1, [r5]
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r6, [r0, #4]
_0200A9D8:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200A9B0

	thumb_func_start FUN_0200A9DC
FUN_0200A9DC: @ 0x0200A9DC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200A9EA
	bl FUN_0202551C
_0200A9EA:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200A9F4
	bl FUN_0202551C
_0200A9F4:
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _0200AA04
	movs r0, #0x18
	ldr r1, [r5]
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r6, [r0, #8]
_0200AA04:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200A9DC

	thumb_func_start FUN_0200AA08
FUN_0200AA08: @ 0x0200AA08
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200AA16
	bl FUN_0202551C
_0200AA16:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200AA20
	bl FUN_0202551C
_0200AA20:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200AA32
	movs r0, #0x4c
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0x44]
	pop {r3, r4, r5, pc}
_0200AA32:
	movs r0, #0x18
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0x10]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200AA08

	thumb_func_start FUN_0200AA3C
FUN_0200AA3C: @ 0x0200AA3C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200AA4A
	bl FUN_0202551C
_0200AA4A:
	ldr r0, [r5, #4]
	cmp r0, r4
	bgt _0200AA54
	bl FUN_0202551C
_0200AA54:
	ldrb r0, [r5, #0xc]
	ldr r1, [r5]
	cmp r0, #0
	bne _0200AA66
	movs r0, #0x4c
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0x48]
	pop {r3, r4, r5, pc}
_0200AA66:
	movs r0, #0x18
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0x14]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200AA3C

	thumb_func_start FUN_0200AA70
FUN_0200AA70: @ 0x0200AA70
	push {r3, r4}
	ldr r4, [r0, #8]
	movs r1, #0
	cmp r4, #0
	ble _0200AA96
	ldr r3, [r0, #4]
	adds r2, r3, #0
_0200AA7E:
	ldr r0, [r2]
	cmp r0, #0
	bne _0200AA8E
	movs r0, #0xc
	muls r0, r1, r0
	adds r0, r3, r0
	pop {r3, r4}
	bx lr
_0200AA8E:
	adds r1, r1, #1
	adds r2, #0xc
	cmp r1, r4
	blt _0200AA7E
_0200AA96:
	movs r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0200AA70

	thumb_func_start FUN_0200AA9C
FUN_0200AA9C: @ 0x0200AA9C
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	adds r6, r1, #0
	adds r7, r2, #0
	str r3, [sp]
	ldr r5, [sp, #0x18]
	bl FUN_020256FC
	cmp r6, #5
	bhi _0200AB0A
	adds r1, r6, r6
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0200AABE: @ jump table
	.2byte _0200AACA - _0200AABE - 2 @ case 0
	.2byte _0200AAD6 - _0200AABE - 2 @ case 1
	.2byte _0200AAE4 - _0200AABE - 2 @ case 2
	.2byte _0200AAEE - _0200AABE - 2 @ case 3
	.2byte _0200AAF8 - _0200AABE - 2 @ case 4
	.2byte _0200AB02 - _0200AABE - 2 @ case 5
_0200AACA:
	adds r1, r7, #0
	adds r2, r5, #0
	bl FUN_0200AB0C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAD6:
	ldr r2, [sp]
	adds r1, r7, #0
	adds r3, r5, #0
	bl FUN_0200AB2C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAE4:
	adds r1, r5, #0
	bl FUN_0200AB50
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAEE:
	adds r1, r5, #0
	bl FUN_0200AB6C
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AAF8:
	adds r1, r5, #0
	bl FUN_0200AB88
	str r0, [r4, #8]
	pop {r3, r4, r5, r6, r7, pc}
_0200AB02:
	adds r1, r5, #0
	bl FUN_0200ABA4
	str r0, [r4, #8]
_0200AB0A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200AA9C

	thumb_func_start FUN_0200AB0C
FUN_0200AB0C: @ 0x0200AB0C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r2, #0
	movs r1, #8
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r6, #0
	adds r1, r4, #0
	blx FUN_020B70A8
	str r5, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200AB0C

	thumb_func_start FUN_0200AB2C
FUN_0200AB2C: @ 0x0200AB2C
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r0, r3, #0
	movs r1, #0xc
	adds r6, r2, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	blx FUN_020B7140
	str r5, [r4, #4]
	str r6, [r4, #8]
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200AB2C

	thumb_func_start FUN_0200AB50
FUN_0200AB50: @ 0x0200AB50
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #4
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020B6EC8
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AB50

	thumb_func_start FUN_0200AB6C
FUN_0200AB6C: @ 0x0200AB6C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #4
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020B6D18
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AB6C

	thumb_func_start FUN_0200AB88
FUN_0200AB88: @ 0x0200AB88
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #4
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020B6FC8
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AB88

	thumb_func_start FUN_0200ABA4
FUN_0200ABA4: @ 0x0200ABA4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	movs r1, #4
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020B6D24
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200ABA4

	thumb_func_start FUN_0200ABC0
FUN_0200ABC0: @ 0x0200ABC0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0200ABCE
	bl FUN_0201AB0C
_0200ABCE:
	movs r0, #0
	str r0, [r4, #8]
	pop {r4, pc}
	thumb_func_end FUN_0200ABC0

	thumb_func_start FUN_0200ABD4
FUN_0200ABD4: @ 0x0200ABD4
	push {r4, lr}
	adds r4, r0, #0
	bne _0200ABDE
	bl FUN_0202551C
_0200ABDE:
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _0200ABE8
	bl FUN_0202551C
_0200ABE8:
	ldr r0, [r4, #8]
	pop {r4, pc}
	thumb_func_end FUN_0200ABD4

	thumb_func_start FUN_0200ABEC
FUN_0200ABEC: @ 0x0200ABEC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r0, [r0]
	ldr r3, [sp, #0x1c]
	bl FUN_02025600
	str r0, [r4]
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x14]
	adds r0, r4, #0
	bl FUN_0200AA9C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200ABEC

	thumb_func_start FUN_0200AC18
FUN_0200AC18: @ 0x0200AC18
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x24]
	bl FUN_02007A44
	adds r1, r0, #0
	ldr r0, [r5]
	ldr r2, [sp, #0x14]
	bl FUN_020255C4
	str r0, [r4]
	ldr r1, [sp, #0x20]
	ldr r0, [sp, #0x24]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_0200AA9C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AC18

	thumb_func_start FUN_0200AC50
FUN_0200AC50: @ 0x0200AC50
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0x24]
	bl FUN_0200ACA4
	adds r1, r0, #0
	ldr r0, [r5]
	ldr r2, [sp, #0x14]
	bl FUN_020255C4
	str r0, [r4]
	ldr r1, [sp, #0x20]
	ldr r0, [sp, #0x24]
	str r1, [r4, #4]
	str r0, [sp]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_0200AA9C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AC50

	thumb_func_start FUN_0200AC88
FUN_0200AC88: @ 0x0200AC88
	movs r3, #0
	ldr r2, [r0]
	subs r1, r3, #2
	cmp r2, r1
	beq _0200AC9E
	subs r1, r3, #2
_0200AC94:
	adds r0, #0x18
	ldr r2, [r0]
	adds r3, r3, #1
	cmp r2, r1
	bne _0200AC94
_0200AC9E:
	adds r0, r3, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200AC88

	thumb_func_start FUN_0200ACA4
FUN_0200ACA4: @ 0x0200ACA4
	push {r4, r5, r6, lr}
	adds r6, r3, #0
	adds r5, r2, #0
	adds r2, r6, #0
	bl FUN_0200771C
	adds r4, r0, #0
	beq _0200ACEA
	cmp r5, #0
	beq _0200ACEA
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _0200ACCA
	ldr r1, [r4]
	adds r0, r6, #0
	lsrs r1, r1, #8
	bl FUN_0201AA8C
	b _0200ACD4
_0200ACCA:
	ldr r1, [r4]
	adds r0, r6, #0
	lsrs r1, r1, #8
	bl FUN_0201AACC
_0200ACD4:
	adds r5, r0, #0
	cmp r5, #0
	beq _0200ACE8
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020D4BE8
	adds r0, r4, #0
	bl FUN_0201AB0C
_0200ACE8:
	adds r4, r5, #0
_0200ACEA:
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200ACA4

	thumb_func_start FUN_0200ACF0
FUN_0200ACF0: @ 0x0200ACF0
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200ACFC
	bl FUN_0202551C
_0200ACFC:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AD0A
	bl FUN_0202551C
_0200AD0A:
	adds r0, r4, #0
	bl FUN_0200A810
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl FUN_02021758
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200ACF0

	thumb_func_start FUN_0200AD30
FUN_0200AD30: @ 0x0200AD30
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200AD3A
	bl FUN_0202551C
_0200AD3A:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200AD62
	adds r4, r6, #0
_0200AD44:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AD58
	bl FUN_0200ACF0
	cmp r0, #0
	bne _0200AD58
	bl FUN_0202551C
_0200AD58:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200AD44
_0200AD62:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200AD30

	thumb_func_start FUN_0200AD64
FUN_0200AD64: @ 0x0200AD64
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200AD70
	bl FUN_0202551C
_0200AD70:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AD7E
	bl FUN_0202551C
_0200AD7E:
	adds r0, r4, #0
	bl FUN_0200A810
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl FUN_020217B0
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200AD64

	thumb_func_start FUN_0200ADA4
FUN_0200ADA4: @ 0x0200ADA4
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200ADB0
	bl FUN_0202551C
_0200ADB0:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200ADBE
	bl FUN_0202551C
_0200ADBE:
	adds r0, r4, #0
	bl FUN_0200A810
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl FUN_02021758
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200ADA4

	thumb_func_start FUN_0200ADE4
FUN_0200ADE4: @ 0x0200ADE4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200ADEE
	bl FUN_0202551C
_0200ADEE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200AE16
	adds r4, r6, #0
_0200ADF8:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AE0C
	bl FUN_0200ADA4
	cmp r0, #0
	bne _0200AE0C
	bl FUN_0202551C
_0200AE0C:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200ADF8
_0200AE16:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200ADE4

	thumb_func_start FUN_0200AE18
FUN_0200AE18: @ 0x0200AE18
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200AE24
	bl FUN_0202551C
_0200AE24:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AE32
	bl FUN_0202551C
_0200AE32:
	adds r0, r4, #0
	bl FUN_0200A810
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	add r0, sp, #0
	bl FUN_020217B0
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200AE18

	thumb_func_start FUN_0200AE58
FUN_0200AE58: @ 0x0200AE58
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200AE62
	bl FUN_0202551C
_0200AE62:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200AE8A
	adds r4, r6, #0
_0200AE6C:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AE80
	bl FUN_0200AE18
	cmp r0, #0
	bne _0200AE80
	bl FUN_0202551C
_0200AE80:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200AE6C
_0200AE8A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200AE58

	thumb_func_start FUN_0200AE8C
FUN_0200AE8C: @ 0x0200AE8C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bne _0200AE96
	bl FUN_0202551C
_0200AE96:
	adds r0, r5, #0
	bl FUN_0200A7FC
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0200A810
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_0202183C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200AE8C

	thumb_func_start FUN_0200AEB0
FUN_0200AEB0: @ 0x0200AEB0
	push {r4, lr}
	adds r4, r0, #0
	bne _0200AEBA
	bl FUN_0202551C
_0200AEBA:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AEC8
	bl FUN_0202551C
_0200AEC8:
	adds r0, r4, #0
	bl FUN_0200A7FC
	bl FUN_02021884
	pop {r4, pc}
	thumb_func_end FUN_0200AEB0

	thumb_func_start FUN_0200AED4
FUN_0200AED4: @ 0x0200AED4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200AEDE
	bl FUN_0202551C
_0200AEDE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200AEFE
	adds r4, r6, #0
_0200AEE8:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200AEF4
	bl FUN_0200AEB0
_0200AEF4:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200AEE8
_0200AEFE:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200AED4

	thumb_func_start FUN_0200AF00
FUN_0200AF00: @ 0x0200AF00
	push {r4, lr}
	adds r4, r0, #0
	bne _0200AF0A
	bl FUN_0202551C
_0200AF0A:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AF18
	bl FUN_0202551C
_0200AF18:
	adds r0, r4, #0
	bl FUN_0200A7FC
	bl FUN_02021910
	pop {r4, pc}
	thumb_func_end FUN_0200AF00

	thumb_func_start FUN_0200AF24
FUN_0200AF24: @ 0x0200AF24
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	bne _0200AF32
	bl FUN_0202551C
_0200AF32:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #0
	beq _0200AF40
	bl FUN_0202551C
_0200AF40:
	cmp r5, #0
	bne _0200AF48
	bl FUN_0202551C
_0200AF48:
	adds r0, r5, #0
	bl FUN_0200A8A0
	cmp r0, #2
	beq _0200AF56
	bl FUN_0202551C
_0200AF56:
	adds r0, r4, #0
	bl FUN_0200A7FC
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0200A840
	adds r1, r0, #0
	ldr r1, [r1, #0xc]
	adds r0, r4, #0
	ldr r1, [r1]
	bl FUN_02021934
	cmp r0, #0
	bne _0200AF7E
	adds r0, r4, #0
	bl FUN_02021910
	bl FUN_020219B8
_0200AF7E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200AF24

	thumb_func_start FUN_0200AF80
FUN_0200AF80: @ 0x0200AF80
	push {r4, lr}
	adds r4, r0, #0
	bne _0200AF8A
	bl FUN_0202551C
_0200AF8A:
	adds r0, r4, #0
	bl FUN_02021A50
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200AF80

	thumb_func_start FUN_0200AF94
FUN_0200AF94: @ 0x0200AF94
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200AFA0
	bl FUN_0202551C
_0200AFA0:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #1
	beq _0200AFAE
	bl FUN_0202551C
_0200AFAE:
	adds r0, r4, #0
	bl FUN_0200A828
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #0xc]
	adds r0, r4, #0
	bl FUN_0200A8DC
	str r0, [sp, #8]
	add r0, sp, #0
	bl FUN_02022660
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200AF94

	thumb_func_start FUN_0200AFD8
FUN_0200AFD8: @ 0x0200AFD8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200AFE2
	bl FUN_0202551C
_0200AFE2:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200B00A
	adds r4, r6, #0
_0200AFEC:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B000
	bl FUN_0200AF94
	cmp r0, #0
	bne _0200B000
	bl FUN_0202551C
_0200B000:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200AFEC
_0200B00A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200AFD8

	thumb_func_start FUN_0200B00C
FUN_0200B00C: @ 0x0200B00C
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	bne _0200B018
	bl FUN_0202551C
_0200B018:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #1
	beq _0200B026
	bl FUN_0202551C
_0200B026:
	adds r0, r4, #0
	bl FUN_0200A828
	str r0, [sp]
	adds r0, r4, #0
	bl FUN_0200A8B0
	str r0, [sp, #4]
	adds r0, r4, #0
	bl FUN_0200A7FC
	str r0, [sp, #0xc]
	adds r0, r4, #0
	bl FUN_0200A8DC
	str r0, [sp, #8]
	add r0, sp, #0
	bl FUN_020226A4
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_0200B00C

	thumb_func_start FUN_0200B050
FUN_0200B050: @ 0x0200B050
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200B05A
	bl FUN_0202551C
_0200B05A:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200B082
	adds r4, r6, #0
_0200B064:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B078
	bl FUN_0200B00C
	cmp r0, #0
	bne _0200B078
	bl FUN_0202551C
_0200B078:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200B064
_0200B082:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200B050

	thumb_func_start FUN_0200B084
FUN_0200B084: @ 0x0200B084
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bne _0200B08E
	bl FUN_0202551C
_0200B08E:
	adds r0, r5, #0
	bl FUN_0200A7FC
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0200A828
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_020226E4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200B084

	thumb_func_start FUN_0200B0A8
FUN_0200B0A8: @ 0x0200B0A8
	push {r4, lr}
	adds r4, r0, #0
	bne _0200B0B2
	bl FUN_0202551C
_0200B0B2:
	adds r0, r4, #0
	bl FUN_0200A8A0
	cmp r0, #1
	beq _0200B0C0
	bl FUN_0202551C
_0200B0C0:
	adds r0, r4, #0
	bl FUN_0200A7FC
	bl FUN_02022744
	pop {r4, pc}
	thumb_func_end FUN_0200B0A8

	thumb_func_start FUN_0200B0CC
FUN_0200B0CC: @ 0x0200B0CC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	bne _0200B0D6
	bl FUN_0202551C
_0200B0D6:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0200B0F6
	adds r4, r6, #0
_0200B0E0:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200B0EC
	bl FUN_0200B0A8
_0200B0EC:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200B0E0
_0200B0F6:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200B0CC

	thumb_func_start FUN_0200B0F8
FUN_0200B0F8: @ 0x0200B0F8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0200B106
	bl FUN_0202551C
_0200B106:
	adds r0, r5, #0
	bl FUN_0200A8A0
	cmp r0, #1
	beq _0200B114
	bl FUN_0202551C
_0200B114:
	adds r0, r5, #0
	bl FUN_0200A7FC
	cmp r4, #0
	beq _0200B126
	adds r1, r4, #0
	bl FUN_020227D4
	pop {r3, r4, r5, pc}
_0200B126:
	bl FUN_020227AC
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200B0F8

	thumb_func_start FUN_0200B12C
FUN_0200B12C: @ 0x0200B12C
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0
	bl FUN_0200B0F8
	adds r1, r4, #0
	blx FUN_020B8078
	movs r1, #0
	mvns r1, r1
	cmp r0, r1
	beq _0200B14C
	asrs r1, r0, #4
	lsrs r1, r1, #0x1b
	adds r1, r0, r1
	asrs r0, r1, #5
_0200B14C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200B12C

	thumb_func_start FUN_0200B150
FUN_0200B150: @ 0x0200B150
	push {r3, r4, lr}
	sub sp, #0x14
	adds r4, r0, #0
	cmp r4, #4
	bge _0200B164
	movs r0, #4
	cmp r1, #0x7c
	ble _0200B164
	subs r4, r0, r4
	subs r1, r1, r4
_0200B164:
	cmp r2, #1
	bge _0200B174
	movs r4, #1
	cmp r3, #0x1e
	ble _0200B176
	subs r2, r4, r2
	subs r3, r3, r2
	b _0200B176
_0200B174:
	adds r4, r2, #0
_0200B176:
	ldr r2, [sp, #0x20]
	str r2, [sp]
	ldr r2, [sp, #0x24]
	str r2, [sp, #4]
	ldr r2, [sp, #0x28]
	str r2, [sp, #8]
	ldr r2, [sp, #0x2c]
	str r2, [sp, #0xc]
	ldr r2, [sp, #0x30]
	str r2, [sp, #0x10]
	adds r2, r4, #0
	bl FUN_0200B194
	add sp, #0x14
	pop {r3, r4, pc}
	thumb_func_end FUN_0200B150

	thumb_func_start FUN_0200B194
FUN_0200B194: @ 0x0200B194
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _0200B220 @ =0x021D0EB0
	adds r4, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r0, #0
	beq _0200B1AC
	bl FUN_0202551C
_0200B1AC:
	ldr r0, [sp, #0x30]
	movs r1, #0x3c
	bl FUN_0201AA8C
	ldr r1, _0200B220 @ =0x021D0EB0
	cmp r0, #0
	str r0, [r1]
	bne _0200B1C0
	bl FUN_0202551C
_0200B1C0:
	ldr r1, _0200B220 @ =0x021D0EB0
	lsls r3, r6, #0x10
	ldr r2, [sp, #0x30]
	ldr r0, [r1]
	lsrs r3, r3, #0x10
	str r2, [r0, #0x38]
	lsls r0, r7, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	ldr r0, [r1]
	lsls r1, r5, #0x10
	lsls r2, r4, #0x10
	lsrs r1, r1, #0x10
	lsrs r2, r2, #0x10
	blx FUN_020B7994
	cmp r0, #0
	bne _0200B1EC
	bl FUN_0202551C
_0200B1EC:
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0x20]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, _0200B220 @ =0x021D0EB0
	ldr r2, [sp, #0x24]
	ldr r3, [sp, #0x28]
	ldr r0, [r0]
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	lsls r3, r3, #0x10
	adds r0, #0x1c
	lsrs r1, r1, #0x10
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x10
	blx FUN_020B7994
	cmp r0, #0
	bne _0200B21C
	bl FUN_0202551C
_0200B21C:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B220: .4byte 0x021D0EB0
	thumb_func_end FUN_0200B194

	thumb_func_start FUN_0200B224
FUN_0200B224: @ 0x0200B224
	push {r3, lr}
	ldr r0, _0200B240 @ =0x021D0EB0
	ldr r0, [r0]
	cmp r0, #0
	beq _0200B23C
	blx FUN_020B7FE4
	ldr r0, _0200B240 @ =0x021D0EB0
	ldr r0, [r0]
	adds r0, #0x1c
	blx FUN_020B7FE4
_0200B23C:
	pop {r3, pc}
	nop
_0200B240: .4byte 0x021D0EB0
	thumb_func_end FUN_0200B224

	thumb_func_start FUN_0200B244
FUN_0200B244: @ 0x0200B244
	push {r3, lr}
	ldr r0, _0200B278 @ =0x021D0EB0
	ldr r0, [r0]
	cmp r0, #0
	bne _0200B252
	bl FUN_0202551C
_0200B252:
	ldr r0, _0200B278 @ =0x021D0EB0
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl FUN_0200B2E0
	ldr r0, _0200B278 @ =0x021D0EB0
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl FUN_0200B2E8
	ldr r0, _0200B278 @ =0x021D0EB0
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _0200B278 @ =0x021D0EB0
	movs r1, #0
	str r1, [r0]
	pop {r3, pc}
	nop
_0200B278: .4byte 0x021D0EB0
	thumb_func_end FUN_0200B244

	thumb_func_start FUN_0200B27C
FUN_0200B27C: @ 0x0200B27C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	ldr r0, _0200B2C8 @ =0x021D0EB0
	adds r7, r1, #0
	ldr r0, [r0]
	adds r5, r2, #0
	adds r4, r3, #0
	cmp r0, #0
	bne _0200B294
	bl FUN_0202551C
_0200B294:
	cmp r5, #1
	bne _0200B2B0
	ldr r0, _0200B2CC @ =FUN_02025C98
	ldr r2, _0200B2D0 @ =FUN_0200B2F0
	str r0, [sp]
	str r5, [sp, #4]
	ldr r3, _0200B2D4 @ =FUN_0200B334
	adds r0, r6, #0
	adds r1, r7, #0
	str r4, [sp, #8]
	bl FUN_02025C54
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_0200B2B0:
	ldr r0, _0200B2CC @ =FUN_02025C98
	ldr r2, _0200B2D8 @ =FUN_0200B310
	str r0, [sp]
	str r5, [sp, #4]
	ldr r3, _0200B2DC @ =FUN_0200B358
	adds r0, r6, #0
	adds r1, r7, #0
	str r4, [sp, #8]
	bl FUN_02025C54
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200B2C8: .4byte 0x021D0EB0
_0200B2CC: .4byte FUN_02025C98
_0200B2D0: .4byte FUN_0200B2F0
_0200B2D4: .4byte FUN_0200B334
_0200B2D8: .4byte FUN_0200B310
_0200B2DC: .4byte FUN_0200B358
	thumb_func_end FUN_0200B27C

	thumb_func_start FUN_0200B2E0
FUN_0200B2E0: @ 0x0200B2E0
	ldr r3, _0200B2E4 @ =FUN_02024BBC
	bx r3
	.align 2, 0
_0200B2E4: .4byte FUN_02024BBC
	thumb_func_end FUN_0200B2E0

	thumb_func_start FUN_0200B2E8
FUN_0200B2E8: @ 0x0200B2E8
	ldr r3, _0200B2EC @ =FUN_02024BF4
	bx r3
	.align 2, 0
_0200B2EC: .4byte FUN_02024BF4
	thumb_func_end FUN_0200B2E8

	thumb_func_start FUN_0200B2F0
FUN_0200B2F0: @ 0x0200B2F0
	push {r4, lr}
	adds r3, r0, #0
	ldr r0, _0200B30C @ =0x021D0EB0
	adds r2, r1, #0
	ldr r0, [r0]
	adds r1, r3, #0
	blx FUN_020B7B10
	adds r4, r0, #0
	bne _0200B308
	bl FUN_0202551C
_0200B308:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0200B30C: .4byte 0x021D0EB0
	thumb_func_end FUN_0200B2F0

	thumb_func_start FUN_0200B310
FUN_0200B310: @ 0x0200B310
	push {r4, lr}
	adds r3, r0, #0
	ldr r0, _0200B330 @ =0x021D0EB0
	adds r2, r1, #0
	ldr r0, [r0]
	adds r1, r3, #0
	adds r0, #0x1c
	blx FUN_020B7B10
	adds r4, r0, #0
	bne _0200B32A
	bl FUN_0202551C
_0200B32A:
	adds r0, r4, #0
	pop {r4, pc}
	nop
_0200B330: .4byte 0x021D0EB0
	thumb_func_end FUN_0200B310

	thumb_func_start FUN_0200B334
FUN_0200B334: @ 0x0200B334
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0200B350 @ =0x021D0EB0
	ldr r0, [r0]
	blx FUN_020B7BF4
	adds r4, r0, #0
	ldr r0, _0200B354 @ =0x0000FFFE
	cmp r4, r0
	bne _0200B34C
	bl FUN_0202551C
_0200B34C:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0200B350: .4byte 0x021D0EB0
_0200B354: .4byte 0x0000FFFE
	thumb_func_end FUN_0200B334

	thumb_func_start FUN_0200B358
FUN_0200B358: @ 0x0200B358
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0200B378 @ =0x021D0EB0
	ldr r0, [r0]
	adds r0, #0x1c
	blx FUN_020B7BF4
	adds r4, r0, #0
	ldr r0, _0200B37C @ =0x0000FFFE
	cmp r4, r0
	bne _0200B372
	bl FUN_0202551C
_0200B372:
	adds r0, r4, #0
	pop {r4, pc}
	nop
_0200B378: .4byte 0x021D0EB0
_0200B37C: .4byte 0x0000FFFE
	thumb_func_end FUN_0200B358

	thumb_func_start FUN_0200B380
FUN_0200B380: @ 0x0200B380
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x10
	ldrsb r2, [r5, r0]
	movs r0, #0x14
	ldrsh r0, [r5, r0]
	adds r1, r2, #0
	movs r7, #0x1a
	ldrsh r2, [r5, r7]
	muls r1, r0, r1
	movs r6, #0xa
	ldrsh r0, [r5, r6]
	adds r1, r2, r1
	movs r4, #0
	cmp r0, r1
	beq _0200B3DE
	cmp r2, r0
	beq _0200B3DE
	strh r1, [r5, #0x1a]
	ldrh r3, [r5, #0x18]
	ldrh r0, [r5, #0x16]
	adds r2, r5, #0
	adds r1, r5, #0
	adds r0, r3, r0
	strh r0, [r5, #0x18]
	ldrh r3, [r5, #0x18]
	ldrh r0, [r5, #8]
	adds r2, #0x1a
	adds r1, #0x18
	cmp r3, r0
	blo _0200B3E2
	movs r3, #0x10
	ldrsh r0, [r2, r4]
	ldrsb r3, [r5, r3]
	adds r0, r0, r3
	strh r0, [r2]
	ldrsh r2, [r5, r7]
	ldrsh r0, [r5, r6]
	cmp r2, r0
	beq _0200B3DA
	ldrh r2, [r1]
	ldrh r0, [r5, #8]
	subs r0, r2, r0
	strh r0, [r1]
	b _0200B3E2
_0200B3DA:
	movs r4, #1
	b _0200B3E2
_0200B3DE:
	strh r0, [r5, #0x1a]
	movs r4, #1
_0200B3E2:
	ldr r1, [r5, #4]
	movs r0, #1
	tst r0, r1
	beq _0200B3F8
	movs r2, #0x1a
	ldrsh r2, [r5, r2]
	ldr r0, _0200B414 @ =FUN_04000050
	ldr r1, [r5]
	blx FUN_020CF178
	b _0200B40A
_0200B3F8:
	movs r0, #2
	tst r0, r1
	beq _0200B40A
	movs r2, #0x1a
	ldrsh r2, [r5, r2]
	ldr r0, _0200B418 @ =0x04001050
	ldr r1, [r5]
	blx FUN_020CF178
_0200B40A:
	cmp r4, #1
	bne _0200B412
	movs r0, #0
	str r0, [r5, #0x1c]
_0200B412:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B414: .4byte FUN_04000050
_0200B418: .4byte 0x04001050
	thumb_func_end FUN_0200B380

	thumb_func_start FUN_0200B41C
FUN_0200B41C: @ 0x0200B41C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x1c]
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r0, #0
	beq _0200B430
	bl FUN_0202551C
_0200B430:
	ldr r1, [sp, #0x18]
	movs r0, #1
	lsls r1, r1, #0x18
	str r0, [r5, #0x1c]
	lsrs r1, r1, #0x18
	str r1, [r5]
	ldr r1, [sp, #0x1c]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [r5, #4]
	strh r4, [r5, #8]
	strh r6, [r5, #0xa]
	strh r7, [r5, #0x1a]
	subs r1, r7, r6
	strh r1, [r5, #0x12]
	movs r1, #0x12
	ldrsh r2, [r5, r1]
	cmp r2, #0
	ble _0200B45C
	subs r1, #0x13
	strb r1, [r5, #0x10]
	b _0200B466
_0200B45C:
	strb r0, [r5, #0x10]
	ldrsh r0, [r5, r1]
	subs r1, #0x13
	muls r1, r0, r1
	strh r1, [r5, #0x12]
_0200B466:
	movs r0, #0x12
	ldrsh r0, [r5, r0]
	adds r1, r4, #0
	blx FUN_020F2998
	strh r0, [r5, #0x14]
	movs r0, #0x12
	ldrsh r0, [r5, r0]
	adds r1, r4, #0
	blx FUN_020F2998
	strh r1, [r5, #0x16]
	movs r0, #0
	strh r0, [r5, #0x18]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200B41C

	thumb_func_start FUN_0200B484
FUN_0200B484: @ 0x0200B484
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	adds r6, r2, #0
	adds r4, r3, #0
	cmp r5, #0
	beq _0200B4DA
	ldr r1, [sp, #0x20]
	movs r0, #1
	tst r0, r1
	beq _0200B4B6
	ldr r0, _0200B4E0 @ =FUN_04000050
	adds r1, r4, #0
	blx FUN_020CF178
	str r4, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, _0200B4E4 @ =0x021D0ED4
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_0200B41C
_0200B4B6:
	ldr r1, [sp, #0x20]
	movs r0, #2
	tst r0, r1
	beq _0200B4DA
	ldr r0, _0200B4E8 @ =0x04001050
	adds r1, r4, #0
	adds r2, r6, #0
	blx FUN_020CF178
	str r4, [sp]
	movs r0, #2
	str r0, [sp, #4]
	ldr r0, _0200B4EC @ =0x021D0EB4
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl FUN_0200B41C
_0200B4DA:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200B4E0: .4byte FUN_04000050
_0200B4E4: .4byte 0x021D0ED4
_0200B4E8: .4byte 0x04001050
_0200B4EC: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B484

	thumb_func_start FUN_0200B4F0
FUN_0200B4F0: @ 0x0200B4F0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	movs r0, #1
	adds r6, r1, #0
	tst r0, r4
	beq _0200B506
	ldr r0, _0200B520 @ =FUN_04000050
	adds r2, r5, #0
	blx FUN_020CF178
_0200B506:
	movs r0, #2
	tst r0, r4
	beq _0200B516
	ldr r0, _0200B524 @ =0x04001050
	adds r1, r6, #0
	adds r2, r5, #0
	blx FUN_020CF178
_0200B516:
	adds r0, r4, #0
	bl FUN_0200B554
	pop {r4, r5, r6, pc}
	nop
_0200B520: .4byte FUN_04000050
_0200B524: .4byte 0x04001050
	thumb_func_end FUN_0200B4F0

	thumb_func_start FUN_0200B528
FUN_0200B528: @ 0x0200B528
	push {r3, lr}
	ldr r0, _0200B548 @ =0x021D0ED4
	movs r1, #0
	movs r2, #0x20
	blx FUN_020D4994
	ldr r0, _0200B54C @ =0x021D0EB4
	movs r1, #0
	movs r2, #0x20
	blx FUN_020D4994
	ldr r0, _0200B550 @ =0x021D0EB4
	movs r1, #0
	str r1, [r0, #0x3c]
	str r1, [r0, #0x1c]
	pop {r3, pc}
	.align 2, 0
_0200B548: .4byte 0x021D0ED4
_0200B54C: .4byte 0x021D0EB4
_0200B550: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B528

	thumb_func_start FUN_0200B554
FUN_0200B554: @ 0x0200B554
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #1
	tst r0, r4
	beq _0200B56E
	ldr r0, _0200B588 @ =0x021D0ED4
	movs r1, #0
	movs r2, #0x20
	blx FUN_020D4994
	ldr r0, _0200B58C @ =0x021D0EB4
	movs r1, #0
	str r1, [r0, #0x3c]
_0200B56E:
	movs r0, #2
	tst r0, r4
	beq _0200B584
	ldr r0, _0200B590 @ =0x021D0EB4
	movs r1, #0
	movs r2, #0x20
	blx FUN_020D4994
	ldr r0, _0200B58C @ =0x021D0EB4
	movs r1, #0
	str r1, [r0, #0x1c]
_0200B584:
	pop {r4, pc}
	nop
_0200B588: .4byte 0x021D0ED4
_0200B58C: .4byte 0x021D0EB4
_0200B590: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B554

	thumb_func_start FUN_0200B594
FUN_0200B594: @ 0x0200B594
	push {r3, lr}
	ldr r0, _0200B5B4 @ =0x021D0EB4
	ldr r0, [r0, #0x3c]
	cmp r0, #0
	beq _0200B5A4
	ldr r0, _0200B5B8 @ =0x021D0ED4
	bl FUN_0200B380
_0200B5A4:
	ldr r0, _0200B5B4 @ =0x021D0EB4
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	beq _0200B5B2
	ldr r0, _0200B5BC @ =0x021D0EB4
	bl FUN_0200B380
_0200B5B2:
	pop {r3, pc}
	.align 2, 0
_0200B5B4: .4byte 0x021D0EB4
_0200B5B8: .4byte 0x021D0ED4
_0200B5BC: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B594

	thumb_func_start FUN_0200B5C0
FUN_0200B5C0: @ 0x0200B5C0
	cmp r0, #3
	bne _0200B5D6
	ldr r0, _0200B5FC @ =0x021D0EB4
	ldr r1, [r0, #0x3c]
	cmp r1, #0
	bne _0200B5F6
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _0200B5F6
	movs r0, #1
	bx lr
_0200B5D6:
	cmp r0, #1
	bne _0200B5E6
	ldr r0, _0200B5FC @ =0x021D0EB4
	ldr r0, [r0, #0x3c]
	cmp r0, #0
	bne _0200B5F6
	movs r0, #1
	bx lr
_0200B5E6:
	cmp r0, #2
	bne _0200B5F6
	ldr r0, _0200B5FC @ =0x021D0EB4
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _0200B5F6
	movs r0, #1
	bx lr
_0200B5F6:
	movs r0, #0
	bx lr
	nop
_0200B5FC: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B5C0

	thumb_func_start FUN_0200B600
FUN_0200B600: @ 0x0200B600
	lsls r1, r1, #8
	orrs r1, r0
	ldr r0, _0200B60C @ =0x021D0EB4
	str r1, [r0, #0x20]
	bx lr
	nop
_0200B60C: .4byte 0x021D0EB4
	thumb_func_end FUN_0200B600

	thumb_func_start FUN_0200B610
FUN_0200B610: @ 0x0200B610
	ldr r3, _0200B614 @ =FUN_02007524
	bx r3
	.align 2, 0
_0200B614: .4byte FUN_02007524
	thumb_func_end FUN_0200B610

	thumb_func_start FUN_0200B618
FUN_0200B618: @ 0x0200B618
	ldr r3, _0200B61C @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_0200B61C: .4byte FUN_0201AB0C
	thumb_func_end FUN_0200B618

	thumb_func_start FUN_0200B620
FUN_0200B620: @ 0x0200B620
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r3, r0, #0
	ldrh r0, [r3]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r5, r0
	bhs _0200B690
	lsls r0, r5, #3
	adds r0, r3, r0
	ldr r2, [r0, #4]
	ldr r1, [r0, #8]
	ldr r6, _0200B698 @ =0x000002FD
	str r2, [sp]
	str r1, [sp, #4]
	ldrh r0, [r3, #2]
	adds r7, r5, #1
	muls r6, r0, r6
	adds r0, r7, #0
	muls r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r0, r6, #0x10
	orrs r0, r6
	eors r2, r0
	eors r0, r1
	str r0, [sp, #4]
	str r2, [sp]
	adds r1, r3, r2
	adds r0, r4, #0
	add r2, sp, #0
	bl FUN_0200B74C
	ldr r2, [sp, #4]
	ldr r0, _0200B69C @ =0x00091BD3
	adds r1, r7, #0
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	subs r3, r2, #1
	cmp r2, #0
	beq _0200B694
	ldr r0, _0200B6A0 @ =0x0000493D
_0200B676:
	ldrh r1, [r4]
	eors r1, r5
	strh r1, [r4]
	adds r1, r5, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	adds r1, r3, #0
	adds r4, r4, #2
	subs r3, r3, #1
	cmp r1, #0
	bne _0200B676
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0200B690:
	bl FUN_0202551C
_0200B694:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B698: .4byte 0x000002FD
_0200B69C: .4byte 0x00091BD3
_0200B6A0: .4byte 0x0000493D
	thumb_func_end FUN_0200B620

	thumb_func_start FUN_0200B6A4
FUN_0200B6A4: @ 0x0200B6A4
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r1, #0
	adds r1, r3, #0
	adds r4, r2, #0
	bl FUN_02007688
	adds r6, r0, #0
	beq _0200B73A
	add r1, sp, #0xc
	str r1, [sp]
	adds r1, r5, #0
	movs r2, #0
	movs r3, #4
	bl FUN_0200782C
	add r0, sp, #4
	lsls r2, r4, #3
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r2, #4
	movs r3, #8
	bl FUN_0200782C
	add r0, sp, #4
	ldrh r2, [r0, #0xa]
	ldr r0, _0200B740 @ =0x000002FD
	adds r1, r4, #1
	muls r0, r2, r0
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r1, #0x10
	orrs r1, r0
	ldr r0, [sp, #4]
	eors r0, r1
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	eors r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	adds r1, r5, #0
	str r0, [sp]
	ldr r3, [sp, #8]
	ldr r2, [sp, #4]
	adds r0, r6, #0
	lsls r3, r3, #1
	bl FUN_0200782C
	ldr r2, _0200B744 @ =0x00091BD3
	adds r3, r4, #1
	muls r2, r3, r2
	lsls r2, r2, #0x10
	ldr r0, [sp, #8]
	lsrs r3, r2, #0x10
	subs r2, r0, #1
	ldr r1, [sp, #0x20]
	cmp r0, #0
	beq _0200B734
	ldr r0, _0200B748 @ =0x0000493D
_0200B71E:
	ldrh r4, [r1]
	eors r4, r3
	strh r4, [r1]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	adds r4, r2, #0
	adds r1, r1, #2
	lsrs r3, r3, #0x10
	subs r2, r2, #1
	cmp r4, #0
	bne _0200B71E
_0200B734:
	adds r0, r6, #0
	bl FUN_0200770C
_0200B73A:
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200B740: .4byte 0x000002FD
_0200B744: .4byte 0x00091BD3
_0200B748: .4byte 0x0000493D
	thumb_func_end FUN_0200B6A4

	thumb_func_start FUN_0200B74C
FUN_0200B74C: @ 0x0200B74C
	adds r3, r0, #0
	adds r0, r1, #0
	adds r1, r3, #0
	ldr r2, [r2, #4]
	ldr r3, _0200B75C @ =FUN_020D47B8
	lsls r2, r2, #1
	bx r3
	nop
_0200B75C: .4byte FUN_020D47B8
	thumb_func_end FUN_0200B74C

	thumb_func_start FUN_0200B760
FUN_0200B760: @ 0x0200B760
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldrh r0, [r5]
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, r0
	bhs _0200B7F6
	lsls r0, r4, #3
	adds r0, r5, r0
	ldr r3, [r0, #4]
	ldr r2, [r0, #8]
	ldrh r1, [r5, #2]
	ldr r6, _0200B804 @ =0x000002FD
	adds r0, r4, #1
	muls r6, r1, r6
	adds r1, r0, #0
	muls r1, r6, r1
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r1, #0x10
	orrs r1, r0
	adds r0, r3, #0
	adds r6, r2, #0
	str r3, [sp, #8]
	eors r0, r1
	eors r6, r1
	str r0, [sp, #8]
	lsls r0, r6, #1
	str r0, [sp, #4]
	str r2, [sp, #0xc]
	ldr r1, [sp, #4]
	movs r0, #0
	str r6, [sp, #0xc]
	bl FUN_0201AACC
	adds r7, r0, #0
	beq _0200B800
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	adds r0, r5, r0
	adds r1, r7, #0
	blx FUN_020D47B8
	ldr r1, _0200B808 @ =0x00091BD3
	adds r2, r4, #1
	muls r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	adds r0, r7, #0
	subs r1, r6, #1
	cmp r6, #0
	beq _0200B7E2
	ldr r3, _0200B80C @ =0x0000493D
_0200B7CC:
	ldrh r4, [r0]
	eors r4, r2
	strh r4, [r0]
	adds r2, r2, r3
	lsls r2, r2, #0x10
	adds r4, r1, #0
	adds r0, r0, #2
	lsrs r2, r2, #0x10
	subs r1, r1, #1
	cmp r4, #0
	bne _0200B7CC
_0200B7E2:
	ldr r0, [sp]
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_02026A04
	adds r0, r7, #0
	bl FUN_0201AB0C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_0200B7F6:
	bl FUN_0202551C
	ldr r0, [sp]
	bl FUN_020263AC
_0200B800:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B804: .4byte 0x000002FD
_0200B808: .4byte 0x00091BD3
_0200B80C: .4byte 0x0000493D
	thumb_func_end FUN_0200B760

	thumb_func_start FUN_0200B810
FUN_0200B810: @ 0x0200B810
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldrh r0, [r5]
	adds r4, r1, #0
	str r2, [sp]
	cmp r4, r0
	bhs _0200B8B8
	lsls r0, r4, #3
	adds r0, r5, r0
	ldr r3, [r0, #4]
	ldr r2, [r0, #8]
	ldrh r1, [r5, #2]
	ldr r6, _0200B8C8 @ =0x000002FD
	adds r0, r4, #1
	muls r6, r1, r6
	adds r1, r0, #0
	muls r1, r6, r1
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r1, #0x10
	orrs r1, r0
	adds r0, r3, #0
	adds r6, r2, #0
	str r3, [sp, #8]
	eors r0, r1
	eors r6, r1
	str r0, [sp, #8]
	lsls r0, r6, #1
	str r0, [sp, #4]
	str r2, [sp, #0xc]
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r6, [sp, #0xc]
	bl FUN_0201AACC
	adds r7, r0, #0
	beq _0200B8B2
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	adds r0, r5, r0
	adds r1, r7, #0
	blx FUN_020D47B8
	ldr r1, _0200B8CC @ =0x00091BD3
	adds r2, r4, #1
	muls r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	adds r0, r7, #0
	subs r1, r6, #1
	cmp r6, #0
	beq _0200B892
	ldr r3, _0200B8D0 @ =0x0000493D
_0200B87C:
	ldrh r4, [r0]
	eors r4, r2
	strh r4, [r0]
	adds r2, r2, r3
	lsls r2, r2, #0x10
	adds r4, r1, #0
	adds r0, r0, #2
	lsrs r2, r2, #0x10
	subs r1, r1, #1
	cmp r4, #0
	bne _0200B87C
_0200B892:
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_02026354
	adds r4, r0, #0
	beq _0200B8A6
	adds r1, r7, #0
	adds r2, r6, #0
	bl FUN_02026A04
_0200B8A6:
	adds r0, r7, #0
	bl FUN_0201AB0C
	add sp, #0x10
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200B8B2:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200B8B8:
	bl FUN_0202551C
	ldr r1, [sp]
	movs r0, #4
	bl FUN_02026354
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200B8C8: .4byte 0x000002FD
_0200B8CC: .4byte 0x00091BD3
_0200B8D0: .4byte 0x0000493D
	thumb_func_end FUN_0200B810

	thumb_func_start FUN_0200B8D4
FUN_0200B8D4: @ 0x0200B8D4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r3, #0
	adds r5, r1, #0
	adds r1, r7, #0
	adds r4, r2, #0
	bl FUN_02007688
	adds r6, r0, #0
	beq _0200B8FA
	ldr r1, [sp, #0x18]
	adds r2, r4, #0
	str r1, [sp]
	adds r1, r5, #0
	adds r3, r7, #0
	bl FUN_0200B8FC
	adds r0, r6, #0
	bl FUN_0200770C
_0200B8FA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200B8D4

	thumb_func_start FUN_0200B8FC
FUN_0200B8FC: @ 0x0200B8FC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r2, #0
	add r2, sp, #0x10
	adds r4, r3, #0
	str r2, [sp]
	movs r2, #0
	movs r3, #4
	adds r7, r0, #0
	str r1, [sp, #4]
	bl FUN_0200782C
	add r0, sp, #8
	ldrh r0, [r0, #8]
	cmp r5, r0
	bhs _0200B9AA
	add r0, sp, #8
	lsls r2, r5, #3
	str r0, [sp]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	adds r2, r2, #4
	movs r3, #8
	bl FUN_0200782C
	add r0, sp, #8
	ldrh r2, [r0, #0xa]
	ldr r0, _0200B9B8 @ =0x000002FD
	adds r1, r5, #1
	muls r0, r2, r0
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r1, #0x10
	orrs r1, r0
	ldr r0, [sp, #8]
	eors r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	eors r0, r1
	lsls r6, r0, #1
	str r0, [sp, #0xc]
	adds r0, r4, #0
	adds r1, r6, #0
	bl FUN_0201AACC
	adds r4, r0, #0
	beq _0200B9B4
	str r4, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	adds r0, r7, #0
	adds r3, r6, #0
	bl FUN_0200782C
	ldr r2, _0200B9BC @ =0x00091BD3
	adds r3, r5, #1
	muls r2, r3, r2
	lsls r2, r2, #0x10
	ldr r0, [sp, #0xc]
	lsrs r3, r2, #0x10
	adds r1, r4, #0
	subs r2, r0, #1
	cmp r0, #0
	beq _0200B996
	ldr r0, _0200B9C0 @ =0x0000493D
_0200B980:
	ldrh r5, [r1]
	eors r5, r3
	strh r5, [r1]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	adds r5, r2, #0
	adds r1, r1, #2
	lsrs r3, r3, #0x10
	subs r2, r2, #1
	cmp r5, #0
	bne _0200B980
_0200B996:
	ldr r0, [sp, #0x28]
	ldr r2, [sp, #0xc]
	adds r1, r4, #0
	bl FUN_02026A04
	adds r0, r4, #0
	bl FUN_0201AB0C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_0200B9AA:
	bl FUN_0202551C
	ldr r0, [sp, #0x28]
	bl FUN_020263AC
_0200B9B4:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200B9B8: .4byte 0x000002FD
_0200B9BC: .4byte 0x00091BD3
_0200B9C0: .4byte 0x0000493D
	thumb_func_end FUN_0200B8FC

	thumb_func_start FUN_0200B9C4
FUN_0200B9C4: @ 0x0200B9C4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r3, #0
	adds r5, r1, #0
	adds r1, r6, #0
	adds r4, r2, #0
	bl FUN_02007688
	adds r7, r0, #0
	beq _0200B9EA
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl FUN_0200B9F8
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_0200770C
	b _0200B9F4
_0200B9EA:
	movs r0, #4
	adds r1, r6, #0
	bl FUN_02026354
	adds r4, r0, #0
_0200B9F4:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200B9C4

	thumb_func_start FUN_0200B9F8
FUN_0200B9F8: @ 0x0200B9F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r2, #0
	add r2, sp, #0x14
	adds r5, r3, #0
	str r2, [sp]
	movs r2, #0
	movs r3, #4
	adds r7, r0, #0
	str r1, [sp, #4]
	bl FUN_0200782C
	add r0, sp, #0xc
	ldrh r0, [r0, #8]
	cmp r4, r0
	bhs _0200BAB6
	add r0, sp, #0xc
	lsls r2, r4, #3
	str r0, [sp]
	ldr r1, [sp, #4]
	adds r0, r7, #0
	adds r2, r2, #4
	movs r3, #8
	bl FUN_0200782C
	add r0, sp, #0xc
	ldrh r2, [r0, #0xa]
	ldr r0, _0200BAC8 @ =0x000002FD
	adds r1, r4, #1
	muls r0, r2, r0
	muls r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r1, #0x10
	orrs r1, r0
	ldr r0, [sp, #0xc]
	eors r0, r1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	eors r0, r1
	adds r1, r5, #0
	str r0, [sp, #0x10]
	bl FUN_02026354
	str r0, [sp, #8]
	cmp r0, #0
	beq _0200BAB0
	ldr r0, [sp, #0x10]
	lsls r6, r0, #1
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201AACC
	adds r5, r0, #0
	beq _0200BAB0
	str r5, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #0xc]
	adds r0, r7, #0
	adds r3, r6, #0
	bl FUN_0200782C
	ldr r2, _0200BACC @ =0x00091BD3
	adds r3, r4, #1
	muls r2, r3, r2
	lsls r2, r2, #0x10
	ldr r0, [sp, #0x10]
	lsrs r3, r2, #0x10
	adds r1, r5, #0
	subs r2, r0, #1
	cmp r0, #0
	beq _0200BAA0
	ldr r0, _0200BAD0 @ =0x0000493D
_0200BA8A:
	ldrh r4, [r1]
	eors r4, r3
	strh r4, [r1]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	adds r4, r2, #0
	adds r1, r1, #2
	lsrs r3, r3, #0x10
	subs r2, r2, #1
	cmp r4, #0
	bne _0200BA8A
_0200BAA0:
	ldr r0, [sp, #8]
	ldr r2, [sp, #0x10]
	adds r1, r5, #0
	bl FUN_02026A04
	adds r0, r5, #0
	bl FUN_0201AB0C
_0200BAB0:
	ldr r0, [sp, #8]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200BAB6:
	bl FUN_0202551C
	movs r0, #4
	adds r1, r5, #0
	bl FUN_02026354
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200BAC8: .4byte 0x000002FD
_0200BACC: .4byte 0x00091BD3
_0200BAD0: .4byte 0x0000493D
	thumb_func_end FUN_0200B9F8

	thumb_func_start FUN_0200BAD4
FUN_0200BAD4: @ 0x0200BAD4
	ldrh r0, [r0]
	bx lr
	thumb_func_end FUN_0200BAD4

	thumb_func_start FUN_0200BAD8
FUN_0200BAD8: @ 0x0200BAD8
	push {r3, lr}
	sub sp, #8
	adds r3, r0, #0
	movs r0, #4
	adds r2, r1, #0
	str r0, [sp]
	adds r1, r3, #0
	add r0, sp, #4
	movs r3, #0
	bl FUN_02007560
	add r0, sp, #4
	ldrh r0, [r0]
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200BAD8

	thumb_func_start FUN_0200BAF8
FUN_0200BAF8: @ 0x0200BAF8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r3, #0
	movs r1, #0xc
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_0201AACC
	adds r4, r0, #0
	beq _0200BB40
	cmp r5, #0
	bne _0200BB2C
	ldr r2, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_0200B610
	str r0, [r4, #8]
	cmp r0, #0
	bne _0200BB36
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200BB2C:
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_02007688
	str r0, [r4, #8]
_0200BB36:
	strh r5, [r4]
	strh r6, [r4, #4]
	ldr r0, [sp]
	strh r7, [r4, #6]
	strh r0, [r4, #2]
_0200BB40:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200BAF8

	thumb_func_start FUN_0200BB44
FUN_0200BB44: @ 0x0200BB44
	push {r4, lr}
	adds r4, r0, #0
	beq _0200BB6A
	ldrh r0, [r4]
	cmp r0, #0
	beq _0200BB56
	cmp r0, #1
	beq _0200BB5E
	b _0200BB64
_0200BB56:
	ldr r0, [r4, #8]
	bl FUN_0200B618
	b _0200BB64
_0200BB5E:
	ldr r0, [r4, #8]
	bl FUN_0200770C
_0200BB64:
	adds r0, r4, #0
	bl FUN_0201AB0C
_0200BB6A:
	pop {r4, pc}
	thumb_func_end FUN_0200BB44

	thumb_func_start FUN_0200BB6C
FUN_0200BB6C: @ 0x0200BB6C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrh r0, [r4]
	adds r3, r1, #0
	cmp r0, #0
	beq _0200BB82
	cmp r0, #1
	beq _0200BB8C
	add sp, #4
	pop {r3, r4, pc}
_0200BB82:
	ldr r0, [r4, #8]
	bl FUN_0200B760
	add sp, #4
	pop {r3, r4, pc}
_0200BB8C:
	str r2, [sp]
	adds r2, r3, #0
	ldrh r1, [r4, #6]
	ldrh r3, [r4, #2]
	ldr r0, [r4, #8]
	bl FUN_0200B8FC
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200BB6C

	thumb_func_start FUN_0200BBA0
FUN_0200BBA0: @ 0x0200BBA0
	push {r3, lr}
	adds r3, r0, #0
	ldrh r0, [r3]
	adds r2, r1, #0
	cmp r0, #0
	beq _0200BBB2
	cmp r0, #1
	beq _0200BBBC
	b _0200BBC8
_0200BBB2:
	ldrh r2, [r3, #2]
	ldr r0, [r3, #8]
	bl FUN_0200B810
	pop {r3, pc}
_0200BBBC:
	ldr r0, [r3, #8]
	ldrh r1, [r3, #6]
	ldrh r3, [r3, #2]
	bl FUN_0200B9F8
	pop {r3, pc}
_0200BBC8:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_0200BBA0

	thumb_func_start FUN_0200BBCC
FUN_0200BBCC: @ 0x0200BBCC
	push {r3, lr}
	adds r1, r0, #0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0200BBDC
	cmp r0, #1
	beq _0200BBE4
	b _0200BBEE
_0200BBDC:
	ldr r0, [r1, #8]
	bl FUN_0200BAD4
	pop {r3, pc}
_0200BBE4:
	ldrh r0, [r1, #4]
	ldrh r1, [r1, #6]
	bl FUN_0200BAD8
	pop {r3, pc}
_0200BBEE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200BBCC

	thumb_func_start FUN_0200BBF4
FUN_0200BBF4: @ 0x0200BBF4
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrh r0, [r4]
	adds r3, r1, #0
	cmp r0, #0
	beq _0200BC0A
	cmp r0, #1
	beq _0200BC14
	add sp, #4
	pop {r3, r4, pc}
_0200BC0A:
	ldr r0, [r4, #8]
	bl FUN_0200B620
	add sp, #4
	pop {r3, r4, pc}
_0200BC14:
	str r2, [sp]
	adds r2, r3, #0
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #6]
	ldrh r3, [r4, #2]
	bl FUN_0200B6A4
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200BBF4

	thumb_func_start FUN_0200BC28
FUN_0200BC28: @ 0x0200BC28
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r3, r1, #0
	adds r4, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xed
	bl FUN_0200BAF8
	adds r6, r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0200BBF4
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200BC28

	thumb_func_start FUN_0200BC4C
FUN_0200BC4C: @ 0x0200BC4C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #4]
	adds r5, r1, #0
	movs r0, #1
	ldr r1, [sp, #4]
	lsls r0, r0, #0xa
	adds r6, r2, #0
	str r3, [sp]
	bl FUN_02026354
	adds r4, r0, #0
	beq _0200BC96
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0200BBA0
	adds r5, r0, #0
	beq _0200BC90
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_0200CBBC
	ldr r1, [sp]
	adds r0, r4, #0
	bl FUN_0202642C
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_02026380
_0200BC90:
	adds r0, r4, #0
	bl FUN_02026380
_0200BC96:
	ldr r0, [sp, #4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200BC4C

	thumb_func_start FUN_0200BC9C
FUN_0200BC9C: @ 0x0200BC9C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	ldr r2, _0200BCD8 @ =0x000002EE
	movs r0, #1
	movs r1, #0x1b
	adds r3, r5, #0
	bl FUN_0200BAF8
	adds r4, r0, #0
	beq _0200BCD2
	movs r0, #0x10
	adds r1, r5, #0
	bl FUN_02026354
	adds r5, r0, #0
	beq _0200BCC8
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl FUN_0200BB6C
_0200BCC8:
	adds r0, r4, #0
	bl FUN_0200BB44
	adds r0, r5, #0
	pop {r4, r5, r6, pc}
_0200BCD2:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_0200BCD8: .4byte 0x000002EE
	thumb_func_end FUN_0200BC9C

	thumb_func_start FUN_0200BCDC
FUN_0200BCDC: @ 0x0200BCDC
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xed
	bl FUN_0200BAF8
	adds r5, r0, #0
	beq _0200BD02
	adds r1, r4, #0
	bl FUN_0200BBA0
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0200BB44
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_0200BD02:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200BCDC

	thumb_func_start FUN_0200BD08
FUN_0200BD08: @ 0x0200BD08
	ldr r3, _0200BD14 @ =FUN_0200BD18
	adds r2, r0, #0
	movs r0, #8
	movs r1, #0x20
	bx r3
	nop
_0200BD14: .4byte FUN_0200BD18
	thumb_func_end FUN_0200BD08

	thumb_func_start FUN_0200BD18
FUN_0200BD18: @ 0x0200BD18
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	bne _0200BD28
	bl FUN_0202551C
_0200BD28:
	ldr r0, [sp]
	cmp r0, #0
	bne _0200BD32
	bl FUN_0202551C
_0200BD32:
	ldr r0, [sp, #4]
	movs r1, #0x10
	bl FUN_0201AACC
	adds r4, r0, #0
	beq _0200BD98
	ldr r0, [sp, #4]
	str r7, [r4]
	str r0, [r4, #4]
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl FUN_02026354
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _0200BD98
	ldr r0, [sp, #4]
	lsls r1, r7, #3
	bl FUN_0201AACC
	str r0, [r4, #8]
	cmp r0, #0
	beq _0200BD98
	movs r6, #0
	cmp r7, #0
	bls _0200BD8E
	adds r5, r6, #0
_0200BD68:
	adds r0, r0, r5
	bl FUN_0200BDF4
	ldr r0, [sp]
	ldr r1, [sp, #4]
	bl FUN_02026354
	ldr r1, [r4, #8]
	adds r1, r1, r5
	str r0, [r1, #4]
	ldr r0, [r4, #8]
	adds r1, r0, r5
	ldr r1, [r1, #4]
	cmp r1, #0
	beq _0200BD8E
	adds r6, r6, #1
	adds r5, #8
	cmp r6, r7
	blo _0200BD68
_0200BD8E:
	cmp r6, r7
	bne _0200BD98
	add sp, #8
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200BD98:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200BD18

	thumb_func_start FUN_0200BDA0
FUN_0200BDA0: @ 0x0200BDA0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	cmp r0, #0
	bne _0200BDAE
	bl FUN_0202551C
_0200BDAE:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0200BDDC
	ldr r0, [r5]
	movs r6, #0
	cmp r0, #0
	bls _0200BDD6
	adds r4, r6, #0
_0200BDBE:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _0200BDD6
	bl FUN_02026380
	ldr r0, [r5]
	adds r6, r6, #1
	adds r4, #8
	cmp r6, r0
	blo _0200BDBE
_0200BDD6:
	ldr r0, [r5, #8]
	bl FUN_0201AB0C
_0200BDDC:
	ldr r0, [r5, #0xc]
	cmp r0, #0
	beq _0200BDE6
	bl FUN_02026380
_0200BDE6:
	movs r0, #0
	str r0, [r5]
	adds r0, r5, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200BDA0

	thumb_func_start FUN_0200BDF4
FUN_0200BDF4: @ 0x0200BDF4
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200BDF4

	thumb_func_start FUN_0200BDF8
FUN_0200BDF8: @ 0x0200BDF8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	cmp r6, r0
	blo _0200BE0C
	bl FUN_0202551C
_0200BE0C:
	ldr r0, [r5]
	cmp r6, r0
	bhs _0200BE3A
	cmp r4, #0
	beq _0200BE2C
	ldrb r0, [r4]
	ldr r3, [r5, #8]
	lsls r2, r6, #3
	strb r0, [r3, r2]
	ldrb r0, [r4, #1]
	adds r1, r3, r2
	strb r0, [r1, #1]
	ldrb r0, [r4, #2]
	strb r0, [r1, #2]
	ldrb r0, [r4, #3]
	strb r0, [r1, #3]
_0200BE2C:
	ldr r1, [r5, #8]
	lsls r0, r6, #3
	adds r0, r1, r0
	ldr r0, [r0, #4]
	adds r1, r7, #0
	bl FUN_020263D4
_0200BE3A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200BDF8

	thumb_func_start FUN_0200BE3C
FUN_0200BE3C: @ 0x0200BE3C
	push {r3, lr}
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200BE3C

	thumb_func_start FUN_0200BE48
FUN_0200BE48: @ 0x0200BE48
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r4, r1, #0
	bl FUN_02028F54
	adds r1, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_020269A0
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200BE48

	thumb_func_start FUN_0200BE6C
FUN_0200BE6C: @ 0x0200BE6C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r4, r1, #0
	bl FUN_0202A960
	bl FUN_0202A9A8
	adds r1, r0, #0
	ldr r0, [r5, #0xc]
	bl FUN_020269A0
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200BE6C

	thumb_func_start FUN_0200BE94
FUN_0200BE94: @ 0x0200BE94
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r6, r1, #0
	bl FUN_02028E9C
	adds r7, r0, #0
	ldr r2, _0200BEE4 @ =0x000001BD
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r4, r0, #0
	adds r0, r7, #0
	bl FUN_02028F94
	cmp r0, #0
	bne _0200BEC6
	ldr r2, [r5, #0xc]
	adds r0, r4, #0
	movs r1, #1
	bl FUN_0200BB6C
	b _0200BED0
_0200BEC6:
	ldr r2, [r5, #0xc]
	adds r0, r4, #0
	movs r1, #0
	bl FUN_0200BB6C
_0200BED0:
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r4, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200BEE4: .4byte 0x000001BD
	thumb_func_end FUN_0200BE94

	thumb_func_start FUN_0200BEE8
FUN_0200BEE8: @ 0x0200BEE8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xed
	bl FUN_0200BAF8
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	adds r7, r0, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200BEE8

	thumb_func_start FUN_0200BF1C
FUN_0200BF1C: @ 0x0200BF1C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	movs r1, #5
	movs r2, #0
	bl FUN_0206E640
	adds r2, r0, #0
	lsls r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	bl FUN_0200BEE8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200BF1C

	thumb_func_start FUN_0200BF3C
FUN_0200BF3C: @ 0x0200BF3C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	movs r1, #5
	movs r2, #0
	bl FUN_0206E640
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200BF58
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200BF3C

	thumb_func_start FUN_0200BF58
FUN_0200BF58: @ 0x0200BF58
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xee
	bl FUN_0200BAF8
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	adds r7, r0, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200BF58

	thumb_func_start FUN_0200BF8C
FUN_0200BF8C: @ 0x0200BF8C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r4, r1, #0
	ldr r2, [r5, #0xc]
	movs r1, #0x77
	bl FUN_0206E640
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200BF8C

	thumb_func_start FUN_0200BFAC
FUN_0200BFAC: @ 0x0200BFAC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r4, r1, #0
	ldr r2, [r5, #0xc]
	movs r1, #0x91
	bl FUN_0206E640
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200BFAC

	thumb_func_start FUN_0200BFCC
FUN_0200BFCC: @ 0x0200BFCC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x14]
	adds r4, r1, #0
	str r0, [sp]
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r0, [r5, #0xc]
	ldr r3, [sp, #0x10]
	bl FUN_02026464
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200BFCC

	thumb_func_start FUN_0200BFF0
FUN_0200BFF0: @ 0x0200BFF0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C024 @ =0x000002EE
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C022
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C022:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C024: .4byte 0x000002EE
	thumb_func_end FUN_0200BFF0

	thumb_func_start FUN_0200C028
FUN_0200C028: @ 0x0200C028
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	movs r2, #0x6a
	adds r4, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #2
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C05C
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C05C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C028

	thumb_func_start FUN_0200C060
FUN_0200C060: @ 0x0200C060
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	movs r2, #0x2d
	adds r4, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #4
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C094
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C094:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C060

	thumb_func_start FUN_0200C098
FUN_0200C098: @ 0x0200C098
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0x22
	bl FUN_0200BAF8
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	adds r7, r0, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C098

	thumb_func_start FUN_0200C0CC
FUN_0200C0CC: @ 0x0200C0CC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xde
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C0FE
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C0FE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C0CC

	thumb_func_start FUN_0200C100
FUN_0200C100: @ 0x0200C100
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xdf
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C132
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C132:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C100

	thumb_func_start FUN_0200C134
FUN_0200C134: @ 0x0200C134
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xe0
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C166
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C166:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C134

	thumb_func_start FUN_0200C168
FUN_0200C168: @ 0x0200C168
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xe2
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C19A
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C19A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C168

	thumb_func_start FUN_0200C19C
FUN_0200C19C: @ 0x0200C19C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C1D0 @ =0x000002DF
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C1CE
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C1CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C1D0: .4byte 0x000002DF
	thumb_func_end FUN_0200C19C

	thumb_func_start FUN_0200C1D4
FUN_0200C1D4: @ 0x0200C1D4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C208 @ =0x000001BB
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C206
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C206:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C208: .4byte 0x000001BB
	thumb_func_end FUN_0200C1D4

	thumb_func_start FUN_0200C20C
FUN_0200C20C: @ 0x0200C20C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0x2c
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C23E
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C23E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C20C

	thumb_func_start FUN_0200C240
FUN_0200C240: @ 0x0200C240
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C274 @ =0x0000027F
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C272
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C272:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C274: .4byte 0x0000027F
	thumb_func_end FUN_0200C240

	thumb_func_start FUN_0200C278
FUN_0200C278: @ 0x0200C278
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	movs r1, #0x1b
	adds r4, r2, #0
	adds r2, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	adds r2, #0xfc
	bl FUN_0200BAF8
	adds r6, r0, #0
	beq _0200C2D2
	cmp r4, #0
	beq _0200C29E
	bl FUN_0200BBCC
	cmp r4, r0
	blo _0200C2B6
_0200C29E:
	adds r0, r6, #0
	bl FUN_0200BB44
	movs r1, #0x1b
	adds r2, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	adds r2, #0xfd
	bl FUN_0200BAF8
	adds r6, r0, #0
	movs r4, #2
_0200C2B6:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
_0200C2D2:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C278

	thumb_func_start FUN_0200C2D4
FUN_0200C2D4: @ 0x0200C2D4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C308 @ =0x000002DA
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C306
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C306:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C308: .4byte 0x000002DA
	thumb_func_end FUN_0200C2D4

	thumb_func_start FUN_0200C30C
FUN_0200C30C: @ 0x0200C30C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C340 @ =0x000002DB
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C33E
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C33E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C340: .4byte 0x000002DB
	thumb_func_end FUN_0200C30C

	thumb_func_start FUN_0200C344
FUN_0200C344: @ 0x0200C344
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r6, r1, #0
	ldr r2, _0200C378 @ =0x000002DA
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C376
	ldrb r1, [r4, #1]
	ldr r2, [r5, #0xc]
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C376:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C378: .4byte 0x000002DA
	thumb_func_end FUN_0200C344

	thumb_func_start FUN_0200C37C
FUN_0200C37C: @ 0x0200C37C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C3B0 @ =0x000002D9
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C3AE
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C3AE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C3B0: .4byte 0x000002D9
	thumb_func_end FUN_0200C37C

	thumb_func_start FUN_0200C3B4
FUN_0200C3B4: @ 0x0200C3B4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0x1b
	adds r6, r2, #0
	ldr r3, [r5, #4]
	movs r0, #1
	adds r2, r1, #0
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C3E6
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C3E6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C3B4

	thumb_func_start FUN_0200C3E8
FUN_0200C3E8: @ 0x0200C3E8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	adds r2, #0x14
	adds r4, r1, #0
	adds r1, r2, #0
	bl FUN_020269A0
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200C3E8

	thumb_func_start FUN_0200C408
FUN_0200C408: @ 0x0200C408
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C43C @ =0x000002E1
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C43A
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C43A:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C43C: .4byte 0x000002E1
	thumb_func_end FUN_0200C408

	thumb_func_start FUN_0200C440
FUN_0200C440: @ 0x0200C440
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r6, r1, #0
	adds r4, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0x28
	bl FUN_0200BAF8
	adds r7, r0, #0
	cmp r4, #0
	beq _0200C460
	cmp r4, #1
	beq _0200C46A
	b _0200C474
_0200C460:
	ldr r2, [r5, #0xc]
	movs r1, #0x37
	bl FUN_0200BB6C
	b _0200C47A
_0200C46A:
	ldr r2, [r5, #0xc]
	movs r1, #0x38
	bl FUN_0200BB6C
	b _0200C47A
_0200C474:
	ldr r0, [r5, #0xc]
	bl FUN_020263AC
_0200C47A:
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C440

	thumb_func_start FUN_0200C490
FUN_0200C490: @ 0x0200C490
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r4, r1, #0
	ldr r2, [r5, #0xc]
	adds r1, r3, #0
	bl FUN_02073F00
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200C490

	thumb_func_start FUN_0200C4B0
FUN_0200C4B0: @ 0x0200C4B0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C4E4 @ =0x0000031E
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C4E2
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C4E2:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C4E4: .4byte 0x0000031E
	thumb_func_end FUN_0200C4B0

	thumb_func_start FUN_0200C4E8
FUN_0200C4E8: @ 0x0200C4E8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, r2, #0
	adds r6, r1, #0
	adds r4, r3, #0
	bl FUN_020916B4
	adds r2, r0, #0
	beq _0200C526
	cmp r4, #0
	beq _0200C526
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C526
	ldr r2, [r5, #0xc]
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C526:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C4E8

	thumb_func_start FUN_0200C528
FUN_0200C528: @ 0x0200C528
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r5, #0xc]
	adds r0, r2, #0
	bl FUN_02015B1C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200C528

	thumb_func_start FUN_0200C544
FUN_0200C544: @ 0x0200C544
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xf
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C576
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C576:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C544

	thumb_func_start FUN_0200C578
FUN_0200C578: @ 0x0200C578
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0x10
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C5AA
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C5AA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C578

	thumb_func_start FUN_0200C5AC
FUN_0200C5AC: @ 0x0200C5AC
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	adds r5, r0, #0
	adds r0, r4, #0
	str r1, [sp]
	bl FUN_02017FAC
	adds r6, r0, #0
	adds r0, r4, #0
	bl FUN_02017FCC
	adds r4, r0, #0
	ldr r2, _0200C64C @ =_020F5C1C
	lsls r3, r6, #1
	ldrh r2, [r2, r3]
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C648
	bl FUN_0200BBCC
	cmp r4, r0
	bhs _0200C606
	cmp r6, #0
	bne _0200C5E8
	cmp r4, #0
	beq _0200C606
_0200C5E8:
	ldr r2, [r5, #0xc]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r1, [sp]
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
_0200C606:
	adds r0, r7, #0
	bl FUN_0200BB44
	cmp r6, #0
	bne _0200C61A
	cmp r4, #0
	bne _0200C61A
	ldr r2, _0200C650 @ =0x00000119
	movs r4, #0xc
	b _0200C620
_0200C61A:
	movs r2, #0x46
	lsls r2, r2, #2
	movs r4, #2
_0200C620:
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r6, r0, #0
	beq _0200C648
	ldr r2, [r5, #0xc]
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r1, [sp]
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
_0200C648:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200C64C: .4byte _020F5C1C
_0200C650: .4byte 0x00000119
	thumb_func_end FUN_0200C5AC

	thumb_func_start FUN_0200C654
FUN_0200C654: @ 0x0200C654
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xd8
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C686
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C686:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C654

	thumb_func_start FUN_0200C688
FUN_0200C688: @ 0x0200C688
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xd9
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C6BA
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C6BA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C688

	thumb_func_start FUN_0200C6BC
FUN_0200C6BC: @ 0x0200C6BC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r4, r1, #0
	adds r6, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xda
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C6EE
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C6EE:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C6BC

	thumb_func_start FUN_0200C6F0
FUN_0200C6F0: @ 0x0200C6F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #8]
	adds r5, r2, #0
	adds r0, r1, #0
	str r3, [sp, #0xc]
	bl FUN_0202C854
	adds r6, r0, #0
	adds r1, r5, #0
	bl FUN_0202C830
	str r0, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0202C83C
	adds r7, r0, #0
	movs r0, #0x40
	movs r1, #4
	bl FUN_02026354
	adds r4, r0, #0
	ldr r2, [sp, #0x28]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0202C7E0
	adds r1, r0, #0
	adds r0, r4, #0
	bl FUN_020269A0
	movs r0, #1
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	ldr r3, [sp, #0x10]
	adds r2, r4, #0
	str r7, [sp, #4]
	bl FUN_0200BE3C
	adds r0, r4, #0
	bl FUN_02026380
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200C6F0

	thumb_func_start FUN_0200C74C
FUN_0200C74C: @ 0x0200C74C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C780 @ =0x000002F3
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C77E
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C77E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C780: .4byte 0x000002F3
	thumb_func_end FUN_0200C74C

	thumb_func_start FUN_0200C784
FUN_0200C784: @ 0x0200C784
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C7B8 @ =0x000002F1
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C7B6
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C7B6:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C7B8: .4byte 0x000002F1
	thumb_func_end FUN_0200C784

	thumb_func_start FUN_0200C7BC
FUN_0200C7BC: @ 0x0200C7BC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	movs r2, #0xbd
	adds r4, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #2
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C7F0
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C7F0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C7BC

	thumb_func_start FUN_0200C7F4
FUN_0200C7F4: @ 0x0200C7F4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C828 @ =0x00000303
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C826
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C826:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C828: .4byte 0x00000303
	thumb_func_end FUN_0200C7F4

	thumb_func_start FUN_0200C82C
FUN_0200C82C: @ 0x0200C82C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C860 @ =0x000002FF
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C85E
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C85E:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C860: .4byte 0x000002FF
	thumb_func_end FUN_0200C82C

	thumb_func_start FUN_0200C864
FUN_0200C864: @ 0x0200C864
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	movs r2, #3
	adds r4, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #8
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C898
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C898:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C864

	thumb_func_start FUN_0200C89C
FUN_0200C89C: @ 0x0200C89C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C8D0 @ =0x00000302
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C8CE
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C8CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C8D0: .4byte 0x00000302
	thumb_func_end FUN_0200C89C

	thumb_func_start FUN_0200C8D4
FUN_0200C8D4: @ 0x0200C8D4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	adds r4, r1, #0
	ldr r2, _0200C908 @ =0x00000301
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C906
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C906:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C908: .4byte 0x00000301
	thumb_func_end FUN_0200C8D4

	thumb_func_start FUN_0200C90C
FUN_0200C90C: @ 0x0200C90C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	movs r2, #0xc1
	adds r4, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #2
	bl FUN_0200BAF8
	adds r7, r0, #0
	beq _0200C940
	ldr r2, [r5, #0xc]
	adds r1, r6, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r7, #0
	bl FUN_0200BB44
_0200C940:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200C90C

	thumb_func_start FUN_0200C944
FUN_0200C944: @ 0x0200C944
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r7, r1, #0
	ldr r2, _0200C980 @ =0x00000139
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #0xb
	blo _0200C962
	bl FUN_0202551C
_0200C962:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200C980: .4byte 0x00000139
	thumb_func_end FUN_0200C944

	thumb_func_start FUN_0200C984
FUN_0200C984: @ 0x0200C984
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r7, r1, #0
	ldr r2, _0200C9C4 @ =0x00000139
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #5
	blo _0200C9A2
	bl FUN_0202551C
_0200C9A2:
	adds r4, #0xf
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200C9C4: .4byte 0x00000139
	thumb_func_end FUN_0200C984

	thumb_func_start FUN_0200C9C8
FUN_0200C9C8: @ 0x0200C9C8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r7, r1, #0
	ldr r2, _0200CA08 @ =0x00000139
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #0xa
	blo _0200C9E6
	bl FUN_0202551C
_0200C9E6:
	adds r4, #0x14
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CA08: .4byte 0x00000139
	thumb_func_end FUN_0200C9C8

	thumb_func_start FUN_0200CA0C
FUN_0200CA0C: @ 0x0200CA0C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r7, r1, #0
	adds r4, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0x15
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #7
	blo _0200CA2E
	blo _0200CA2C
	bl FUN_0202551C
_0200CA2C:
	movs r4, #0
_0200CA2E:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #7
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200CA0C

	thumb_func_start FUN_0200CA4C
FUN_0200CA4C: @ 0x0200CA4C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r7, r1, #0
	ldr r2, _0200CA90 @ =0x000001AE
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #0x18
	blo _0200CA6E
	blo _0200CA6C
	bl FUN_0202551C
_0200CA6C:
	movs r4, #0
_0200CA6E:
	adds r4, #0xe
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CA90: .4byte 0x000001AE
	thumb_func_end FUN_0200CA4C

	thumb_func_start FUN_0200CA94
FUN_0200CA94: @ 0x0200CA94
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	movs r2, #0x6b
	adds r7, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	movs r1, #0x1b
	lsls r2, r2, #2
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #0xc
	blo _0200CAB8
	blo _0200CAB6
	bl FUN_0202551C
_0200CAB6:
	movs r4, #0
_0200CAB8:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200CA94

	thumb_func_start FUN_0200CAD8
FUN_0200CAD8: @ 0x0200CAD8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	movs r1, #0x1b
	adds r4, r2, #0
	adds r2, r1, #0
	ldr r3, [r5, #4]
	movs r0, #1
	adds r2, #0xf7
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #0x1b
	blo _0200CAFC
	blo _0200CAFA
	bl FUN_0202551C
_0200CAFA:
	movs r4, #0
_0200CAFC:
	adds r4, #0x5b
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200CAD8

	thumb_func_start FUN_0200CB1C
FUN_0200CB1C: @ 0x0200CB1C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r7, r1, #0
	adds r4, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xef
	bl FUN_0200BAF8
	adds r6, r0, #0
	beq _0200CB5A
	cmp r4, #1
	blo _0200CB3C
	cmp r4, #0xc
	bls _0200CB3E
_0200CB3C:
	movs r4, #1
_0200CB3E:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	subs r1, r4, #1
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
_0200CB5A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200CB1C

	thumb_func_start FUN_0200CB5C
FUN_0200CB5C: @ 0x0200CB5C
	ldr r2, [r0, #8]
	lsls r0, r1, #3
	adds r0, r2, r0
	ldr r3, _0200CB6C @ =FUN_02026C04
	ldr r0, [r0, #4]
	movs r1, #0
	bx r3
	nop
_0200CB6C: .4byte FUN_02026C04
	thumb_func_end FUN_0200CB5C

	thumb_func_start FUN_0200CB70
FUN_0200CB70: @ 0x0200CB70
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r3, [r5, #4]
	adds r7, r1, #0
	adds r4, r2, #0
	movs r0, #1
	movs r1, #0x1b
	movs r2, #0xbf
	bl FUN_0200BAF8
	adds r6, r0, #0
	cmp r4, #6
	bls _0200CB8E
	bl FUN_0202551C
_0200CB8E:
	cmp r6, #0
	beq _0200CBB8
	cmp r4, #0
	bne _0200CB9A
	movs r4, #0x7a
	b _0200CB9C
_0200CB9A:
	adds r4, #0x73
_0200CB9C:
	ldr r2, [r5, #0xc]
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200BB6C
	ldr r2, [r5, #0xc]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #0
	bl FUN_0200BDF8
	adds r0, r6, #0
	bl FUN_0200BB44
_0200CBB8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200CB70

	thumb_func_start FUN_0200CBBC
FUN_0200CBBC: @ 0x0200CBBC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	adds r0, r2, #0
	bl FUN_02026AA4
	adds r5, r0, #0
	adds r0, r6, #0
	bl FUN_020263AC
	ldrh r1, [r5]
	ldr r0, _0200CC48 @ =0x0000FFFF
	cmp r1, r0
	beq _0200CC44
_0200CBD8:
	ldr r0, _0200CC4C @ =0x0000FFFE
	cmp r1, r0
	bne _0200CC32
	adds r0, r5, #0
	bl FUN_0201FB5C
	cmp r0, #0
	beq _0200CC14
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0201FB90
	adds r4, r0, #0
	ldr r0, [r7]
	cmp r4, r0
	blo _0200CBFC
	bl FUN_0202551C
_0200CBFC:
	ldr r2, [r7, #8]
	lsls r1, r4, #3
	adds r1, r2, r1
	ldr r1, [r1, #4]
	adds r0, r6, #0
	bl FUN_02026B88
	adds r0, r5, #0
	bl FUN_0201FB1C
	adds r5, r0, #0
	b _0200CC3C
_0200CC14:
	adds r0, r5, #0
	adds r4, r5, #0
	bl FUN_0201FB1C
	adds r5, r0, #0
	cmp r4, r5
	bhs _0200CC3C
_0200CC22:
	ldrh r1, [r4]
	adds r0, r6, #0
	adds r4, r4, #2
	bl FUN_02026B28
	cmp r4, r5
	blo _0200CC22
	b _0200CC3C
_0200CC32:
	ldrh r1, [r5]
	adds r0, r6, #0
	adds r5, r5, #2
	bl FUN_02026B28
_0200CC3C:
	ldrh r1, [r5]
	ldr r0, _0200CC48 @ =0x0000FFFF
	cmp r1, r0
	bne _0200CBD8
_0200CC44:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CC48: .4byte 0x0000FFFF
_0200CC4C: .4byte 0x0000FFFE
	thumb_func_end FUN_0200CBBC

	thumb_func_start FUN_0200CC50
FUN_0200CC50: @ 0x0200CC50
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	movs r6, #0
	cmp r0, #0
	bls _0200CC72
	adds r4, r6, #0
_0200CC5E:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	ldr r0, [r0, #4]
	bl FUN_020263AC
	ldr r0, [r5]
	adds r6, r6, #1
	adds r4, #8
	cmp r6, r0
	blo _0200CC5E
_0200CC72:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200CC50

	thumb_func_start FUN_0200CC74
FUN_0200CC74: @ 0x0200CC74
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r4, r3, #0
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r4, #0
	movs r1, #0x2c
	str r2, [sp, #4]
	bl FUN_0201AA8C
	str r0, [sp, #8]
	cmp r0, #0
	beq _0200CD8E
	ldr r3, [sp, #8]
	movs r0, #0x10
	movs r1, #5
	movs r2, #1
	adds r3, r3, #4
	str r4, [sp]
	bl FUN_020079BC
	ldr r1, [sp, #8]
	movs r3, #0
	str r0, [r1]
	adds r0, r1, #0
	ldr r0, [r0, #4]
	ldr r4, [r0, #0x14]
	ldr r0, [r0, #0x10]
	cmp r0, #0
	bls _0200CD88
	ldr r0, [sp, #4]
	ldr r1, [sp, #4]
	lsls r0, r0, #4
	orrs r1, r0
	str r1, [sp, #0xc]
	adds r1, r0, #0
	orrs r1, r5
	str r1, [sp, #0x10]
	orrs r0, r6
	str r0, [sp, #0x14]
	ldr r1, [sp, #4]
	lsls r0, r5, #4
	orrs r1, r0
	str r1, [sp, #0x18]
	adds r1, r5, #0
	orrs r1, r0
	str r1, [sp, #0x1c]
	orrs r0, r6
	lsls r2, r6, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #4]
	adds r7, r2, #0
	orrs r7, r1
	adds r1, r2, #0
	orrs r1, r5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	orrs r2, r6
	str r1, [sp, #0x28]
	lsls r1, r7, #0x18
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #0x18]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r0, #0x18
	mov ip, r2
	str r1, [sp, #0x24]
	lsrs r6, r0, #0x18
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0xc]
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
_0200CD18:
	ldrb r5, [r4, r3]
	cmp r5, #0x12
	bgt _0200CD40
	bge _0200CD66
	cmp r5, #0x10
	bgt _0200CD3A
	bge _0200CD5E
	cmp r5, #2
	bgt _0200CD7C
	cmp r5, #0
	blt _0200CD7C
	beq _0200CD52
	cmp r5, #1
	beq _0200CD56
	cmp r5, #2
	beq _0200CD5A
	b _0200CD7C
_0200CD3A:
	cmp r5, #0x11
	beq _0200CD62
	b _0200CD7C
_0200CD40:
	cmp r5, #0x21
	bgt _0200CD4C
	bge _0200CD72
	cmp r5, #0x20
	beq _0200CD6C
	b _0200CD7C
_0200CD4C:
	cmp r5, #0x22
	beq _0200CD78
	b _0200CD7C
_0200CD52:
	strb r2, [r4, r3]
	b _0200CD7C
_0200CD56:
	strb r1, [r4, r3]
	b _0200CD7C
_0200CD5A:
	strb r0, [r4, r3]
	b _0200CD7C
_0200CD5E:
	strb r6, [r4, r3]
	b _0200CD7C
_0200CD62:
	strb r7, [r4, r3]
	b _0200CD7C
_0200CD66:
	ldr r5, [sp, #0x20]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD6C:
	ldr r5, [sp, #0x24]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD72:
	ldr r5, [sp, #0x28]
	strb r5, [r4, r3]
	b _0200CD7C
_0200CD78:
	mov r5, ip
	strb r5, [r4, r3]
_0200CD7C:
	ldr r5, [sp, #8]
	adds r3, r3, #1
	ldr r5, [r5, #4]
	ldr r5, [r5, #0x10]
	cmp r3, r5
	blo _0200CD18
_0200CD88:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	str r1, [r0, #0x28]
_0200CD8E:
	ldr r0, [sp, #8]
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200CC74

	thumb_func_start FUN_0200CD94
FUN_0200CD94: @ 0x0200CD94
	push {r4, lr}
	adds r4, r0, #0
	beq _0200CDAA
	ldr r0, [r4]
	cmp r0, #0
	beq _0200CDA4
	bl FUN_0201AB0C
_0200CDA4:
	adds r0, r4, #0
	bl FUN_0201AB0C
_0200CDAA:
	pop {r4, pc}
	thumb_func_end FUN_0200CD94

	thumb_func_start FUN_0200CDAC
FUN_0200CDAC: @ 0x0200CDAC
	push {r3, r4, r5, lr}
	sub sp, #0x18
	adds r4, r0, #0
	ldr r0, _0200CDE8 @ =_020F5C26
	lsls r5, r1, #2
	ldrh r1, [r0, r5]
	lsls r3, r3, #0x10
	movs r0, #8
	str r1, [sp]
	str r0, [sp, #4]
	lsrs r3, r3, #0x10
	str r3, [sp, #8]
	ldr r3, [sp, #0x28]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0xc]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r1, [r4, #4]
	adds r0, r2, #0
	ldr r2, [r1, #0x14]
	ldr r1, _0200CDEC @ =_020F5C24
	ldrh r1, [r1, r5]
	adds r1, r2, r1
	movs r2, #0
	adds r3, r2, #0
	bl FUN_0201D9D8
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200CDE8: .4byte _020F5C26
_0200CDEC: .4byte _020F5C24
	thumb_func_end FUN_0200CDAC

	thumb_func_start FUN_0200CDF0
FUN_0200CDF0: @ 0x0200CDF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r6, r0, #0
	ldr r0, [sp, #0x30]
	adds r4, r2, #0
	str r0, [sp, #0x30]
	adds r0, r6, #0
	adds r2, r3, #0
	adds r0, #8
	adds r3, r4, #0
	ldr r5, [sp, #0x34]
	ldr r7, [sp, #0x38]
	bl PrintDecimalInteger
	ldrh r1, [r6, #8]
	ldr r0, _0200CE78 @ =0x0000FFFF
	cmp r1, r0
	beq _0200CE72
	lsls r0, r7, #0x10
	adds r4, r6, #0
	lsrs r7, r0, #0x10
_0200CE1A:
	ldrh r2, [r4, #8]
	cmp r2, #0xa2
	blo _0200CE4E
	cmp r2, #0xab
	bhi _0200CE4E
	movs r0, #8
	str r0, [sp]
	str r0, [sp, #4]
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	movs r0, #8
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r1, [r6, #4]
	subs r2, #0xa2
	ldr r1, [r1, #0x14]
	lsls r2, r2, #5
	adds r1, r1, r2
	movs r2, #0
	ldr r0, [sp, #0x30]
	adds r3, r2, #0
	bl FUN_0201D9D8
	b _0200CE66
_0200CE4E:
	movs r0, #8
	str r0, [sp]
	str r0, [sp, #4]
	ldr r1, [r6, #0x28]
	lsls r2, r5, #0x10
	lsls r1, r1, #0x18
	ldr r0, [sp, #0x30]
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x10
	adds r3, r7, #0
	bl FUN_0201DA74
_0200CE66:
	adds r4, r4, #2
	ldrh r1, [r4, #8]
	ldr r0, _0200CE78 @ =0x0000FFFF
	adds r5, #8
	cmp r1, r0
	bne _0200CE1A
_0200CE72:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CE78: .4byte 0x0000FFFF
	thumb_func_end FUN_0200CDF0

	thumb_func_start FUN_0200CE7C
FUN_0200CE7C: @ 0x0200CE7C
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r2, #0
	ldr r2, [sp, #0x2c]
	adds r6, r3, #0
	str r2, [sp]
	ldr r2, [sp, #0x24]
	ldr r3, [sp, #0x28]
	adds r5, r0, #0
	bl FUN_0200CDAC
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x28]
	adds r1, r4, #0
	adds r0, #0x10
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	adds r2, r6, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	bl FUN_0200CDF0
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_0200CE7C

	thumb_func_start FUN_0200CEB0
FUN_0200CEB0: @ 0x0200CEB0
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r4, r2, #0
	ldr r2, [r7, #0x28]
	ldr r6, [sp, #0x18]
	lsls r0, r2, #4
	orrs r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r7, #0
	adds r2, r3, #0
	adds r0, #8
	adds r3, r4, #0
	bl PrintDecimalInteger
	ldrh r1, [r7, #8]
	ldr r0, _0200CF14 @ =0x0000FFFF
	cmp r1, r0
	beq _0200CF10
	adds r4, r7, #0
	movs r5, #0
_0200CEDC:
	ldrh r2, [r4, #8]
	cmp r2, #0xa2
	blo _0200CEFA
	cmp r2, #0xab
	bhi _0200CEFA
	ldr r0, [r7, #4]
	subs r2, #0xa2
	ldr r1, [r0, #0x14]
	lsls r0, r2, #5
	adds r0, r1, r0
	adds r1, r6, r5
	movs r2, #0x20
	blx FUN_020D4808
	b _0200CF04
_0200CEFA:
	ldr r1, [sp]
	adds r0, r6, r5
	movs r2, #0x20
	blx FUN_020D4994
_0200CF04:
	adds r4, r4, #2
	ldrh r1, [r4, #8]
	ldr r0, _0200CF14 @ =0x0000FFFF
	adds r5, #0x20
	cmp r1, r0
	bne _0200CEDC
_0200CF10:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200CF14: .4byte 0x0000FFFF
	thumb_func_end FUN_0200CEB0

	thumb_func_start FUN_0200CF18
FUN_0200CF18: @ 0x0200CF18
	push {r4, lr}
	movs r1, #0x4e
	lsls r1, r1, #2
	adds r4, r0, #0
	bl FUN_0201AA8C
	cmp r0, #0
	bne _0200CF2C
	movs r0, #0
	pop {r4, pc}
_0200CF2C:
	str r4, [r0]
	movs r1, #0
	str r1, [r0, #4]
	movs r1, #1
	str r1, [r0, #8]
	pop {r4, pc}
	thumb_func_end FUN_0200CF18

	thumb_func_start FUN_0200CF38
FUN_0200CF38: @ 0x0200CF38
	push {r4, lr}
	adds r4, r0, #0
	bne _0200CF42
	bl FUN_0202551C
_0200CF42:
	ldr r0, [r4]
	movs r1, #0x58
	bl FUN_0201AA8C
	cmp r0, #0
	bne _0200CF52
	movs r0, #0
	pop {r4, pc}
_0200CF52:
	ldr r1, [r4, #4]
	movs r2, #0
	adds r1, r1, #1
	str r1, [r4, #4]
	adds r3, r0, #0
	adds r1, r2, #0
_0200CF5E:
	adds r2, r2, #1
	str r1, [r3, #0xc]
	adds r3, r3, #4
	cmp r2, #6
	blt _0200CF5E
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200CF38

	thumb_func_start FUN_0200CF6C
FUN_0200CF6C: @ 0x0200CF6C
	adds r0, #0x10
	bx lr
	thumb_func_end FUN_0200CF6C

	thumb_func_start FUN_0200CF70
FUN_0200CF70: @ 0x0200CF70
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r5, #0
	bne _0200CF84
	bl FUN_0202551C
_0200CF84:
	cmp r5, #0
	bne _0200CF8E
	add sp, #0x24
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200CF8E:
	ldr r0, [r6]
	str r0, [sp, #0x14]
	ldr r0, [r6, #4]
	str r0, [sp, #0x18]
	ldr r0, [r6, #8]
	str r0, [sp, #0x1c]
	ldr r0, [r5]
	str r0, [sp, #0x20]
	ldr r1, [r6, #0xc]
	ldr r2, [r6, #0x10]
	add r0, sp, #0x14
	bl FUN_020215C0
	ldr r1, [r5]
	adds r0, r7, #0
	bl FUN_02022588
	blx FUN_020B78D4
	ldr r0, [r5, #8]
	cmp r0, #1
	bne _0200CFDA
	ldr r0, [r4, #0x10]
	str r0, [sp]
	ldr r0, [r4, #0x14]
	str r0, [sp, #4]
	ldr r0, [r4, #0x18]
	str r0, [sp, #8]
	ldr r0, [r4, #0x1c]
	str r0, [sp, #0xc]
	ldr r0, [r5]
	str r0, [sp, #0x10]
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl FUN_0200B150
_0200CFDA:
	ldr r1, [r5]
	movs r0, #0x20
	bl FUN_02020654
	str r0, [r5, #0xc]
	bl FUN_020216C8
	bl FUN_02022638
	movs r0, #1
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200CF70

	thumb_func_start FUN_0200CFF4
FUN_0200CFF4: @ 0x0200CFF4
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	cmp r3, #0
	beq _0200D002
	cmp r4, #0
	bne _0200D006
_0200D002:
	movs r0, #0
	pop {r4, pc}
_0200D006:
	adds r0, r2, #0
	adds r1, r3, #0
	ldr r2, [r3]
	adds r1, #0x10
	bl FUN_02009F40
	str r0, [r4]
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_0200CFF4

	thumb_func_start FUN_0200D018
FUN_0200D018: @ 0x0200D018
	ldr r3, _0200D01C @ =FUN_02024758
	bx r3
	.align 2, 0
_0200D01C: .4byte FUN_02024758
	thumb_func_end FUN_0200D018

	thumb_func_start FUN_0200D020
FUN_0200D020: @ 0x0200D020
	push {r4, lr}
	adds r4, r0, #0
	bne _0200D02A
	bl FUN_0202551C
_0200D02A:
	ldr r0, [r4]
	bl FUN_0202457C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D020

	thumb_func_start FUN_0200D034
FUN_0200D034: @ 0x0200D034
	ldr r3, _0200D038 @ =FUN_0200B224
	bx r3
	.align 2, 0
_0200D038: .4byte FUN_0200B224
	thumb_func_end FUN_0200D034

	thumb_func_start FUN_0200D03C
FUN_0200D03C: @ 0x0200D03C
	ldr r3, _0200D040 @ =FUN_02020674
	bx r3
	.align 2, 0
_0200D040: .4byte FUN_02020674
	thumb_func_end FUN_0200D03C

	thumb_func_start FUN_0200D044
FUN_0200D044: @ 0x0200D044
	ldr r3, _0200D04C @ =FUN_02024504
	ldr r0, [r0]
	bx r3
	nop
_0200D04C: .4byte FUN_02024504
	thumb_func_end FUN_0200D044

	thumb_func_start FUN_0200D050
FUN_0200D050: @ 0x0200D050
	push {r3, lr}
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _0200D05C
	bl FUN_02009F24
_0200D05C:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200D050

	thumb_func_start FUN_0200D060
FUN_0200D060: @ 0x0200D060
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x54]
	movs r4, #0
	cmp r0, #0
	ble _0200D080
_0200D06C:
	ldr r0, [r5, #8]
	adds r1, r4, #0
	bl FUN_0200A900
	bl FUN_0200A954
	ldr r0, [r5, #0x54]
	adds r4, r4, #1
	cmp r4, r0
	blt _0200D06C
_0200D080:
	ldr r0, [r5, #8]
	bl FUN_0201AB0C
	ldr r0, [r5, #0x24]
	bl FUN_0200AED4
	ldr r0, [r5, #0x28]
	bl FUN_0200B0CC
	ldr r0, [r5, #0x54]
	movs r6, #0
	cmp r0, #0
	ble _0200D0B2
	adds r4, r5, #0
_0200D09C:
	ldr r0, [r4, #0x24]
	bl FUN_0200A714
	ldr r0, [r4, #0xc]
	bl FUN_0200A0D0
	ldr r0, [r5, #0x54]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200D09C
_0200D0B2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200D060

	thumb_func_start FUN_0200D0B4
FUN_0200D0B4: @ 0x0200D0B4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0202067C
	bl FUN_0202168C
	bl FUN_02022608
	ldr r0, [r4, #8]
	cmp r0, #1
	bne _0200D0D0
	bl FUN_0200B244
_0200D0D0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D0B4

	thumb_func_start FUN_0200D0D4
FUN_0200D0D4: @ 0x0200D0D4
	ldr r2, [r0, #4]
	ldr r3, _0200D0E0 @ =FUN_0201AB0C
	subs r2, r2, #1
	str r2, [r0, #4]
	adds r0, r1, #0
	bx r3
	.align 2, 0
_0200D0E0: .4byte FUN_0201AB0C
	thumb_func_end FUN_0200D0D4

	thumb_func_start FUN_0200D0E4
FUN_0200D0E4: @ 0x0200D0E4
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_0200D044
	adds r0, r4, #0
	bl FUN_0200D050
	adds r0, r4, #0
	bl FUN_0200D060
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0200D0D4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200D0E4

	thumb_func_start FUN_0200D108
FUN_0200D108: @ 0x0200D108
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0200D116
	bl FUN_0202551C
_0200D116:
	adds r0, r4, #0
	bl FUN_0200D0B4
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_0200D108

	thumb_func_start FUN_0200D124
FUN_0200D124: @ 0x0200D124
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r5, r0, #0
	adds r4, r1, #0
	movs r7, #6
	str r2, [sp, #0x10]
	str r3, [sp, #0x14]
	cmp r5, #0
	beq _0200D13A
	cmp r4, #0
	bne _0200D140
_0200D13A:
	add sp, #0x34
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D140:
	adds r0, r2, #0
	ldrh r1, [r0, #8]
	ldr r0, _0200D290 @ =0x0000FFFF
	cmp r1, r0
	bne _0200D14C
	movs r7, #4
_0200D14C:
	str r7, [r4, #0x54]
	bl FUN_0200A8FC
	adds r2, r0, #0
	adds r1, r2, #0
	ldr r0, [r5]
	muls r1, r7, r1
	bl FUN_0201AA8C
	str r0, [r4, #8]
	ldr r1, [r5]
	movs r0, #0xaf
	bl FUN_02007688
	str r0, [sp, #0x20]
	movs r0, #0
	str r0, [sp, #0x24]
	cmp r7, #0
	ble _0200D1AA
	ldr r6, [sp, #0x10]
_0200D174:
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x24]
	bl FUN_0200A900
	str r0, [sp, #0x28]
	movs r0, #1
	str r0, [sp]
	ldrh r1, [r6]
	ldr r0, [sp, #0x20]
	ldr r3, [r5]
	movs r2, #0
	bl FUN_02007C98
	ldr r1, [sp, #0x28]
	ldr r2, [r5]
	str r0, [sp, #0x2c]
	bl FUN_0200A908
	ldr r0, [sp, #0x2c]
	bl FUN_0201AB0C
	ldr r0, [sp, #0x24]
	adds r6, r6, #2
	adds r0, r0, #1
	str r0, [sp, #0x24]
	cmp r0, r7
	blt _0200D174
_0200D1AA:
	movs r6, #0
	cmp r7, #0
	ble _0200D1D6
	str r4, [sp, #0x1c]
_0200D1B2:
	ldr r0, [r4, #8]
	adds r1, r6, #0
	bl FUN_0200A900
	bl FUN_0200A96C
	ldr r2, [r5]
	adds r1, r6, #0
	bl FUN_0200A090
	ldr r1, [sp, #0x1c]
	adds r6, r6, #1
	str r0, [r1, #0xc]
	adds r0, r1, #0
	adds r0, r0, #4
	str r0, [sp, #0x1c]
	cmp r6, r7
	blt _0200D1B2
_0200D1D6:
	movs r0, #0
	str r0, [sp, #0x18]
	cmp r7, #0
	ble _0200D210
	adds r6, r4, #0
_0200D1E0:
	ldr r0, [r4, #8]
	ldr r1, [sp, #0x18]
	bl FUN_0200A900
	str r0, [sp, #0x30]
	bl FUN_0200A96C
	ldr r1, [r5]
	bl FUN_0200A6F0
	adds r2, r0, #0
	str r2, [r6, #0x24]
	ldr r0, [r6, #0xc]
	ldr r1, [sp, #0x30]
	ldr r3, [r5]
	bl FUN_0200A674
	str r0, [r6, #0x3c]
	ldr r0, [sp, #0x18]
	adds r6, r6, #4
	adds r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, r7
	blt _0200D1E0
_0200D210:
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _0200D21E
	cmp r0, #1
	beq _0200D226
	cmp r0, #2
	b _0200D22E
_0200D21E:
	ldr r0, [r4, #0x24]
	bl FUN_0200ADE4
	b _0200D234
_0200D226:
	ldr r0, [r4, #0x24]
	bl FUN_0200AE58
	b _0200D234
_0200D22E:
	ldr r0, [r4, #0x24]
	bl FUN_0200AD30
_0200D234:
	ldr r0, [sp, #0x48]
	cmp r0, #0
	beq _0200D23E
	cmp r0, #1
	b _0200D246
_0200D23E:
	ldr r0, [r4, #0x28]
	bl FUN_0200B050
	b _0200D24C
_0200D246:
	ldr r0, [r4, #0x28]
	bl FUN_0200AFD8
_0200D24C:
	movs r0, #1
	str r0, [sp]
	ldr r1, [sp, #0x10]
	ldr r0, [sp, #0x20]
	ldrh r1, [r1, #0xc]
	ldr r3, [r5]
	movs r2, #0
	bl FUN_02007C98
	ldr r1, [r4, #0x14]
	adds r6, r0, #0
	str r1, [sp]
	ldr r1, [r4, #0x18]
	str r1, [sp, #4]
	ldr r1, [r4, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r4, #0x20]
	str r1, [sp, #0xc]
	ldr r1, [r5]
	ldr r2, [r4, #0xc]
	ldr r3, [r4, #0x10]
	bl FUN_02009E84
	str r0, [r4, #4]
	adds r0, r6, #0
	bl FUN_0201AB0C
	ldr r0, [sp, #0x20]
	bl FUN_0200770C
	movs r0, #1
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200D290: .4byte 0x0000FFFF
	thumb_func_end FUN_0200D124

	thumb_func_start FUN_0200D294
FUN_0200D294: @ 0x0200D294
	push {r3, lr}
	movs r3, #1
	str r3, [sp]
	movs r3, #2
	bl FUN_0200D124
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200D294

	thumb_func_start FUN_0200D2A4
FUN_0200D2A4: @ 0x0200D2A4
	push {r3, r4, lr}
	sub sp, #4
	ldr r4, [sp, #0x10]
	str r4, [sp]
	bl FUN_0200D124
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_0200D2A4

	thumb_func_start FUN_0200D2B4
FUN_0200D2B4: @ 0x0200D2B4
	push {r4, lr}
	sub sp, #0x28
	movs r3, #4
	movs r4, #6
	ldrsh r3, [r2, r3]
	ldrsh r4, [r2, r4]
	str r4, [sp]
	str r3, [sp, #4]
	ldrh r4, [r2, #0xa]
	str r4, [sp, #8]
	ldr r4, [r2, #0xc]
	str r4, [sp, #0xc]
	ldr r4, [r2, #0x10]
	str r4, [sp, #0x10]
	ldr r4, [r2, #0x14]
	str r4, [sp, #0x14]
	ldr r4, [r2, #0x18]
	str r4, [sp, #0x18]
	ldr r4, [r2, #0x1c]
	str r4, [sp, #0x1c]
	ldr r4, [r2, #0x20]
	str r4, [sp, #0x20]
	ldr r4, [r2, #0x24]
	str r4, [sp, #0x24]
	ldr r2, [r2]
	bl FUN_0200D2F0
	add sp, #0x28
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D2B4

	thumb_func_start FUN_0200D2F0
FUN_0200D2F0: @ 0x0200D2F0
	push {r4, lr}
	sub sp, #0x30
	adds r4, r0, #0
	ldr r0, [r1]
	str r0, [sp]
	ldr r0, [r1, #4]
	ldr r1, [r0]
	movs r0, #0x24
	muls r0, r2, r0
	adds r0, r1, r0
	str r0, [sp, #4]
	cmp r3, #0
	ble _0200D31C
	lsls r0, r3, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D32A
_0200D31C:
	lsls r0, r3, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D32A:
	blx FUN_020F2104
	str r0, [sp, #8]
	add r1, sp, #0x28
	movs r0, #0x10
	ldrsh r0, [r1, r0]
	cmp r0, #0
	ble _0200D34C
	lsls r0, r0, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D35A
_0200D34C:
	lsls r0, r0, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D35A:
	blx FUN_020F2104
	str r0, [sp, #0xc]
	add r1, sp, #0x28
	movs r0, #0x14
	ldrsh r0, [r1, r0]
	cmp r0, #0
	ble _0200D37C
	lsls r0, r0, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D38A
_0200D37C:
	lsls r0, r0, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D38A:
	blx FUN_020F2104
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x4c]
	cmp r0, #2
	bne _0200D3A0
	movs r0, #3
	ldr r1, [sp, #0xc]
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #0xc]
_0200D3A0:
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	movs r1, #0
	add r0, sp, #0
	strh r1, [r0, #0x20]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x28]
	ldr r0, [r4]
	str r0, [sp, #0x2c]
	add r0, sp, #0
	bl FUN_02024624
	adds r4, r0, #0
	beq _0200D3F0
	add r1, sp, #0x28
	ldrh r1, [r1, #0x18]
	bl FUN_020248F0
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _0200D3DE
	cmp r0, #1
	beq _0200D3F0
	cmp r0, #2
	beq _0200D3E8
	b _0200D3F0
_0200D3DE:
	ldr r1, [sp, #0x48]
	adds r0, r4, #0
	bl FUN_02024A14
	b _0200D3F0
_0200D3E8:
	ldr r1, [sp, #0x48]
	adds r0, r4, #0
	bl FUN_02024A48
_0200D3F0:
	adds r0, r4, #0
	add sp, #0x30
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D2F0

	thumb_func_start FUN_0200D3F8
FUN_0200D3F8: @ 0x0200D3F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r0, [sp]
	movs r0, #6
	str r0, [sp, #4]
	ldr r0, [sp]
	adds r5, r1, #0
	adds r6, r2, #0
	cmp r0, #0
	beq _0200D410
	cmp r5, #0
	bne _0200D416
_0200D410:
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D416:
	ldr r0, [r6, #0x10]
	cmp r0, #0
	beq _0200D422
	ldr r0, [r6, #0x14]
	cmp r0, #0
	bne _0200D426
_0200D422:
	movs r0, #4
	str r0, [sp, #4]
_0200D426:
	ldr r0, [sp, #4]
	str r0, [r5, #0x54]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0200D456
	adds r7, r6, #0
	adds r4, r5, #0
_0200D438:
	ldr r2, [sp]
	ldr r0, [r7]
	ldr r1, [sp, #8]
	ldr r2, [r2]
	bl FUN_0200A090
	str r0, [r4, #0xc]
	ldr r0, [sp, #8]
	adds r7, r7, #4
	adds r1, r0, #1
	ldr r0, [sp, #4]
	adds r4, r4, #4
	str r1, [sp, #8]
	cmp r1, r0
	blt _0200D438
_0200D456:
	ldr r0, [sp, #4]
	movs r7, #0
	cmp r0, #0
	ble _0200D49C
	adds r4, r7, #0
_0200D460:
	ldr r0, [r6]
	cmp r0, #0
	beq _0200D490
	ldr r1, [sp]
	ldr r1, [r1]
	bl FUN_0200A6F0
	str r0, [r5, #0x24]
	movs r0, #0
	str r0, [r5, #0x3c]
	ldr r3, [r5, #0x24]
	adds r1, r0, #0
	ldr r0, [r3, #4]
	cmp r0, #0
	ble _0200D490
	adds r2, r1, #0
_0200D480:
	ldr r0, [r3]
	adds r1, r1, #1
	str r4, [r0, r2]
	ldr r3, [r5, #0x24]
	adds r2, r2, #4
	ldr r0, [r3, #4]
	cmp r1, r0
	blt _0200D480
_0200D490:
	ldr r0, [sp, #4]
	adds r7, r7, #1
	adds r6, r6, #4
	adds r5, r5, #4
	cmp r7, r0
	blt _0200D460
_0200D49C:
	movs r0, #1
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200D3F8

	thumb_func_start FUN_0200D4A4
FUN_0200D4A4: @ 0x0200D4A4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D4C2
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D4C2:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl FUN_0200A1D8
	adds r5, r0, #0
	beq _0200D4F0
	bl FUN_0200ADA4
	ldr r0, [r4, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D4F0:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200D4FE
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D4FE:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200D4A4

	thumb_func_start FUN_0200D504
FUN_0200D504: @ 0x0200D504
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D522
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200D522:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl FUN_0200A3C8
	adds r5, r0, #0
	beq _0200D550
	bl FUN_0200ADA4
	ldr r0, [r4, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D550:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200D55E
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200D55E:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200D504

	thumb_func_start FUN_0200D564
FUN_0200D564: @ 0x0200D564
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x34]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D584
	movs r0, #0
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200D584:
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x10]
	bl FUN_0200A234
	adds r5, r0, #0
	beq _0200D5C8
	bl FUN_0200B00C
	cmp r0, #1
	beq _0200D5B0
	bl FUN_0202551C
_0200D5B0:
	ldr r0, [r4, #0x28]
	adds r1, r5, #0
	bl FUN_0200DAE4
	ldr r1, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_0200B12C
	lsls r0, r0, #0x18
	add sp, #0x10
	asrs r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200D5C8:
	bl FUN_0202551C
	movs r0, #0
	mvns r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200D564

	thumb_func_start FUN_0200D5D4
FUN_0200D5D4: @ 0x0200D5D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x34]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D5F4
	movs r0, #0
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_0200D5F4:
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	ldr r0, [sp, #0x30]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x10]
	bl FUN_0200A480
	adds r5, r0, #0
	beq _0200D638
	bl FUN_0200B00C
	cmp r0, #1
	beq _0200D620
	bl FUN_0202551C
_0200D620:
	ldr r0, [r4, #0x28]
	adds r1, r5, #0
	bl FUN_0200DAE4
	ldr r1, [sp, #0x30]
	adds r0, r5, #0
	bl FUN_0200B12C
	lsls r0, r0, #0x18
	add sp, #0x10
	asrs r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_0200D638:
	bl FUN_0202551C
	movs r0, #0
	mvns r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200D5D4

	thumb_func_start FUN_0200D644
FUN_0200D644: @ 0x0200D644
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	adds r6, r1, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	adds r1, r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x24]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	adds r0, r2, #0
	ldr r2, [sp, #0x20]
	bl FUN_0200D564
	adds r4, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r4, r0
	beq _0200D682
	ldr r3, [sp, #0x2c]
	lsls r2, r4, #0x14
	adds r0, r5, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x10
	lsls r3, r3, #5
	bl FUN_020032A4
_0200D682:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200D644

	thumb_func_start FUN_0200D68C
FUN_0200D68C: @ 0x0200D68C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	adds r6, r1, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	adds r1, r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	ldr r3, [sp, #0x24]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	adds r0, r2, #0
	ldr r2, [sp, #0x20]
	bl FUN_0200D5D4
	adds r4, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r4, r0
	beq _0200D6CA
	ldr r3, [sp, #0x2c]
	lsls r2, r4, #0x14
	adds r0, r5, #0
	adds r1, r6, #0
	lsrs r2, r2, #0x10
	lsls r3, r3, #5
	bl FUN_020032A4
_0200D6CA:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200D68C

	thumb_func_start FUN_0200D6D4
FUN_0200D6D4: @ 0x0200D6D4
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl FUN_0200DA04
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0200D6D4

	thumb_func_start FUN_0200D6EC
FUN_0200D6EC: @ 0x0200D6EC
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl FUN_0200DA74
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0200D6EC

	thumb_func_start FUN_0200D704
FUN_0200D704: @ 0x0200D704
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	movs r4, #3
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl FUN_0200DA04
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0200D704

	thumb_func_start FUN_0200D71C
FUN_0200D71C: @ 0x0200D71C
	push {r3, r4, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x18]
	str r4, [sp]
	movs r4, #3
	str r4, [sp, #4]
	ldr r4, [sp, #0x1c]
	str r4, [sp, #8]
	bl FUN_0200DA74
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0200D71C

	thumb_func_start FUN_0200D734
FUN_0200D734: @ 0x0200D734
	push {r3, lr}
	movs r3, #3
	lsls r3, r3, #0x12
	bl FUN_0200D748
	pop {r3, pc}
	thumb_func_end FUN_0200D734

	thumb_func_start FUN_0200D740
FUN_0200D740: @ 0x0200D740
	push {r3, lr}
	bl FUN_0200D748
	pop {r3, pc}
	thumb_func_end FUN_0200D740

	thumb_func_start FUN_0200D748
FUN_0200D748: @ 0x0200D748
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x78
	adds r7, r0, #0
	ldr r0, [r7]
	adds r6, r1, #0
	movs r1, #0x10
	adds r5, r2, #0
	str r3, [sp, #0x2c]
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _0200D766
	add sp, #0x78
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D766:
	ldr r0, [r7]
	movs r1, #8
	bl FUN_0201AA8C
	str r0, [r4, #8]
	cmp r0, #0
	bne _0200D77A
	add sp, #0x78
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D77A:
	ldr r0, [r7]
	movs r1, #0x24
	bl FUN_0201AA8C
	ldr r1, [r4, #8]
	str r0, [r1]
	ldr r0, [r4, #8]
	ldr r0, [r0]
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	ldr r1, [r0]
	cmp r1, #0
	bne _0200D7A2
	cmp r0, #0
	beq _0200D79C
	bl FUN_0201AB0C
_0200D79C:
	add sp, #0x78
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0200D7A2:
	movs r1, #0
	adds r2, r5, #0
	add r3, sp, #0x30
_0200D7A8:
	ldr r0, [r2, #0x14]
	adds r1, r1, #1
	adds r2, r2, #4
	stm r3!, {r0}
	cmp r1, #6
	blt _0200D7A8
	ldr r0, [r6, #0x1c]
	cmp r0, #0
	beq _0200D7C0
	ldr r1, [r6, #0x20]
	cmp r1, #0
	bne _0200D7CA
_0200D7C0:
	movs r0, #0
	mvns r0, r0
	str r0, [sp, #0x40]
	str r0, [sp, #0x44]
	b _0200D7FC
_0200D7CA:
	movs r2, #0
	ldr r1, [sp, #0x40]
	mvns r2, r2
	cmp r1, r2
	beq _0200D7E2
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D7E2
	movs r0, #0
	mvns r0, r0
	str r0, [sp, #0x40]
_0200D7E2:
	movs r0, #0
	ldr r1, [sp, #0x44]
	mvns r0, r0
	cmp r1, r0
	beq _0200D7FC
	ldr r0, [r6, #0x20]
	bl FUN_0200A728
	cmp r0, #0
	bne _0200D7FC
	movs r0, #0
	mvns r0, r0
	str r0, [sp, #0x44]
_0200D7FC:
	ldr r0, [sp, #0x3c]
	str r0, [sp]
	ldr r0, [sp, #0x40]
	str r0, [sp, #4]
	ldr r0, [sp, #0x44]
	str r0, [sp, #8]
	ldr r0, [r5, #0x30]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #0x10]
	ldr r0, [r6, #0xc]
	str r0, [sp, #0x14]
	ldr r0, [r6, #0x10]
	str r0, [sp, #0x18]
	ldr r0, [r6, #0x14]
	str r0, [sp, #0x1c]
	ldr r0, [r6, #0x18]
	str r0, [sp, #0x20]
	ldr r0, [r6, #0x1c]
	str r0, [sp, #0x24]
	ldr r0, [r6, #0x20]
	str r0, [sp, #0x28]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x30]
	ldr r2, [sp, #0x34]
	ldr r3, [sp, #0x38]
	bl FUN_02009D48
	ldr r0, [r6]
	str r0, [sp, #0x48]
	ldr r0, [r4, #4]
	str r0, [sp, #0x4c]
	movs r0, #0
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D856
	lsls r0, r0, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D864
_0200D856:
	lsls r0, r0, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D864:
	blx FUN_020F2104
	str r0, [sp, #0x50]
	movs r0, #2
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D884
	lsls r0, r0, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D892
_0200D884:
	lsls r0, r0, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D892:
	blx FUN_020F2104
	str r0, [sp, #0x54]
	movs r0, #4
	ldrsh r0, [r5, r0]
	cmp r0, #0
	ble _0200D8B2
	lsls r0, r0, #0xc
	blx FUN_020F2178
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200D8C0
_0200D8B2:
	lsls r0, r0, #0xc
	blx FUN_020F2178
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200D8C0:
	blx FUN_020F2104
	str r0, [sp, #0x58]
	ldr r0, [r5, #0x10]
	cmp r0, #2
	bne _0200D8D4
	ldr r1, [sp, #0x54]
	ldr r0, [sp, #0x2c]
	adds r0, r1, r0
	str r0, [sp, #0x54]
_0200D8D4:
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #0x5c]
	str r0, [sp, #0x60]
	str r0, [sp, #0x64]
	movs r1, #0
	add r0, sp, #0x30
	strh r1, [r0, #0x38]
	ldr r0, [r5, #8]
	str r0, [sp, #0x6c]
	ldr r0, [r5, #0x10]
	str r0, [sp, #0x70]
	ldr r0, [r7]
	str r0, [sp, #0x74]
	add r0, sp, #0x48
	bl FUN_02024624
	str r0, [r4]
	ldr r0, [r5, #0x30]
	str r0, [r4, #0xc]
	ldr r0, [r4]
	cmp r0, #0
	beq _0200D924
	ldrh r1, [r5, #6]
	bl FUN_020248F0
	ldr r1, [r5, #0xc]
	ldr r0, _0200D930 @ =0x0000FFFF
	cmp r1, r0
	beq _0200D928
	ldr r0, [r4]
	bl FUN_02024A6C
	adds r2, r0, #0
	ldr r1, [r5, #0xc]
	ldr r0, [r4]
	adds r1, r2, r1
	bl FUN_02024A14
	b _0200D928
_0200D924:
	bl FUN_0202551C
_0200D928:
	adds r0, r4, #0
	add sp, #0x78
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200D930: .4byte 0x0000FFFF
	thumb_func_end FUN_0200D748

	thumb_func_start FUN_0200D934
FUN_0200D934: @ 0x0200D934
	push {r3, lr}
	ldr r0, [r0, #0x10]
	bl FUN_0200A7BC
	movs r1, #0
	bl FUN_0200B0F8
	pop {r3, pc}
	thumb_func_end FUN_0200D934

	thumb_func_start FUN_0200D944
FUN_0200D944: @ 0x0200D944
	push {r4, lr}
	ldr r0, [r0, #0x10]
	adds r4, r2, #0
	bl FUN_0200A7BC
	adds r1, r4, #0
	bl FUN_0200B12C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D944

	thumb_func_start FUN_0200D958
FUN_0200D958: @ 0x0200D958
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, [r3, #0xc]
	ldr r1, [r3, #0x24]
	ldr r3, _0200D964 @ =FUN_0200DB64
	bx r3
	.align 2, 0
_0200D964: .4byte FUN_0200DB64
	thumb_func_end FUN_0200D958

	thumb_func_start FUN_0200D968
FUN_0200D968: @ 0x0200D968
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, [r3, #0x10]
	ldr r1, [r3, #0x28]
	ldr r3, _0200D974 @ =FUN_0200DBB8
	bx r3
	.align 2, 0
_0200D974: .4byte FUN_0200DBB8
	thumb_func_end FUN_0200D968

	thumb_func_start FUN_0200D978
FUN_0200D978: @ 0x0200D978
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, [r3, #0x14]
	ldr r1, [r3, #0x2c]
	ldr r3, _0200D984 @ =FUN_0200DB18
	bx r3
	.align 2, 0
_0200D984: .4byte FUN_0200DB18
	thumb_func_end FUN_0200D978

	thumb_func_start FUN_0200D988
FUN_0200D988: @ 0x0200D988
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, [r3, #0x18]
	ldr r1, [r3, #0x30]
	ldr r3, _0200D994 @ =FUN_0200DB18
	bx r3
	.align 2, 0
_0200D994: .4byte FUN_0200DB18
	thumb_func_end FUN_0200D988

	thumb_func_start FUN_0200D998
FUN_0200D998: @ 0x0200D998
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	adds r7, r0, #0
	adds r0, r6, #0
	bl FUN_0200D044
	ldr r0, [r6, #0x24]
	bl FUN_0200AED4
	ldr r0, [r6, #0x28]
	bl FUN_0200B0CC
	ldr r0, [r6, #0x54]
	movs r4, #0
	cmp r0, #0
	ble _0200D9D0
	adds r5, r6, #0
_0200D9BA:
	ldr r0, [r5, #0x24]
	bl FUN_0200A714
	ldr r0, [r5, #0xc]
	bl FUN_0200A0D0
	ldr r0, [r6, #0x54]
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, r0
	blt _0200D9BA
_0200D9D0:
	adds r0, r7, #0
	adds r1, r6, #0
	bl FUN_0200D0D4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200D998

	thumb_func_start FUN_0200D9DC
FUN_0200D9DC: @ 0x0200D9DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _0200D9EE
	ldr r0, [r4, #4]
	ldr r0, [r0]
	bl FUN_0200AF80
_0200D9EE:
	ldr r0, [r4]
	bl FUN_02024758
	ldr r0, [r4, #8]
	bl FUN_02009F24
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200D9DC

	thumb_func_start FUN_0200DA04
FUN_0200DA04: @ 0x0200DA04
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r1, #0
	adds r7, r0, #0
	ldr r0, [sp, #0x2c]
	adds r5, r6, #0
	lsls r4, r0, #2
	adds r5, #0xc
	ldr r0, [r5, r4]
	ldr r1, [sp, #0x30]
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	bl FUN_0200A728
	cmp r0, #0
	bne _0200DA2A
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200DA2A:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #4]
	ldr r0, [r7]
	ldr r3, [sp, #0x28]
	str r0, [sp, #8]
	ldr r0, [r5, r4]
	bl FUN_0200A294
	adds r5, r0, #0
	beq _0200DA60
	adds r0, r6, r4
	ldr r0, [r0, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	adds r4, r0, #0
	cmp r4, #1
	beq _0200DA5A
	bl FUN_0202551C
_0200DA5A:
	add sp, #0x14
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_0200DA60:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200DA6E
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200DA6E:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DA04

	thumb_func_start FUN_0200DA74
FUN_0200DA74: @ 0x0200DA74
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r1, #0
	adds r7, r0, #0
	ldr r0, [sp, #0x2c]
	adds r5, r6, #0
	lsls r4, r0, #2
	adds r5, #0xc
	ldr r0, [r5, r4]
	ldr r1, [sp, #0x30]
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	bl FUN_0200A728
	cmp r0, #0
	bne _0200DA9A
	add sp, #0x14
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200DA9A:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0xc]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #4]
	ldr r0, [r7]
	ldr r3, [sp, #0x28]
	str r0, [sp, #8]
	ldr r0, [r5, r4]
	bl FUN_0200A540
	adds r5, r0, #0
	beq _0200DAD0
	adds r0, r6, r4
	ldr r0, [r0, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	adds r4, r0, #0
	cmp r4, #1
	beq _0200DACA
	bl FUN_0202551C
_0200DACA:
	add sp, #0x14
	adds r0, r4, #0
	pop {r4, r5, r6, r7, pc}
_0200DAD0:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200DADE
	add sp, #0x14
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200DADE:
	movs r0, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DA74

	thumb_func_start FUN_0200DAE4
FUN_0200DAE4: @ 0x0200DAE4
	push {r3, r4, r5, r6}
	ldr r6, [r0, #4]
	movs r3, #0
	cmp r6, #0
	ble _0200DB10
	ldr r5, [r0]
	adds r4, r5, #0
_0200DAF2:
	ldr r2, [r4]
	cmp r2, #0
	bne _0200DB08
	lsls r2, r3, #2
	str r1, [r5, r2]
	ldr r1, [r0, #8]
	adds r1, r1, #1
	str r1, [r0, #8]
	movs r0, #1
	pop {r3, r4, r5, r6}
	bx lr
_0200DB08:
	adds r3, r3, #1
	adds r4, r4, #4
	cmp r3, r6
	blt _0200DAF2
_0200DB10:
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0200DAE4

	thumb_func_start FUN_0200DB18
FUN_0200DB18: @ 0x0200DB18
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	adds r7, r2, #0
	movs r6, #0
	cmp r0, #0
	ble _0200DB60
	adds r4, r6, #0
_0200DB2A:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DB56
	bl FUN_0200A7FC
	cmp r0, r7
	bne _0200DB56
	ldr r1, [r5]
	lsls r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl FUN_0200A75C
	ldr r0, [r5]
	movs r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	subs r0, r0, #1
	str r0, [r5, #8]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DB56:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200DB2A
_0200DB60:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DB18

	thumb_func_start FUN_0200DB64
FUN_0200DB64: @ 0x0200DB64
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	adds r7, r2, #0
	movs r6, #0
	cmp r0, #0
	ble _0200DBB2
	adds r4, r6, #0
_0200DB76:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DBA8
	bl FUN_0200A7FC
	cmp r0, r7
	bne _0200DBA8
	adds r0, r7, #0
	bl FUN_02021884
	ldr r1, [r5]
	lsls r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl FUN_0200A75C
	ldr r0, [r5]
	movs r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	subs r0, r0, #1
	str r0, [r5, #8]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DBA8:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200DB76
_0200DBB2:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200DB64

	thumb_func_start FUN_0200DBB8
FUN_0200DBB8: @ 0x0200DBB8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	adds r7, r2, #0
	movs r6, #0
	cmp r0, #0
	ble _0200DC06
	adds r4, r6, #0
_0200DBCA:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0200DBFC
	bl FUN_0200A7FC
	cmp r0, r7
	bne _0200DBFC
	adds r0, r7, #0
	bl FUN_02022744
	ldr r1, [r5]
	lsls r4, r6, #2
	ldr r0, [sp]
	ldr r1, [r1, r4]
	bl FUN_0200A75C
	ldr r0, [r5]
	movs r1, #0
	str r1, [r0, r4]
	ldr r0, [r5, #8]
	subs r0, r0, #1
	str r0, [r5, #8]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0200DBFC:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _0200DBCA
_0200DC06:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200DBB8

	thumb_func_start FUN_0200DC0C
FUN_0200DC0C: @ 0x0200DC0C
	ldr r3, _0200DC14 @ =FUN_020249B0
	movs r1, #1
	lsls r1, r1, #0xc
	bx r3
	.align 2, 0
_0200DC14: .4byte FUN_020249B0
	thumb_func_end FUN_0200DC0C

	thumb_func_start FUN_0200DC18
FUN_0200DC18: @ 0x0200DC18
	ldr r3, _0200DC20 @ =FUN_0200DC0C
	ldr r0, [r0]
	bx r3
	nop
_0200DC20: .4byte FUN_0200DC0C
	thumb_func_end FUN_0200DC18

	thumb_func_start FUN_0200DC24
FUN_0200DC24: @ 0x0200DC24
	ldr r3, _0200DC30 @ =FUN_020249B0
	movs r1, #2
	ldr r0, [r0]
	lsls r1, r1, #0xc
	bx r3
	nop
_0200DC30: .4byte FUN_020249B0
	thumb_func_end FUN_0200DC24

	thumb_func_start FUN_0200DC34
FUN_0200DC34: @ 0x0200DC34
	ldr r3, _0200DC3C @ =FUN_020249B0
	ldr r0, [r0]
	bx r3
	nop
_0200DC3C: .4byte FUN_020249B0
	thumb_func_end FUN_0200DC34

	thumb_func_start FUN_0200DC40
FUN_0200DC40: @ 0x0200DC40
	ldr r3, _0200DC48 @ =FUN_020248C8
	ldr r0, [r0]
	bx r3
	nop
_0200DC48: .4byte FUN_020248C8
	thumb_func_end FUN_0200DC40

	thumb_func_start FUN_0200DC4C
FUN_0200DC4C: @ 0x0200DC4C
	ldr r3, _0200DC54 @ =FUN_020248F0
	ldr r0, [r0]
	bx r3
	nop
_0200DC54: .4byte FUN_020248F0
	thumb_func_end FUN_0200DC4C

	thumb_func_start FUN_0200DC58
FUN_0200DC58: @ 0x0200DC58
	ldr r3, _0200DC60 @ =FUN_02024950
	ldr r0, [r0]
	bx r3
	nop
_0200DC60: .4byte FUN_02024950
	thumb_func_end FUN_0200DC58

	thumb_func_start FUN_0200DC64
FUN_0200DC64: @ 0x0200DC64
	ldr r3, _0200DC6C @ =FUN_020249A8
	ldr r0, [r0]
	bx r3
	nop
_0200DC6C: .4byte FUN_020249A8
	thumb_func_end FUN_0200DC64

	thumb_func_start FUN_0200DC70
FUN_0200DC70: @ 0x0200DC70
	ldr r3, _0200DC74 @ =FUN_0202484C
	bx r3
	.align 2, 0
_0200DC74: .4byte FUN_0202484C
	thumb_func_end FUN_0200DC70

	thumb_func_start FUN_0200DC78
FUN_0200DC78: @ 0x0200DC78
	ldr r3, _0200DC80 @ =FUN_0200DC70
	ldr r0, [r0]
	bx r3
	nop
_0200DC80: .4byte FUN_0200DC70
	thumb_func_end FUN_0200DC78

	thumb_func_start FUN_0200DC84
FUN_0200DC84: @ 0x0200DC84
	ldr r3, _0200DC88 @ =FUN_02024868
	bx r3
	.align 2, 0
_0200DC88: .4byte FUN_02024868
	thumb_func_end FUN_0200DC84

	thumb_func_start FUN_0200DC8C
FUN_0200DC8C: @ 0x0200DC8C
	ldr r3, _0200DC94 @ =FUN_0200DC84
	ldr r0, [r0]
	bx r3
	nop
_0200DC94: .4byte FUN_0200DC84
	thumb_func_end FUN_0200DC8C

	thumb_func_start FUN_0200DC98
FUN_0200DC98: @ 0x0200DC98
	ldr r3, _0200DC9C @ =FUN_02024B68
	bx r3
	.align 2, 0
_0200DC9C: .4byte FUN_02024B68
	thumb_func_end FUN_0200DC98

	thumb_func_start FUN_0200DCA0
FUN_0200DCA0: @ 0x0200DCA0
	ldr r3, _0200DCA8 @ =FUN_0200DC98
	ldr r0, [r0]
	bx r3
	nop
_0200DCA8: .4byte FUN_0200DC98
	thumb_func_end FUN_0200DCA0

	thumb_func_start FUN_0200DCAC
FUN_0200DCAC: @ 0x0200DCAC
	ldr r3, _0200DCB4 @ =FUN_02024964
	ldr r0, [r0]
	bx r3
	nop
_0200DCB4: .4byte FUN_02024964
	thumb_func_end FUN_0200DCAC

	thumb_func_start FUN_0200DCB8
FUN_0200DCB8: @ 0x0200DCB8
	ldr r3, _0200DCBC @ =FUN_020249D4
	bx r3
	.align 2, 0
_0200DCBC: .4byte FUN_020249D4
	thumb_func_end FUN_0200DCB8

	thumb_func_start FUN_0200DCC0
FUN_0200DCC0: @ 0x0200DCC0
	ldr r3, _0200DCC8 @ =FUN_0200DCB8
	ldr r0, [r0]
	bx r3
	nop
_0200DCC8: .4byte FUN_0200DCB8
	thumb_func_end FUN_0200DCC0

	thumb_func_start FUN_0200DCCC
FUN_0200DCCC: @ 0x0200DCCC
	ldr r3, _0200DCD0 @ =FUN_020249F8
	bx r3
	.align 2, 0
_0200DCD0: .4byte FUN_020249F8
	thumb_func_end FUN_0200DCCC

	thumb_func_start FUN_0200DCD4
FUN_0200DCD4: @ 0x0200DCD4
	ldr r3, _0200DCDC @ =FUN_0200DCCC
	ldr r0, [r0]
	bx r3
	nop
_0200DCDC: .4byte FUN_0200DCCC
	thumb_func_end FUN_0200DCD4

	thumb_func_start FUN_0200DCE0
FUN_0200DCE0: @ 0x0200DCE0
	ldr r3, _0200DCE4 @ =FUN_02024830
	bx r3
	.align 2, 0
_0200DCE4: .4byte FUN_02024830
	thumb_func_end FUN_0200DCE0

	thumb_func_start FUN_0200DCE8
FUN_0200DCE8: @ 0x0200DCE8
	ldr r3, _0200DCF0 @ =FUN_0200DCE0
	ldr r0, [r0]
	bx r3
	nop
_0200DCF0: .4byte FUN_0200DCE0
	thumb_func_end FUN_0200DCE8

	thumb_func_start FUN_0200DCF4
FUN_0200DCF4: @ 0x0200DCF4
	ldr r3, _0200DCF8 @ =FUN_020248B8
	bx r3
	.align 2, 0
_0200DCF8: .4byte FUN_020248B8
	thumb_func_end FUN_0200DCF4

	thumb_func_start FUN_0200DCFC
FUN_0200DCFC: @ 0x0200DCFC
	ldr r3, _0200DD04 @ =FUN_0200DCF4
	ldr r0, [r0]
	bx r3
	nop
_0200DD04: .4byte FUN_0200DCF4
	thumb_func_end FUN_0200DCFC

	thumb_func_start FUN_0200DD08
FUN_0200DD08: @ 0x0200DD08
	ldr r3, _0200DD0C @ =FUN_02024A14
	bx r3
	.align 2, 0
_0200DD0C: .4byte FUN_02024A14
	thumb_func_end FUN_0200DD08

	thumb_func_start FUN_0200DD10
FUN_0200DD10: @ 0x0200DD10
	ldr r3, _0200DD18 @ =FUN_0200DD08
	ldr r0, [r0]
	bx r3
	nop
_0200DD18: .4byte FUN_0200DD08
	thumb_func_end FUN_0200DD10

	thumb_func_start FUN_0200DD1C
FUN_0200DD1C: @ 0x0200DD1C
	ldr r3, _0200DD20 @ =FUN_02024A74
	bx r3
	.align 2, 0
_0200DD20: .4byte FUN_02024A74
	thumb_func_end FUN_0200DD1C

	thumb_func_start FUN_0200DD24
FUN_0200DD24: @ 0x0200DD24
	ldr r3, _0200DD2C @ =FUN_0200DD1C
	ldr r0, [r0]
	bx r3
	nop
_0200DD2C: .4byte FUN_0200DD1C
	thumb_func_end FUN_0200DD24

	thumb_func_start FUN_0200DD30
FUN_0200DD30: @ 0x0200DD30
	ldr r3, _0200DD38 @ =FUN_02024ACC
	ldr r0, [r0]
	bx r3
	nop
_0200DD38: .4byte FUN_02024ACC
	thumb_func_end FUN_0200DD30

	thumb_func_start FUN_0200DD3C
FUN_0200DD3C: @ 0x0200DD3C
	ldr r3, _0200DD44 @ =FUN_02024A04
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bx r3
	.align 2, 0
_0200DD44: .4byte FUN_02024A04
	thumb_func_end FUN_0200DD3C

	thumb_func_start FUN_0200DD48
FUN_0200DD48: @ 0x0200DD48
	ldr r3, _0200DD50 @ =FUN_02024A0C
	ldr r0, [r0]
	bx r3
	nop
_0200DD50: .4byte FUN_02024A0C
	thumb_func_end FUN_0200DD48

	thumb_func_start FUN_0200DD54
FUN_0200DD54: @ 0x0200DD54
	ldr r3, _0200DD5C @ =FUN_0200DD3C
	ldr r0, [r0]
	bx r3
	nop
_0200DD5C: .4byte FUN_0200DD3C
	thumb_func_end FUN_0200DD54

	thumb_func_start FUN_0200DD60
FUN_0200DD60: @ 0x0200DD60
	ldr r3, _0200DD64 @ =FUN_02024ADC
	bx r3
	.align 2, 0
_0200DD64: .4byte FUN_02024ADC
	thumb_func_end FUN_0200DD60

	thumb_func_start FUN_0200DD68
FUN_0200DD68: @ 0x0200DD68
	ldr r3, _0200DD70 @ =FUN_0200DD60
	ldr r0, [r0]
	bx r3
	nop
_0200DD70: .4byte FUN_0200DD60
	thumb_func_end FUN_0200DD68

	thumb_func_start FUN_0200DD74
FUN_0200DD74: @ 0x0200DD74
	ldr r3, _0200DD78 @ =FUN_02024AF8
	bx r3
	.align 2, 0
_0200DD78: .4byte FUN_02024AF8
	thumb_func_end FUN_0200DD74

	thumb_func_start FUN_0200DD7C
FUN_0200DD7C: @ 0x0200DD7C
	ldr r3, _0200DD84 @ =FUN_0200DD74
	ldr r0, [r0]
	bx r3
	nop
_0200DD84: .4byte FUN_0200DD74
	thumb_func_end FUN_0200DD7C

	thumb_func_start FUN_0200DD88
FUN_0200DD88: @ 0x0200DD88
	push {r3, r4, lr}
	sub sp, #0xc
	lsls r1, r1, #0xc
	str r1, [sp]
	lsls r1, r2, #0xc
	adds r4, r0, #0
	str r1, [sp, #4]
	bl FUN_02024B60
	cmp r0, #2
	bne _0200DDA8
	movs r0, #3
	ldr r1, [sp, #4]
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
_0200DDA8:
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_020247D4
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0200DD88

	thumb_func_start FUN_0200DDB8
FUN_0200DDB8: @ 0x0200DDB8
	ldr r3, _0200DDC0 @ =FUN_0200DD88
	ldr r0, [r0]
	bx r3
	nop
_0200DDC0: .4byte FUN_0200DD88
	thumb_func_end FUN_0200DDB8

	thumb_func_start FUN_0200DDC4
FUN_0200DDC4: @ 0x0200DDC4
	push {r4, r5, lr}
	sub sp, #0xc
	lsls r1, r1, #0xc
	str r1, [sp]
	lsls r1, r2, #0xc
	adds r5, r0, #0
	adds r4, r3, #0
	str r1, [sp, #4]
	bl FUN_02024B60
	cmp r0, #2
	bne _0200DDE2
	ldr r0, [sp, #4]
	adds r0, r0, r4
	str r0, [sp, #4]
_0200DDE2:
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_020247D4
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200DDC4

	thumb_func_start FUN_0200DDF4
FUN_0200DDF4: @ 0x0200DDF4
	push {r3, lr}
	ldr r0, [r0]
	bl FUN_0200DDC4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200DDF4

	thumb_func_start FUN_0200DE00
FUN_0200DE00: @ 0x0200DE00
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	bl FUN_020248AC
	adds r4, r0, #0
	ldr r1, [r4]
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r6]
	adds r0, r7, #0
	bl FUN_02024B60
	cmp r0, #2
	ldr r1, [r4, #4]
	bne _0200DE38
	movs r0, #3
	lsls r0, r0, #0x12
	subs r1, r1, r0
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
_0200DE38:
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DE00

	thumb_func_start FUN_0200DE44
FUN_0200DE44: @ 0x0200DE44
	ldr r3, _0200DE4C @ =FUN_0200DE00
	ldr r0, [r0]
	bx r3
	nop
_0200DE4C: .4byte FUN_0200DE00
	thumb_func_end FUN_0200DE44

	thumb_func_start FUN_0200DE50
FUN_0200DE50: @ 0x0200DE50
	push {r3, r4, r5, r6, r7, lr}
	str r0, [sp]
	adds r6, r1, #0
	adds r5, r2, #0
	adds r7, r3, #0
	bl FUN_020248AC
	adds r4, r0, #0
	ldr r1, [r4]
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r6]
	ldr r0, [sp]
	bl FUN_02024B60
	cmp r0, #2
	bne _0200DE86
	ldr r0, [r4, #4]
	subs r1, r0, r7
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
_0200DE86:
	ldr r1, [r4, #4]
	asrs r0, r1, #0xb
	lsrs r0, r0, #0x14
	adds r0, r1, r0
	asrs r0, r0, #0xc
	strh r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DE50

	thumb_func_start FUN_0200DE94
FUN_0200DE94: @ 0x0200DE94
	push {r3, lr}
	ldr r0, [r0]
	bl FUN_0200DE50
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200DE94

	thumb_func_start FUN_0200DEA0
FUN_0200DEA0: @ 0x0200DEA0
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020248AC
	ldr r2, [r0]
	lsls r1, r5, #0xc
	adds r1, r2, r1
	str r1, [sp]
	ldr r2, [r0, #4]
	lsls r1, r4, #0xc
	adds r1, r2, r1
	str r1, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	adds r0, r6, #0
	bl FUN_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200DEA0

	thumb_func_start FUN_0200DED0
FUN_0200DED0: @ 0x0200DED0
	ldr r3, _0200DED8 @ =FUN_0200DEA0
	ldr r0, [r0]
	bx r3
	nop
_0200DED8: .4byte FUN_0200DEA0
	thumb_func_end FUN_0200DED0

	thumb_func_start FUN_0200DEDC
FUN_0200DEDC: @ 0x0200DEDC
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_020248AC
	ldr r1, [r0]
	adds r1, r1, r4
	str r1, [sp]
	ldr r1, [r0, #4]
	adds r1, r1, r6
	str r1, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	bl FUN_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_0200DEDC

	thumb_func_start FUN_0200DF08
FUN_0200DF08: @ 0x0200DF08
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	adds r6, r2, #0
	bl FUN_020248AC
	str r4, [sp]
	str r6, [sp, #4]
	ldr r0, [r0, #8]
	add r1, sp, #0
	str r0, [sp, #8]
	ldr r0, [r5]
	bl FUN_020247D4
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_0200DF08

	thumb_func_start FUN_0200DF2C
FUN_0200DF2C: @ 0x0200DF2C
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020248AC
	ldr r1, [r0]
	str r1, [r5]
	ldr r0, [r0, #4]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200DF2C

	thumb_func_start FUN_0200DF44
FUN_0200DF44: @ 0x0200DF44
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	bl FUN_02024B60
	cmp r0, #2
	bne _0200DF64
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, r7
	bl FUN_0200DF08
	pop {r3, r4, r5, r6, r7, pc}
_0200DF64:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_0200DF08
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200DF44

	thumb_func_start FUN_0200DF70
FUN_0200DF70: @ 0x0200DF70
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0200DF2C
	ldr r0, [r5]
	bl FUN_02024B60
	cmp r0, #2
	bne _0200DF8C
	ldr r0, [r4]
	subs r0, r0, r6
	str r0, [r4]
_0200DF8C:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200DF70

	thumb_func_start FUN_0200DF90
FUN_0200DF90: @ 0x0200DF90
	ldr r3, _0200DF94 @ =FUN_0202487C
	bx r3
	.align 2, 0
_0200DF94: .4byte FUN_0202487C
	thumb_func_end FUN_0200DF90

	thumb_func_start FUN_0200DF98
FUN_0200DF98: @ 0x0200DF98
	ldr r3, _0200DFA0 @ =FUN_0200DF90
	ldr r0, [r0]
	bx r3
	nop
_0200DFA0: .4byte FUN_0200DF90
	thumb_func_end FUN_0200DF98

	thumb_func_start FUN_0200DFA4
FUN_0200DFA4: @ 0x0200DFA4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r7, r0, #0
	adds r6, r2, #0
	bl FUN_020248B0
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0
	blx FUN_020F1ACC
	ldr r0, _0200E020 @ =0x45800000
	bls _0200DFD0
	adds r1, r5, #0
	blx FUN_020F22DC
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200DFDE
_0200DFD0:
	adds r1, r5, #0
	blx FUN_020F22DC
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200DFDE:
	blx FUN_020F2104
	str r0, [r4]
	adds r0, r6, #0
	movs r1, #0
	blx FUN_020F1ACC
	ldr r0, _0200E020 @ =0x45800000
	bls _0200E002
	adds r1, r6, #0
	blx FUN_020F22DC
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0200E010
_0200E002:
	adds r1, r6, #0
	blx FUN_020F22DC
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0200E010:
	blx FUN_020F2104
	str r0, [r4, #4]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_020247F4
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200E020: .4byte 0x45800000
	thumb_func_end FUN_0200DFA4

	thumb_func_start FUN_0200E024
FUN_0200E024: @ 0x0200E024
	ldr r3, _0200E02C @ =FUN_0200DFA4
	ldr r0, [r0]
	bx r3
	nop
_0200E02C: .4byte FUN_0200DFA4
	thumb_func_end FUN_0200E024

	thumb_func_start FUN_0200E030
FUN_0200E030: @ 0x0200E030
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	bl FUN_020248B0
	adds r6, r0, #0
	ldr r0, [r6]
	blx FUN_020F2178
	ldr r1, _0200E05C @ =0x45800000
	blx FUN_020F1CC8
	str r0, [r5]
	ldr r0, [r6, #4]
	blx FUN_020F2178
	ldr r1, _0200E05C @ =0x45800000
	blx FUN_020F1CC8
	str r0, [r4]
	pop {r4, r5, r6, pc}
	nop
_0200E05C: .4byte 0x45800000
	thumb_func_end FUN_0200E030

	thumb_func_start FUN_0200E060
FUN_0200E060: @ 0x0200E060
	ldr r3, _0200E068 @ =FUN_0200E030
	ldr r0, [r0]
	bx r3
	nop
_0200E068: .4byte FUN_0200E030
	thumb_func_end FUN_0200E060

	thumb_func_start FUN_0200E06C
FUN_0200E06C: @ 0x0200E06C
	ldr r3, _0200E070 @ =FUN_02024818
	bx r3
	.align 2, 0
_0200E070: .4byte FUN_02024818
	thumb_func_end FUN_0200E06C

	thumb_func_start FUN_0200E074
FUN_0200E074: @ 0x0200E074
	ldr r3, _0200E07C @ =FUN_0200E06C
	ldr r0, [r0]
	bx r3
	nop
_0200E07C: .4byte FUN_0200E06C
	thumb_func_end FUN_0200E074

	thumb_func_start FUN_0200E080
FUN_0200E080: @ 0x0200E080
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	bl FUN_020248B4
	adds r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r4, #0
	bl FUN_02024818
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200E080

	thumb_func_start FUN_0200E098
FUN_0200E098: @ 0x0200E098
	ldr r3, _0200E0A0 @ =FUN_0200E080
	ldr r0, [r0]
	bx r3
	nop
_0200E0A0: .4byte FUN_0200E080
	thumb_func_end FUN_0200E098

	thumb_func_start FUN_0200E0A4
FUN_0200E0A4: @ 0x0200E0A4
	ldr r3, _0200E0A8 @ =FUN_020248B4
	bx r3
	.align 2, 0
_0200E0A8: .4byte FUN_020248B4
	thumb_func_end FUN_0200E0A4

	thumb_func_start FUN_0200E0AC
FUN_0200E0AC: @ 0x0200E0AC
	ldr r3, _0200E0B4 @ =FUN_0200E0A4
	ldr r0, [r0]
	bx r3
	nop
_0200E0B4: .4byte FUN_0200E0A4
	thumb_func_end FUN_0200E0AC

	thumb_func_start FUN_0200E0B8
FUN_0200E0B8: @ 0x0200E0B8
	ldr r3, _0200E0BC @ =FUN_02024890
	bx r3
	.align 2, 0
_0200E0BC: .4byte FUN_02024890
	thumb_func_end FUN_0200E0B8

	thumb_func_start FUN_0200E0C0
FUN_0200E0C0: @ 0x0200E0C0
	ldr r3, _0200E0C8 @ =FUN_0200E0B8
	ldr r0, [r0]
	bx r3
	nop
_0200E0C8: .4byte FUN_0200E0B8
	thumb_func_end FUN_0200E0C0

	thumb_func_start FUN_0200E0CC
FUN_0200E0CC: @ 0x0200E0CC
	push {lr}
	sub sp, #0xc
	lsls r1, r1, #0xc
	str r1, [sp]
	lsls r1, r2, #0xc
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	ldr r0, [r0]
	add r1, sp, #0
	bl FUN_020247E4
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_0200E0CC

	thumb_func_start FUN_0200E0E8
FUN_0200E0E8: @ 0x0200E0E8
	ldr r3, _0200E0F0 @ =FUN_02024B38
	ldr r0, [r0]
	bx r3
	nop
_0200E0F0: .4byte FUN_02024B38
	thumb_func_end FUN_0200E0E8

	thumb_func_start FUN_0200E0F4
FUN_0200E0F4: @ 0x0200E0F4
	ldr r3, _0200E0F8 @ =FUN_02024B78
	bx r3
	.align 2, 0
_0200E0F8: .4byte FUN_02024B78
	thumb_func_end FUN_0200E0F4

	thumb_func_start FUN_0200E0FC
FUN_0200E0FC: @ 0x0200E0FC
	ldr r3, _0200E104 @ =FUN_0200E0F4
	ldr r0, [r0]
	bx r3
	nop
_0200E104: .4byte FUN_0200E0F4
	thumb_func_end FUN_0200E0FC

	thumb_func_start FUN_0200E108
FUN_0200E108: @ 0x0200E108
	ldr r3, _0200E10C @ =FUN_02024BAC
	bx r3
	.align 2, 0
_0200E10C: .4byte FUN_02024BAC
	thumb_func_end FUN_0200E108

	thumb_func_start FUN_0200E110
FUN_0200E110: @ 0x0200E110
	ldr r3, _0200E118 @ =FUN_0200E108
	ldr r0, [r0]
	bx r3
	nop
_0200E118: .4byte FUN_0200E108
	thumb_func_end FUN_0200E110

	thumb_func_start FUN_0200E11C
FUN_0200E11C: @ 0x0200E11C
	ldr r3, _0200E124 @ =FUN_02024C9C
	ldr r0, [r0]
	bx r3
	nop
_0200E124: .4byte FUN_02024C9C
	thumb_func_end FUN_0200E11C

	thumb_func_start FUN_0200E128
FUN_0200E128: @ 0x0200E128
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200E146
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E146:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl FUN_0200A1D8
	adds r5, r0, #0
	beq _0200E174
	bl FUN_0200AD64
	ldr r0, [r4, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E174:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200E182
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E182:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E128

	thumb_func_start FUN_0200E188
FUN_0200E188: @ 0x0200E188
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200E1A6
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E1A6:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl FUN_0200A1D8
	adds r5, r0, #0
	beq _0200E1D4
	bl FUN_0200AE18
	ldr r0, [r4, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E1D4:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200E1E2
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E1E2:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E188

	thumb_func_start FUN_0200E1E8
FUN_0200E1E8: @ 0x0200E1E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x28]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0200A728
	cmp r0, #0
	bne _0200E206
	add sp, #0xc
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_0200E206:
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r5]
	adds r2, r7, #0
	str r0, [sp, #8]
	ldr r0, [r4, #0xc]
	bl FUN_0200A3C8
	adds r5, r0, #0
	beq _0200E234
	bl FUN_0200AE18
	ldr r0, [r4, #0x24]
	adds r1, r5, #0
	bl FUN_0200DAE4
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E234:
	bl FUN_0202551C
	cmp r5, #0
	beq _0200E242
	add sp, #0xc
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_0200E242:
	movs r0, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E1E8

	thumb_func_start FUN_0200E248
FUN_0200E248: @ 0x0200E248
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x24]
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_0200A7BC
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	adds r2, r7, #0
	bl FUN_0200A2E4
	adds r0, r6, #0
	bl FUN_0200AE8C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E248

	thumb_func_start FUN_0200E27C
FUN_0200E27C: @ 0x0200E27C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x24]
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_0200A7BC
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0x10]
	adds r2, r7, #0
	bl FUN_0200A350
	adds r0, r6, #0
	bl FUN_0200B084
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E27C

	thumb_func_start FUN_0200E2B0
FUN_0200E2B0: @ 0x0200E2B0
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_0200E2B0

	thumb_func_start FUN_0200E2B4
FUN_0200E2B4: @ 0x0200E2B4
	str r1, [r0]
	bx lr
	thumb_func_end FUN_0200E2B4

	thumb_func_start FUN_0200E2B8
FUN_0200E2B8: @ 0x0200E2B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	ldr r1, [sp, #0x24]
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_0200A7BC
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0xc]
	adds r2, r7, #0
	bl FUN_0200A590
	adds r0, r6, #0
	bl FUN_0200AE8C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E2B8

	thumb_func_start FUN_0200E2EC
FUN_0200E2EC: @ 0x0200E2EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, [sp, #0x24]
	adds r7, r2, #0
	str r3, [sp, #8]
	bl FUN_0200A7BC
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #8]
	str r0, [sp]
	ldr r0, [r5]
	adds r1, r6, #0
	str r0, [sp, #4]
	ldr r0, [r4, #0x10]
	adds r2, r7, #0
	bl FUN_0200A5FC
	adds r0, r6, #0
	bl FUN_0200B084
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E2EC

	thumb_func_start FUN_0200E320
FUN_0200E320: @ 0x0200E320
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0200E338 @ =0x021D110C
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r0, [r0, #0x18]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E338: .4byte 0x021D110C
	thumb_func_end FUN_0200E320

	thumb_func_start FUN_0200E33C
FUN_0200E33C: @ 0x0200E33C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0200E354 @ =0x021D110C
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r0, [r0, #0x1c]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E354: .4byte 0x021D110C
	thumb_func_end FUN_0200E33C

	thumb_func_start FUN_0200E358
FUN_0200E358: @ 0x0200E358
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0200E370 @ =0x021D110C
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r0, [r0, #0x24]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E370: .4byte 0x021D110C
	thumb_func_end FUN_0200E358

	thumb_func_start FUN_0200E374
FUN_0200E374: @ 0x0200E374
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0200E38C @ =0x021D110C
	adds r4, r1, #0
	adds r3, r2, #0
	ldr r0, [r0, #0x20]
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_0201F8C0
	pop {r3, r4, r5, pc}
	nop
_0200E38C: .4byte 0x021D110C
	thumb_func_end FUN_0200E374

	thumb_func_start FUN_0200E390
FUN_0200E390: @ 0x0200E390
	ldr r3, _0200E394 @ =FUN_0201F954
	bx r3
	.align 2, 0
_0200E394: .4byte FUN_0201F954
	thumb_func_end FUN_0200E390

	thumb_func_start FUN_0200E398
FUN_0200E398: @ 0x0200E398
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r3, #0
	str r2, [sp]
	bne _0200E3BE
	movs r1, #0
	str r1, [sp, #4]
	ldr r0, [sp, #0x20]
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	movs r0, #0x26
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
_0200E3BE:
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x20]
	movs r1, #1
	str r0, [sp, #0xc]
	movs r0, #0x26
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200E398

	thumb_func_start FUN_0200E3D8
FUN_0200E3D8: @ 0x0200E3D8
	movs r0, #0x19
	bx lr
	thumb_func_end FUN_0200E3D8

	thumb_func_start FUN_0200E3DC
FUN_0200E3DC: @ 0x0200E3DC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	adds r5, r1, #0
	adds r4, r3, #0
	cmp r0, #0
	beq _0200E3F2
	movs r1, #1
	b _0200E3F4
_0200E3F2:
	movs r1, #0
_0200E3F4:
	str r2, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	adds r2, r6, #0
	str r0, [sp, #0xc]
	movs r0, #0x26
	adds r3, r5, #0
	bl FUN_020078F0
	add r0, sp, #0x10
	ldrb r0, [r0, #0x10]
	cmp r0, #2
	bne _0200E416
	movs r1, #0x2e
	b _0200E418
_0200E416:
	movs r1, #0x19
_0200E418:
	cmp r5, #4
	bhs _0200E432
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x24]
	movs r2, #0
	str r0, [sp, #4]
	movs r0, #0x26
	lsls r3, r4, #5
	bl FUN_02007938
	add sp, #0x10
	pop {r4, r5, r6, pc}
_0200E432:
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x24]
	movs r2, #4
	str r0, [sp, #4]
	movs r0, #0x26
	lsls r3, r4, #5
	bl FUN_02007938
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0200E3DC

	thumb_func_start FUN_0200E448
FUN_0200E448: @ 0x0200E448
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r2, [sp, #0x1c]
	ldr r5, [sp, #0x40]
	subs r7, r2, #1
	ldr r2, [sp, #0x18]
	str r0, [sp, #0x10]
	subs r6, r2, #1
	lsls r2, r7, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp]
	movs r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	lsls r3, r6, #0x18
	str r5, [sp, #0xc]
	add r2, sp, #0x28
	ldrh r2, [r2, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add r1, sp, #0x28
	ldrh r4, [r1, #0x1c]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldrb r0, [r1, #0x10]
	adds r2, r4, #1
	lsls r2, r2, #0x10
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x18]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	add r0, sp, #0x28
	ldrb r1, [r0, #0x10]
	ldr r0, [sp, #0x18]
	adds r2, r4, #2
	adds r0, r0, r1
	str r0, [sp, #0x20]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #3
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x14]
	lsls r2, r2, #0x10
	lsls r3, r6, #0x18
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x14]
	adds r2, r4, #5
	lsls r2, r2, #0x10
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add r0, sp, #0x28
	ldrb r1, [r0, #0x14]
	ldr r0, [sp, #0x1c]
	adds r2, r4, #6
	adds r7, r0, r1
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r6, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x28
	ldrb r0, [r0, #0x10]
	adds r2, r4, #7
	lsls r2, r2, #0x10
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	ldr r3, [sp, #0x18]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	adds r4, #8
	lsls r2, r4, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E448

	thumb_func_start FUN_0200E580
FUN_0200E580: @ 0x0200E580
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0201EE8C
	str r0, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_0201EE98
	str r0, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_0201EE9C
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0201EE90
	str r0, [sp, #0x1c]
	adds r0, r5, #0
	bl FUN_0201EE94
	ldr r1, [sp, #0x1c]
	ldr r2, [sp, #0x14]
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x18]
	bl FUN_0200E448
	cmp r4, #0
	bne _0200E5D0
	adds r0, r5, #0
	bl FUN_0201D578
_0200E5D0:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200E580

	thumb_func_start FUN_0200E5D4
FUN_0200E5D4: @ 0x0200E5D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0201EE8C
	str r0, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_0201EE98
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_0201EE9C
	adds r7, r0, #0
	adds r0, r5, #0
	bl FUN_0201EE90
	str r0, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_0201EE94
	subs r1, r7, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	ldr r1, [sp, #0x14]
	adds r0, r0, #2
	adds r1, r1, #2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r0, #0x18
	str r1, [sp, #4]
	lsrs r0, r0, #0x18
	subs r3, r6, #1
	lsls r3, r3, #0x18
	str r0, [sp, #8]
	movs r2, #0
	str r2, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	cmp r4, #0
	bne _0200E636
	adds r0, r5, #0
	bl FUN_0201D8C8
_0200E636:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E5D4

	thumb_func_start FUN_0200E63C
FUN_0200E63C: @ 0x0200E63C
	adds r0, r0, #2
	bx lr
	thumb_func_end FUN_0200E63C

	thumb_func_start FUN_0200E640
FUN_0200E640: @ 0x0200E640
	adds r0, #0x1a
	bx lr
	thumb_func_end FUN_0200E640

	thumb_func_start FUN_0200E644
FUN_0200E644: @ 0x0200E644
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #0x10]
	add r0, sp, #0x18
	ldrb r7, [r0, #0x10]
	adds r6, r2, #0
	adds r5, r1, #0
	adds r0, r7, #0
	adds r4, r3, #0
	bl FUN_0200E63C
	adds r1, r0, #0
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #0x10]
	str r0, [sp, #0xc]
	movs r0, #0x26
	adds r3, r5, #0
	bl FUN_020078F0
	cmp r5, #4
	bhs _0200E694
	adds r0, r7, #0
	bl FUN_0200E640
	adds r1, r0, #0
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	movs r2, #0
	str r0, [sp, #4]
	movs r0, #0x26
	lsls r3, r4, #5
	bl FUN_02007938
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
_0200E694:
	adds r0, r7, #0
	bl FUN_0200E640
	adds r1, r0, #0
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	movs r2, #4
	str r0, [sp, #4]
	movs r0, #0x26
	lsls r3, r4, #5
	bl FUN_02007938
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E644

	thumb_func_start FUN_0200E6B4
FUN_0200E6B4: @ 0x0200E6B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	str r1, [sp, #0x10]
	str r2, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r2, [sp, #0x4c]
	adds r7, r0, #0
	str r2, [sp, #0x4c]
	ldr r2, [sp, #0x18]
	ldr r5, [sp, #0x50]
	subs r6, r2, #1
	ldr r2, [sp, #0x14]
	subs r2, r2, #2
	str r2, [sp, #0x28]
	lsls r2, r6, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp]
	movs r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	add r2, sp, #0x38
	lsls r3, r3, #0x18
	ldrh r2, [r2, #0x1c]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x14]
	subs r0, r0, #1
	str r0, [sp, #0x24]
	add r0, sp, #0x38
	ldrh r4, [r0, #0x1c]
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x24]
	str r5, [sp, #0xc]
	adds r2, r4, #1
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x38
	ldrb r0, [r0, #0x10]
	adds r2, r4, #2
	lsls r2, r2, #0x10
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x14]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	add r0, sp, #0x38
	ldrb r1, [r0, #0x10]
	ldr r0, [sp, #0x14]
	adds r2, r4, #3
	adds r0, r0, r1
	str r0, [sp, #0x2c]
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x2c]
	adds r2, r4, #4
	adds r0, r0, #1
	str r0, [sp, #0x20]
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x2c]
	adds r2, r4, #5
	adds r0, r0, #2
	str r0, [sp, #0x1c]
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x1c]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x28]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	adds r2, r4, #6
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x24]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	adds r2, r4, #7
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x2c]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	adds r2, #9
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x20]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	adds r2, #0xa
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	ldr r0, [sp, #0x4c]
	ldr r3, [sp, #0x1c]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	adds r2, #0xb
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r2, r4, #0
	ldr r3, [sp, #0x28]
	adds r2, #0xc
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x4c]
	lsrs r2, r2, #0x10
	adds r6, r1, r0
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x24]
	str r5, [sp, #0xc]
	adds r2, #0xd
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	add r0, sp, #0x38
	ldrb r0, [r0, #0x10]
	adds r2, r4, #0
	adds r2, #0xe
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	ldr r1, [sp, #0x10]
	ldr r3, [sp, #0x14]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	adds r2, #0xf
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	adds r2, #0x10
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x1c]
	str r5, [sp, #0xc]
	adds r4, #0x11
	lsls r2, r4, #0x10
	lsls r3, r3, #0x18
	ldr r1, [sp, #0x10]
	adds r0, r7, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E6B4

	thumb_func_start FUN_0200E948
FUN_0200E948: @ 0x0200E948
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	bl FUN_0201EE8C
	str r0, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_0201EE98
	str r0, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_0201EE9C
	str r0, [sp, #0x18]
	adds r0, r5, #0
	bl FUN_0201EE90
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0201EE94
	str r4, [sp]
	str r0, [sp, #4]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	bl FUN_0200E6B4
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E948

	thumb_func_start FUN_0200E998
FUN_0200E998: @ 0x0200E998
	push {r4, r5, r6, lr}
	adds r6, r2, #0
	adds r4, r1, #0
	adds r1, r6, #0
	adds r2, r3, #0
	adds r5, r0, #0
	bl FUN_0200E948
	cmp r4, #0
	bne _0200E9B2
	adds r0, r5, #0
	bl FUN_0201D578
_0200E9B2:
	adds r0, r6, #0
	bl FUN_020027F0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0200E998

	thumb_func_start FUN_0200E9BC
FUN_0200E9BC: @ 0x0200E9BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0201EE8C
	str r0, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_0201EE98
	adds r6, r0, #0
	adds r0, r5, #0
	bl FUN_0201EE9C
	adds r7, r0, #0
	adds r0, r5, #0
	bl FUN_0201EE90
	str r0, [sp, #0x14]
	adds r0, r5, #0
	bl FUN_0201EE94
	subs r1, r7, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	ldr r1, [sp, #0x14]
	adds r0, r0, #2
	adds r1, r1, #5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r0, #0x18
	str r1, [sp, #4]
	lsrs r0, r0, #0x18
	subs r3, r6, #2
	lsls r3, r3, #0x18
	str r0, [sp, #8]
	movs r2, #0
	str r2, [sp, #0xc]
	ldr r0, [r5]
	ldr r1, [sp, #0x10]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	cmp r4, #0
	bne _0200EA1E
	adds r0, r5, #0
	bl FUN_0201D8C8
_0200EA1E:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200E9BC

	thumb_func_start FUN_0200EA24
FUN_0200EA24: @ 0x0200EA24
	push {r4, r5, lr}
	sub sp, #0x24
	adds r5, r1, #0
	str r0, [sp, #0x1c]
	add r1, sp, #0x14
	strh r3, [r1, #0xc]
	adds r4, r2, #0
	add r0, sp, #0x20
	ldrh r2, [r0, #0x10]
	adds r3, r4, #0
	strh r2, [r1, #0xe]
	ldr r2, [sp, #0x34]
	str r2, [sp, #0x14]
	ldrh r2, [r0, #0x18]
	strh r2, [r1, #4]
	ldrh r2, [r0, #0x1c]
	strh r2, [r1, #6]
	ldrh r1, [r0, #0x20]
	adds r2, r5, #0
	str r1, [sp]
	ldrh r1, [r0, #0x24]
	str r1, [sp, #4]
	ldrh r1, [r0, #0x28]
	str r1, [sp, #8]
	ldrh r0, [r0, #0x2c]
	add r1, sp, #0x14
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl FUN_0201CE08
	add sp, #0x24
	pop {r4, r5, pc}
	thumb_func_end FUN_0200EA24

	thumb_func_start FUN_0200EA68
FUN_0200EA68: @ 0x0200EA68
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x48
	str r2, [sp, #0x24]
	str r3, [sp, #0x28]
	str r0, [sp, #0x20]
	ldr r0, [r0]
	adds r7, r1, #0
	bl FUN_0201ACAC
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	bl FUN_0201EE8C
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x28]
	lsls r0, r0, #7
	str r0, [sp, #0x30]
	ldr r1, [sp, #0x30]
	adds r0, r6, #0
	bl FUN_0201AA8C
	adds r5, r0, #0
	ldr r0, [sp, #0x2c]
	bl FUN_0201CB4C
	adds r4, r0, #0
	str r6, [sp]
	movs r0, #0x26
	adds r1, r7, #0
	movs r2, #0
	add r3, sp, #0x44
	bl FUN_020079BC
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x44]
	movs r7, #0
	ldr r0, [r0, #0x14]
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x28]
	cmp r0, #0
	ble _0200EB12
	ldr r0, [sp, #0x24]
	adds r0, #0xa
	lsls r0, r0, #5
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x24]
	adds r0, #0xb
	lsls r0, r0, #5
	str r0, [sp, #0x40]
_0200EACA:
	ldr r1, [sp, #0x3c]
	lsls r6, r7, #7
	adds r0, r5, r6
	adds r1, r4, r1
	movs r2, #0x20
	blx FUN_020E5AD8
	adds r0, r6, #0
	ldr r1, [sp, #0x40]
	adds r0, #0x20
	adds r0, r5, r0
	adds r1, r4, r1
	movs r2, #0x20
	blx FUN_020E5AD8
	adds r0, r6, #0
	ldr r1, [sp, #0x3c]
	adds r0, #0x40
	adds r0, r5, r0
	adds r1, r4, r1
	movs r2, #0x20
	blx FUN_020E5AD8
	ldr r1, [sp, #0x40]
	adds r6, #0x60
	adds r0, r5, r6
	adds r1, r4, r1
	movs r2, #0x20
	blx FUN_020E5AD8
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #0x28]
	cmp r7, r0
	blt _0200EACA
_0200EB12:
	add r1, sp, #0x50
	ldrb r2, [r1, #0x14]
	movs r3, #0x10
	ldr r0, [sp, #0x28]
	subs r4, r3, r2
	muls r0, r4, r0
	ldrb r1, [r1, #0x10]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r3, r3, r1
	lsls r3, r3, #0x18
	str r0, [sp]
	lsrs r3, r3, #0x18
	str r5, [sp, #4]
	str r3, [sp, #8]
	str r0, [sp, #0xc]
	movs r4, #0
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	str r3, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x38]
	bl FUN_0200EA24
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x30]
	adds r0, #0x12
	str r0, [sp, #0x24]
	str r0, [sp]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x2c]
	ldr r0, [r0]
	adds r2, r5, #0
	bl FUN_0201C0C0
	ldr r0, [sp, #0x34]
	bl FUN_0201AB0C
	adds r0, r5, #0
	bl FUN_0201AB0C
	add sp, #0x48
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200EA68

	thumb_func_start FUN_0200EB68
FUN_0200EB68: @ 0x0200EB68
	push {r3, lr}
	sub sp, #8
	movs r3, #3
	adds r2, r1, #0
	str r3, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r1, #0x16
	bl FUN_0200EA68
	add sp, #8
	pop {r3, pc}
	thumb_func_end FUN_0200EB68

	thumb_func_start FUN_0200EB80
FUN_0200EB80: @ 0x0200EB80
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r0, [sp, #4]
	str r1, [sp, #8]
	add r0, sp, #0x18
	ldrb r0, [r0, #0x10]
	adds r7, r2, #0
	adds r5, r3, #0
	bl FUN_0200E63C
	adds r1, r0, #0
	ldr r0, [sp, #0x2c]
	movs r2, #0
	str r0, [sp]
	movs r0, #0x26
	add r3, sp, #0x10
	bl FUN_020079BC
	str r0, [sp, #0xc]
	movs r1, #9
	ldr r0, [sp, #0x2c]
	lsls r1, r1, #6
	bl FUN_0201AA8C
	ldr r1, [sp, #0x10]
	movs r2, #9
	ldr r1, [r1, #0x14]
	lsls r2, r2, #6
	adds r4, r0, #0
	blx FUN_020E5AD8
	movs r0, #9
	movs r3, #0
	lsls r0, r0, #6
	movs r1, #0xf
_0200EBC6:
	ldrb r2, [r4, r3]
	lsls r6, r2, #0x14
	ands r2, r1
	lsls r2, r2, #0x18
	lsrs r6, r6, #0x18
	lsrs r2, r2, #0x18
	cmp r6, #0
	bne _0200EBD8
	adds r6, r5, #0
_0200EBD8:
	cmp r2, #0
	bne _0200EBDE
	adds r2, r5, #0
_0200EBDE:
	lsls r6, r6, #4
	orrs r2, r6
	strb r2, [r4, r3]
	adds r3, r3, #1
	cmp r3, r0
	blo _0200EBC6
	str r7, [sp]
	movs r3, #9
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	adds r2, r4, #0
	lsls r3, r3, #6
	bl FUN_0201C0C0
	ldr r0, [sp, #0xc]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200EB80

	thumb_func_start FUN_0200EC0C
FUN_0200EC0C: @ 0x0200EC0C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r0, [sp, #0x10]
	adds r5, r2, #0
	movs r0, #0xf
	adds r6, r1, #0
	adds r7, r3, #0
	str r5, [sp]
	lsls r0, r0, #6
	str r0, [sp, #4]
	movs r1, #0
	ldr r4, [sp, #0x38]
	str r1, [sp, #8]
	ldr r2, [sp, #0x10]
	movs r0, #0x24
	adds r3, r6, #0
	str r4, [sp, #0xc]
	bl FUN_020078F0
	movs r0, #0x24
	movs r1, #1
	adds r2, r4, #0
	bl FUN_02007524
	add r1, sp, #0x18
	str r0, [sp, #0x14]
	blx FUN_020B7140
	add r2, sp, #0x20
	ldr r1, [sp, #0x18]
	ldrb r2, [r2, #0x10]
	lsls r3, r7, #0x15
	ldr r1, [r1, #0xc]
	lsls r2, r2, #5
	adds r1, r1, r2
	adds r0, r6, #0
	movs r2, #0x20
	lsrs r3, r3, #0x10
	bl FUN_0201C260
	ldr r1, [sp, #0x14]
	adds r0, r4, #0
	bl FUN_0201AB80
	add r0, sp, #0x20
	ldrb r3, [r0, #0x10]
	cmp r3, #1
	bhi _0200EC80
	ldrh r0, [r0, #0x14]
	adds r5, #0x1e
	lsls r2, r5, #0x10
	str r0, [sp]
	ldr r0, [sp, #0x10]
	adds r1, r6, #0
	lsrs r2, r2, #0x10
	str r4, [sp, #4]
	bl FUN_0200EC84
_0200EC80:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200EC0C

	thumb_func_start FUN_0200EC84
FUN_0200EC84: @ 0x0200EC84
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r1, [sp, #0x20]
	cmp r3, #0
	bne _0200EC98
	adds r1, #0x21
	lsls r0, r1, #0x10
	b _0200EC9C
_0200EC98:
	adds r0, r1, #2
	lsls r0, r0, #0x10
_0200EC9C:
	lsrs r1, r0, #0x10
	movs r0, #3
	str r2, [sp]
	lsls r0, r0, #8
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	adds r2, r5, #0
	str r0, [sp, #0xc]
	movs r0, #0x24
	adds r3, r4, #0
	bl FUN_020078F0
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200EC84

	thumb_func_start FUN_0200ECBC
FUN_0200ECBC: @ 0x0200ECBC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x40
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r2, [sp, #0x1c]
	ldr r6, [sp, #0x5c]
	subs r7, r2, #1
	ldr r2, [sp, #0x18]
	ldr r5, [sp, #0x60]
	str r2, [sp, #0x34]
	subs r2, #9
	str r2, [sp, #0x34]
	lsls r2, r7, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp]
	movs r2, #1
	str r2, [sp, #4]
	str r2, [sp, #8]
	ldr r3, [sp, #0x34]
	str r5, [sp, #0xc]
	add r2, sp, #0x48
	lsls r3, r3, #0x18
	ldrh r2, [r2, #0x1c]
	lsrs r3, r3, #0x18
	str r0, [sp, #0x10]
	bl FUN_0201C8C4
	ldr r0, [sp, #0x18]
	str r0, [sp, #0x30]
	subs r0, #8
	str r0, [sp, #0x30]
	add r0, sp, #0x48
	ldrh r4, [r0, #0x1c]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x30]
	str r5, [sp, #0xc]
	adds r2, r4, #1
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add r0, sp, #0x48
	ldrb r0, [r0, #0x10]
	adds r2, r4, #2
	lsls r2, r2, #0x10
	str r0, [sp, #0x3c]
	adds r0, r0, #7
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x18]
	lsrs r2, r2, #0x10
	subs r0, r0, #7
	str r0, [sp, #0x20]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r3, [sp, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r2, r4, #3
	lsls r2, r2, #0x10
	ldr r1, [sp, #0x18]
	ldr r0, [sp, #0x3c]
	lsrs r2, r2, #0x10
	adds r0, r1, r0
	str r0, [sp, #0x38]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x38]
	adds r2, r4, #4
	adds r0, r0, #1
	str r0, [sp, #0x2c]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x38]
	adds r0, r0, #2
	str r0, [sp, #0x28]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	adds r2, r4, #5
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x34]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	adds r2, r4, #6
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x30]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	adds r2, r4, #7
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	ldr r3, [sp, #0x18]
	adds r2, #8
	subs r3, r3, #1
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	adds r2, #9
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	adds r2, #0xa
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r6, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	adds r2, #0xb
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	adds r2, r4, #0
	adds r6, r0, r6
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x34]
	str r5, [sp, #0xc]
	adds r2, #0xc
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x30]
	str r5, [sp, #0xc]
	adds r2, #0xd
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, [sp, #0x24]
	adds r2, r4, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldr r3, [sp, #0x20]
	str r5, [sp, #0xc]
	adds r2, #0xe
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x38]
	str r5, [sp, #0xc]
	adds r2, #0xf
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r2, r4, #0
	ldr r3, [sp, #0x2c]
	str r5, [sp, #0xc]
	adds r2, #0x10
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r3, [sp, #0x28]
	str r5, [sp, #0xc]
	adds r4, #0x11
	lsls r2, r4, #0x10
	lsls r3, r3, #0x18
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x14]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	add sp, #0x40
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200ECBC

	thumb_func_start FUN_0200EF84
FUN_0200EF84: @ 0x0200EF84
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	str r1, [sp, #0x10]
	adds r7, r0, #0
	str r2, [sp, #0x14]
	bl FUN_0201EE8C
	str r0, [sp, #0x20]
	adds r0, r7, #0
	bl FUN_0201EE98
	subs r0, r0, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	adds r0, r7, #0
	bl FUN_0201EE9C
	str r0, [sp, #0x1c]
	movs r0, #0
	str r0, [sp, #0x24]
_0200EFAE:
	ldr r2, [sp, #0x24]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x24]
	adds r3, r2, #0
	adds r0, r1, r0
	movs r1, #6
	muls r3, r1, r3
	ldr r1, [sp, #0x10]
	lsls r0, r0, #0x18
	movs r4, #0
	adds r5, r1, r3
	lsrs r6, r0, #0x18
_0200EFC6:
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	ldr r3, [sp, #0x18]
	str r0, [sp, #0xc]
	adds r2, r4, r5
	adds r3, r3, r4
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r7]
	ldr r1, [sp, #0x20]
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #6
	blo _0200EFC6
	ldr r0, [sp, #0x24]
	adds r0, r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x24]
	cmp r0, #4
	blo _0200EFAE
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0200EF84

	thumb_func_start FUN_0200F004
FUN_0200F004: @ 0x0200F004
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r4, r0, #0
	str r1, [sp, #0x10]
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0201EE8C
	str r0, [sp, #0x14]
	add r0, sp, #0x30
	ldrb r0, [r0, #0x10]
	cmp r0, #1
	bhi _0200F062
	adds r0, r4, #0
	bl FUN_0201EE98
	str r0, [sp, #0x18]
	adds r0, r4, #0
	bl FUN_0201EE9C
	str r0, [sp, #0x1c]
	adds r0, r4, #0
	bl FUN_0201EE90
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_0201EE94
	str r5, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	ldr r3, [sp, #0x1c]
	bl FUN_0200ECBC
	adds r1, r6, #0
	adds r1, #0x1e
	lsls r1, r1, #0x10
	adds r0, r4, #0
	lsrs r1, r1, #0x10
	adds r2, r7, #0
	bl FUN_0200EF84
	b _0200F094
_0200F062:
	adds r0, r4, #0
	bl FUN_0201EE98
	str r0, [sp, #0x20]
	adds r0, r4, #0
	bl FUN_0201EE9C
	str r0, [sp, #0x24]
	adds r0, r4, #0
	bl FUN_0201EE90
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_0201EE94
	str r5, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r6, [sp, #0xc]
	ldr r0, [r4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	bl FUN_0200E6B4
_0200F094:
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _0200F0A0
	adds r0, r4, #0
	bl FUN_0201D578
_0200F0A0:
	adds r0, r6, #0
	bl FUN_020027F0
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0200F004

	thumb_func_start FUN_0200F0AC
FUN_0200F0AC: @ 0x0200F0AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	str r0, [sp, #0x20]
	ldr r0, [r0]
	str r1, [sp, #0x24]
	bl FUN_0201ACAC
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x20]
	bl FUN_0201EE8C
	bl FUN_0201CB4C
	adds r5, r0, #0
	ldr r0, [sp, #0x28]
	ldr r1, _0200F1C4 @ =0x0000048C
	bl FUN_0201AA8C
	ldr r1, [sp, #0x24]
	adds r4, r0, #0
	ldr r0, _0200F1C8 @ =0x00000404
	adds r1, #0x12
	lsls r1, r1, #5
	adds r0, r4, r0
	adds r1, r5, r1
	movs r2, #0x80
	blx FUN_020E5AD8
	ldr r0, [sp, #0x28]
	movs r1, #0x80
	bl FUN_0201AA8C
	ldr r1, [sp, #0x24]
	movs r2, #0x20
	adds r1, #0xa
	lsls r1, r1, #5
	str r1, [sp, #0x2c]
	adds r1, r5, r1
	adds r6, r0, #0
	blx FUN_020E5AD8
	ldr r0, [sp, #0x24]
	movs r2, #0x20
	adds r0, #0xb
	lsls r7, r0, #5
	adds r0, r6, #0
	adds r0, #0x20
	adds r1, r5, r7
	blx FUN_020E5AD8
	ldr r1, [sp, #0x2c]
	adds r0, r6, #0
	adds r0, #0x40
	adds r1, r5, r1
	movs r2, #0x20
	blx FUN_020E5AD8
	adds r0, r6, #0
	adds r0, #0x60
	adds r1, r5, r7
	movs r2, #0x20
	blx FUN_020E5AD8
	movs r5, #0
	adds r7, r4, #4
_0200F12E:
	lsls r0, r5, #7
	adds r0, r7, r0
	adds r1, r6, #0
	movs r2, #0x80
	blx FUN_020E5AD8
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #8
	blo _0200F12E
	adds r0, r6, #0
	bl FUN_0201AB0C
	ldr r0, [sp, #0x28]
	movs r1, #0x17
	str r0, [sp]
	movs r0, #0x26
	movs r2, #0
	add r3, sp, #0x30
	bl FUN_020079BC
	movs r2, #0x80
	adds r5, r0, #0
	str r2, [sp]
	adds r0, r4, #4
	str r0, [sp, #4]
	movs r3, #0x10
	str r3, [sp, #8]
	str r2, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	str r1, [sp, #0x14]
	str r3, [sp, #0x18]
	str r2, [sp, #0x1c]
	ldr r0, [sp, #0x30]
	adds r2, r1, #0
	ldr r0, [r0, #0x14]
	bl FUN_0200EA24
	adds r0, r5, #0
	bl FUN_0201AB0C
	ldr r0, [sp, #0x20]
	ldr r1, _0200F1CC @ =0x00000484
	str r0, [r4]
	ldr r0, [sp, #0x24]
	movs r2, #0
	strh r0, [r4, r1]
	adds r0, r1, #2
	strb r2, [r4, r0]
	adds r0, r1, #3
	ldrb r3, [r4, r0]
	movs r0, #0x7f
	bics r3, r0
	adds r0, r1, #3
	strb r3, [r4, r0]
	adds r0, r1, #4
	ldrb r3, [r4, r0]
	movs r0, #3
	bics r3, r0
	adds r0, r1, #4
	strb r3, [r4, r0]
	ldr r0, _0200F1D0 @ =FUN_0200F3D0
	adds r1, r4, #0
	bl FUN_0200E33C
	adds r0, r4, #0
	movs r1, #1
	bl FUN_0200F1D4
	adds r0, r4, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200F1C4: .4byte 0x0000048C
_0200F1C8: .4byte 0x00000404
_0200F1CC: .4byte 0x00000484
_0200F1D0: .4byte FUN_0200F3D0
	thumb_func_end FUN_0200F0AC

	thumb_func_start FUN_0200F1D4
FUN_0200F1D4: @ 0x0200F1D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	bl FUN_0201EE8C
	adds r4, r0, #0
	ldr r0, [r5]
	bl FUN_0201EE98
	str r0, [sp, #0x18]
	ldr r0, [r5]
	bl FUN_0201EE9C
	str r0, [sp, #0x1c]
	ldr r0, [r5]
	bl FUN_0201EE90
	str r0, [sp, #0x20]
	cmp r6, #2
	bne _0200F2DE
	ldr r2, _0200F3CC @ =0x00000484
	adds r1, r4, #0
	ldrh r0, [r5, r2]
	subs r2, #0x80
	adds r2, r5, r2
	adds r0, #0x12
	str r0, [sp]
	ldr r0, [r5]
	movs r3, #0x80
	ldr r0, [r0]
	bl FUN_0201C0C0
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	adds r7, r0, #2
	ldr r0, [sp, #0x20]
	ldr r2, _0200F3CC @ =0x00000484
	adds r6, r1, r0
	adds r0, r6, #1
	str r0, [sp, #0x14]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldrh r2, [r5, r2]
	ldr r0, [r5]
	ldr r3, [sp, #0x14]
	adds r2, #0xa
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r0]
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	adds r6, r6, #2
	lsls r3, r6, #0x18
	adds r2, #0xb
	lsls r2, r2, #0x10
	ldr r0, [r0]
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x14]
	adds r7, r0, #3
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsls r3, r3, #0x18
	ldr r0, [r0]
	adds r2, #0xa
	lsls r2, r2, #0x10
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsls r3, r6, #0x18
	ldr r0, [r0]
	adds r2, #0xb
	lsls r2, r2, #0x10
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [r5]
	adds r1, r4, #0
	ldr r0, [r0]
	bl FUN_0201BF7C
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
_0200F2DE:
	ldr r3, _0200F3CC @ =0x00000484
	adds r2, r5, #4
	ldrh r0, [r5, r3]
	adds r3, r3, #3
	adds r1, r4, #0
	adds r0, #0x12
	str r0, [sp]
	ldrb r3, [r5, r3]
	ldr r0, [r5]
	lsls r3, r3, #0x19
	lsrs r3, r3, #0x19
	lsls r3, r3, #7
	adds r2, r2, r3
	ldr r0, [r0]
	movs r3, #0x80
	bl FUN_0201C0C0
	cmp r6, #0
	beq _0200F3C6
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	adds r7, r0, #2
	ldr r0, [sp, #0x20]
	ldr r2, _0200F3CC @ =0x00000484
	adds r6, r1, r0
	adds r0, r6, #1
	str r0, [sp, #0x10]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldrh r2, [r5, r2]
	ldr r0, [r5]
	ldr r3, [sp, #0x10]
	adds r2, #0x12
	lsls r2, r2, #0x10
	lsls r3, r3, #0x18
	ldr r0, [r0]
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	adds r6, r6, #2
	lsls r3, r6, #0x18
	adds r2, #0x13
	lsls r2, r2, #0x10
	ldr r0, [r0]
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [sp, #0x1c]
	ldr r3, [sp, #0x10]
	adds r7, r0, #3
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsls r3, r3, #0x18
	ldr r0, [r0]
	adds r2, #0x14
	lsls r2, r2, #0x10
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r2, _0200F3CC @ =0x00000484
	ldr r0, [r5]
	ldrh r2, [r5, r2]
	lsls r3, r6, #0x18
	ldr r0, [r0]
	adds r2, #0x15
	lsls r2, r2, #0x10
	adds r1, r4, #0
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r0, [r5]
	adds r1, r4, #0
	ldr r0, [r0]
	bl FUN_0201BF7C
_0200F3C6:
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_0200F3CC: .4byte 0x00000484
	thumb_func_end FUN_0200F1D4

	thumb_func_start FUN_0200F3D0
FUN_0200F3D0: @ 0x0200F3D0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _0200F438 @ =0x00000488
	ldrb r2, [r1, r0]
	lsls r2, r2, #0x1e
	lsrs r2, r2, #0x1e
	beq _0200F3F2
	cmp r2, #1
	bne _0200F3EA
	adds r0, r1, #0
	movs r1, #2
	bl FUN_0200F1D4
_0200F3EA:
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r3, r4, r5, pc}
_0200F3F2:
	subs r2, r0, #2
	ldrb r2, [r1, r2]
	adds r3, r2, #1
	subs r2, r0, #2
	strb r3, [r1, r2]
	ldrb r2, [r1, r2]
	cmp r2, #0x10
	bne _0200F434
	movs r3, #0
	subs r2, r0, #2
	strb r3, [r1, r2]
	subs r2, r0, #1
	ldrb r2, [r1, r2]
	movs r4, #0x7f
	bics r2, r4
	subs r4, r0, #1
	ldrb r4, [r1, r4]
	subs r0, r0, #1
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x19
	adds r5, r4, #1
	movs r4, #7
	ands r4, r5
	lsls r4, r4, #0x18
	lsrs r5, r4, #0x18
	movs r4, #0x7f
	ands r4, r5
	orrs r2, r4
	strb r2, [r1, r0]
	adds r0, r1, #0
	adds r1, r3, #0
	bl FUN_0200F1D4
_0200F434:
	pop {r3, r4, r5, pc}
	nop
_0200F438: .4byte 0x00000488
	thumb_func_end FUN_0200F3D0

	thumb_func_start FUN_0200F43C
FUN_0200F43C: @ 0x0200F43C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200F43C

	thumb_func_start FUN_0200F450
FUN_0200F450: @ 0x0200F450
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0200F470 @ =FUN_0200F43C
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0200E374
	ldr r1, _0200F474 @ =0x00000488
	movs r0, #3
	ldrb r2, [r4, r1]
	bics r2, r0
	movs r0, #1
	orrs r0, r2
	strb r0, [r4, r1]
	pop {r4, pc}
	nop
_0200F470: .4byte FUN_0200F43C
_0200F474: .4byte 0x00000488
	thumb_func_end FUN_0200F450

	thumb_func_start FUN_0200F478
FUN_0200F478: @ 0x0200F478
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0200F498 @ =FUN_0200F43C
	adds r1, r4, #0
	movs r2, #0
	bl FUN_0200E374
	ldr r1, _0200F49C @ =0x00000488
	movs r0, #3
	ldrb r2, [r4, r1]
	bics r2, r0
	movs r0, #2
	orrs r0, r2
	strb r0, [r4, r1]
	pop {r4, pc}
	nop
_0200F498: .4byte FUN_0200F43C
_0200F49C: .4byte 0x00000488
	thumb_func_end FUN_0200F478

	thumb_func_start FUN_0200F4A0
FUN_0200F4A0: @ 0x0200F4A0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	ldr r5, [sp, #0x30]
	str r3, [sp, #8]
	adds r6, r0, #0
	adds r7, r1, #0
	str r5, [sp]
	bl FUN_0200F5C4
	adds r4, r0, #0
	adds r1, r5, #0
	bl FUN_0200F600
	adds r0, r4, #0
	bl FUN_0200F62C
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	adds r0, r4, #0
	bl FUN_0200F684
	add r2, sp, #0x10
	ldrh r1, [r2, #0x18]
	ldrb r2, [r2, #0x1c]
	adds r0, r4, #0
	bl FUN_0200F6D4
	add r2, sp, #0x10
	ldrb r1, [r2, #0x10]
	ldrh r2, [r2, #0x14]
	adds r0, r4, #0
	bl FUN_0200F82C
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_0201BF7C
	ldr r0, _0200F4F4 @ =0x0000016F
	adds r0, r4, r0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200F4F4: .4byte 0x0000016F
	thumb_func_end FUN_0200F4A0

	thumb_func_start FUN_0200F4F8
FUN_0200F4F8: @ 0x0200F4F8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r2, [sp, #4]
	ldr r5, [sp, #0x2c]
	str r3, [sp, #8]
	adds r6, r0, #0
	adds r7, r1, #0
	str r5, [sp]
	bl FUN_0200F5C4
	adds r4, r0, #0
	adds r1, r5, #0
	bl FUN_0200F600
	adds r0, r4, #0
	bl FUN_0200F62C
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	adds r0, r4, #0
	bl FUN_0200F684
	ldr r1, [sp, #0x28]
	adds r0, r4, #0
	bl FUN_0200F714
	add r2, sp, #0x10
	ldrb r1, [r2, #0x10]
	ldrh r2, [r2, #0x14]
	adds r0, r4, #0
	bl FUN_0200F82C
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_0201BF7C
	ldr r0, _0200F548 @ =0x0000016F
	adds r0, r4, r0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0200F548: .4byte 0x0000016F
	thumb_func_end FUN_0200F4F8

	thumb_func_start FUN_0200F54C
FUN_0200F54C: @ 0x0200F54C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0200F5C0 @ =0x0000016F
	adds r4, r1, #0
	ldrb r1, [r4, r0]
	cmp r1, #1
	beq _0200F564
	cmp r1, #2
	beq _0200F582
	cmp r1, #3
	beq _0200F594
	b _0200F5A8
_0200F564:
	adds r0, r4, #0
	bl FUN_0200F9DC
	movs r0, #0x59
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0200D9DC
	adds r0, r4, #0
	bl FUN_021E86F4
	adds r0, r5, #0
	bl FUN_02007234
	pop {r3, r4, r5, pc}
_0200F582:
	movs r1, #3
	strb r1, [r4, r0]
	subs r0, #0xb
	ldr r0, [r4, r0]
	movs r1, #1
	ldr r0, [r0]
	bl FUN_020248F0
	b _0200F5A8
_0200F594:
	subs r0, #0xb
	ldr r0, [r4, r0]
	ldr r0, [r0]
	bl FUN_020249F8
	cmp r0, #6
	bne _0200F5A8
	ldr r0, _0200F5C0 @ =0x0000016F
	movs r1, #0
	strb r1, [r4, r0]
_0200F5A8:
	movs r0, #0x59
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	movs r1, #1
	ldr r0, [r0]
	lsls r1, r1, #0xc
	bl FUN_020249B0
	ldr r0, [r4]
	bl FUN_0202457C
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200F5C0: .4byte 0x0000016F
	thumb_func_end FUN_0200F54C

	thumb_func_start FUN_0200F5C4
FUN_0200F5C4: @ 0x0200F5C4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r3, #0
	movs r1, #0x17
	adds r6, r2, #0
	ldr r0, _0200F5F8 @ =FUN_0200F54C
	ldr r3, [sp, #0x18]
	lsls r1, r1, #4
	movs r2, #0
	bl FUN_02007200
	bl FUN_0201F988
	ldr r1, _0200F5FC @ =0x0000016F
	movs r2, #0
	strb r2, [r0, r1]
	subs r2, r1, #7
	str r5, [r0, r2]
	subs r2, r1, #3
	strb r4, [r0, r2]
	subs r2, r1, #2
	strb r6, [r0, r2]
	subs r1, r1, #1
	strb r7, [r0, r1]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200F5F8: .4byte FUN_0200F54C
_0200F5FC: .4byte 0x0000016F
	thumb_func_end FUN_0200F5C4

	thumb_func_start FUN_0200F600
FUN_0200F600: @ 0x0200F600
	push {r4, r5, r6, lr}
	sub sp, #0x18
	ldr r5, _0200F628 @ =_020F5C60
	add r4, sp, #0
	adds r6, r0, #0
	adds r3, r1, #0
	adds r2, r4, #0
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	adds r1, r2, #0
	adds r0, r6, #0
	movs r2, #1
	bl FUN_021E8298
	add sp, #0x18
	pop {r4, r5, r6, pc}
	.align 2, 0
_0200F628: .4byte _020F5C60
	thumb_func_end FUN_0200F600

	thumb_func_start FUN_0200F62C
FUN_0200F62C: @ 0x0200F62C
	push {r3, r4, lr}
	sub sp, #0xc
	movs r1, #1
	str r1, [sp]
	str r1, [sp, #4]
	ldr r1, _0200F680 @ =0x00015CD5
	movs r2, #0x32
	str r1, [sp, #8]
	movs r1, #0x26
	movs r3, #0
	adds r4, r0, #0
	bl FUN_021E8378
	ldr r0, _0200F680 @ =0x00015CD5
	movs r1, #0x26
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #0x30
	movs r3, #0
	bl FUN_021E83F0
	ldr r0, _0200F680 @ =0x00015CD5
	movs r1, #0x26
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #0x2f
	movs r3, #0
	bl FUN_021E8404
	movs r0, #1
	str r0, [sp]
	ldr r0, _0200F680 @ =0x00015CD5
	movs r1, #0x26
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #0x31
	movs r3, #0
	bl FUN_021E8418
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_0200F680: .4byte 0x00015CD5
	thumb_func_end FUN_0200F62C

	thumb_func_start FUN_0200F684
FUN_0200F684: @ 0x0200F684
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	ldr r5, _0200F6D0 @ =_020F5C78
	adds r6, r2, #0
	adds r4, r0, #0
	adds r7, r1, #0
	add r3, sp, #0
	movs r2, #6
_0200F694:
	ldm r5!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _0200F694
	ldr r0, [r5]
	str r0, [r3]
	adds r0, r7, #5
	lsls r1, r0, #3
	add r0, sp, #0
	strh r1, [r0]
	adds r1, r6, #5
	lsls r1, r1, #3
	strh r1, [r0, #2]
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_021E851C
	movs r1, #0x59
	lsls r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [r4]
	bl FUN_0202457C
	movs r0, #0x10
	movs r1, #1
	bl FUN_02022CC8
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0200F6D0: .4byte _020F5C78
	thumb_func_end FUN_0200F684

	thumb_func_start FUN_0200F6D4
FUN_0200F6D4: @ 0x0200F6D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	ldr r0, _0200F710 @ =0x00000162
	adds r4, r1, #0
	ldrh r0, [r5, r0]
	adds r6, r2, #0
	bl FUN_02007FD4
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	add r0, sp, #0xc
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #2
	bl FUN_020701E4
	adds r0, r5, #0
	add r1, sp, #0xc
	bl FUN_0200F748
	adds r0, r7, #0
	bl FUN_02008524
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0200F710: .4byte 0x00000162
	thumb_func_end FUN_0200F6D4

	thumb_func_start FUN_0200F714
FUN_0200F714: @ 0x0200F714
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, _0200F744 @ =0x00000162
	adds r4, r1, #0
	ldrh r0, [r5, r0]
	bl FUN_02007FD4
	adds r6, r0, #0
	add r0, sp, #0
	adds r1, r4, #0
	movs r2, #2
	bl FUN_02070124
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_0200F748
	adds r0, r6, #0
	bl FUN_02008524
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200F744: .4byte 0x00000162
	thumb_func_end FUN_0200F714

	thumb_func_start FUN_0200F748
FUN_0200F748: @ 0x0200F748
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r0, #0
	ldr r0, _0200F81C @ =0x00000162
	adds r6, r1, #0
	movs r1, #0x19
	ldrh r0, [r5, r0]
	lsls r1, r1, #8
	bl FUN_0201AA8C
	add r2, sp, #0x18
	ldr r3, _0200F820 @ =_020F5C50
	adds r4, r0, #0
	adds r7, r2, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	str r4, [sp]
	ldr r2, _0200F81C @ =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #2]
	ldrh r2, [r5, r2]
	adds r3, r7, #0
	bl FUN_020143E0
	ldr r3, _0200F824 @ =_020F5C40
	add r2, sp, #8
	adds r7, r2, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	movs r0, #0x32
	lsls r0, r0, #6
	adds r0, r4, r0
	str r0, [sp]
	ldr r2, _0200F81C @ =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #2]
	ldrh r2, [r5, r2]
	adds r3, r7, #0
	bl FUN_020143E0
	movs r0, #0x13
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	ldr r1, _0200F828 @ =0x00015CD5
	bl FUN_0200A7BC
	bl FUN_0200AF00
	movs r1, #1
	str r0, [sp, #4]
	blx FUN_020B802C
	movs r1, #0x19
	adds r7, r0, #0
	adds r0, r4, #0
	lsls r1, r1, #8
	blx FUN_020D2894
	movs r2, #0x19
	adds r0, r4, #0
	adds r1, r7, #0
	lsls r2, r2, #8
	blx FUN_020CFE74
	adds r0, r4, #0
	bl FUN_0201AB0C
	ldr r2, _0200F81C @ =0x00000162
	ldrh r0, [r6]
	ldrh r1, [r6, #4]
	ldrh r2, [r5, r2]
	bl FUN_02014450
	adds r4, r0, #0
	movs r0, #0x4d
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	ldr r1, _0200F828 @ =0x00015CD5
	bl FUN_0200A7BC
	ldr r1, [sp, #4]
	bl FUN_0200B0F8
	movs r1, #1
	blx FUN_020B8078
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x20
	blx FUN_020D2894
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0x20
	blx FUN_020CFD18
	adds r0, r4, #0
	bl FUN_0201AB0C
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0200F81C: .4byte 0x00000162
_0200F820: .4byte _020F5C50
_0200F824: .4byte _020F5C40
_0200F828: .4byte 0x00015CD5
	thumb_func_end FUN_0200F748

	thumb_func_start FUN_0200F82C
FUN_0200F82C: @ 0x0200F82C
	push {r4, r5, r6, lr}
	sub sp, #0x10
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r5, r0, #0
	ldrb r0, [r5, r3]
	adds r4, r1, #0
	subs r1, r3, #2
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	subs r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	adds r6, r2, #0
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #1
	ldrb r0, [r5, r3]
	subs r1, r3, #2
	lsls r2, r2, #0x10
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #2
	ldrb r0, [r5, r3]
	lsls r2, r2, #0x10
	subs r1, r3, #2
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	adds r3, #0xa
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #4
	ldrb r0, [r5, r3]
	lsls r2, r2, #0x10
	subs r1, r3, #2
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #3
	ldrb r0, [r5, r3]
	lsls r2, r2, #0x10
	subs r1, r3, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0xa
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	subs r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #5
	ldrb r0, [r5, r3]
	lsls r2, r2, #0x10
	subs r1, r3, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0xa
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	adds r3, #0xa
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #6
	ldrb r0, [r5, r3]
	lsls r2, r2, #0x10
	subs r1, r3, #2
	adds r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	subs r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r2, r6, #7
	ldrb r0, [r5, r3]
	subs r1, r3, #2
	lsls r2, r2, #0x10
	adds r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r1, [r5, r1]
	ldrb r3, [r5, r3]
	ldr r0, [r5, r0]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	ldr r3, _0200F9D8 @ =0x0000016E
	adds r6, #8
	ldrb r0, [r5, r3]
	lsls r2, r6, #0x10
	subs r1, r3, #2
	adds r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r5, r3]
	ldrb r1, [r5, r1]
	ldr r0, [r5, r0]
	adds r3, #0xa
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	movs r1, #0x5a
	lsls r1, r1, #2
	ldr r0, [r5, r1]
	adds r1, r1, #4
	ldrb r1, [r5, r1]
	bl FUN_0201EFBC
	add sp, #0x10
	pop {r4, r5, r6, pc}
	nop
_0200F9D8: .4byte 0x0000016E
	thumb_func_end FUN_0200F82C

	thumb_func_start FUN_0200F9DC
FUN_0200F9DC: @ 0x0200F9DC
	push {r4, lr}
	sub sp, #0x10
	ldr r3, _0200FA20 @ =0x0000016E
	adds r4, r0, #0
	ldrb r0, [r4, r3]
	movs r2, #0
	subs r1, r3, #2
	subs r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #0xc
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r2, [sp, #0xc]
	subs r0, r3, #6
	subs r3, r3, #1
	ldrb r3, [r4, r3]
	ldrb r1, [r4, r1]
	ldr r0, [r4, r0]
	subs r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	movs r1, #0x5a
	lsls r1, r1, #2
	ldr r0, [r4, r1]
	adds r1, r1, #4
	ldrb r1, [r4, r1]
	bl FUN_0201EFBC
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_0200FA20: .4byte 0x0000016E
	thumb_func_end FUN_0200F9DC

	thumb_func_start FUN_0200FA24
FUN_0200FA24: @ 0x0200FA24
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	ldr r0, [sp, #0x30]
	adds r4, r1, #0
	adds r7, r2, #0
	adds r6, r3, #0
	cmp r0, #0
	bne _0200FA3A
	bl FUN_0202551C
_0200FA3A:
	ldr r0, [sp, #0x34]
	cmp r0, #0
	bne _0200FA44
	bl FUN_0202551C
_0200FA44:
	ldr r0, _0200FB00 @ =0x021D1034
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FA50
	bl FUN_0202551C
_0200FA50:
	ldr r0, _0200FB04 @ =0x021D0EF4
	bl FUN_020100C4
	ldr r1, _0200FB04 @ =0x021D0EF4
	adds r0, r5, #0
	bl FUN_0200FE14
	ldr r0, _0200FB08 @ =0x021D0F68
	bl FUN_0200FEB0
	ldr r0, _0200FB04 @ =0x021D0EF4
	adds r1, r6, #0
	bl FUN_02010018
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, _0200FB0C @ =0x021D0F80
	ldr r2, [sp, #0x30]
	str r0, [sp, #0xc]
	ldr r0, _0200FB08 @ =0x021D0F68
	ldr r3, [sp, #0x34]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	adds r1, r4, #0
	str r0, [sp, #0x14]
	ldr r0, _0200FB10 @ =0x021D0F08
	str r5, [sp, #0x18]
	bl FUN_0200FE84
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldr r0, _0200FB0C @ =0x021D0F80
	ldr r2, [sp, #0x30]
	str r0, [sp, #0xc]
	ldr r0, _0200FB08 @ =0x021D0F68
	ldr r3, [sp, #0x34]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	adds r1, r7, #0
	str r0, [sp, #0x14]
	ldr r0, _0200FB14 @ =0x021D0F38
	str r5, [sp, #0x18]
	bl FUN_0200FE84
	ldr r0, _0200FB00 @ =0x021D1034
	movs r1, #1
	strh r1, [r0, #0xc]
	ldr r0, _0200FB18 @ =0x021D0EF8
	ldr r1, _0200FB10 @ =0x021D0F08
	bl FUN_0200FDE4
	ldr r0, _0200FB1C @ =0x021D0EFC
	ldr r1, _0200FB14 @ =0x021D0F38
	bl FUN_0200FDE4
	ldr r0, _0200FB20 @ =0x021D0EF4
	ldr r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FAE2
	ldr r0, _0200FB04 @ =0x021D0EF4
	adds r0, #0x14
	bl FUN_02010064
	ldr r1, _0200FB24 @ =0x0000014E
	ldr r0, _0200FB04 @ =0x021D0EF4
	movs r2, #1
	strb r2, [r0, r1]
_0200FAE2:
	ldr r0, _0200FB04 @ =0x021D0EF4
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _0200FAFA
	ldr r0, _0200FB04 @ =0x021D0EF4
	adds r0, #0x44
	bl FUN_02010064
	ldr r1, _0200FB28 @ =0x0000014F
	ldr r0, _0200FB04 @ =0x021D0EF4
	movs r2, #1
	strb r2, [r0, r1]
_0200FAFA:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_0200FB00: .4byte 0x021D1034
_0200FB04: .4byte 0x021D0EF4
_0200FB08: .4byte 0x021D0F68
_0200FB0C: .4byte 0x021D0F80
_0200FB10: .4byte 0x021D0F08
_0200FB14: .4byte 0x021D0F38
_0200FB18: .4byte 0x021D0EF8
_0200FB1C: .4byte 0x021D0EFC
_0200FB20: .4byte 0x021D0EF4
_0200FB24: .4byte 0x0000014E
_0200FB28: .4byte 0x0000014F
	thumb_func_end FUN_0200FA24

	thumb_func_start FUN_0200FB2C
FUN_0200FB2C: @ 0x0200FB2C
	push {r4, lr}
	ldr r0, _0200FB54 @ =0x021D1034
	ldr r4, _0200FB58 @ =0x021D0EF4
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	beq _0200FB50
	adds r1, r4, #0
	adds r2, r4, #0
	adds r0, r4, #0
	adds r1, #0x14
	adds r2, #0x44
	bl FUN_0200FD74
	cmp r0, #1
	bne _0200FB50
	adds r0, r4, #0
	bl FUN_0200FD1C
_0200FB50:
	pop {r4, pc}
	nop
_0200FB54: .4byte 0x021D1034
_0200FB58: .4byte 0x021D0EF4
	thumb_func_end FUN_0200FB2C

	thumb_func_start FUN_0200FB5C
FUN_0200FB5C: @ 0x0200FB5C
	ldr r0, _0200FB6C @ =0x021D1034
	ldrh r0, [r0, #0xc]
	cmp r0, #0
	bne _0200FB68
	movs r0, #1
	bx lr
_0200FB68:
	movs r0, #0
	bx lr
	.align 2, 0
_0200FB6C: .4byte 0x021D1034
	thumb_func_end FUN_0200FB5C

	thumb_func_start FUN_0200FB70
FUN_0200FB70: @ 0x0200FB70
	push {r3, lr}
	ldr r0, _0200FBBC @ =0x021D0F68
	movs r1, #0
	bl FUN_0200FF5C
	ldr r0, _0200FBBC @ =0x021D0F68
	movs r1, #1
	bl FUN_0200FF5C
	ldr r0, _0200FBC0 @ =0x021D0EF4
	ldr r1, [r0, #4]
	cmp r1, #0
	beq _0200FB8E
	movs r1, #2
	str r1, [r0, #0x20]
_0200FB8E:
	ldr r0, _0200FBC0 @ =0x021D0EF4
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _0200FB9A
	movs r1, #2
	str r1, [r0, #0x50]
_0200FB9A:
	ldr r0, _0200FBC4 @ =0x021D0EF8
	ldr r1, _0200FBC8 @ =0x021D0F08
	bl FUN_0200FDE4
	ldr r0, _0200FBCC @ =0x021D0EFC
	ldr r1, _0200FBD0 @ =0x021D0F38
	bl FUN_0200FDE4
	ldr r0, _0200FBD4 @ =0x021D1034
	movs r1, #0
	strh r1, [r0, #0xc]
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	ldr r0, _0200FBD8 @ =0x021D0EF4
	bl FUN_020100C4
	pop {r3, pc}
	.align 2, 0
_0200FBBC: .4byte 0x021D0F68
_0200FBC0: .4byte 0x021D0EF4
_0200FBC4: .4byte 0x021D0EF8
_0200FBC8: .4byte 0x021D0F08
_0200FBCC: .4byte 0x021D0EFC
_0200FBD0: .4byte 0x021D0F38
_0200FBD4: .4byte 0x021D1034
_0200FBD8: .4byte 0x021D0EF4
	thumb_func_end FUN_0200FB70

	thumb_func_start FUN_0200FBDC
FUN_0200FBDC: @ 0x0200FBDC
	ldr r3, _0200FBE4 @ =FUN_020131F4
	adds r1, r0, #0
	movs r0, #0
	bx r3
	.align 2, 0
_0200FBE4: .4byte FUN_020131F4
	thumb_func_end FUN_0200FBDC

	thumb_func_start FUN_0200FBE8
FUN_0200FBE8: @ 0x0200FBE8
	ldr r3, _0200FBF0 @ =FUN_0200FCFC
	movs r1, #0
	bx r3
	nop
_0200FBF0: .4byte FUN_0200FCFC
	thumb_func_end FUN_0200FBE8

	thumb_func_start FUN_0200FBF4
FUN_0200FBF4: @ 0x0200FBF4
	ldr r2, _0200FC10 @ =0x0000FFFF
	cmp r1, r2
	bne _0200FBFE
	ldr r1, _0200FC14 @ =0x021D1034
	ldrh r1, [r1, #0x10]
_0200FBFE:
	ldr r2, _0200FC18 @ =0x00007FFF
	cmp r1, r2
	bne _0200FC08
	movs r1, #0x10
	b _0200FC0C
_0200FC08:
	movs r1, #0xf
	mvns r1, r1
_0200FC0C:
	ldr r3, _0200FC1C @ =FUN_0200FCFC
	bx r3
	.align 2, 0
_0200FC10: .4byte 0x0000FFFF
_0200FC14: .4byte 0x021D1034
_0200FC18: .4byte 0x00007FFF
_0200FC1C: .4byte FUN_0200FCFC
	thumb_func_end FUN_0200FBF4

	thumb_func_start FUN_0200FC20
FUN_0200FC20: @ 0x0200FC20
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _0200FC54 @ =0x0000FFFF
	cmp r4, r0
	bne _0200FC2E
	ldr r0, _0200FC58 @ =0x021D1034
	ldrh r4, [r0, #0x10]
_0200FC2E:
	ldr r0, _0200FC5C @ =0x00007FFF
	cmp r4, r0
	bne _0200FC38
	movs r5, #0x10
	b _0200FC3C
_0200FC38:
	movs r5, #0xf
	mvns r5, r5
_0200FC3C:
	movs r0, #0
	adds r1, r5, #0
	bl FUN_0200FCFC
	movs r0, #1
	adds r1, r5, #0
	bl FUN_0200FCFC
	ldr r0, _0200FC58 @ =0x021D1034
	strh r4, [r0, #0x10]
	pop {r3, r4, r5, pc}
	nop
_0200FC54: .4byte 0x0000FFFF
_0200FC58: .4byte 0x021D1034
_0200FC5C: .4byte 0x00007FFF
	thumb_func_end FUN_0200FC20

	thumb_func_start FUN_0200FC60
FUN_0200FC60: @ 0x0200FC60
	push {r0, r1, r2, r3}
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0x18
	ldrh r2, [r1, #4]
	adds r4, r0, #0
	ldr r0, _0200FCD0 @ =0x0000FFFF
	cmp r2, r0
	bne _0200FC78
	ldr r0, _0200FCD4 @ =0x021D1034
	ldrh r0, [r0, #0x10]
	strh r0, [r1, #4]
_0200FC78:
	cmp r4, #0
	add r0, sp, #0x1c
	bne _0200FC88
	movs r1, #0
	movs r2, #2
	blx FUN_020CFC6C
	b _0200FC90
_0200FC88:
	movs r1, #0
	movs r2, #2
	blx FUN_020CFCC0
_0200FC90:
	ldr r0, _0200FCD8 @ =0x021D0F80
	movs r1, #1
	adds r2, r4, #0
	bl FUN_02013424
	movs r2, #0
	ldr r0, _0200FCD8 @ =0x021D0F80
	movs r1, #0x3f
	adds r3, r2, #0
	str r4, [sp]
	bl FUN_02013440
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	ldr r0, _0200FCD8 @ =0x021D0F80
	adds r2, r1, #0
	adds r3, r1, #0
	str r4, [sp, #8]
	bl FUN_02013488
	ldr r0, _0200FCD8 @ =0x021D0F80
	movs r1, #0x20
	movs r2, #0
	adds r3, r4, #0
	bl FUN_02013468
	add sp, #0xc
	pop {r3, r4}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
_0200FCD0: .4byte 0x0000FFFF
_0200FCD4: .4byte 0x021D1034
_0200FCD8: .4byte 0x021D0F80
	thumb_func_end FUN_0200FC60

	thumb_func_start FUN_0200FCDC
FUN_0200FCDC: @ 0x0200FCDC
	push {r0, r1, r2, r3}
	push {r3, lr}
	add r0, sp, #8
	movs r1, #0
	movs r2, #2
	blx FUN_020CFC6C
	add r0, sp, #8
	movs r1, #0
	movs r2, #2
	blx FUN_020CFCC0
	pop {r3}
	pop {r3}
	add sp, #0x10
	bx r3
	thumb_func_end FUN_0200FCDC

	thumb_func_start FUN_0200FCFC
FUN_0200FCFC: @ 0x0200FCFC
	push {r3, lr}
	cmp r0, #0
	bne _0200FD0A
	ldr r0, _0200FD14 @ =0x0400006C
	blx FUN_020CDA80
	pop {r3, pc}
_0200FD0A:
	ldr r0, _0200FD18 @ =0x0400106C
	blx FUN_020CDA80
	pop {r3, pc}
	nop
_0200FD14: .4byte 0x0400006C
_0200FD18: .4byte 0x0400106C
	thumb_func_end FUN_0200FCFC

	thumb_func_start FUN_0200FD1C
FUN_0200FD1C: @ 0x0200FD1C
	push {r4, lr}
	movs r1, #0x53
	adds r4, r0, #0
	movs r2, #0
	lsls r1, r1, #2
	strh r2, [r4, r1]
	bl FUN_0201002C
	movs r1, #0x15
	lsls r1, r1, #4
	strh r0, [r4, r1]
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _0200FD4C
	adds r0, r4, #0
	adds r0, #0x14
	bl FUN_02010094
	ldr r0, [r4, #0x3c]
	cmp r0, #0
	bne _0200FD4C
	ldr r0, _0200FD70 @ =0x021D1034
	movs r1, #0
	strb r1, [r0, #0xe]
_0200FD4C:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _0200FD66
	adds r0, r4, #0
	adds r0, #0x44
	bl FUN_02010094
	ldr r0, [r4, #0x3c]
	cmp r0, #0
	bne _0200FD66
	ldr r0, _0200FD70 @ =0x021D1034
	movs r1, #0
	strb r1, [r0, #0xf]
_0200FD66:
	adds r0, r4, #0
	bl FUN_020100C4
	pop {r4, pc}
	nop
_0200FD70: .4byte 0x021D1034
	thumb_func_end FUN_0200FD1C

	thumb_func_start FUN_0200FD74
FUN_0200FD74: @ 0x0200FD74
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r2, #0
	cmp r0, #0
	beq _0200FD8A
	cmp r0, #1
	beq _0200FD9C
	cmp r0, #2
	beq _0200FDB6
	b _0200FDCE
_0200FD8A:
	adds r0, r5, #4
	bl FUN_0200FDE4
	adds r0, r5, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_0200FDE4
	b _0200FDCE
_0200FD9C:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0200FDAA
	adds r0, r5, #4
	bl FUN_0200FDE4
	b _0200FDCE
_0200FDAA:
	adds r0, r5, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_0200FDE4
	b _0200FDCE
_0200FDB6:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0200FDC8
	adds r0, r5, #0
	adds r0, #8
	adds r1, r4, #0
	bl FUN_0200FDE4
	b _0200FDCE
_0200FDC8:
	adds r0, r5, #4
	bl FUN_0200FDE4
_0200FDCE:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _0200FDDE
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0200FDDE
	movs r0, #1
	pop {r3, r4, r5, pc}
_0200FDDE:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200FD74

	thumb_func_start FUN_0200FDE4
FUN_0200FDE4: @ 0x0200FDE4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0200FDFC
	adds r0, r1, #0
	bl FUN_0200FE00
	cmp r0, #1
	bne _0200FDFC
	movs r0, #0
	str r0, [r4]
_0200FDFC:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0200FDE4

	thumb_func_start FUN_0200FE00
FUN_0200FE00: @ 0x0200FE00
	push {r3, lr}
	ldr r1, [r0]
	lsls r2, r1, #2
	ldr r1, _0200FE10 @ =_020F5CAC
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	nop
_0200FE10: .4byte _020F5CAC
	thumb_func_end FUN_0200FE00

	thumb_func_start FUN_0200FE14
FUN_0200FE14: @ 0x0200FE14
	push {r3, lr}
	cmp r0, #4
	bhi _0200FE74
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0200FE26: @ jump table
	.2byte _0200FE30 - _0200FE26 - 2 @ case 0
	.2byte _0200FE3E - _0200FE26 - 2 @ case 1
	.2byte _0200FE4C - _0200FE26 - 2 @ case 2
	.2byte _0200FE5A - _0200FE26 - 2 @ case 3
	.2byte _0200FE68 - _0200FE26 - 2 @ case 4
_0200FE30:
	movs r2, #1
	adds r0, r1, #0
	movs r1, #0
	adds r3, r2, #0
	bl FUN_0200FE78
	pop {r3, pc}
_0200FE3E:
	adds r0, r1, #0
	movs r1, #1
	adds r2, r1, #0
	adds r3, r1, #0
	bl FUN_0200FE78
	pop {r3, pc}
_0200FE4C:
	movs r2, #1
	adds r0, r1, #0
	movs r1, #2
	adds r3, r2, #0
	bl FUN_0200FE78
	pop {r3, pc}
_0200FE5A:
	adds r0, r1, #0
	movs r1, #1
	adds r2, r1, #0
	movs r3, #0
	bl FUN_0200FE78
	pop {r3, pc}
_0200FE68:
	adds r0, r1, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl FUN_0200FE78
_0200FE74:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0200FE14

	thumb_func_start FUN_0200FE78
FUN_0200FE78: @ 0x0200FE78
	str r1, [r0]
	str r2, [r0, #4]
	str r3, [r0, #8]
	str r2, [r0, #0xc]
	str r3, [r0, #0x10]
	bx lr
	thumb_func_end FUN_0200FE78

	thumb_func_start FUN_0200FE84
FUN_0200FE84: @ 0x0200FE84
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, [sp]
	str r3, [r0, #8]
	str r1, [r0, #0xc]
	ldr r1, [sp, #4]
	str r1, [r0, #0x14]
	ldr r1, [sp, #8]
	str r1, [r0, #0x10]
	ldr r1, [sp, #0xc]
	str r1, [r0, #0x18]
	ldr r1, [sp, #0x10]
	str r1, [r0, #0x1c]
	ldr r1, [sp, #0x14]
	str r1, [r0, #0x20]
	ldr r1, _0200FEAC @ =0xFFFFFFF0
	add r1, sp
	ldrh r1, [r1, #0x28]
	strh r1, [r0, #0x24]
	bx lr
	.align 2, 0
_0200FEAC: .4byte 0xFFFFFFF0
	thumb_func_end FUN_0200FE84

	thumb_func_start FUN_0200FEB0
FUN_0200FEB0: @ 0x0200FEB0
	movs r3, #0
	ldr r1, _0200FEC8 @ =FUN_02010014
	adds r2, r3, #0
_0200FEB6:
	str r2, [r0]
	str r1, [r0, #8]
	str r2, [r0, #0x10]
	adds r3, r3, #1
	adds r0, r0, #4
	cmp r3, #2
	blt _0200FEB6
	bx lr
	nop
_0200FEC8: .4byte FUN_02010014
	thumb_func_end FUN_0200FEB0

	thumb_func_start FUN_0200FECC
FUN_0200FECC: @ 0x0200FECC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r4, #0
_0200FED2:
	ldr r0, [r5]
	ldr r1, [r5, #8]
	blx r1
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #2
	blt _0200FED2
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0200FECC

	thumb_func_start FUN_0200FEE4
FUN_0200FEE4: @ 0x0200FEE4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r0, #1
	str r0, [sp, #4]
	adds r0, r5, #0
	str r0, [sp, #8]
	adds r0, #0x10
	lsls r4, r3, #2
	str r0, [sp, #8]
	ldr r0, [r0, r4]
	adds r7, r2, #0
	str r1, [sp]
	cmp r0, #0
	beq _0200FF06
	bl FUN_0202551C
_0200FF06:
	adds r6, r5, #0
	adds r6, #8
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _0200FF14
	bl FUN_0202551C
_0200FF14:
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _0200FF2E
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _0200FF2E
	ldr r0, _0200FF54 @ =FUN_0200FECC
	adds r1, r5, #0
	bl FUN_0201A120
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
_0200FF2E:
	ldr r0, [sp, #4]
	cmp r0, #1
	beq _0200FF38
	bl FUN_0202551C
_0200FF38:
	ldr r0, [sp]
	cmp r7, #0
	str r0, [r5, r4]
	beq _0200FF44
	str r7, [r6, r4]
	b _0200FF48
_0200FF44:
	ldr r0, _0200FF58 @ =FUN_02010014
	str r0, [r6, r4]
_0200FF48:
	ldr r0, [sp, #8]
	movs r1, #1
	str r1, [r0, r4]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0200FF54: .4byte FUN_0200FECC
_0200FF58: .4byte FUN_02010014
	thumb_func_end FUN_0200FEE4

	thumb_func_start FUN_0200FF5C
FUN_0200FF5C: @ 0x0200FF5C
	push {r3, r4, r5, lr}
	lsls r4, r1, #2
	adds r5, r0, #0
	movs r1, #0
	adds r0, r5, r4
	str r1, [r0, #0x10]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	bne _0200FF78
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _0200FF78
	bl FUN_0201A108
_0200FF78:
	ldr r1, _0200FF84 @ =FUN_02010014
	adds r0, r5, r4
	str r1, [r0, #8]
	movs r0, #0
	str r0, [r5, r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200FF84: .4byte FUN_02010014
	thumb_func_end FUN_0200FF5C

	thumb_func_start FUN_0200FF88
FUN_0200FF88: @ 0x0200FF88
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [sp, #0x18]
	movs r1, #0x10
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0201AACC
	adds r1, r0, #0
	str r5, [r1]
	str r4, [r1, #4]
	movs r2, #1
	str r6, [r1, #8]
	ldr r0, _0200FFB0 @ =FUN_0200FFD8
	lsls r2, r2, #0xa
	str r7, [r1, #0xc]
	bl FUN_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0200FFB0: .4byte FUN_0200FFD8
	thumb_func_end FUN_0200FF88

	thumb_func_start FUN_0200FFB4
FUN_0200FFB4: @ 0x0200FFB4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	movs r1, #8
	bl FUN_0201AACC
	adds r1, r0, #0
	movs r2, #1
	str r5, [r1]
	ldr r0, _0200FFD4 @ =FUN_0200FFF8
	lsls r2, r2, #0xa
	str r4, [r1, #4]
	bl FUN_0200E374
	pop {r3, r4, r5, pc}
	.align 2, 0
_0200FFD4: .4byte FUN_0200FFF8
	thumb_func_end FUN_0200FFB4

	thumb_func_start FUN_0200FFD8
FUN_0200FFD8: @ 0x0200FFD8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	bl FUN_0200FEE4
	adds r0, r5, #0
	bl FUN_0200E390
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200FFD8

	thumb_func_start FUN_0200FFF8
FUN_0200FFF8: @ 0x0200FFF8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	bl FUN_0200FF5C
	adds r0, r5, #0
	bl FUN_0200E390
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0200FFF8

	thumb_func_start FUN_02010014
FUN_02010014: @ 0x02010014
	bx lr
	.align 2, 0
	thumb_func_end FUN_02010014

	thumb_func_start FUN_02010018
FUN_02010018: @ 0x02010018
	ldr r2, _02010028 @ =0x0000FFFF
	cmp r1, r2
	bne _02010024
	movs r1, #0x15
	lsls r1, r1, #4
	ldrh r1, [r0, r1]
_02010024:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_02010028: .4byte 0x0000FFFF
	thumb_func_end FUN_02010018

	thumb_func_start FUN_0201002C
FUN_0201002C: @ 0x0201002C
	ldr r1, [r0, #0xc]
	cmp r1, #1
	bne _02010038
	adds r2, r0, #0
	adds r2, #0x14
	b _0201003C
_02010038:
	adds r2, r0, #0
	adds r2, #0x44
_0201003C:
	ldr r1, [r2, #0x28]
	cmp r1, #1
	bne _02010046
	ldrh r0, [r2, #0x24]
	bx lr
_02010046:
	movs r1, #0x15
	lsls r1, r1, #4
	ldrh r0, [r0, r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201002C

	thumb_func_start FUN_02010050
FUN_02010050: @ 0x02010050
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r1, #0x10]
	movs r1, #0
	bl FUN_0200FCFC
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	thumb_func_end FUN_02010050

	thumb_func_start FUN_02010064
FUN_02010064: @ 0x02010064
	push {r3, lr}
	adds r1, r0, #0
	ldr r0, [r1, #0x28]
	cmp r0, #0
	bne _0201008A
	ldrh r2, [r1, #0x24]
	ldr r0, _0201008C @ =0x00007FFF
	cmp r2, r0
	beq _0201007A
	cmp r2, #0
	bne _0201008A
_0201007A:
	ldr r0, [r1, #0x2c]
	cmp r0, #0
	bne _0201008A
	movs r2, #1
	ldr r0, _02010090 @ =FUN_02010050
	lsls r2, r2, #0xa
	bl FUN_0200E374
_0201008A:
	pop {r3, pc}
	.align 2, 0
_0201008C: .4byte 0x00007FFF
_02010090: .4byte FUN_02010050
	thumb_func_end FUN_02010064

	thumb_func_start FUN_02010094
FUN_02010094: @ 0x02010094
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x28]
	cmp r0, #1
	bne _020100BC
	ldrh r1, [r4, #0x24]
	ldr r0, _020100C0 @ =0x00007FFF
	cmp r1, r0
	beq _020100AA
	cmp r1, #0
	bne _020100BC
_020100AA:
	ldr r0, [r4, #0x2c]
	cmp r0, #0
	bne _020100BC
	ldr r0, [r4, #0x10]
	bl FUN_0200FBF4
	ldr r0, [r4, #0x10]
	bl FUN_0200FBDC
_020100BC:
	pop {r4, pc}
	nop
_020100C0: .4byte 0x00007FFF
	thumb_func_end FUN_02010094

	thumb_func_start FUN_020100C4
FUN_020100C4: @ 0x020100C4
	push {r4, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	movs r1, #0x14
	movs r0, #0
_020100CE:
	strb r0, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _020100CE
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0
	movs r2, #0x30
	blx FUN_020E5B44
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #0
	movs r2, #0x30
	blx FUN_020E5B44
	adds r2, r4, #0
	adds r2, #0x74
	movs r1, #0x18
	movs r0, #0
_020100F6:
	strb r0, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _020100F6
	adds r4, #0x8c
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xc0
	blx FUN_020E5B44
	pop {r4, pc}
	thumb_func_end FUN_020100C4

	thumb_func_start FUN_0201010C
FUN_0201010C: @ 0x0201010C
	push {r3, lr}
	ldr r1, [r0, #0xc]
	cmp r1, #0
	bne _02010122
	movs r1, #1
	str r1, [r0, #0x28]
	str r1, [r0, #0x2c]
	bl FUN_02010B14
	movs r0, #0
	pop {r3, pc}
_02010122:
	bl FUN_02010BB4
	pop {r3, pc}
	thumb_func_end FUN_0201010C

	thumb_func_start FUN_02010128
FUN_02010128: @ 0x02010128
	push {r3, lr}
	ldr r1, [r0, #0xc]
	cmp r1, #0
	bne _02010140
	movs r1, #0
	str r1, [r0, #0x28]
	movs r2, #1
	str r2, [r0, #0x2c]
	bl FUN_02010B14
	movs r0, #0
	pop {r3, pc}
_02010140:
	bl FUN_02010BB4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02010128

	thumb_func_start FUN_02010148
FUN_02010148: @ 0x02010148
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010170
	ldr r1, _02010178 @ =_020F5D60
	ldr r0, _0201017C @ =0x0210F64C
	str r1, [r0]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010180 @ =0x0210F64C
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010170:
	bl FUN_020128E0
	pop {r4, pc}
	nop
_02010178: .4byte _020F5D60
_0201017C: .4byte 0x0210F64C
_02010180: .4byte 0x0210F64C
	thumb_func_end FUN_02010148

	thumb_func_start FUN_02010184
FUN_02010184: @ 0x02010184
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020101AA
	ldr r1, _020101B0 @ =_020F5D5C
	ldr r0, _020101B4 @ =0x0210F64C
	str r1, [r0, #0x10]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020101B8 @ =0x0210F65C
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020101AA:
	bl FUN_020128E0
	pop {r4, pc}
	.align 2, 0
_020101B0: .4byte _020F5D5C
_020101B4: .4byte 0x0210F64C
_020101B8: .4byte 0x0210F65C
	thumb_func_end FUN_02010184

	thumb_func_start FUN_020101BC
FUN_020101BC: @ 0x020101BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020101E4
	ldr r1, _020101EC @ =_020F5D64
	ldr r0, _020101F0 @ =0x0210F64C
	str r1, [r0, #0x20]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020101F4 @ =0x0210F66C
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020101E4:
	bl FUN_020128E0
	pop {r4, pc}
	nop
_020101EC: .4byte _020F5D64
_020101F0: .4byte 0x0210F64C
_020101F4: .4byte 0x0210F66C
	thumb_func_end FUN_020101BC

	thumb_func_start FUN_020101F8
FUN_020101F8: @ 0x020101F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201021E
	ldr r1, _02010224 @ =_020F5D58
	ldr r0, _02010228 @ =0x0210F64C
	str r1, [r0, #0x28]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _0201022C @ =0x0210F674
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201021E:
	bl FUN_020128E0
	pop {r4, pc}
	.align 2, 0
_02010224: .4byte _020F5D58
_02010228: .4byte 0x0210F64C
_0201022C: .4byte 0x0210F674
	thumb_func_end FUN_020101F8

	thumb_func_start FUN_02010230
FUN_02010230: @ 0x02010230
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010252
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010258 @ =_020F5E2C
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010252:
	bl FUN_0201169C
	pop {r4, pc}
	.align 2, 0
_02010258: .4byte _020F5E2C
	thumb_func_end FUN_02010230

	thumb_func_start FUN_0201025C
FUN_0201025C: @ 0x0201025C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201027C
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010284 @ =_020F5E38
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201027C:
	bl FUN_0201169C
	pop {r4, pc}
	nop
_02010284: .4byte _020F5E38
	thumb_func_end FUN_0201025C

	thumb_func_start FUN_02010288
FUN_02010288: @ 0x02010288
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020102B0
	ldr r1, _020102B8 @ =_020F5D90
	ldr r0, _020102BC @ =0x0210F64C
	str r1, [r0, #8]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020102C0 @ =0x0210F654
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020102B0:
	bl FUN_020128E0
	pop {r4, pc}
	nop
_020102B8: .4byte _020F5D90
_020102BC: .4byte 0x0210F64C
_020102C0: .4byte 0x0210F654
	thumb_func_end FUN_02010288

	thumb_func_start FUN_020102C4
FUN_020102C4: @ 0x020102C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020102EA
	ldr r1, _020102F0 @ =_020F5D68
	ldr r0, _020102F4 @ =0x0210F64C
	str r1, [r0, #0x38]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020102F8 @ =0x0210F684
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020102EA:
	bl FUN_020128E0
	pop {r4, pc}
	.align 2, 0
_020102F0: .4byte _020F5D68
_020102F4: .4byte 0x0210F64C
_020102F8: .4byte 0x0210F684
	thumb_func_end FUN_020102C4

	thumb_func_start FUN_020102FC
FUN_020102FC: @ 0x020102FC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010324
	ldr r1, _0201032C @ =_020F5D80
	ldr r0, _02010330 @ =0x0210F64C
	str r1, [r0, #0x48]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010334 @ =0x0210F694
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010324:
	bl FUN_020128E0
	pop {r4, pc}
	nop
_0201032C: .4byte _020F5D80
_02010330: .4byte 0x0210F64C
_02010334: .4byte 0x0210F694
	thumb_func_end FUN_020102FC

	thumb_func_start FUN_02010338
FUN_02010338: @ 0x02010338
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201035E
	ldr r1, _02010364 @ =_020F5DB8
	ldr r0, _02010368 @ =0x0210F64C
	str r1, [r0, #0x40]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _0201036C @ =0x0210F68C
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201035E:
	bl FUN_020128E0
	pop {r4, pc}
	.align 2, 0
_02010364: .4byte _020F5DB8
_02010368: .4byte 0x0210F64C
_0201036C: .4byte 0x0210F68C
	thumb_func_end FUN_02010338

	thumb_func_start FUN_02010370
FUN_02010370: @ 0x02010370
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010392
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010398 @ =_020F5E5C
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010392:
	bl FUN_0201169C
	pop {r4, pc}
	.align 2, 0
_02010398: .4byte _020F5E5C
	thumb_func_end FUN_02010370

	thumb_func_start FUN_0201039C
FUN_0201039C: @ 0x0201039C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020103BC
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020103C4 @ =_020F5E68
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020103BC:
	bl FUN_0201169C
	pop {r4, pc}
	nop
_020103C4: .4byte _020F5E68
	thumb_func_end FUN_0201039C

	thumb_func_start FUN_020103C8
FUN_020103C8: @ 0x020103C8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020103EC
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020103F4 @ =_020F5E80
	ldr r2, _020103F8 @ =_020F5E8C
	adds r0, r4, #0
	bl FUN_020116EC
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020103EC:
	bl FUN_02011744
	pop {r4, pc}
	nop
_020103F4: .4byte _020F5E80
_020103F8: .4byte _020F5E8C
	thumb_func_end FUN_020103C8

	thumb_func_start FUN_020103FC
FUN_020103FC: @ 0x020103FC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201041E
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010424 @ =_020F5EA4
	ldr r2, _02010428 @ =_020F5EB0
	adds r0, r4, #0
	bl FUN_020116EC
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201041E:
	bl FUN_02011744
	pop {r4, pc}
	.align 2, 0
_02010424: .4byte _020F5EA4
_02010428: .4byte _020F5EB0
	thumb_func_end FUN_020103FC

	thumb_func_start FUN_0201042C
FUN_0201042C: @ 0x0201042C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201044E
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010454 @ =_020F5EC8
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201044E:
	bl FUN_020118BC
	pop {r4, pc}
	.align 2, 0
_02010454: .4byte _020F5EC8
	thumb_func_end FUN_0201042C

	thumb_func_start FUN_02010458
FUN_02010458: @ 0x02010458
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010478
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010480 @ =_020F5ED4
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010478:
	bl FUN_020118BC
	pop {r4, pc}
	nop
_02010480: .4byte _020F5ED4
	thumb_func_end FUN_02010458

	thumb_func_start FUN_02010484
FUN_02010484: @ 0x02010484
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104A6
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020104AC @ =_020F5DD8
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104A6:
	bl FUN_020118BC
	pop {r4, pc}
	.align 2, 0
_020104AC: .4byte _020F5DD8
	thumb_func_end FUN_02010484

	thumb_func_start FUN_020104B0
FUN_020104B0: @ 0x020104B0
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104D0
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020104D8 @ =_020F5DE4
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104D0:
	bl FUN_020118BC
	pop {r4, pc}
	nop
_020104D8: .4byte _020F5DE4
	thumb_func_end FUN_020104B0

	thumb_func_start FUN_020104DC
FUN_020104DC: @ 0x020104DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020104FE
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010504 @ =_020F5DD0
	adds r0, r4, #0
	bl FUN_02011B5C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020104FE:
	bl FUN_02011B94
	pop {r4, pc}
	.align 2, 0
_02010504: .4byte _020F5DD0
	thumb_func_end FUN_020104DC

	thumb_func_start FUN_02010508
FUN_02010508: @ 0x02010508
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010528
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010530 @ =_020F5DC8
	adds r0, r4, #0
	bl FUN_02011B5C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010528:
	bl FUN_02011B94
	pop {r4, pc}
	nop
_02010530: .4byte _020F5DC8
	thumb_func_end FUN_02010508

	thumb_func_start FUN_02010534
FUN_02010534: @ 0x02010534
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010556
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _0201055C @ =_020F5E08
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010556:
	bl FUN_0201169C
	pop {r4, pc}
	.align 2, 0
_0201055C: .4byte _020F5E08
	thumb_func_end FUN_02010534

	thumb_func_start FUN_02010560
FUN_02010560: @ 0x02010560
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010580
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010588 @ =_020F5E14
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010580:
	bl FUN_0201169C
	pop {r4, pc}
	nop
_02010588: .4byte _020F5E14
	thumb_func_end FUN_02010560

	thumb_func_start FUN_0201058C
FUN_0201058C: @ 0x0201058C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020105AE
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020105B4 @ =_020F5E20
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020105AE:
	bl FUN_0201169C
	pop {r4, pc}
	.align 2, 0
_020105B4: .4byte _020F5E20
	thumb_func_end FUN_0201058C

	thumb_func_start FUN_020105B8
FUN_020105B8: @ 0x020105B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020105D8
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020105E0 @ =_020F5E44
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020105D8:
	bl FUN_0201169C
	pop {r4, pc}
	nop
_020105E0: .4byte _020F5E44
	thumb_func_end FUN_020105B8

	thumb_func_start FUN_020105E4
FUN_020105E4: @ 0x020105E4
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010606
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _0201060C @ =_020F5DA8
	adds r0, r4, #0
	bl FUN_02011D60
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010606:
	bl FUN_02011D98
	pop {r4, pc}
	.align 2, 0
_0201060C: .4byte _020F5DA8
	thumb_func_end FUN_020105E4

	thumb_func_start FUN_02010610
FUN_02010610: @ 0x02010610
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010630
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010638 @ =_020F5DA0
	adds r0, r4, #0
	bl FUN_02011D60
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010630:
	bl FUN_02011D98
	pop {r4, pc}
	nop
_02010638: .4byte _020F5DA0
	thumb_func_end FUN_02010610

	thumb_func_start FUN_0201063C
FUN_0201063C: @ 0x0201063C
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010680
	ldr r0, _02010688 @ =_020F5EEC
	movs r1, #4
	str r0, [sp]
	ldr r0, _0201068C @ =_020F5EFC
	str r0, [sp, #4]
	add r0, sp, #0
	strh r1, [r0, #8]
	movs r1, #0
	strh r1, [r0, #0xa]
	movs r1, #0x3f
	strb r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #0xd]
	movs r1, #1
	strh r1, [r0, #0xe]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02011FF8
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	add sp, #0x10
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010680:
	bl FUN_02012030
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_02010688: .4byte _020F5EEC
_0201068C: .4byte _020F5EFC
	thumb_func_end FUN_0201063C

	thumb_func_start FUN_02010690
FUN_02010690: @ 0x02010690
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020106D0
	ldr r0, _020106D8 @ =_020F5F0C
	movs r1, #4
	str r0, [sp]
	ldr r0, _020106DC @ =_020F5F1C
	movs r2, #0
	str r0, [sp, #4]
	add r0, sp, #0
	strh r1, [r0, #8]
	strh r2, [r0, #0xa]
	movs r1, #0x3f
	strb r1, [r0, #0xc]
	movs r1, #0x20
	strb r1, [r0, #0xd]
	strh r2, [r0, #0xe]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02011FF8
	movs r0, #0
	str r0, [r4, #0x28]
	add sp, #0x10
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020106D0:
	bl FUN_02012030
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
_020106D8: .4byte _020F5F0C
_020106DC: .4byte _020F5F1C
	thumb_func_end FUN_02010690

	thumb_func_start FUN_020106E0
FUN_020106E0: @ 0x020106E0
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010708
	ldr r1, _02010710 @ =_020F5EBC
	ldr r0, _02010714 @ =0x0210F64C
	str r1, [r0, #0x30]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010718 @ =0x0210F67C
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010708:
	bl FUN_020128E0
	pop {r4, pc}
	nop
_02010710: .4byte _020F5EBC
_02010714: .4byte 0x0210F64C
_02010718: .4byte 0x0210F67C
	thumb_func_end FUN_020106E0

	thumb_func_start FUN_0201071C
FUN_0201071C: @ 0x0201071C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010742
	ldr r1, _02010748 @ =_020F5DF0
	ldr r0, _0201074C @ =0x0210F64C
	str r1, [r0, #0x18]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010750 @ =0x0210F664
	adds r0, r4, #0
	bl FUN_0201289C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010742:
	bl FUN_020128E0
	pop {r4, pc}
	.align 2, 0
_02010748: .4byte _020F5DF0
_0201074C: .4byte 0x0210F64C
_02010750: .4byte 0x0210F664
	thumb_func_end FUN_0201071C

	thumb_func_start FUN_02010754
FUN_02010754: @ 0x02010754
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201078E
	ldr r1, _02010798 @ =_020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x30]
	strh r2, [r0]
	ldrh r2, [r1, #0x32]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x34]
	ldrh r1, [r1, #0x36]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_020122B8
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201078E:
	bl FUN_020122F8
	add sp, #8
	pop {r4, pc}
	nop
_02010798: .4byte _020F5D58
	thumb_func_end FUN_02010754

	thumb_func_start FUN_0201079C
FUN_0201079C: @ 0x0201079C
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020107D4
	ldr r1, _020107DC @ =_020F5D98
	add r0, sp, #0
	ldrh r2, [r1, #0x28]
	strh r2, [r0]
	ldrh r2, [r1, #0x2a]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x2c]
	ldrh r1, [r1, #0x2e]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_020122B8
	movs r0, #0
	str r0, [r4, #0x28]
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020107D4:
	bl FUN_020122F8
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_020107DC: .4byte _020F5D98
	thumb_func_end FUN_0201079C

	thumb_func_start FUN_020107E0
FUN_020107E0: @ 0x020107E0
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201081A
	ldr r1, _02010824 @ =_020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x20]
	strh r2, [r0]
	ldrh r2, [r1, #0x22]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x24]
	ldrh r1, [r1, #0x26]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_020125EC
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201081A:
	bl FUN_0201262C
	add sp, #8
	pop {r4, pc}
	nop
_02010824: .4byte _020F5D58
	thumb_func_end FUN_020107E0

	thumb_func_start FUN_02010828
FUN_02010828: @ 0x02010828
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010860
	ldr r1, _02010868 @ =_020F5D58
	add r0, sp, #0
	ldrh r2, [r1, #0x18]
	strh r2, [r0]
	ldrh r2, [r1, #0x1a]
	strh r2, [r0, #2]
	ldrh r2, [r1, #0x1c]
	ldrh r1, [r1, #0x1e]
	strh r2, [r0, #4]
	strh r1, [r0, #6]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_020125EC
	movs r0, #0
	str r0, [r4, #0x28]
	add sp, #8
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010860:
	bl FUN_0201262C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_02010868: .4byte _020F5D58
	thumb_func_end FUN_02010828

	thumb_func_start FUN_0201086C
FUN_0201086C: @ 0x0201086C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201088E
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010894 @ =_020F5E98
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201088E:
	bl FUN_020118BC
	pop {r4, pc}
	.align 2, 0
_02010894: .4byte _020F5E98
	thumb_func_end FUN_0201086C

	thumb_func_start FUN_02010898
FUN_02010898: @ 0x02010898
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020108B8
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020108C0 @ =_020F5EE0
	adds r0, r4, #0
	bl FUN_02011884
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020108B8:
	bl FUN_020118BC
	pop {r4, pc}
	nop
_020108C0: .4byte _020F5EE0
	thumb_func_end FUN_02010898

	thumb_func_start FUN_020108C4
FUN_020108C4: @ 0x020108C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020108E6
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020108EC @ =_020F5DFC
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020108E6:
	bl FUN_0201169C
	pop {r4, pc}
	.align 2, 0
_020108EC: .4byte _020F5DFC
	thumb_func_end FUN_020108C4

	thumb_func_start FUN_020108F0
FUN_020108F0: @ 0x020108F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010910
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010918 @ =_020F5E50
	adds r0, r4, #0
	bl FUN_0201164C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010910:
	bl FUN_0201169C
	pop {r4, pc}
	nop
_02010918: .4byte _020F5E50
	thumb_func_end FUN_020108F0

	thumb_func_start FUN_0201091C
FUN_0201091C: @ 0x0201091C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _02010944
	ldr r1, _0201094C @ =_020F5D98
	ldr r0, _02010950 @ =0x0210F64C
	str r1, [r0, #0x5c]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _02010954 @ =0x0210F69C
	adds r0, r4, #0
	bl FUN_02012B1C
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_02010944:
	bl FUN_02012B80
	pop {r4, pc}
	nop
_0201094C: .4byte _020F5D98
_02010950: .4byte 0x0210F64C
_02010954: .4byte 0x0210F69C
	thumb_func_end FUN_0201091C

	thumb_func_start FUN_02010958
FUN_02010958: @ 0x02010958
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _0201097E
	ldr r1, _02010984 @ =_020F5DB0
	ldr r0, _02010988 @ =0x0210F64C
	str r1, [r0, #0x74]
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _0201098C @ =0x0210F6B4
	adds r0, r4, #0
	bl FUN_02012B1C
	movs r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x2c]
	pop {r4, pc}
_0201097E:
	bl FUN_02012B80
	pop {r4, pc}
	.align 2, 0
_02010984: .4byte _020F5DB0
_02010988: .4byte 0x0210F64C
_0201098C: .4byte 0x0210F6B4
	thumb_func_end FUN_02010958

	thumb_func_start FUN_02010990
FUN_02010990: @ 0x02010990
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	cmp r1, #0
	bne _020109B2
	ldrh r0, [r4, #0x24]
	bl FUN_0200FCDC
	ldr r1, _020109B8 @ =_020F5E74
	adds r0, r4, #0
	bl FUN_02012DD8
	movs r0, #1
	str r0, [r4, #0x28]
	movs r0, #0
	str r0, [r4, #0x2c]
	pop {r4, pc}
_020109B2:
	bl FUN_02012E10
	pop {r4, pc}
	.align 2, 0
_020109B8: .4byte _020F5E74
	thumb_func_end FUN_02010990

	thumb_func_start FUN_020109BC
FUN_020109BC: @ 0x020109BC
	asrs r0, r0, #4
	lsls r1, r0, #1
	lsls r0, r1, #1
	ldr r2, _020109D0 @ =0x021094DC
	adds r1, r1, #1
	lsls r1, r1, #1
	ldr r3, _020109D4 @ =FUN_020CCBA0
	ldrsh r0, [r2, r0]
	ldrsh r1, [r2, r1]
	bx r3
	.align 2, 0
_020109D0: .4byte 0x021094DC
_020109D4: .4byte FUN_020CCBA0
	thumb_func_end FUN_020109BC

	thumb_func_start FUN_020109D8
FUN_020109D8: @ 0x020109D8
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020109BC
	lsls r2, r4, #0xc
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	asrs r0, r1, #0xc
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020109D8

	thumb_func_start FUN_02010A00
FUN_02010A00: @ 0x02010A00
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r7, r2, #0
	adds r6, r3, #0
	bl FUN_020109BC
	cmp r6, r7
	bge _02010A4A
	lsls r1, r6, #2
	str r0, [sp]
	asrs r0, r0, #0x1f
	lsls r4, r6, #0xc
	adds r5, r5, r1
	str r0, [sp, #4]
_02010A1E:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	asrs r3, r4, #0x1f
	adds r2, r4, #0
	blx FUN_020F2948
	movs r2, #2
	lsls r2, r2, #0xa
	adds r0, r0, r2
	ldr r2, _02010A50 @ =0x00000000
	adcs r1, r2
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r0, r0, #0xc
	stm r5!, {r0}
	movs r0, #1
	lsls r0, r0, #0xc
	adds r6, r6, #1
	adds r4, r4, r0
	cmp r6, r7
	blt _02010A1E
_02010A4A:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02010A50: .4byte 0x00000000
	thumb_func_end FUN_02010A00

	thumb_func_start FUN_02010A54
FUN_02010A54: @ 0x02010A54
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_020109BC
	adds r1, r0, #0
	lsrs r0, r4, #0x1f
	adds r0, r4, r0
	asrs r0, r0, #1
	lsls r0, r0, #0xc
	blx FUN_020CCBA0
	pop {r4, pc}
	thumb_func_end FUN_02010A54

	thumb_func_start FUN_02010A6C
FUN_02010A6C: @ 0x02010A6C
	ldr r3, _02010A78 @ =FUN_020F2998
	subs r0, r1, r0
	lsls r0, r0, #7
	adds r1, r2, #0
	bx r3
	nop
_02010A78: .4byte FUN_020F2998
	thumb_func_end FUN_02010A6C

	thumb_func_start FUN_02010A7C
FUN_02010A7C: @ 0x02010A7C
	adds r0, r0, r1
	bpl _02010A82
	movs r0, #0
_02010A82:
	cmp r0, #0xff
	ble _02010A88
	movs r0, #0xff
_02010A88:
	bx lr
	.align 2, 0
	thumb_func_end FUN_02010A7C

	thumb_func_start FUN_02010A8C
FUN_02010A8C: @ 0x02010A8C
	ldr r3, [r0]
	ldr r2, [r1]
	adds r2, r3, r2
	str r2, [r0]
	ldr r3, [r0, #4]
	ldr r2, [r1, #4]
	adds r2, r3, r2
	str r2, [r0, #4]
	ldr r3, [r0, #8]
	ldr r2, [r1, #8]
	adds r2, r3, r2
	str r2, [r0, #8]
	ldr r2, [r0, #0xc]
	ldr r1, [r1, #0xc]
	adds r1, r2, r1
	str r1, [r0, #0xc]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02010A8C

	thumb_func_start FUN_02010AB0
FUN_02010AB0: @ 0x02010AB0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r3, #0
	adds r6, r2, #0
	ldrb r2, [r5]
	ldr r4, [sp, #0x18]
	ldr r7, [sp, #0x1c]
	lsls r2, r2, #7
	str r2, [r0]
	ldrb r2, [r5, #1]
	lsls r2, r2, #7
	str r2, [r0, #4]
	ldrb r2, [r5, #2]
	lsls r2, r2, #7
	str r2, [r0, #8]
	ldrb r2, [r5, #3]
	lsls r2, r2, #7
	str r2, [r0, #0xc]
	ldrb r0, [r4]
	adds r2, r7, #0
	str r0, [r1]
	ldrb r0, [r4, #1]
	str r0, [r1, #4]
	ldrb r0, [r4, #2]
	str r0, [r1, #8]
	ldrb r0, [r4, #3]
	str r0, [r1, #0xc]
	ldrb r0, [r5]
	ldrb r1, [r4]
	bl FUN_02010A6C
	str r0, [r6]
	ldrb r0, [r5, #1]
	ldrb r1, [r4, #1]
	adds r2, r7, #0
	bl FUN_02010A6C
	str r0, [r6, #4]
	ldrb r0, [r5, #2]
	ldrb r1, [r4, #2]
	adds r2, r7, #0
	bl FUN_02010A6C
	str r0, [r6, #8]
	ldrb r0, [r5, #3]
	ldrb r1, [r4, #3]
	adds r2, r7, #0
	bl FUN_02010A6C
	str r0, [r6, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02010AB0

	thumb_func_start FUN_02010B14
FUN_02010B14: @ 0x02010B14
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r6, r1, #0
	movs r1, #0x1c
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	movs r2, #0x1c
	movs r1, #0
_02010B28:
	strb r1, [r0]
	adds r0, r0, #1
	subs r2, r2, #1
	bne _02010B28
	ldr r4, [r5, #0x14]
	cmp r6, #0
	ldrh r1, [r5, #0x24]
	ldr r0, _02010BB0 @ =0x00007FFF
	bne _02010B5C
	cmp r1, r0
	bne _02010B44
	movs r7, #0x10
	movs r6, #0
	b _02010B7C
_02010B44:
	cmp r1, #0
	bne _02010B50
	movs r7, #0xf
	mvns r7, r7
	movs r6, #0
	b _02010B7C
_02010B50:
	movs r7, #0xf
	mvns r7, r7
	movs r6, #0
	bl FUN_0202551C
	b _02010B7C
_02010B5C:
	cmp r1, r0
	bne _02010B66
	movs r7, #0
	movs r6, #0x10
	b _02010B7C
_02010B66:
	cmp r1, #0
	bne _02010B72
	movs r7, #0
	adds r6, r7, #0
	subs r6, #0x10
	b _02010B7C
_02010B72:
	movs r7, #0
	adds r6, r7, #0
	subs r6, #0x10
	bl FUN_0202551C
_02010B7C:
	ldr r0, [r5, #0x10]
	adds r1, r7, #0
	bl FUN_0200FCFC
	ldr r0, [r5, #4]
	adds r1, r6, #0
	str r0, [r4]
	ldr r0, [r5, #8]
	str r0, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	lsls r0, r7, #7
	str r0, [r4, #0xc]
	lsls r0, r6, #7
	str r0, [r4, #0x10]
	ldr r2, [r5, #4]
	adds r0, r7, #0
	bl FUN_02010A6C
	str r0, [r4, #0x14]
	ldr r0, [r5, #0x10]
	str r0, [r4, #0x18]
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02010BB0: .4byte 0x00007FFF
	thumb_func_end FUN_02010B14

	thumb_func_start FUN_02010BB4
FUN_02010BB4: @ 0x02010BB4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r1, [r5, #0xc]
	movs r4, #0
	ldr r0, [r5, #0x14]
	cmp r1, #1
	beq _02010BCC
	cmp r1, #2
	beq _02010BDC
	cmp r1, #3
	beq _02010BEE
	b _02010BF0
_02010BCC:
	bl FUN_02010BF4
	cmp r0, #1
	bne _02010BF0
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02010BF0
_02010BDC:
	bl FUN_0201AB0C
	adds r0, r4, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r4, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02010BF0
_02010BEE:
	movs r4, #1
_02010BF0:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02010BB4

	thumb_func_start FUN_02010BF4
FUN_02010BF4: @ 0x02010BF4
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, [r1, #8]
	movs r4, #0
	adds r2, r0, #1
	str r2, [r1, #8]
	ldr r0, [r1, #4]
	cmp r2, r0
	blt _02010C32
	str r4, [r1, #8]
	ldr r0, [r1]
	subs r0, r0, #1
	cmp r0, #0
	ble _02010C1C
	str r0, [r1]
	ldr r2, [r1, #0xc]
	ldr r0, [r1, #0x14]
	adds r0, r2, r0
	str r0, [r1, #0xc]
	b _02010C22
_02010C1C:
	ldr r0, [r1, #0x10]
	movs r4, #1
	str r0, [r1, #0xc]
_02010C22:
	ldr r2, [r1, #0xc]
	ldr r0, [r1, #0x18]
	asrs r1, r2, #6
	lsrs r1, r1, #0x19
	adds r1, r2, r1
	asrs r1, r1, #7
	bl FUN_0200FCFC
_02010C32:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02010BF4

	thumb_func_start FUN_02010C38
FUN_02010C38: @ 0x02010C38
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bne _02010C42
	bl FUN_0202551C
_02010C42:
	ldr r0, _02010E54 @ =0x04000006
	ldrh r0, [r0]
	cmp r0, #0xc0
	bge _02010CE8
	adds r5, r0, #1
	cmp r5, #0xbf
	ble _02010C52
	subs r5, #0xc0
_02010C52:
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _02010D02
	adds r0, r4, #0
	movs r1, #0
	bl FUN_02010EE0
	ldr r3, [r4, #8]
	lsls r5, r5, #1
	movs r4, #6
	adds r1, r0, r5
	lsls r4, r4, #6
	ldrsh r2, [r1, r4]
	lsls r4, r4, #2
	ldrsh r1, [r0, r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	ldr r0, _02010E58 @ =0x04000004
	bne _02010CBC
	cmp r3, #0
	bne _02010C9C
	ldrh r4, [r0]
	movs r3, #2
	tst r3, r4
	beq _02010CE8
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3c]
	movs r1, #0xc0
	adds r0, #0x40
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010C9C:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	beq _02010CE8
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E5C @ =0x04001040
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010CBC:
	cmp r3, #0
	bne _02010CE0
	ldrh r4, [r0]
	movs r3, #2
	tst r3, r4
	beq _02010CE8
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3e]
	movs r1, #0xc0
	adds r0, #0x42
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010CE0:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	bne _02010CEA
_02010CE8:
	b _02010E50
_02010CEA:
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E60 @ =0x04001042
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010D02:
	adds r0, r4, #0
	movs r1, #0
	bl FUN_02010EE0
	adds r3, r0, #0
	lsls r5, r5, #1
	movs r6, #6
	adds r1, r3, r5
	lsls r6, r6, #6
	ldrsh r2, [r1, r6]
	lsls r6, r6, #2
	ldrsh r1, [r3, r5]
	ldr r3, [r3, r6]
	ldr r0, [r4, #8]
	cmp r3, #0
	bne _02010D68
	cmp r0, #0
	ldr r0, _02010E58 @ =0x04000004
	bne _02010D48
	ldrh r6, [r0]
	movs r3, #2
	tst r3, r6
	beq _02010DAC
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3c]
	movs r1, #0xc0
	adds r0, #0x40
	strh r1, [r0]
	b _02010DAC
_02010D48:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	beq _02010DAC
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E5C @ =0x04001040
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
	b _02010DAC
_02010D68:
	cmp r0, #0
	ldr r0, _02010E58 @ =0x04000004
	bne _02010D8E
	ldrh r6, [r0]
	movs r3, #2
	tst r3, r6
	beq _02010DAC
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3e]
	movs r1, #0xc0
	adds r0, #0x42
	strh r1, [r0]
	b _02010DAC
_02010D8E:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	beq _02010DAC
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E60 @ =0x04001042
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
_02010DAC:
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02010EE0
	ldr r3, [r4, #8]
	movs r4, #6
	adds r1, r0, r5
	lsls r4, r4, #6
	ldrsh r2, [r1, r4]
	lsls r4, r4, #2
	ldrsh r1, [r0, r5]
	ldr r0, [r0, r4]
	cmp r0, #0
	ldr r0, _02010E58 @ =0x04000004
	bne _02010E0E
	cmp r3, #0
	bne _02010DEE
	ldrh r4, [r0]
	movs r3, #2
	tst r3, r4
	beq _02010E50
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3c]
	movs r1, #0xc0
	adds r0, #0x40
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010DEE:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	beq _02010E50
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E5C @ =0x04001040
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
	pop {r4, r5, r6, pc}
_02010E0E:
	cmp r3, #0
	bne _02010E32
	ldrh r4, [r0]
	movs r3, #2
	tst r3, r4
	beq _02010E50
	lsls r3, r1, #8
	movs r1, #0xff
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	orrs r1, r3
	strh r1, [r0, #0x3e]
	movs r1, #0xc0
	adds r0, #0x42
	strh r1, [r0]
	pop {r4, r5, r6, pc}
_02010E32:
	ldrh r3, [r0]
	movs r0, #2
	tst r0, r3
	beq _02010E50
	movs r0, #0xff
	lsls r1, r1, #8
	lsls r0, r0, #8
	ands r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	ldr r1, _02010E60 @ =0x04001042
	strh r0, [r1]
	movs r0, #0xc0
	strh r0, [r1, #4]
_02010E50:
	pop {r4, r5, r6, pc}
	nop
_02010E54: .4byte 0x04000006
_02010E58: .4byte 0x04000004
_02010E5C: .4byte 0x04001040
_02010E60: .4byte 0x04001042
	thumb_func_end FUN_02010C38

	thumb_func_start FUN_02010E64
FUN_02010E64: @ 0x02010E64
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r4, #0
	beq _02010E7A
	cmp r4, #1
	beq _02010E7A
	cmp r4, #2
	beq _02010E94
	pop {r4, r5, r6, pc}
_02010E7A:
	ldr r1, _02010EC0 @ =0x00000604
	adds r0, r3, #0
	bl FUN_0201AA8C
	str r0, [r5]
	movs r0, #1
	str r0, [r5, #4]
	str r6, [r5, #8]
	movs r0, #6
	ldr r1, [r5]
	lsls r0, r0, #8
	str r4, [r1, r0]
	pop {r4, r5, r6, pc}
_02010E94:
	ldr r1, _02010EC4 @ =0x00000C08
	adds r0, r3, #0
	bl FUN_0201AA8C
	str r0, [r5]
	movs r0, #2
	str r0, [r5, #4]
	movs r0, #6
	movs r3, #0
	lsls r0, r0, #8
	str r6, [r5, #8]
	adds r4, r3, #0
	adds r1, r0, #4
_02010EAE:
	ldr r2, [r5]
	adds r2, r2, r4
	str r3, [r2, r0]
	adds r3, r3, #1
	adds r4, r4, r1
	cmp r3, #2
	blt _02010EAE
	pop {r4, r5, r6, pc}
	nop
_02010EC0: .4byte 0x00000604
_02010EC4: .4byte 0x00000C08
	thumb_func_end FUN_02010E64

	thumb_func_start FUN_02010EC8
FUN_02010EC8: @ 0x02010EC8
	ldr r3, _02010ECC @ =FUN_02010ED0
	bx r3
	.align 2, 0
_02010ECC: .4byte FUN_02010ED0
	thumb_func_end FUN_02010EC8

	thumb_func_start FUN_02010ED0
FUN_02010ED0: @ 0x02010ED0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02010ED0

	thumb_func_start FUN_02010EE0
FUN_02010EE0: @ 0x02010EE0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	adds r4, r1, #0
	cmp r0, r4
	bgt _02010EF0
	bl FUN_0202551C
_02010EF0:
	ldr r0, _02010EFC @ =0x00000604
	ldr r1, [r5]
	muls r0, r4, r0
	adds r0, r1, r0
	pop {r3, r4, r5, pc}
	nop
_02010EFC: .4byte 0x00000604
	thumb_func_end FUN_02010EE0

	thumb_func_start FUN_02010F00
FUN_02010F00: @ 0x02010F00
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	str r0, [sp]
	ldr r0, [r5, #4]
	movs r4, #0
	cmp r0, #0
	ble _02010F2C
	movs r7, #3
	lsls r7, r7, #8
	adds r6, r7, #0
_02010F14:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02010EE0
	adds r1, r0, r6
	adds r2, r7, #0
	blx FUN_020E5AD8
	ldr r0, [r5, #4]
	adds r4, r4, #1
	cmp r4, r0
	blt _02010F14
_02010F2C:
	ldr r0, [sp]
	bl FUN_0200E390
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02010F00

	thumb_func_start FUN_02010F34
FUN_02010F34: @ 0x02010F34
	push {r4, r5, lr}
	sub sp, #0xc
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _02010F4C
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02013424
	add sp, #0xc
	pop {r4, r5, pc}
_02010F4C:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02013424
	movs r2, #0
	adds r0, r5, #0
	movs r1, #0x3f
	adds r3, r2, #0
	str r4, [sp]
	bl FUN_02013440
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r2, r1, #0
	adds r3, r1, #0
	str r4, [sp, #8]
	bl FUN_02013488
	adds r0, r5, #0
	movs r1, #0x20
	movs r2, #0
	adds r3, r4, #0
	bl FUN_02013468
	add sp, #0xc
	pop {r4, r5, pc}
	thumb_func_end FUN_02010F34

	thumb_func_start FUN_02010F84
FUN_02010F84: @ 0x02010F84
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r2, #0
	ldr r2, [sp, #0x34]
	adds r6, r0, #0
	adds r5, r3, #0
	ldr r4, [sp, #0x20]
	cmp r2, #0
	bne _02010FC0
	adds r0, r1, #0
	movs r1, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl FUN_02013220
	adds r0, r7, #0
	movs r1, #0
	adds r2, r4, #0
	bl FUN_020132A8
	str r5, [sp]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x2c]
	ldr r3, [sp, #0x30]
	str r4, [sp, #4]
	bl FUN_02013364
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_02010FC0:
	movs r2, #0
	str r4, [sp]
	bl FUN_02013440
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	adds r3, r4, #0
	bl FUN_02013468
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x24]
	str r0, [sp]
	str r5, [sp, #4]
	ldr r2, [sp, #0x28]
	ldr r3, [sp, #0x2c]
	adds r0, r6, #0
	str r4, [sp, #8]
	bl FUN_02013488
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02010F84

	thumb_func_start FUN_02010FEC
FUN_02010FEC: @ 0x02010FEC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r7, r3, #0
	bl FUN_020132E8
	add r1, sp, #4
	strb r0, [r1, #1]
	ldrb r0, [r1, #1]
	strb r0, [r1, #3]
	adds r0, r4, #0
	bl FUN_0201333C
	add r1, sp, #4
	strb r0, [r1]
	ldrb r0, [r1]
	cmp r7, #0
	strb r0, [r1, #2]
	bne _0201103E
	ldrb r0, [r1, #2]
	movs r1, #0
	adds r2, r5, #0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	adds r3, r4, #0
	bl FUN_02013220
	add r0, sp, #4
	ldrb r0, [r0, #3]
	movs r1, #0
	adds r2, r4, #0
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	bl FUN_020132A8
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201103E:
	str r4, [sp]
	ldrb r1, [r1, #2]
	adds r0, r6, #0
	movs r2, #0
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	adds r3, r5, #0
	bl FUN_02013440
	add r1, sp, #4
	ldrb r1, [r1, #3]
	adds r0, r6, #0
	movs r2, #0
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1b
	adds r3, r4, #0
	bl FUN_02013468
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02010FEC

	thumb_func_start FUN_02011068
FUN_02011068: @ 0x02011068
	push {r3, lr}
	cmp r3, #0
	bne _02011078
	adds r0, r1, #0
	adds r1, r2, #0
	bl FUN_020131F4
	pop {r3, pc}
_02011078:
	bl FUN_02013424
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02011068

	thumb_func_start FUN_02011080
FUN_02011080: @ 0x02011080
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r2, #0
	movs r2, #0xc3
	adds r6, r1, #0
	movs r1, #0
	lsls r2, r2, #2
	adds r5, r0, #0
	adds r7, r3, #0
	blx FUN_020E5B44
	cmp r4, #1
	bne _020110AA
	movs r0, #6
	lsls r0, r0, #6
	str r7, [r5, r0]
	movs r0, #0xc2
	lsls r0, r0, #2
	strb r4, [r5, r0]
	adds r0, r0, #1
	strb r6, [r5, r0]
	pop {r3, r4, r5, r6, r7, pc}
_020110AA:
	movs r0, #6
	lsls r0, r0, #6
	str r7, [r5, r0]
	movs r0, #0xc1
	ldr r1, [sp, #0x18]
	lsls r0, r0, #2
	str r1, [r5, r0]
	adds r1, r0, #4
	strb r4, [r5, r1]
	adds r0, r0, #5
	strb r6, [r5, r0]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02011080

	thumb_func_start FUN_020110C4
FUN_020110C4: @ 0x020110C4
	ldr r3, _020110D0 @ =FUN_0200E374
	adds r1, r0, #0
	ldr r0, _020110D4 @ =FUN_02011104
	ldr r2, _020110D8 @ =0x000003FF
	bx r3
	nop
_020110D0: .4byte FUN_0200E374
_020110D4: .4byte FUN_02011104
_020110D8: .4byte 0x000003FF
	thumb_func_end FUN_020110C4

	thumb_func_start FUN_020110DC
FUN_020110DC: @ 0x020110DC
	push {r3, lr}
	ldr r3, _020110EC @ =0x00000309
	str r2, [sp]
	ldrb r3, [r1, r3]
	ldr r2, _020110F0 @ =FUN_02011130
	bl FUN_0200FF88
	pop {r3, pc}
	.align 2, 0
_020110EC: .4byte 0x00000309
_020110F0: .4byte FUN_02011130
	thumb_func_end FUN_020110DC

	thumb_func_start FUN_020110F4
FUN_020110F4: @ 0x020110F4
	ldr r3, _020110FC @ =0x00000309
	ldrb r1, [r1, r3]
	ldr r3, _02011100 @ =FUN_0200FFB4
	bx r3
	.align 2, 0
_020110FC: .4byte 0x00000309
_02011100: .4byte FUN_0200FFB4
	thumb_func_end FUN_020110F4

	thumb_func_start FUN_02011104
FUN_02011104: @ 0x02011104
	push {r3, r4, r5, r6, r7, lr}
	movs r7, #0xc0
	adds r6, r7, #0
	str r0, [sp]
	adds r5, r1, #0
	movs r4, #0
	adds r6, #0xc4
_02011112:
	adds r0, r5, #0
	adds r0, #0xc0
	adds r1, r5, #0
	adds r2, r7, #0
	blx FUN_020E5AD8
	adds r4, r4, #1
	adds r5, r5, r6
	cmp r4, #2
	blt _02011112
	ldr r0, [sp]
	bl FUN_0200E390
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02011104

	thumb_func_start FUN_02011130
FUN_02011130: @ 0x02011130
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bne _0201113A
	bl FUN_0202551C
_0201113A:
	ldr r0, _02011428 @ =0x04000006
	ldrh r0, [r0]
	cmp r0, #0xc0
	bge _020111BC
	adds r0, r0, #1
	cmp r0, #0xbf
	ble _0201114A
	subs r0, #0xc0
_0201114A:
	movs r2, #0xc2
	lsls r2, r2, #2
	ldrb r1, [r4, r2]
	cmp r1, #1
	beq _02011156
	b _020112F0
_02011156:
	adds r0, r4, r0
	adds r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	bne _02011226
	adds r0, r2, #1
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C @ =0x04000004
	bne _02011186
	ldrh r2, [r0]
	movs r1, #2
	tst r1, r2
	beq _020111A0
	adds r0, #0x46
	ldrh r2, [r0]
	movs r1, #0x3f
	bics r2, r1
	movs r1, #0x3f
	orrs r2, r1
	movs r1, #0x20
	orrs r1, r2
	strh r1, [r0]
	b _020111A0
_02011186:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _020111A0
	ldr r1, _02011430 @ =0x0400104A
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x3f
	orrs r2, r0
	movs r0, #0x20
	orrs r0, r2
	strh r0, [r1]
_020111A0:
	ldr r0, _02011434 @ =0x00000309
	ldrb r1, [r4, r0]
	movs r0, #6
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	cmp r0, #0
	bne _020111EC
	cmp r1, #0
	bne _020111D0
	ldr r2, _0201142C @ =0x04000004
	movs r0, #2
	ldrh r1, [r2]
	tst r0, r1
	bne _020111BE
_020111BC:
	b _02011634
_020111BE:
	adds r2, #0x44
	ldrh r1, [r2]
	movs r0, #0x3f
	bics r1, r0
	movs r0, #0x20
	orrs r1, r0
	orrs r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_020111D0:
	ldr r0, _0201142C @ =0x04000004
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _020112D8
	ldr r1, _02011438 @ =0x04001048
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x20
	orrs r2, r0
	orrs r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020111EC:
	cmp r1, #0
	ldr r0, _0201142C @ =0x04000004
	bne _0201120C
	ldrh r1, [r0]
	movs r2, #2
	tst r1, r2
	beq _020112D8
	adds r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201143C @ =0xFFFFC0FF
	ands r3, r1
	lsls r1, r2, #0xc
	orrs r3, r1
	orrs r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_0201120C:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _020112D8
	ldr r2, _02011438 @ =0x04001048
	ldr r0, _0201143C @ =0xFFFFC0FF
	ldrh r1, [r2]
	ands r1, r0
	lsrs r0, r2, #0xd
	orrs r1, r0
	orrs r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011226:
	adds r0, r2, #1
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C @ =0x04000004
	bne _0201124A
	ldrh r2, [r0]
	movs r1, #2
	tst r1, r2
	beq _02011262
	adds r0, #0x46
	ldrh r2, [r0]
	movs r1, #0x3f
	bics r2, r1
	movs r1, #0x20
	orrs r2, r1
	orrs r1, r2
	strh r1, [r0]
	b _02011262
_0201124A:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _02011262
	ldr r1, _02011430 @ =0x0400104A
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x20
	orrs r2, r0
	orrs r0, r2
	strh r0, [r1]
_02011262:
	ldr r0, _02011434 @ =0x00000309
	ldrb r1, [r4, r0]
	movs r0, #6
	lsls r0, r0, #6
	ldr r0, [r4, r0]
	cmp r0, #0
	ldr r0, _0201142C @ =0x04000004
	bne _020112AE
	cmp r1, #0
	bne _02011292
	ldrh r2, [r0]
	movs r1, #2
	tst r1, r2
	beq _020112D8
	adds r0, #0x44
	ldrh r2, [r0]
	movs r1, #0x3f
	bics r2, r1
	movs r1, #0x3f
	orrs r2, r1
	movs r1, #0x20
	orrs r1, r2
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011292:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _020112D8
	ldr r1, _02011438 @ =0x04001048
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x3f
	orrs r2, r0
	movs r0, #0x20
	orrs r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020112AE:
	cmp r1, #0
	bne _020112D0
	ldrh r1, [r0]
	movs r2, #2
	tst r1, r2
	beq _020112D8
	adds r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201143C @ =0xFFFFC0FF
	ands r3, r1
	movs r1, #0x3f
	lsls r1, r1, #8
	orrs r3, r1
	lsls r1, r2, #0xc
	orrs r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_020112D0:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	bne _020112DA
_020112D8:
	b _02011634
_020112DA:
	ldr r2, _02011438 @ =0x04001048
	ldr r0, _0201143C @ =0xFFFFC0FF
	ldrh r1, [r2]
	ands r1, r0
	movs r0, #0x3f
	lsls r0, r0, #8
	orrs r1, r0
	lsrs r0, r2, #0xd
	orrs r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_020112F0:
	adds r1, r4, r0
	adds r1, #0xc0
	ldrb r1, [r1]
	cmp r1, #0
	bne _020113BC
	adds r1, r2, #1
	ldrb r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C @ =0x04000004
	bne _02011320
	ldrh r3, [r1]
	movs r2, #2
	tst r2, r3
	beq _0201133A
	adds r1, #0x46
	ldrh r3, [r1]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x3f
	orrs r3, r2
	movs r2, #0x20
	orrs r2, r3
	strh r2, [r1]
	b _0201133A
_02011320:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _0201133A
	ldr r2, _02011430 @ =0x0400104A
	movs r1, #0x3f
	ldrh r3, [r2]
	bics r3, r1
	movs r1, #0x3f
	orrs r3, r1
	movs r1, #0x20
	orrs r1, r3
	strh r1, [r2]
_0201133A:
	ldr r1, _02011434 @ =0x00000309
	ldrb r2, [r4, r1]
	movs r1, #6
	lsls r1, r1, #6
	ldr r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C @ =0x04000004
	bne _02011382
	cmp r2, #0
	bne _02011368
	ldrh r3, [r1]
	movs r2, #2
	tst r2, r3
	beq _0201138E
	adds r1, #0x44
	ldrh r3, [r1]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x20
	orrs r3, r2
	orrs r2, r3
	strh r2, [r1]
	b _0201149A
_02011368:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _0201138E
	ldr r2, _02011438 @ =0x04001048
	movs r1, #0x3f
	ldrh r3, [r2]
	bics r3, r1
	movs r1, #0x20
	orrs r3, r1
	orrs r1, r3
	strh r1, [r2]
	b _0201149A
_02011382:
	cmp r2, #0
	bne _020113A2
	ldrh r2, [r1]
	movs r3, #2
	tst r2, r3
	bne _02011390
_0201138E:
	b _0201149A
_02011390:
	adds r1, #0x44
	ldrh r5, [r1]
	ldr r2, _0201143C @ =0xFFFFC0FF
	ands r5, r2
	lsls r2, r3, #0xc
	orrs r5, r2
	orrs r2, r5
	strh r2, [r1]
	b _0201149A
_020113A2:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _0201149A
	ldr r3, _02011438 @ =0x04001048
	ldr r1, _0201143C @ =0xFFFFC0FF
	ldrh r2, [r3]
	ands r2, r1
	lsrs r1, r3, #0xd
	orrs r2, r1
	orrs r1, r2
	strh r1, [r3]
	b _0201149A
_020113BC:
	adds r1, r2, #1
	ldrb r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C @ =0x04000004
	bne _020113E0
	ldrh r3, [r1]
	movs r2, #2
	tst r2, r3
	beq _020113F8
	adds r1, #0x46
	ldrh r3, [r1]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x20
	orrs r3, r2
	orrs r2, r3
	strh r2, [r1]
	b _020113F8
_020113E0:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _020113F8
	ldr r2, _02011430 @ =0x0400104A
	movs r1, #0x3f
	ldrh r3, [r2]
	bics r3, r1
	movs r1, #0x20
	orrs r3, r1
	orrs r1, r3
	strh r1, [r2]
_020113F8:
	ldr r1, _02011434 @ =0x00000309
	ldrb r2, [r4, r1]
	movs r1, #6
	lsls r1, r1, #6
	ldr r1, [r4, r1]
	cmp r1, #0
	ldr r1, _0201142C @ =0x04000004
	bne _0201145C
	cmp r2, #0
	bne _02011440
	ldrh r3, [r1]
	movs r2, #2
	tst r2, r3
	beq _0201149A
	adds r1, #0x44
	ldrh r3, [r1]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x3f
	orrs r3, r2
	movs r2, #0x20
	orrs r2, r3
	strh r2, [r1]
	b _0201149A
	.align 2, 0
_02011428: .4byte 0x04000006
_0201142C: .4byte 0x04000004
_02011430: .4byte 0x0400104A
_02011434: .4byte 0x00000309
_02011438: .4byte 0x04001048
_0201143C: .4byte 0xFFFFC0FF
_02011440:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _0201149A
	ldr r2, _02011638 @ =0x04001048
	movs r1, #0x3f
	ldrh r3, [r2]
	bics r3, r1
	movs r1, #0x3f
	orrs r3, r1
	movs r1, #0x20
	orrs r1, r3
	strh r1, [r2]
	b _0201149A
_0201145C:
	cmp r2, #0
	bne _0201147E
	ldrh r2, [r1]
	movs r3, #2
	tst r2, r3
	beq _0201149A
	adds r1, #0x44
	ldrh r5, [r1]
	ldr r2, _0201163C @ =0xFFFFC0FF
	ands r5, r2
	movs r2, #0x3f
	lsls r2, r2, #8
	orrs r5, r2
	lsls r2, r3, #0xc
	orrs r2, r5
	strh r2, [r1]
	b _0201149A
_0201147E:
	ldrh r2, [r1]
	movs r1, #2
	tst r1, r2
	beq _0201149A
	ldr r3, _02011638 @ =0x04001048
	ldr r1, _0201163C @ =0xFFFFC0FF
	ldrh r2, [r3]
	ands r2, r1
	movs r1, #0x3f
	lsls r1, r1, #8
	orrs r2, r1
	lsrs r1, r3, #0xd
	orrs r1, r2
	strh r1, [r3]
_0201149A:
	movs r1, #0x61
	lsls r1, r1, #2
	adds r1, r4, r1
	adds r0, r1, r0
	adds r0, #0xc0
	ldrb r0, [r0]
	cmp r0, #0
	ldr r0, _02011640 @ =0x00000309
	bne _02011570
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _02011644 @ =0x04000004
	bne _020114D0
	ldrh r3, [r0]
	movs r2, #2
	tst r2, r3
	beq _020114EA
	adds r0, #0x46
	ldrh r3, [r0]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x3f
	orrs r3, r2
	movs r2, #0x20
	orrs r2, r3
	strh r2, [r0]
	b _020114EA
_020114D0:
	ldrh r2, [r0]
	movs r0, #2
	tst r0, r2
	beq _020114EA
	ldr r2, _02011648 @ =0x0400104A
	movs r0, #0x3f
	ldrh r3, [r2]
	bics r3, r0
	movs r0, #0x3f
	orrs r3, r0
	movs r0, #0x20
	orrs r0, r3
	strh r0, [r2]
_020114EA:
	ldr r0, _02011640 @ =0x00000309
	ldrb r2, [r4, r0]
	movs r0, #6
	lsls r0, r0, #6
	ldr r0, [r1, r0]
	cmp r0, #0
	bne _02011536
	cmp r2, #0
	bne _02011518
	ldr r2, _02011644 @ =0x04000004
	movs r0, #2
	ldrh r1, [r2]
	tst r0, r1
	beq _02011522
	adds r2, #0x44
	ldrh r1, [r2]
	movs r0, #0x3f
	bics r1, r0
	movs r0, #0x20
	orrs r1, r0
	orrs r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011518:
	ldr r0, _02011644 @ =0x04000004
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	bne _02011524
_02011522:
	b _02011634
_02011524:
	ldr r1, _02011638 @ =0x04001048
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x20
	orrs r2, r0
	orrs r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_02011536:
	cmp r2, #0
	ldr r0, _02011644 @ =0x04000004
	bne _02011556
	ldrh r1, [r0]
	movs r2, #2
	tst r1, r2
	beq _02011634
	adds r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201163C @ =0xFFFFC0FF
	ands r3, r1
	lsls r1, r2, #0xc
	orrs r3, r1
	orrs r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011556:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _02011634
	ldr r2, _02011638 @ =0x04001048
	ldr r0, _0201163C @ =0xFFFFC0FF
	ldrh r1, [r2]
	ands r1, r0
	lsrs r0, r2, #0xd
	orrs r1, r0
	orrs r0, r1
	strh r0, [r2]
	pop {r3, r4, r5, pc}
_02011570:
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, _02011644 @ =0x04000004
	bne _02011592
	ldrh r3, [r0]
	movs r2, #2
	tst r2, r3
	beq _020115AA
	adds r0, #0x46
	ldrh r3, [r0]
	movs r2, #0x3f
	bics r3, r2
	movs r2, #0x20
	orrs r3, r2
	orrs r2, r3
	strh r2, [r0]
	b _020115AA
_02011592:
	ldrh r2, [r0]
	movs r0, #2
	tst r0, r2
	beq _020115AA
	ldr r2, _02011648 @ =0x0400104A
	movs r0, #0x3f
	ldrh r3, [r2]
	bics r3, r0
	movs r0, #0x20
	orrs r3, r0
	orrs r0, r3
	strh r0, [r2]
_020115AA:
	ldr r0, _02011640 @ =0x00000309
	ldrb r2, [r4, r0]
	movs r0, #6
	lsls r0, r0, #6
	ldr r0, [r1, r0]
	cmp r0, #0
	ldr r0, _02011644 @ =0x04000004
	bne _020115F6
	cmp r2, #0
	bne _020115DA
	ldrh r2, [r0]
	movs r1, #2
	tst r1, r2
	beq _02011634
	adds r0, #0x44
	ldrh r2, [r0]
	movs r1, #0x3f
	bics r2, r1
	movs r1, #0x3f
	orrs r2, r1
	movs r1, #0x20
	orrs r1, r2
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_020115DA:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _02011634
	ldr r1, _02011638 @ =0x04001048
	movs r0, #0x3f
	ldrh r2, [r1]
	bics r2, r0
	movs r0, #0x3f
	orrs r2, r0
	movs r0, #0x20
	orrs r0, r2
	strh r0, [r1]
	pop {r3, r4, r5, pc}
_020115F6:
	cmp r2, #0
	bne _02011618
	ldrh r1, [r0]
	movs r2, #2
	tst r1, r2
	beq _02011634
	adds r0, #0x44
	ldrh r3, [r0]
	ldr r1, _0201163C @ =0xFFFFC0FF
	ands r3, r1
	movs r1, #0x3f
	lsls r1, r1, #8
	orrs r3, r1
	lsls r1, r2, #0xc
	orrs r1, r3
	strh r1, [r0]
	pop {r3, r4, r5, pc}
_02011618:
	ldrh r1, [r0]
	movs r0, #2
	tst r0, r1
	beq _02011634
	ldr r2, _02011638 @ =0x04001048
	ldr r0, _0201163C @ =0xFFFFC0FF
	ldrh r1, [r2]
	ands r1, r0
	movs r0, #0x3f
	lsls r0, r0, #8
	orrs r1, r0
	lsrs r0, r2, #0xd
	orrs r0, r1
	strh r0, [r2]
_02011634:
	pop {r3, r4, r5, pc}
	nop
_02011638: .4byte 0x04001048
_0201163C: .4byte 0xFFFFC0FF
_02011640: .4byte 0x00000309
_02011644: .4byte 0x04000004
_02011648: .4byte 0x0400104A
	thumb_func_end FUN_02011130

	thumb_func_start FUN_0201164C
FUN_0201164C: @ 0x0201164C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r6, r1, #0
	movs r1, #0x4c
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	adds r4, r0, #0
	ldr r0, [r5, #0x10]
	adds r1, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r0, r4, #0
	bl FUN_020117A0
	ldrb r0, [r6, #8]
	cmp r0, #0
	ldr r0, [r5, #0x18]
	bne _02011688
	ldr r2, [r4, #0x30]
	ldr r3, [r4, #0x44]
	movs r1, #1
	bl FUN_02011068
	b _02011692
_02011688:
	ldr r2, [r4, #0x30]
	ldr r3, [r4, #0x44]
	movs r1, #2
	bl FUN_02011068
_02011692:
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201164C

	thumb_func_start FUN_0201169C
FUN_0201169C: @ 0x0201169C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020116B4
	cmp r0, #2
	beq _020116D0
	cmp r0, #3
	beq _020116E4
	b _020116E6
_020116B4:
	adds r0, r4, #0
	bl FUN_020117FC
	cmp r0, #1
	bne _020116E6
	ldr r0, [r4, #0x44]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _020116E6
_020116D0:
	adds r0, r4, #0
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _020116E6
_020116E4:
	movs r6, #1
_020116E6:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0201169C

	thumb_func_start FUN_020116EC
FUN_020116EC: @ 0x020116EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r6, r1, #0
	movs r1, #0x98
	adds r7, r2, #0
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	adds r4, r0, #0
	ldr r0, [r5, #0x10]
	adds r1, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r0, r4, #0
	bl FUN_020117A0
	ldr r0, [r5, #0x10]
	adds r1, r7, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	adds r0, r4, #0
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r0, #0x4c
	bl FUN_020117A0
	ldr r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	ldr r3, [r4, #0x44]
	movs r1, #3
	bl FUN_02011068
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020116EC

	thumb_func_start FUN_02011744
FUN_02011744: @ 0x02011744
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r7, #0
	ldr r6, [r5, #0x14]
	cmp r0, #1
	beq _0201175C
	cmp r0, #2
	beq _02011784
	cmp r0, #3
	beq _02011798
	b _0201179A
_0201175C:
	adds r0, r6, #0
	bl FUN_020117FC
	adds r4, r0, #0
	adds r0, r6, #0
	adds r0, #0x4c
	bl FUN_020117FC
	adds r0, r4, r0
	cmp r0, #2
	bne _0201179A
	ldr r0, [r6, #0x44]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201179A
_02011784:
	adds r0, r6, #0
	bl FUN_0201AB0C
	adds r0, r7, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r7, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201179A
_02011798:
	movs r7, #1
_0201179A:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02011744

	thumb_func_start FUN_020117A0
FUN_020117A0: @ 0x020117A0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r1, #0
	adds r1, r4, #4
	adds r5, r0, #0
	adds r6, r2, #0
	str r1, [sp]
	adds r1, r5, #0
	adds r2, r5, #0
	adds r7, r3, #0
	adds r1, #0x20
	adds r2, #0x10
	adds r3, r4, #0
	str r6, [sp, #4]
	bl FUN_02010AB0
	ldr r1, [sp, #0x30]
	str r1, [r5, #0x30]
	ldrb r0, [r4, #8]
	str r0, [r5, #0x34]
	str r6, [r5, #0x38]
	str r7, [r5, #0x3c]
	movs r0, #0
	str r0, [r5, #0x40]
	ldr r0, [sp, #0x34]
	str r0, [r5, #0x48]
	ldrb r2, [r4, #0xb]
	str r2, [r5, #0x44]
	str r1, [sp]
	ldrb r1, [r4]
	str r1, [sp, #4]
	ldrb r1, [r4, #1]
	str r1, [sp, #8]
	ldrb r1, [r4, #2]
	str r1, [sp, #0xc]
	ldrb r1, [r4, #3]
	str r1, [sp, #0x10]
	ldr r1, [r5, #0x44]
	str r1, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	bl FUN_02010F84
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020117A0

	thumb_func_start FUN_020117FC
FUN_020117FC: @ 0x020117FC
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r4, #0x40]
	adds r2, r1, #1
	str r2, [r4, #0x40]
	ldr r1, [r4, #0x3c]
	cmp r2, r1
	blt _0201187C
	movs r1, #0
	str r1, [r4, #0x40]
	ldr r1, [r4, #0x38]
	subs r1, r1, #1
	cmp r1, #0
	ble _02011826
	str r1, [r4, #0x38]
	adds r1, r4, #0
	adds r1, #0x10
	bl FUN_02010A8C
	b _02011844
_02011826:
	ldr r0, [r4, #0x2c]
	str r0, [sp]
	ldr r0, [r4, #0x34]
	str r0, [sp, #4]
	ldr r0, [r4, #0x30]
	str r0, [sp, #8]
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x20]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	bl FUN_02013488
	add sp, #0xc
	movs r0, #1
	pop {r3, r4, pc}
_02011844:
	ldr r1, [r4, #0xc]
	asrs r0, r1, #6
	lsrs r0, r0, #0x19
	adds r0, r1, r0
	asrs r0, r0, #7
	str r0, [sp]
	ldr r0, [r4, #0x34]
	str r0, [sp, #4]
	ldr r0, [r4, #0x30]
	str r0, [sp, #8]
	ldr r2, [r4]
	ldr r3, [r4, #4]
	asrs r1, r2, #6
	lsrs r1, r1, #0x19
	adds r1, r2, r1
	ldr r0, [r4, #0x48]
	asrs r2, r3, #6
	lsrs r2, r2, #0x19
	adds r2, r3, r2
	ldr r4, [r4, #8]
	asrs r1, r1, #7
	asrs r3, r4, #6
	lsrs r3, r3, #0x19
	adds r3, r4, r3
	asrs r2, r2, #7
	asrs r3, r3, #7
	bl FUN_02013488
_0201187C:
	movs r0, #0
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_020117FC

	thumb_func_start FUN_02011884
FUN_02011884: @ 0x02011884
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x38
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02011918
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02011884

	thumb_func_start FUN_020118BC
FUN_020118BC: @ 0x020118BC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020118D4
	cmp r0, #2
	beq _020118F0
	cmp r0, #3
	beq _0201190A
	b _0201190E
_020118D4:
	adds r0, r4, #0
	bl FUN_020119F4
	cmp r0, #1
	bne _02011912
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011912
_020118F0:
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011912
_0201190A:
	movs r6, #1
	b _02011912
_0201190E:
	bl FUN_0202551C
_02011912:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_020118BC

	thumb_func_start FUN_02011918
FUN_02011918: @ 0x02011918
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #0
	movs r1, #2
	ldrsh r0, [r4, r0]
	ldrsh r1, [r4, r1]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	bl FUN_02010A6C
	str r0, [sp, #0x20]
	ldrb r1, [r4, #8]
	ldr r3, [sp, #0x44]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_02010E64
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #7
	str r1, [r5, #0xc]
	movs r1, #4
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x10]
	movs r1, #6
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x14]
	ldr r1, [sp, #0x20]
	str r1, [r5, #0x18]
	ldr r1, [sp, #0x18]
	str r1, [r5, #0x1c]
	ldr r1, [sp, #0x1c]
	str r1, [r5, #0x20]
	str r0, [r5, #0x24]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x28]
	ldrb r0, [r4, #0xb]
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	bl FUN_02011AD8
	ldr r0, _020119E8 @ =FUN_02010F00
	ldr r2, _020119EC @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	movs r1, #3
	str r6, [sp]
	lsls r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0x12
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	adds r0, r7, #0
	bl FUN_02010F84
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _020119C8
	ldr r3, [r5, #0x2c]
	adds r0, r7, #0
	movs r1, #1
	adds r2, r6, #0
	bl FUN_02011068
	b _020119D4
_020119C8:
	ldr r3, [r5, #0x2c]
	adds r0, r7, #0
	movs r1, #2
	adds r2, r6, #0
	bl FUN_02011068
_020119D4:
	ldr r0, [sp, #0x44]
	ldr r2, _020119F0 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020119E8: .4byte FUN_02010F00
_020119EC: .4byte 0x000003FF
_020119F0: .4byte FUN_02010C38
	thumb_func_end FUN_02011918

	thumb_func_start FUN_020119F4
FUN_020119F4: @ 0x020119F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x24]
	adds r2, r1, #1
	str r2, [r4, #0x24]
	ldr r1, [r4, #0x20]
	cmp r2, r1
	blt _02011A38
	movs r1, #0
	str r1, [r4, #0x24]
	ldr r1, [r4, #0x1c]
	subs r1, r1, #1
	cmp r1, #0
	ble _02011A2A
	str r1, [r4, #0x1c]
	ldr r2, [r4, #0xc]
	ldr r1, [r4, #0x18]
	adds r1, r2, r1
	str r1, [r4, #0xc]
	bl FUN_02011AD8
	ldr r0, _02011A3C @ =FUN_02010F00
	ldr r2, _02011A40 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _02011A38
_02011A2A:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x28]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_02011A38:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_02011A3C: .4byte FUN_02010F00
_02011A40: .4byte 0x000003FF
	thumb_func_end FUN_020119F4

	thumb_func_start FUN_02011A44
FUN_02011A44: @ 0x02011A44
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	str r1, [sp]
	asrs r1, r0, #6
	lsrs r1, r1, #0x19
	adds r1, r0, r1
	asrs r1, r1, #7
	ldr r5, [sp, #0x20]
	ldr r4, [sp, #0x24]
	subs r0, r3, r2
	bpl _02011A5C
	rsbs r0, r0, #0
_02011A5C:
	cmp r0, r1
	blt _02011A6A
	movs r0, #0
	str r0, [r5]
	add sp, #0xc
	str r0, [r4]
	pop {r4, r5, r6, r7, pc}
_02011A6A:
	lsls r0, r0, #0xc
	str r0, [sp, #4]
	asrs r7, r0, #0x1f
	lsls r0, r1, #0xc
	asrs r1, r0, #0x1f
	adds r2, r0, #0
	adds r3, r1, #0
	blx FUN_020F2948
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	adds r6, r1, #0
	adds r1, r7, #0
	adds r2, r0, #0
	adds r3, r7, #0
	blx FUN_020F2948
	adds r2, r0, #0
	adds r3, r1, #0
	movs r0, #2
	ldr r1, [sp, #8]
	movs r7, #0
	lsls r0, r0, #0xa
	adds r0, r1, r0
	adcs r6, r7
	lsls r1, r6, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	movs r1, #2
	lsls r1, r1, #0xa
	adds r2, r2, r1
	adcs r3, r7
	lsls r1, r3, #0x14
	lsrs r2, r2, #0xc
	orrs r2, r1
	subs r0, r0, r2
	blx FUN_020CCBEC
	asrs r2, r0, #0xc
	ldr r0, [sp]
	subs r0, r0, r2
	str r0, [r5]
	bpl _02011AC4
	adds r0, r7, #0
	str r0, [r5]
_02011AC4:
	ldr r1, [r5]
	lsls r0, r2, #1
	adds r0, r1, r0
	str r0, [r4]
	cmp r0, #0xff
	ble _02011AD4
	movs r0, #0xff
	str r0, [r4]
_02011AD4:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02011A44

	thumb_func_start FUN_02011AD8
FUN_02011AD8: @ 0x02011AD8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r1, #0
	adds r5, r0, #0
	bl FUN_02010EE0
	adds r7, r0, #0
	movs r4, #0
	adds r6, r7, #0
_02011AEA:
	ldr r2, [r5, #0x14]
	cmp r4, r2
	bgt _02011B04
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r1, [r5, #0x10]
	adds r3, r4, #0
	bl FUN_02011A44
	b _02011B3E
_02011B04:
	lsls r0, r2, #1
	cmp r4, r0
	bgt _02011B2C
	subs r0, r0, r4
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #3
	lsls r0, r0, #8
	ldrsh r0, [r1, r0]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	lsls r0, r0, #1
	subs r0, r0, r4
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #0x12
	lsls r0, r0, #6
	ldrsh r0, [r1, r0]
	str r0, [sp, #8]
	b _02011B3E
_02011B2C:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r5, #0xc]
	ldr r1, [r5, #0x10]
	adds r3, r4, #0
	bl FUN_02011A44
_02011B3E:
	movs r0, #3
	ldr r1, [sp, #0xc]
	lsls r0, r0, #8
	strh r1, [r6, r0]
	movs r0, #0x12
	ldr r1, [sp, #8]
	lsls r0, r0, #6
	strh r1, [r6, r0]
	adds r4, r4, #1
	adds r6, r6, #2
	cmp r4, #0xc0
	blt _02011AEA
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02011AD8

	thumb_func_start FUN_02011B5C
FUN_02011B5C: @ 0x02011B5C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x30
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02011BF0
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02011B5C

	thumb_func_start FUN_02011B94
FUN_02011B94: @ 0x02011B94
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02011BAC
	cmp r0, #2
	beq _02011BC8
	cmp r0, #3
	beq _02011BE2
	b _02011BE6
_02011BAC:
	adds r0, r4, #0
	bl FUN_02011CB8
	cmp r0, #1
	bne _02011BEA
	ldr r0, [r4, #0x20]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011BEA
_02011BC8:
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011BEA
_02011BE2:
	movs r6, #1
	b _02011BEA
_02011BE6:
	bl FUN_0202551C
_02011BEA:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02011B94

	thumb_func_start FUN_02011BF0
FUN_02011BF0: @ 0x02011BF0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	bl FUN_02010A6C
	str r0, [r5, #0x10]
	ldrb r1, [r4, #4]
	ldr r3, [sp, #0x44]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_02010E64
	ldrh r0, [r4]
	lsls r0, r0, #7
	str r0, [r5, #0xc]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x14]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x18]
	movs r0, #0
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x24]
	str r0, [r5, #0x28]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x2c]
	ldrb r0, [r4, #7]
	str r0, [r5, #0x20]
	adds r0, r5, #0
	bl FUN_02011D08
	ldr r0, _02011CAC @ =FUN_02010F00
	ldr r2, _02011CB0 @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	movs r1, #3
	str r6, [sp]
	lsls r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0x12
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	adds r0, r7, #0
	bl FUN_02010F84
	ldrb r0, [r4, #4]
	cmp r0, #0
	bne _02011C8C
	ldr r3, [r5, #0x20]
	adds r0, r7, #0
	movs r1, #1
	adds r2, r6, #0
	bl FUN_02011068
	b _02011C98
_02011C8C:
	ldr r3, [r5, #0x20]
	adds r0, r7, #0
	movs r1, #2
	adds r2, r6, #0
	bl FUN_02011068
_02011C98:
	ldr r0, [sp, #0x44]
	ldr r2, _02011CB4 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x28]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02011CAC: .4byte FUN_02010F00
_02011CB0: .4byte 0x000003FF
_02011CB4: .4byte FUN_02010C38
	thumb_func_end FUN_02011BF0

	thumb_func_start FUN_02011CB8
FUN_02011CB8: @ 0x02011CB8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x1c]
	adds r2, r1, #1
	str r2, [r4, #0x1c]
	ldr r1, [r4, #0x18]
	cmp r2, r1
	blt _02011CFC
	movs r1, #0
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x14]
	subs r1, r1, #1
	cmp r1, #0
	ble _02011CEE
	str r1, [r4, #0x14]
	ldr r2, [r4, #0xc]
	ldr r1, [r4, #0x10]
	adds r1, r2, r1
	str r1, [r4, #0xc]
	bl FUN_02011D08
	ldr r0, _02011D00 @ =FUN_02010F00
	ldr r2, _02011D04 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _02011CFC
_02011CEE:
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_02011CFC:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_02011D00: .4byte FUN_02010F00
_02011D04: .4byte 0x000003FF
	thumb_func_end FUN_02011CB8

	thumb_func_start FUN_02011D08
FUN_02011D08: @ 0x02011D08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x104
	adds r4, r0, #0
	movs r1, #0
	bl FUN_02010EE0
	ldr r1, [r4, #0xc]
	adds r5, r0, #0
	asrs r0, r1, #6
	lsrs r0, r0, #0x19
	adds r0, r1, r0
	asrs r0, r0, #7
	add r1, sp, #0
	movs r2, #0xc0
	movs r3, #0
	bl FUN_02010A00
	movs r7, #0x12
	movs r6, #0
	add r4, sp, #0
	lsls r7, r7, #6
_02011D34:
	ldr r1, [r4]
	movs r0, #0x80
	rsbs r1, r1, #0
	bl FUN_02010A7C
	movs r1, #3
	lsls r1, r1, #8
	strh r0, [r5, r1]
	ldr r1, [r4]
	movs r0, #0x80
	bl FUN_02010A7C
	strh r0, [r5, r7]
	adds r6, r6, #1
	adds r4, r4, #4
	adds r5, r5, #2
	cmp r6, #0xc0
	blt _02011D34
	add sp, #0x1fc
	add sp, #0x104
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02011D08

	thumb_func_start FUN_02011D60
FUN_02011D60: @ 0x02011D60
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x34
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02011DEC
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02011D60

	thumb_func_start FUN_02011D98
FUN_02011D98: @ 0x02011D98
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02011DB0
	cmp r0, #2
	beq _02011DCC
	cmp r0, #3
	beq _02011DE6
	b _02011DE8
_02011DB0:
	adds r0, r4, #0
	bl FUN_02011EC0
	cmp r0, #1
	bne _02011DE8
	ldr r0, [r4, #0x24]
	ldr r1, [r4, #0x28]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011DE8
_02011DCC:
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02011DE8
_02011DE6:
	movs r6, #1
_02011DE8:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02011D98

	thumb_func_start FUN_02011DEC
FUN_02011DEC: @ 0x02011DEC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r4, r1, #0
	adds r5, r0, #0
	ldrh r1, [r4, #2]
	ldrh r0, [r4]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	subs r0, r1, r0
	adds r1, r2, #0
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	blx FUN_020F2998
	str r0, [sp, #0x20]
	ldrb r1, [r4, #4]
	ldr r3, [sp, #0x44]
	adds r0, r5, #0
	adds r2, r6, #0
	bl FUN_02010E64
	movs r0, #2
	lsls r0, r0, #0x12
	str r0, [r5, #0xc]
	ldrh r0, [r4]
	str r0, [r5, #0x10]
	ldr r0, [sp, #0x20]
	str r0, [r5, #0x14]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x1c]
	movs r0, #0
	str r0, [r5, #0x20]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x28]
	str r0, [r5, #0x2c]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x30]
	ldrb r0, [r4, #7]
	str r0, [r5, #0x24]
	adds r0, r5, #0
	bl FUN_02011F10
	ldr r0, _02011EB4 @ =FUN_02010F00
	ldr r2, _02011EB8 @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	movs r1, #0xf
	str r6, [sp]
	lsls r1, r1, #6
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0x15
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x24]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #5]
	ldrb r2, [r4, #6]
	ldrb r3, [r4, #4]
	adds r0, r7, #0
	bl FUN_02010F84
	ldrb r0, [r4, #4]
	cmp r0, #0
	bne _02011E94
	ldr r3, [r5, #0x24]
	adds r0, r7, #0
	movs r1, #1
	adds r2, r6, #0
	bl FUN_02011068
	b _02011EA0
_02011E94:
	ldr r3, [r5, #0x24]
	adds r0, r7, #0
	movs r1, #2
	adds r2, r6, #0
	bl FUN_02011068
_02011EA0:
	ldr r0, [sp, #0x44]
	ldr r2, _02011EBC @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02011EB4: .4byte FUN_02010F00
_02011EB8: .4byte 0x000003FF
_02011EBC: .4byte FUN_02010C38
	thumb_func_end FUN_02011DEC

	thumb_func_start FUN_02011EC0
FUN_02011EC0: @ 0x02011EC0
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x20]
	adds r2, r1, #1
	str r2, [r4, #0x20]
	ldr r1, [r4, #0x1c]
	cmp r2, r1
	blt _02011F04
	movs r1, #0
	str r1, [r4, #0x20]
	ldr r1, [r4, #0x18]
	subs r1, r1, #1
	cmp r1, #0
	ble _02011EF6
	str r1, [r4, #0x18]
	ldr r2, [r4, #0x10]
	ldr r1, [r4, #0x14]
	adds r1, r2, r1
	str r1, [r4, #0x10]
	bl FUN_02011F10
	ldr r0, _02011F08 @ =FUN_02010F00
	ldr r2, _02011F0C @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _02011F04
_02011EF6:
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x30]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_02011F04:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_02011F08: .4byte FUN_02010F00
_02011F0C: .4byte 0x000003FF
	thumb_func_end FUN_02011EC0

	thumb_func_start FUN_02011F10
FUN_02011F10: @ 0x02011F10
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x110
	adds r4, r0, #0
	movs r1, #0
	bl FUN_02010EE0
	str r0, [sp]
	ldr r0, [r4, #0x10]
	ldr r2, [r4, #0xc]
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02011FF0 @ =0x021094DC
	asrs r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	asrs r7, r1, #0xc
	lsls r0, r7, #1
	movs r1, #0x15
	blx FUN_020F2998
	adds r0, r0, #1
	lsls r0, r0, #1
	movs r1, #0xb4
	subs r2, r1, r0
	ldr r0, _02011FF4 @ =0x0000FFFF
	adds r1, #0xb4
	muls r0, r2, r0
	blx FUN_020F2998
	lsrs r1, r0, #0x1f
	adds r1, r0, r1
	asrs r4, r1, #1
	movs r1, #1
	adds r0, r4, #0
	lsls r1, r1, #8
	bl FUN_02010A54
	asrs r0, r0, #0xc
	str r0, [sp, #4]
	cmp r0, #0xc0
	blt _02011F7C
	bl FUN_0202551C
_02011F7C:
	ldr r2, [sp, #4]
	adds r0, r4, #0
	add r1, sp, #0xc
	movs r3, #0
	bl FUN_02010A00
	ldr r5, [sp]
	movs r4, #0
_02011F8C:
	ldr r0, [sp, #4]
	adds r1, r4, #1
	subs r0, r0, r1
	adds r6, r7, #0
	cmp r0, #0
	ble _02011FA4
	lsls r1, r0, #2
	add r0, sp, #0xc
	ldr r0, [r0, r1]
	cmp r0, r7
	ble _02011FA4
	adds r6, r0, #0
_02011FA4:
	movs r0, #0x80
	rsbs r1, r6, #0
	bl FUN_02010A7C
	str r0, [sp, #8]
	movs r0, #0x80
	adds r1, r6, #0
	bl FUN_02010A7C
	ldr r1, [sp, #8]
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	movs r1, #3
	lsls r1, r1, #8
	strh r2, [r5, r1]
	asrs r1, r0, #0x10
	movs r0, #0x12
	lsls r0, r0, #6
	strh r1, [r5, r0]
	movs r0, #0xbf
	subs r0, r0, r4
	lsls r3, r0, #1
	ldr r0, [sp]
	adds r4, r4, #1
	adds r0, r0, r3
	movs r3, #3
	lsls r3, r3, #8
	strh r2, [r0, r3]
	movs r2, #0x12
	lsls r2, r2, #6
	adds r5, r5, #2
	strh r1, [r0, r2]
	cmp r4, #0x60
	blt _02011F8C
	add sp, #0x1fc
	add sp, #0x110
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02011FF0: .4byte 0x021094DC
_02011FF4: .4byte 0x0000FFFF
	thumb_func_end FUN_02011F10

	thumb_func_start FUN_02011FF8
FUN_02011FF8: @ 0x02011FF8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x30
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02012090
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02011FF8

	thumb_func_start FUN_02012030
FUN_02012030: @ 0x02012030
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012048
	cmp r0, #2
	beq _02012064
	cmp r0, #3
	beq _02012084
	b _02012088
_02012048:
	adds r0, r4, #0
	bl FUN_020121A4
	cmp r0, #1
	bne _0201208C
	ldr r0, [r4, #0x20]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201208C
_02012064:
	adds r0, r4, #0
	bl FUN_020121F4
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201208C
_02012084:
	movs r6, #1
	b _0201208C
_02012088:
	bl FUN_0202551C
_0201208C:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02012030

	thumb_func_start FUN_02012090
FUN_02012090: @ 0x02012090
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r1, #0
	adds r6, r0, #0
	str r2, [sp, #0x18]
	ldr r0, [sp, #0x38]
	ldrh r2, [r5, #8]
	str r0, [sp, #0x38]
	ldr r0, [sp, #0x44]
	movs r1, #0x30
	muls r1, r2, r1
	str r3, [sp, #0x1c]
	str r0, [sp, #0x44]
	bl FUN_0201AA8C
	str r0, [r6, #0xc]
	cmp r0, #0
	bne _020120B8
	bl FUN_0202551C
_020120B8:
	ldrh r0, [r5, #8]
	str r0, [r6, #0x10]
	movs r0, #0
	str r0, [sp, #0x20]
	ldrh r0, [r5, #8]
	cmp r0, #0
	ble _020120F8
	ldr r4, [sp, #0x20]
	adds r7, r4, #0
_020120CA:
	ldr r0, [r5, #4]
	ldr r2, [r6, #0xc]
	adds r0, r0, r4
	str r0, [sp]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	adds r0, r2, r7
	ldr r3, [r5]
	adds r1, r0, #0
	adds r2, r2, r7
	adds r1, #0x20
	adds r2, #0x10
	adds r3, r3, r4
	bl FUN_02010AB0
	ldr r0, [sp, #0x20]
	ldrh r1, [r5, #8]
	adds r0, r0, #1
	adds r4, r4, #4
	adds r7, #0x30
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _020120CA
_020120F8:
	ldrh r1, [r5, #0xa]
	ldr r2, [sp, #0x38]
	ldr r3, [sp, #0x44]
	adds r0, r6, #0
	bl FUN_02010E64
	ldr r0, [sp, #0x18]
	str r0, [r6, #0x14]
	ldr r0, [sp, #0x1c]
	str r0, [r6, #0x18]
	movs r0, #0
	str r0, [r6, #0x1c]
	ldr r0, [sp, #0x3c]
	str r0, [r6, #0x24]
	ldr r0, [sp, #0x40]
	str r0, [r6, #0x28]
	ldr r0, [sp, #0x44]
	str r0, [r6, #0x2c]
	ldrh r0, [r5, #0xe]
	str r0, [r6, #0x20]
	adds r0, r6, #0
	bl FUN_02012204
	ldr r0, _02012198 @ =FUN_02010F00
	ldr r2, _0201219C @ =0x000003FF
	adds r1, r6, #0
	bl FUN_0200E374
	adds r0, r6, #0
	movs r1, #0
	bl FUN_02010EE0
	ldr r1, [sp, #0x38]
	str r1, [sp]
	movs r1, #3
	lsls r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0x12
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r6, #0x20]
	str r0, [sp, #0x14]
	ldrb r1, [r5, #0xc]
	ldrb r2, [r5, #0xd]
	ldrh r3, [r5, #0xa]
	ldr r0, [sp, #0x3c]
	bl FUN_02010F84
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	ldr r0, [r6, #0x24]
	bne _02012178
	ldr r2, [sp, #0x38]
	ldr r3, [r6, #0x20]
	movs r1, #1
	bl FUN_02011068
	b _02012182
_02012178:
	ldr r2, [sp, #0x38]
	ldr r3, [r6, #0x20]
	movs r1, #2
	bl FUN_02011068
_02012182:
	ldr r0, [sp, #0x44]
	ldr r2, _020121A0 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r6, #0x28]
	ldr r3, [sp, #0x38]
	adds r1, r6, #0
	bl FUN_0200FF88
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_02012198: .4byte FUN_02010F00
_0201219C: .4byte 0x000003FF
_020121A0: .4byte FUN_02010C38
	thumb_func_end FUN_02012090

	thumb_func_start FUN_020121A4
FUN_020121A4: @ 0x020121A4
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x1c]
	adds r2, r1, #1
	str r2, [r4, #0x1c]
	ldr r1, [r4, #0x18]
	cmp r2, r1
	blt _020121E6
	movs r1, #0
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x14]
	subs r1, r1, #1
	cmp r1, #0
	ble _020121D8
	str r1, [r4, #0x14]
	bl FUN_02012290
	adds r0, r4, #0
	bl FUN_02012204
	ldr r0, _020121EC @ =FUN_02010F00
	ldr r2, _020121F0 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _020121E6
_020121D8:
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_020121E6:
	movs r0, #0
	pop {r4, pc}
	nop
_020121EC: .4byte FUN_02010F00
_020121F0: .4byte 0x000003FF
	thumb_func_end FUN_020121A4

	thumb_func_start FUN_020121F4
FUN_020121F4: @ 0x020121F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, #0xc]
	pop {r4, pc}
	thumb_func_end FUN_020121F4

	thumb_func_start FUN_02012204
FUN_02012204: @ 0x02012204
	push {r4, r5, r6, lr}
	movs r1, #0
	adds r6, r0, #0
	bl FUN_02010EE0
	movs r2, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	movs r1, #0
	blx FUN_020E5B44
	ldr r0, [r6, #0x10]
	subs r4, r0, #1
	bmi _02012236
	movs r0, #0x30
	adds r5, r4, #0
	muls r5, r0, r5
_02012226:
	ldr r1, [r6, #0xc]
	adds r0, r6, #0
	adds r1, r1, r5
	bl FUN_02012238
	subs r5, #0x30
	subs r4, r4, #1
	bpl _02012226
_02012236:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02012204

	thumb_func_start FUN_02012238
FUN_02012238: @ 0x02012238
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	movs r1, #0
	bl FUN_02010EE0
	ldr r2, [r4]
	ldr r3, [r4, #8]
	asrs r1, r2, #6
	lsrs r1, r1, #0x19
	adds r1, r2, r1
	asrs r2, r1, #7
	asrs r1, r3, #6
	ldr r5, [r4, #0xc]
	lsrs r1, r1, #0x19
	adds r1, r3, r1
	asrs r3, r5, #6
	lsrs r3, r3, #0x19
	adds r3, r5, r3
	ldr r4, [r4, #4]
	asrs r5, r3, #7
	asrs r3, r4, #6
	lsrs r3, r3, #0x19
	adds r3, r4, r3
	asrs r3, r3, #7
	asrs r1, r1, #7
	cmp r3, r5
	bge _0201228E
	lsls r4, r3, #1
	lsls r1, r1, #0x10
	adds r4, r0, r4
	lsls r0, r2, #0x10
	asrs r6, r1, #0x10
	movs r1, #3
	movs r2, #0x12
	asrs r0, r0, #0x10
	lsls r1, r1, #8
	lsls r2, r2, #6
_02012282:
	strh r0, [r4, r1]
	strh r6, [r4, r2]
	adds r3, r3, #1
	adds r4, r4, #2
	cmp r3, r5
	blt _02012282
_0201228E:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02012238

	thumb_func_start FUN_02012290
FUN_02012290: @ 0x02012290
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x10]
	movs r6, #0
	cmp r0, #0
	ble _020122B4
	adds r4, r6, #0
_0201229E:
	ldr r1, [r5, #0xc]
	adds r0, r1, r4
	adds r1, r1, r4
	adds r1, #0x10
	bl FUN_02010A8C
	ldr r0, [r5, #0x10]
	adds r6, r6, #1
	adds r4, #0x30
	cmp r6, r0
	blt _0201229E
_020122B4:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02012290

	thumb_func_start FUN_020122B8
FUN_020122B8: @ 0x020122B8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x38
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	movs r1, #0
	movs r2, #0x38
	blx FUN_020E5B44
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02012358
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020122B8

	thumb_func_start FUN_020122F8
FUN_020122F8: @ 0x020122F8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012310
	cmp r0, #2
	beq _0201232C
	cmp r0, #3
	beq _0201234C
	b _02012350
_02012310:
	adds r0, r4, #0
	bl FUN_02012454
	cmp r0, #1
	bne _02012354
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012354
_0201232C:
	adds r0, r4, #0
	bl FUN_020124AC
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012354
_0201234C:
	movs r6, #1
	b _02012354
_02012350:
	bl FUN_0202551C
_02012354:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020122F8

	thumb_func_start FUN_02012358
FUN_02012358: @ 0x02012358
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r4, r1, #0
	adds r5, r0, #0
	movs r1, #0
	str r1, [r5, #0xc]
	ldrh r1, [r4]
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	str r1, [r5, #0x10]
	ldrh r2, [r4, #2]
	ldrh r1, [r4]
	ldr r6, [sp, #0x40]
	ldr r3, [sp, #0x4c]
	subs r1, r2, r1
	str r1, [r5, #0x14]
	movs r1, #2
	adds r2, r6, #0
	ldr r7, [sp, #0x44]
	bl FUN_02010E64
	ldr r0, [sp, #0x18]
	movs r1, #0
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r1, [r5, #0x24]
	ldr r0, [sp, #0x48]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x4c]
	str r0, [r5, #0x2c]
	ldrh r0, [r4, #6]
	str r0, [r5, #0x28]
	adds r0, r5, #0
	ldr r1, [r5, #0x1c]
	ldr r2, [r5, #0x18]
	adds r0, #0xc
	bl FUN_020125D4
	adds r0, r5, #0
	bl FUN_020124B0
	ldr r0, _02012448 @ =FUN_02010F00
	ldr r2, _0201244C @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	str r0, [sp, #0x20]
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02010EE0
	str r0, [sp, #0x24]
	movs r1, #3
	ldr r0, [sp, #0x20]
	str r6, [sp]
	lsls r1, r1, #8
	ldrsh r0, [r0, r1]
	movs r1, #0x12
	movs r3, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	str r3, [sp, #8]
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	adds r0, r7, #0
	bl FUN_02010F84
	movs r1, #3
	ldr r0, [sp, #0x24]
	str r6, [sp]
	lsls r1, r1, #8
	ldrsh r0, [r0, r1]
	movs r1, #0x12
	lsls r1, r1, #6
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x24]
	movs r3, #1
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	adds r0, r7, #0
	bl FUN_02010F84
	ldr r3, [r5, #0x28]
	adds r0, r7, #0
	movs r1, #3
	adds r2, r6, #0
	bl FUN_02011068
	ldr r0, [sp, #0x4c]
	ldr r2, _02012450 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02012448: .4byte FUN_02010F00
_0201244C: .4byte 0x000003FF
_02012450: .4byte FUN_02010C38
	thumb_func_end FUN_02012358

	thumb_func_start FUN_02012454
FUN_02012454: @ 0x02012454
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x24]
	adds r1, r0, #1
	str r1, [r4, #0x24]
	ldr r0, [r4, #0x20]
	cmp r1, r0
	blt _0201249E
	movs r0, #0
	str r0, [r4, #0x24]
	ldr r0, [r4, #0x1c]
	adds r1, r0, #1
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bgt _02012490
	str r1, [r4, #0x1c]
	adds r0, r4, #0
	ldr r2, [r4, #0x18]
	adds r0, #0xc
	bl FUN_020125D4
	adds r0, r4, #0
	bl FUN_020124B0
	ldr r0, _020124A4 @ =FUN_02010F00
	ldr r2, _020124A8 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _0201249E
_02012490:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_0201249E:
	movs r0, #0
	pop {r4, pc}
	nop
_020124A4: .4byte FUN_02010F00
_020124A8: .4byte 0x000003FF
	thumb_func_end FUN_02012454

	thumb_func_start FUN_020124AC
FUN_020124AC: @ 0x020124AC
	bx lr
	.align 2, 0
	thumb_func_end FUN_020124AC

	thumb_func_start FUN_020124B0
FUN_020124B0: @ 0x020124B0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r0, [r0, #0xc]
	ldr r1, _020125D0 @ =0x00003FFF
	blx FUN_020F2998
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, [sp]
	movs r1, #0
	bl FUN_02010EE0
	adds r7, r0, #0
	ldr r0, [sp]
	movs r1, #1
	bl FUN_02010EE0
	adds r4, r0, #0
	movs r6, #0
	adds r5, r4, #0
_020124DC:
	ldr r0, [sp]
	ldr r1, [r0, #0xc]
	ldr r0, _020125D0 @ =0x00003FFF
	cmp r1, r0
	bge _02012520
	movs r1, #0x60
	ldr r0, [sp, #4]
	subs r1, r1, r6
	bl FUN_020109D8
	cmp r0, #0x7f
	ble _020124F6
	movs r0, #0x7f
_020124F6:
	movs r1, #0xbf
	subs r1, r1, r6
	lsls r1, r1, #1
	adds r3, r7, r1
	movs r1, #0x80
	subs r2, r1, r0
	movs r1, #3
	lsls r1, r1, #8
	strh r2, [r3, r1]
	movs r1, #0x12
	movs r2, #0x80
	lsls r1, r1, #6
	strh r2, [r3, r1]
	movs r1, #3
	lsls r1, r1, #8
	strh r2, [r5, r1]
	movs r1, #0x12
	adds r0, #0x80
	lsls r1, r1, #6
	strh r0, [r5, r1]
	b _02012548
_02012520:
	movs r0, #0xbf
	subs r0, r0, r6
	lsls r0, r0, #1
	movs r1, #3
	adds r0, r7, r0
	movs r2, #0
	lsls r1, r1, #8
	strh r2, [r0, r1]
	movs r1, #0x12
	movs r2, #0x80
	lsls r1, r1, #6
	strh r2, [r0, r1]
	movs r0, #3
	adds r1, r2, #0
	lsls r0, r0, #8
	strh r1, [r5, r0]
	movs r0, #0x12
	movs r1, #0xff
	lsls r0, r0, #6
	strh r1, [r5, r0]
_02012548:
	adds r6, r6, #1
	adds r5, r5, #2
	cmp r6, #0x60
	blt _020124DC
	ldr r1, _020125D0 @ =0x00003FFF
	ldr r0, [sp, #4]
	movs r5, #0x60
	adds r4, #0xc0
	subs r6, r1, r0
_0201255A:
	ldr r0, [sp]
	ldr r1, [r0, #0xc]
	ldr r0, _020125D0 @ =0x00003FFF
	cmp r1, r0
	bge _0201258A
	movs r0, #0xbf
	subs r0, r0, r5
	lsls r0, r0, #1
	movs r1, #3
	adds r0, r7, r0
	movs r2, #0x80
	lsls r1, r1, #8
	strh r2, [r0, r1]
	movs r1, #0x12
	lsls r1, r1, #6
	strh r2, [r0, r1]
	movs r0, #3
	adds r1, r2, #0
	lsls r0, r0, #8
	strh r1, [r4, r0]
	movs r0, #0x12
	lsls r0, r0, #6
	strh r1, [r4, r0]
	b _020125C4
_0201258A:
	adds r1, r5, #0
	adds r0, r6, #0
	subs r1, #0x60
	bl FUN_020109D8
	adds r1, r0, #0
	cmp r1, #0x7f
	ble _0201259C
	movs r1, #0x7f
_0201259C:
	movs r0, #0xbf
	subs r0, r0, r5
	lsls r0, r0, #1
	movs r2, #3
	adds r0, r7, r0
	movs r3, #0
	lsls r2, r2, #8
	strh r3, [r0, r2]
	movs r2, #0x80
	subs r3, r2, r1
	movs r2, #0x12
	lsls r2, r2, #6
	strh r3, [r0, r2]
	movs r0, #3
	adds r1, #0x80
	lsls r0, r0, #8
	strh r1, [r4, r0]
	movs r1, #0xff
	adds r0, r2, #0
	strh r1, [r4, r0]
_020125C4:
	adds r5, r5, #1
	adds r4, r4, #2
	cmp r5, #0xc0
	blt _0201255A
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020125D0: .4byte 0x00003FFF
	thumb_func_end FUN_020124B0

	thumb_func_start FUN_020125D4
FUN_020125D4: @ 0x020125D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r3, [r4, #8]
	adds r0, r3, #0
	muls r0, r1, r0
	adds r1, r2, #0
	blx FUN_020F2998
	ldr r1, [r4, #4]
	adds r0, r0, r1
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_020125D4

	thumb_func_start FUN_020125EC
FUN_020125EC: @ 0x020125EC
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x38
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	movs r1, #0
	movs r2, #0x38
	blx FUN_020E5B44
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_0201268C
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020125EC

	thumb_func_start FUN_0201262C
FUN_0201262C: @ 0x0201262C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012644
	cmp r0, #2
	beq _02012660
	cmp r0, #3
	beq _02012680
	b _02012684
_02012644:
	adds r0, r4, #0
	bl FUN_0201275C
	cmp r0, #1
	bne _02012688
	ldr r0, [r4, #0x28]
	ldr r1, [r4, #0x30]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012688
_02012660:
	adds r0, r4, #0
	bl FUN_020127B4
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012688
_02012680:
	movs r6, #1
	b _02012688
_02012684:
	bl FUN_0202551C
_02012688:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201262C

	thumb_func_start FUN_0201268C
FUN_0201268C: @ 0x0201268C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r4, r1, #0
	ldrh r1, [r4]
	adds r5, r0, #0
	str r3, [sp, #0x1c]
	str r1, [r5, #0xc]
	ldrh r1, [r4]
	str r2, [sp, #0x18]
	ldr r6, [sp, #0x38]
	str r1, [r5, #0x10]
	ldrh r2, [r4, #2]
	ldrh r1, [r4]
	ldr r3, [sp, #0x44]
	ldr r7, [sp, #0x3c]
	subs r1, r2, r1
	str r1, [r5, #0x14]
	movs r1, #2
	adds r2, r6, #0
	bl FUN_02010E64
	ldr r0, [sp, #0x18]
	movs r1, #0
	str r0, [r5, #0x18]
	ldr r0, [sp, #0x1c]
	str r1, [r5, #0x1c]
	str r0, [r5, #0x20]
	str r1, [r5, #0x24]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x30]
	str r0, [r5, #0x34]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x2c]
	ldrh r0, [r4, #6]
	str r0, [r5, #0x28]
	adds r0, r5, #0
	bl FUN_020127B8
	ldr r0, _02012750 @ =FUN_02010F00
	ldr r2, _02012754 @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02010EE0
	str r6, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r0, #0xff
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	adds r0, r7, #0
	bl FUN_02010F84
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0xff
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x28]
	movs r3, #1
	str r0, [sp, #0x14]
	ldrb r1, [r4, #4]
	ldrb r2, [r4, #5]
	adds r0, r7, #0
	bl FUN_02010F84
	ldr r3, [r5, #0x28]
	adds r0, r7, #0
	movs r1, #3
	adds r2, r6, #0
	bl FUN_02011068
	ldr r0, [sp, #0x44]
	ldr r2, _02012758 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x34]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02012750: .4byte FUN_02010F00
_02012754: .4byte 0x000003FF
_02012758: .4byte FUN_02010C38
	thumb_func_end FUN_0201268C

	thumb_func_start FUN_0201275C
FUN_0201275C: @ 0x0201275C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x24]
	adds r1, r0, #1
	str r1, [r4, #0x24]
	ldr r0, [r4, #0x20]
	cmp r1, r0
	blt _020127A6
	movs r0, #0
	str r0, [r4, #0x24]
	ldr r0, [r4, #0x1c]
	adds r1, r0, #1
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bgt _02012798
	str r1, [r4, #0x1c]
	adds r0, r4, #0
	ldr r2, [r4, #0x18]
	adds r0, #0xc
	bl FUN_02012884
	adds r0, r4, #0
	bl FUN_020127B8
	ldr r0, _020127AC @ =FUN_02010F00
	ldr r2, _020127B0 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _020127A6
_02012798:
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x2c]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_020127A6:
	movs r0, #0
	pop {r4, pc}
	nop
_020127AC: .4byte FUN_02010F00
_020127B0: .4byte 0x000003FF
	thumb_func_end FUN_0201275C

	thumb_func_start FUN_020127B4
FUN_020127B4: @ 0x020127B4
	bx lr
	.align 2, 0
	thumb_func_end FUN_020127B4

	thumb_func_start FUN_020127B8
FUN_020127B8: @ 0x020127B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #8]
	movs r1, #0
	bl FUN_02010EE0
	str r0, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02010EE0
	str r0, [sp, #0xc]
	adds r5, r0, #0
	ldr r1, _02012880 @ =0x00003FFF
	ldr r0, [sp, #8]
	ldr r6, [sp, #0x10]
	subs r0, r1, r0
	movs r7, #0
	str r0, [sp, #4]
_020127E6:
	movs r0, #0x60
	subs r0, r0, r7
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp]
	bl FUN_020109D8
	adds r4, r0, #0
	ldr r0, [sp, #4]
	ldr r1, [sp]
	bl FUN_020109D8
	cmp r4, #0x7f
	ble _02012804
	movs r4, #0x7f
_02012804:
	cmp r0, #0x7f
	ble _0201280A
	movs r0, #0x7f
_0201280A:
	movs r1, #0x80
	subs r1, r1, r0
	lsls r1, r1, #0x10
	movs r2, #3
	asrs r1, r1, #0x10
	lsls r2, r2, #8
	str r1, [sp, #0x14]
	strh r1, [r6, r2]
	movs r1, #0x80
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r2, r1, #0x10
	movs r1, #0x12
	lsls r1, r1, #6
	strh r2, [r6, r1]
	movs r1, #0xbf
	subs r1, r1, r7
	mov ip, r2
	lsls r1, r1, #1
	ldr r2, [sp, #0x10]
	adds r0, #0x80
	adds r3, r2, r1
	str r1, [sp, #0x18]
	movs r2, #3
	ldr r1, [sp, #0x14]
	lsls r2, r2, #8
	strh r1, [r3, r2]
	movs r1, #0x12
	mov r2, ip
	lsls r1, r1, #6
	strh r2, [r3, r1]
	adds r4, #0x80
	lsls r1, r4, #0x10
	asrs r2, r1, #0x10
	movs r1, #3
	lsls r1, r1, #8
	lsls r0, r0, #0x10
	strh r2, [r5, r1]
	asrs r1, r0, #0x10
	movs r0, #0x12
	lsls r0, r0, #6
	strh r1, [r5, r0]
	ldr r3, [sp, #0xc]
	ldr r0, [sp, #0x18]
	adds r7, r7, #1
	adds r0, r3, r0
	movs r3, #3
	lsls r3, r3, #8
	strh r2, [r0, r3]
	movs r2, #0x12
	lsls r2, r2, #6
	strh r1, [r0, r2]
	adds r6, r6, #2
	adds r5, r5, #2
	cmp r7, #0x60
	blt _020127E6
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02012880: .4byte 0x00003FFF
	thumb_func_end FUN_020127B8

	thumb_func_start FUN_02012884
FUN_02012884: @ 0x02012884
	push {r4, lr}
	adds r4, r0, #0
	ldr r3, [r4, #8]
	adds r0, r3, #0
	muls r0, r1, r0
	adds r1, r2, #0
	blx FUN_020F2998
	ldr r1, [r4, #4]
	adds r0, r0, r1
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02012884

	thumb_func_start FUN_0201289C
FUN_0201289C: @ 0x0201289C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0xcd
	ldr r0, [r5, #0x20]
	lsls r1, r1, #2
	bl FUN_0201AA8C
	movs r2, #0xcd
	str r0, [r5, #0x14]
	movs r1, #0
	lsls r2, r2, #2
	blx FUN_020E5B44
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02012940
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201289C

	thumb_func_start FUN_020128E0
FUN_020128E0: @ 0x020128E0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _020128F8
	cmp r0, #2
	beq _0201291A
	cmp r0, #3
	beq _02012934
	b _02012938
_020128F8:
	adds r0, r4, #0
	bl FUN_02012A2C
	cmp r0, #1
	bne _0201293C
	movs r1, #0xc9
	lsls r1, r1, #2
	ldr r0, [r4, r1]
	adds r1, #8
	ldr r1, [r4, r1]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201293C
_0201291A:
	adds r0, r4, #0
	bl FUN_02012A8C
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _0201293C
_02012934:
	movs r6, #1
	b _0201293C
_02012938:
	bl FUN_0202551C
_0201293C:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020128E0

	thumb_func_start FUN_02012940
FUN_02012940: @ 0x02012940
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	ldr r7, [sp, #0x38]
	str r3, [sp, #0x1c]
	movs r3, #0
	adds r4, r1, #0
	str r2, [sp, #0x18]
	str r3, [sp]
	adds r1, r7, #0
	movs r2, #1
	adds r5, r0, #0
	ldr r6, [sp, #0x3c]
	bl FUN_02011080
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0201297A
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0xc0
	blx FUN_020E5B44
	adds r0, r5, #0
	adds r0, #0xc0
	movs r1, #1
	movs r2, #0xc0
	blx FUN_020E5B44
	b _02012990
_0201297A:
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0xc0
	blx FUN_020E5B44
	adds r0, r5, #0
	adds r0, #0xc0
	movs r1, #0
	movs r2, #0xc0
	blx FUN_020E5B44
_02012990:
	movs r1, #0xc3
	ldr r0, [r4]
	lsls r1, r1, #2
	str r0, [r5, r1]
	ldrh r2, [r4, #4]
	adds r0, r1, #4
	ldr r3, [sp, #0x44]
	str r2, [r5, r0]
	adds r0, r1, #0
	ldrh r2, [r4, #6]
	adds r0, #0x18
	str r2, [r5, r0]
	adds r0, r1, #0
	adds r0, #0x1c
	str r3, [r5, r0]
	adds r2, r1, #0
	ldr r0, [sp, #0x18]
	adds r2, #8
	str r0, [r5, r2]
	adds r2, r1, #0
	adds r2, #0xc
	movs r0, #0
	str r0, [r5, r2]
	adds r2, r1, #0
	ldr r0, [sp, #0x1c]
	adds r2, #0x10
	str r0, [r5, r2]
	adds r2, r1, #0
	adds r2, #0x14
	movs r0, #0
	str r0, [r5, r2]
	adds r0, r1, #0
	adds r0, #0x20
	str r6, [r5, r0]
	ldr r0, [sp, #0x40]
	adds r1, #0x24
	str r0, [r5, r1]
	adds r1, r5, #0
	adds r2, r3, #0
	bl FUN_020110DC
	ldrh r0, [r4, #6]
	cmp r0, #1
	str r7, [sp]
	bne _02012A02
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x14]
	adds r0, r6, #0
	movs r1, #0x20
	movs r2, #0x3f
	bl FUN_02010F84
	b _02012A18
_02012A02:
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x14]
	adds r0, r6, #0
	movs r1, #0x3f
	movs r2, #0x20
	bl FUN_02010F84
_02012A18:
	movs r3, #0xc9
	lsls r3, r3, #2
	ldr r3, [r5, r3]
	adds r0, r6, #0
	movs r1, #1
	adds r2, r7, #0
	bl FUN_02011068
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02012940

	thumb_func_start FUN_02012A2C
FUN_02012A2C: @ 0x02012A2C
	push {r4, lr}
	movs r2, #0x32
	adds r4, r0, #0
	lsls r2, r2, #4
	ldr r1, [r4, r2]
	adds r1, r1, #1
	str r1, [r4, r2]
	subs r1, r2, #4
	ldr r3, [r4, r2]
	ldr r1, [r4, r1]
	cmp r3, r1
	blt _02012A86
	movs r1, #0
	str r1, [r4, r2]
	adds r1, r2, #0
	subs r1, #8
	ldr r1, [r4, r1]
	adds r3, r1, #1
	adds r1, r2, #0
	subs r1, #0xc
	ldr r1, [r4, r1]
	cmp r3, r1
	bgt _02012A72
	adds r1, r2, #0
	subs r1, #8
	ldr r1, [r4, r1]
	subs r2, #8
	adds r1, r1, #1
	str r1, [r4, r2]
	bl FUN_02012A90
	adds r0, r4, #0
	bl FUN_020110C4
	b _02012A86
_02012A72:
	adds r0, r2, #0
	adds r0, #0x10
	adds r2, #8
	ldr r0, [r4, r0]
	ldr r2, [r4, r2]
	adds r1, r4, #0
	bl FUN_020110F4
	movs r0, #1
	pop {r4, pc}
_02012A86:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02012A2C

	thumb_func_start FUN_02012A8C
FUN_02012A8C: @ 0x02012A8C
	bx lr
	.align 2, 0
	thumb_func_end FUN_02012A8C

	thumb_func_start FUN_02012A90
FUN_02012A90: @ 0x02012A90
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0x31
	lsls r0, r0, #4
	ldr r0, [r5, r0]
	movs r6, #0
	cmp r0, #0
	ble _02012ACA
	movs r7, #0x31
	adds r4, r6, #0
	lsls r7, r7, #4
_02012AA6:
	movs r0, #0xc3
	lsls r0, r0, #2
	movs r2, #0xc6
	movs r3, #0xc5
	ldr r0, [r5, r0]
	lsls r2, r2, #2
	lsls r3, r3, #2
	ldr r2, [r5, r2]
	ldr r3, [r5, r3]
	adds r0, r0, r4
	adds r1, r5, #0
	bl FUN_02012ACC
	ldr r0, [r5, r7]
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, r0
	blt _02012AA6
_02012ACA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02012A90

	thumb_func_start FUN_02012ACC
FUN_02012ACC: @ 0x02012ACC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldrb r6, [r7]
	ldrb r4, [r7, #1]
	adds r5, r1, #0
	adds r1, r3, #0
	subs r0, r4, r6
	muls r0, r2, r0
	blx FUN_020F2998
	adds r0, r0, r6
	cmp r6, r4
	bhi _02012AEC
	adds r1, r6, #0
	ldrh r6, [r7, #2]
	b _02012AFC
_02012AEC:
	ldrh r2, [r7, #2]
	adds r1, r4, #0
	adds r4, r6, #0
	cmp r2, #0
	bne _02012AFA
	movs r6, #1
	b _02012AFC
_02012AFA:
	movs r6, #0
_02012AFC:
	cmp r1, r4
	bge _02012B1A
	movs r2, #0
	movs r3, #1
_02012B04:
	cmp r1, r0
	bne _02012B12
	cmp r6, #0
	bne _02012B10
	adds r6, r3, #0
	b _02012B12
_02012B10:
	adds r6, r2, #0
_02012B12:
	strb r6, [r5, r1]
	adds r1, r1, #1
	cmp r1, r4
	blt _02012B04
_02012B1A:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02012ACC

	thumb_func_start FUN_02012B1C
FUN_02012B1C: @ 0x02012B1C
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0xe2
	ldr r0, [r5, #0x20]
	lsls r1, r1, #2
	bl FUN_0201AA8C
	movs r2, #0xe2
	str r0, [r5, #0x14]
	movs r1, #0
	lsls r2, r2, #2
	blx FUN_020E5B44
	ldrb r1, [r4, #0xb]
	ldr r0, [r5, #0x14]
	cmp r1, #0
	ldr r1, [r5, #0x10]
	bne _02012B5E
	str r1, [sp]
	ldr r1, [r5, #0x18]
	str r1, [sp, #4]
	ldr r1, [r5, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r5, #0x20]
	str r1, [sp, #0xc]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r1, r4, #0
	bl FUN_02012BE8
	b _02012B76
_02012B5E:
	str r1, [sp]
	ldr r1, [r5, #0x18]
	str r1, [sp, #4]
	ldr r1, [r5, #0x1c]
	str r1, [sp, #8]
	ldr r1, [r5, #0x20]
	str r1, [sp, #0xc]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	adds r1, r4, #0
	bl FUN_02012CDC
_02012B76:
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02012B1C

	thumb_func_start FUN_02012B80
FUN_02012B80: @ 0x02012B80
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r1, [r5, #0xc]
	movs r4, #0
	ldr r0, [r5, #0x14]
	cmp r1, #1
	beq _02012B98
	cmp r1, #2
	beq _02012BC4
	cmp r1, #3
	beq _02012BD6
	b _02012BDA
_02012B98:
	ldr r1, _02012BE4 @ =0x00000386
	ldrb r1, [r0, r1]
	cmp r1, #0
	bne _02012BA8
	adds r1, r5, #0
	bl FUN_02012C68
	b _02012BAE
_02012BA8:
	adds r1, r5, #0
	bl FUN_02012D4C
_02012BAE:
	cmp r0, #1
	bne _02012BDE
	ldr r0, [r5, #0x28]
	ldr r1, [r5, #0x18]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012BDE
_02012BC4:
	bl FUN_0201AB0C
	adds r0, r4, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r4, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012BDE
_02012BD6:
	movs r4, #1
	b _02012BDE
_02012BDA:
	bl FUN_0202551C
_02012BDE:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_02012BE4: .4byte 0x00000386
	thumb_func_end FUN_02012B80

	thumb_func_start FUN_02012BE8
FUN_02012BE8: @ 0x02012BE8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	lsls r0, r6, #0xc
	ldr r2, [r4, #0x14]
	adds r7, r3, #0
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	adds r2, r0, #0
	movs r0, #2
	movs r3, #0
	lsls r0, r0, #0xa
	adds r0, r2, r0
	adcs r1, r3
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r2, r0, #0xc
	movs r0, #0xe1
	subs r1, r6, r2
	lsls r0, r0, #2
	strb r1, [r5, r0]
	subs r1, r0, #4
	str r4, [r5, r1]
	ldrb r1, [r4, #0xb]
	adds r0, r0, #2
	adds r3, r7, #0
	strb r1, [r5, r0]
	ldr r0, [sp, #0x20]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [sp, #0x24]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl FUN_020117A0
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _02012C4C
	ldrb r3, [r4, #0xb]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x20]
	movs r1, #1
	bl FUN_02011068
	b _02012C58
_02012C4C:
	ldrb r3, [r4, #0xb]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x20]
	movs r1, #2
	bl FUN_02011068
_02012C58:
	ldr r0, _02012C64 @ =0x00000385
	movs r1, #0
	strb r1, [r5, r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012C64: .4byte 0x00000385
	thumb_func_end FUN_02012BE8

	thumb_func_start FUN_02012C68
FUN_02012C68: @ 0x02012C68
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r4, r1, #0
	ldr r1, _02012CD8 @ =0x00000385
	adds r5, r0, #0
	ldrb r1, [r5, r1]
	movs r6, #0
	cmp r1, #0
	beq _02012C84
	cmp r1, #1
	beq _02012CBA
	cmp r1, #2
	beq _02012CD0
	b _02012CD2
_02012C84:
	bl FUN_020117FC
	cmp r0, #1
	bne _02012CD2
	ldr r2, _02012CD8 @ =0x00000385
	ldrb r0, [r5, r2]
	subs r1, r2, #5
	adds r0, r0, #1
	strb r0, [r5, r2]
	ldr r0, [r4, #0x10]
	subs r2, r2, #1
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, [r4, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r4, #0x20]
	str r0, [sp, #0xc]
	ldr r1, [r5, r1]
	adds r0, r5, #0
	ldrb r2, [r5, r2]
	ldr r3, [r4, #8]
	adds r0, #0x4c
	adds r1, #0xc
	bl FUN_02012940
	b _02012CD2
_02012CBA:
	adds r0, #0x4c
	bl FUN_02012A2C
	cmp r0, #1
	bne _02012CD2
	ldr r0, _02012CD8 @ =0x00000385
	movs r6, #1
	ldrb r1, [r5, r0]
	adds r1, r1, #1
	strb r1, [r5, r0]
	b _02012CD2
_02012CD0:
	movs r6, #1
_02012CD2:
	adds r0, r6, #0
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
_02012CD8: .4byte 0x00000385
	thumb_func_end FUN_02012C68

	thumb_func_start FUN_02012CDC
FUN_02012CDC: @ 0x02012CDC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r0, #0
	lsls r0, r6, #0xc
	ldr r2, [r4, #0x14]
	adds r7, r3, #0
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	adds r2, r0, #0
	movs r0, #2
	movs r3, #0
	lsls r0, r0, #0xa
	adds r0, r2, r0
	adcs r1, r3
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	movs r1, #0xe1
	asrs r0, r0, #0xc
	lsls r1, r1, #2
	strb r0, [r5, r1]
	ldrb r0, [r5, r1]
	subs r2, r6, r0
	subs r0, r1, #4
	str r4, [r5, r0]
	adds r0, r1, #2
	ldrb r3, [r4, #0xb]
	subs r1, r1, #4
	strb r3, [r5, r0]
	ldr r0, [sp, #0x28]
	adds r3, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	str r0, [sp, #0xc]
	ldr r1, [r5, r1]
	adds r0, r5, #0
	adds r0, #0x4c
	adds r1, #0xc
	bl FUN_02012940
	ldr r0, _02012D48 @ =0x00000385
	movs r1, #0
	strb r1, [r5, r0]
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012D48: .4byte 0x00000385
	thumb_func_end FUN_02012CDC

	thumb_func_start FUN_02012D4C
FUN_02012D4C: @ 0x02012D4C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r1, #0
	ldr r1, _02012DD4 @ =0x00000385
	adds r5, r0, #0
	ldrb r1, [r5, r1]
	movs r6, #0
	cmp r1, #0
	beq _02012D68
	cmp r1, #1
	beq _02012DB8
	cmp r1, #2
	beq _02012DCC
	b _02012DCE
_02012D68:
	adds r0, #0x4c
	bl FUN_02012A2C
	cmp r0, #1
	bne _02012DCE
	ldr r2, _02012DD4 @ =0x00000385
	ldrb r0, [r5, r2]
	subs r1, r2, #5
	adds r0, r0, #1
	strb r0, [r5, r2]
	ldr r0, [r4, #0x10]
	subs r2, r2, #1
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldrb r2, [r5, r2]
	ldr r1, [r5, r1]
	ldr r3, [r4, #8]
	adds r0, r5, #0
	bl FUN_020117A0
	movs r0, #0xe
	lsls r0, r0, #6
	ldr r3, [r5, r0]
	ldrb r0, [r3, #8]
	cmp r0, #0
	ldr r0, [r4, #0x18]
	bne _02012DAC
	ldrb r3, [r3, #0xb]
	ldr r2, [r4, #0x10]
	movs r1, #1
	bl FUN_02011068
	b _02012DCE
_02012DAC:
	ldrb r3, [r3, #0xb]
	ldr r2, [r4, #0x10]
	movs r1, #2
	bl FUN_02011068
	b _02012DCE
_02012DB8:
	bl FUN_020117FC
	cmp r0, #1
	bne _02012DCE
	ldr r0, _02012DD4 @ =0x00000385
	movs r6, #1
	ldrb r1, [r5, r0]
	adds r1, r1, #1
	strb r1, [r5, r0]
	b _02012DCE
_02012DCC:
	movs r6, #1
_02012DCE:
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6, pc}
	.align 2, 0
_02012DD4: .4byte 0x00000385
	thumb_func_end FUN_02012D4C

	thumb_func_start FUN_02012DD8
FUN_02012DD8: @ 0x02012DD8
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	movs r1, #0x4c
	bl FUN_0201AA8C
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x10]
	adds r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x18]
	str r0, [sp, #4]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #8]
	ldr r0, [r5, #0x20]
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r2, [r5, #4]
	ldr r3, [r5, #8]
	bl FUN_02012E6C
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02012DD8

	thumb_func_start FUN_02012E10
FUN_02012E10: @ 0x02012E10
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	ldr r4, [r5, #0x14]
	cmp r0, #1
	beq _02012E28
	cmp r0, #2
	beq _02012E44
	cmp r0, #3
	beq _02012E5E
	b _02012E62
_02012E28:
	adds r0, r4, #0
	bl FUN_02012F54
	cmp r0, #1
	bne _02012E66
	ldr r0, [r4, #0x34]
	ldr r1, [r4, #0x44]
	ldr r2, [r5, #0x10]
	bl FUN_02010F34
	ldr r0, [r5, #0xc]
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012E66
_02012E44:
	adds r0, r4, #0
	bl FUN_02010EC8
	ldr r0, [r5, #0x14]
	bl FUN_0201AB0C
	adds r0, r6, #0
	str r0, [r5, #0x14]
	ldr r0, [r5, #0xc]
	movs r6, #1
	adds r0, r0, #1
	str r0, [r5, #0xc]
	b _02012E66
_02012E5E:
	movs r6, #1
	b _02012E66
_02012E62:
	bl FUN_0202551C
_02012E66:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02012E10

	thumb_func_start FUN_02012E6C
FUN_02012E6C: @ 0x02012E6C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r4, r1, #0
	ldr r6, [sp, #0x38]
	str r3, [sp, #0x1c]
	str r2, [sp, #0x18]
	ldrb r1, [r4, #8]
	ldr r3, [sp, #0x44]
	adds r2, r6, #0
	adds r5, r0, #0
	ldr r7, [sp, #0x3c]
	bl FUN_02010E64
	ldr r0, _02012F44 @ =0x007FFF80
	movs r1, #0
	str r0, [r5, #0x14]
	ldrsh r1, [r4, r1]
	lsrs r0, r0, #7
	str r1, [r5, #0xc]
	movs r1, #2
	ldrsh r1, [r4, r1]
	str r1, [r5, #0x10]
	ldr r1, [r4, #4]
	str r1, [r5, #0x18]
	ldr r1, [r4, #4]
	str r1, [r5, #0x1c]
	ldr r1, [sp, #0x18]
	blx FUN_020F2998
	str r0, [r5, #0x20]
	ldr r0, [sp, #0x18]
	str r0, [r5, #0x24]
	ldr r0, [sp, #0x1c]
	str r0, [r5, #0x28]
	movs r0, #0
	str r0, [r5, #0x2c]
	ldr r0, [sp, #0x40]
	str r7, [r5, #0x44]
	str r0, [r5, #0x48]
	ldr r0, [sp, #0x44]
	str r0, [r5, #0x30]
	ldrb r0, [r4, #0xb]
	str r0, [r5, #0x34]
	ldrb r0, [r4, #8]
	str r0, [r5, #0x38]
	str r6, [r5, #0x3c]
	movs r0, #1
	str r0, [r5, #0x40]
	adds r0, r5, #0
	bl FUN_020131AC
	ldr r0, _02012F48 @ =FUN_02010F00
	ldr r2, _02012F4C @ =0x000003FF
	adds r1, r5, #0
	bl FUN_0200E374
	adds r0, r5, #0
	movs r1, #0
	bl FUN_02010EE0
	movs r1, #3
	str r6, [sp]
	lsls r1, r1, #8
	ldrsh r1, [r0, r1]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r1, #0x12
	lsls r1, r1, #6
	ldrsh r0, [r0, r1]
	str r0, [sp, #0xc]
	movs r0, #0xc0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x34]
	str r0, [sp, #0x14]
	ldrb r1, [r4, #9]
	ldrb r2, [r4, #0xa]
	ldrb r3, [r4, #8]
	adds r0, r7, #0
	bl FUN_02010F84
	ldrb r0, [r4, #8]
	cmp r0, #0
	bne _02012F22
	ldr r3, [r5, #0x34]
	adds r0, r7, #0
	movs r1, #1
	adds r2, r6, #0
	bl FUN_02011068
	b _02012F2E
_02012F22:
	ldr r3, [r5, #0x34]
	adds r0, r7, #0
	movs r1, #2
	adds r2, r6, #0
	bl FUN_02011068
_02012F2E:
	ldr r0, [sp, #0x44]
	ldr r2, _02012F50 @ =FUN_02010C38
	str r0, [sp]
	ldr r0, [r5, #0x48]
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_0200FF88
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02012F44: .4byte 0x007FFF80
_02012F48: .4byte FUN_02010F00
_02012F4C: .4byte 0x000003FF
_02012F50: .4byte FUN_02010C38
	thumb_func_end FUN_02012E6C

	thumb_func_start FUN_02012F54
FUN_02012F54: @ 0x02012F54
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x2c]
	adds r1, r0, #1
	str r1, [r4, #0x2c]
	ldr r0, [r4, #0x28]
	cmp r1, r0
	blt _02012FF0
	movs r0, #0
	str r0, [r4, #0x2c]
	ldr r0, [r4, #0x24]
	subs r0, r0, #1
	cmp r0, #0
	ble _02012FE2
	ldr r2, [r4, #0x1c]
	ldr r1, [r4, #0x20]
	adds r0, r4, #0
	adds r1, r2, r1
	str r1, [r4, #0x1c]
	ldr r1, [r4, #0x24]
	ldr r2, _02012FF4 @ =0x0000FFFF
	subs r1, r1, #1
	str r1, [r4, #0x24]
	ldr r1, [r4, #0x1c]
	adds r0, #0x1c
	cmp r1, r2
	blt _02012F98
	adds r3, r2, #0
_02012F8C:
	ldr r1, [r0]
	subs r1, r1, r2
	str r1, [r0]
	ldr r1, [r4, #0x1c]
	cmp r1, r3
	bge _02012F8C
_02012F98:
	cmp r1, #0
	bge _02012FAE
	adds r2, r4, #0
	ldr r0, _02012FF4 @ =0x0000FFFF
	adds r2, #0x1c
_02012FA2:
	ldr r1, [r2]
	adds r1, r1, r0
	str r1, [r2]
	ldr r1, [r4, #0x1c]
	cmp r1, #0
	blt _02012FA2
_02012FAE:
	ldr r0, _02012FF8 @ =0x00007FFF
	cmp r1, r0
	blt _02012FD0
	ldr r0, [r4, #0x18]
	cmp r1, r0
	bge _02012FD0
	ldr r0, [r4, #0x40]
	cmp r0, #1
	bne _02012FD0
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x38]
	ldr r2, [r4, #0x3c]
	ldr r3, [r4, #0x34]
	bl FUN_02010FEC
	movs r0, #0
	str r0, [r4, #0x40]
_02012FD0:
	adds r0, r4, #0
	bl FUN_020131AC
	ldr r0, _02012FFC @ =FUN_02010F00
	ldr r2, _02013000 @ =0x000003FF
	adds r1, r4, #0
	bl FUN_0200E374
	b _02012FF0
_02012FE2:
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #8]
	ldr r2, [r4, #0x30]
	bl FUN_0200FFB4
	movs r0, #1
	pop {r4, pc}
_02012FF0:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
_02012FF4: .4byte 0x0000FFFF
_02012FF8: .4byte 0x00007FFF
_02012FFC: .4byte FUN_02010F00
_02013000: .4byte 0x000003FF
	thumb_func_end FUN_02012F54

	thumb_func_start FUN_02013004
FUN_02013004: @ 0x02013004
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r0, [sp, #0x28]
	adds r5, r3, #0
	str r0, [sp, #0x10]
	asrs r0, r0, #4
	adds r4, r2, #0
	lsls r2, r0, #1
	adds r0, r2, #1
	str r1, [sp]
	lsls r1, r0, #1
	ldr r0, _020131A4 @ =0x021094DC
	ldr r3, [sp, #0x2c]
	ldrsh r1, [r0, r1]
	ldr r0, _020131A8 @ =0x0000FFFF
	ldr r6, [sp, #0x30]
	muls r0, r1, r0
	asrs r1, r0, #0xc
	ldr r0, [sp]
	ldr r7, [sp, #0x34]
	adds r0, r0, r1
	str r0, [sp, #0xc]
	ldr r0, _020131A4 @ =0x021094DC
	lsls r1, r2, #1
	ldrsh r1, [r0, r1]
	ldr r0, _020131A8 @ =0x0000FFFF
	muls r0, r1, r0
	asrs r0, r0, #0xc
	adds r1, r4, r0
	asrs r0, r3, #4
	lsls r0, r0, #1
	mov ip, r0
	adds r0, r0, #1
	lsls r2, r0, #1
	ldr r0, _020131A4 @ =0x021094DC
	ldrsh r2, [r0, r2]
	ldr r0, _020131A8 @ =0x0000FFFF
	muls r0, r2, r0
	asrs r2, r0, #0xc
	ldr r0, [sp]
	adds r0, r0, r2
	str r0, [sp, #8]
	mov r0, ip
	lsls r2, r0, #1
	ldr r0, _020131A4 @ =0x021094DC
	ldrsh r2, [r0, r2]
	ldr r0, _020131A8 @ =0x0000FFFF
	muls r0, r2, r0
	asrs r0, r0, #0xc
	adds r0, r4, r0
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	subs r2, r3, r0
	ldr r0, _020131A8 @ =0x0000FFFF
	lsrs r0, r0, #1
	cmp r2, r0
	bne _0201308C
	cmp r5, #0
	blt _0201307E
	cmp r5, r4
	blt _02013080
_0201307E:
	b _020131A0
_02013080:
	movs r0, #0
	str r0, [r6]
	movs r0, #0xff
	add sp, #0x14
	str r0, [r7]
	pop {r4, r5, r6, r7, pc}
_0201308C:
	cmp r3, #0
	blt _02013100
	ldr r0, _020131A8 @ =0x0000FFFF
	lsrs r0, r0, #1
	cmp r3, r0
	bge _02013100
	cmp r1, r4
	bge _020130A0
	adds r0, r1, #0
	b _020130A2
_020130A0:
	adds r0, r4, #0
_020130A2:
	cmp r1, r4
	ble _020130AA
	adds r2, r1, #0
	b _020130AC
_020130AA:
	adds r2, r4, #0
_020130AC:
	cmp r0, r5
	bgt _020130CC
	cmp r5, r2
	bgt _020130CC
	ldr r2, [sp, #0xc]
	ldr r0, [sp]
	subs r2, r2, r0
	subs r0, r5, r1
	muls r0, r2, r0
	subs r1, r1, r4
	blx FUN_020F2998
	ldr r1, [sp, #0xc]
	adds r0, r1, r0
	str r0, [r6]
	b _020130E6
_020130CC:
	ldr r1, [sp, #8]
	ldr r0, [sp]
	subs r1, r1, r0
	ldr r0, [sp, #4]
	subs r0, r5, r0
	muls r0, r1, r0
	ldr r1, [sp, #4]
	subs r1, r1, r4
	blx FUN_020F2998
	ldr r1, [sp, #8]
	adds r0, r1, r0
	str r0, [r6]
_020130E6:
	ldr r0, [r6]
	cmp r0, #0xff
	ble _020130F0
	movs r0, #0xff
	b _020130F6
_020130F0:
	cmp r0, #0
	bge _020130F6
	movs r0, #0
_020130F6:
	str r0, [r6]
	movs r0, #0xff
	add sp, #0x14
	str r0, [r7]
	pop {r4, r5, r6, r7, pc}
_02013100:
	cmp r1, r4
	bge _02013108
	adds r0, r1, #0
	b _0201310A
_02013108:
	adds r0, r4, #0
_0201310A:
	cmp r1, r4
	ble _02013112
	adds r2, r1, #0
	b _02013114
_02013112:
	adds r2, r4, #0
_02013114:
	cmp r0, r5
	bgt _02013144
	cmp r5, r2
	bgt _02013144
	ldr r2, [sp, #0xc]
	ldr r0, [sp]
	subs r2, r2, r0
	subs r0, r5, r1
	muls r0, r2, r0
	subs r1, r1, r4
	blx FUN_020F2998
	ldr r1, [sp, #0xc]
	adds r0, r1, r0
	str r0, [r6]
	cmp r0, #0xff
	ble _0201313A
	movs r0, #0xff
	b _02013140
_0201313A:
	cmp r0, #0
	bge _02013140
	movs r0, #0
_02013140:
	str r0, [r6]
	b _02013148
_02013144:
	movs r0, #0
	str r0, [r6]
_02013148:
	ldr r0, [sp, #4]
	cmp r0, r4
	bge _02013152
	adds r1, r0, #0
	b _02013154
_02013152:
	adds r1, r4, #0
_02013154:
	ldr r0, [sp, #4]
	cmp r0, r4
	bgt _0201315C
	adds r0, r4, #0
_0201315C:
	cmp r1, r5
	bgt _02013190
	cmp r5, r0
	bgt _02013190
	ldr r1, [sp, #8]
	ldr r0, [sp]
	subs r1, r1, r0
	ldr r0, [sp, #4]
	subs r0, r5, r0
	muls r0, r1, r0
	ldr r1, [sp, #4]
	subs r1, r1, r4
	blx FUN_020F2998
	ldr r1, [sp, #8]
	adds r0, r1, r0
	str r0, [r7]
	cmp r0, #0xff
	ble _02013186
	movs r0, #0xff
	b _0201318C
_02013186:
	cmp r0, #0
	bge _0201318C
	movs r0, #0
_0201318C:
	str r0, [r7]
	b _02013194
_02013190:
	ldr r0, [r6]
	str r0, [r7]
_02013194:
	ldr r1, [r7]
	ldr r0, [r6]
	cmp r0, r1
	ble _020131A0
	str r1, [r6]
	str r0, [r7]
_020131A0:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020131A4: .4byte 0x021094DC
_020131A8: .4byte 0x0000FFFF
	thumb_func_end FUN_02013004

	thumb_func_start FUN_020131AC
FUN_020131AC: @ 0x020131AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	movs r1, #0
	adds r5, r0, #0
	bl FUN_02010EE0
	adds r4, r0, #0
	movs r6, #0
	add r7, sp, #0x14
_020131BE:
	ldr r0, [r5, #0x18]
	adds r3, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x1c]
	str r0, [sp, #4]
	str r7, [sp, #8]
	add r0, sp, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r5, #0x14]
	ldr r1, [r5, #0xc]
	ldr r2, [r5, #0x10]
	bl FUN_02013004
	movs r0, #3
	ldr r1, [sp, #0x14]
	lsls r0, r0, #8
	strh r1, [r4, r0]
	movs r0, #0x12
	ldr r1, [sp, #0x10]
	lsls r0, r0, #6
	strh r1, [r4, r0]
	adds r6, r6, #1
	adds r4, r4, #2
	cmp r6, #0xc0
	blt _020131BE
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020131AC

	thumb_func_start FUN_020131F4
FUN_020131F4: @ 0x020131F4
	cmp r1, #0
	ldr r1, _02013218 @ =0xFFFF1FFF
	bne _0201320A
	movs r3, #1
	lsls r3, r3, #0x1a
	ldr r2, [r3]
	lsls r0, r0, #0xd
	ands r1, r2
	orrs r0, r1
	str r0, [r3]
	bx lr
_0201320A:
	ldr r3, _0201321C @ =0x04001000
	lsls r0, r0, #0xd
	ldr r2, [r3]
	ands r1, r2
	orrs r0, r1
	str r0, [r3]
	bx lr
	.align 2, 0
_02013218: .4byte 0xFFFF1FFF
_0201321C: .4byte 0x04001000
	thumb_func_end FUN_020131F4

	thumb_func_start FUN_02013220
FUN_02013220: @ 0x02013220
	push {r3, r4}
	cmp r2, #0
	bne _02013262
	cmp r3, #0
	bne _02013246
	ldr r2, _0201329C @ =0x04000048
	ldrh r3, [r2]
	movs r2, #0x3f
	bics r3, r2
	adds r2, r3, #0
	orrs r2, r0
	cmp r1, #0
	beq _0201323E
	movs r0, #0x20
	orrs r2, r0
_0201323E:
	ldr r0, _0201329C @ =0x04000048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013246:
	ldr r2, _020132A0 @ =0x04001048
	ldrh r3, [r2]
	movs r2, #0x3f
	bics r3, r2
	adds r2, r3, #0
	orrs r2, r0
	cmp r1, #0
	beq _0201325A
	movs r0, #0x20
	orrs r2, r0
_0201325A:
	ldr r0, _020132A0 @ =0x04001048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013262:
	cmp r3, #0
	ldr r2, _020132A4 @ =0xFFFFC0FF
	bne _02013282
	ldr r4, _0201329C @ =0x04000048
	lsls r0, r0, #8
	ldrh r3, [r4]
	ands r2, r3
	orrs r2, r0
	cmp r1, #0
	beq _0201327A
	lsrs r0, r4, #0xd
	orrs r2, r0
_0201327A:
	ldr r0, _0201329C @ =0x04000048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
_02013282:
	ldr r4, _020132A0 @ =0x04001048
	lsls r0, r0, #8
	ldrh r3, [r4]
	ands r2, r3
	orrs r2, r0
	cmp r1, #0
	beq _02013294
	lsrs r0, r4, #0xd
	orrs r2, r0
_02013294:
	ldr r0, _020132A0 @ =0x04001048
	strh r2, [r0]
	pop {r3, r4}
	bx lr
	.align 2, 0
_0201329C: .4byte 0x04000048
_020132A0: .4byte 0x04001048
_020132A4: .4byte 0xFFFFC0FF
	thumb_func_end FUN_02013220

	thumb_func_start FUN_020132A8
FUN_020132A8: @ 0x020132A8
	cmp r2, #0
	bne _020132C6
	ldr r2, _020132E0 @ =0x0400004A
	ldrh r3, [r2]
	movs r2, #0x3f
	bics r3, r2
	adds r2, r3, #0
	orrs r2, r0
	cmp r1, #0
	beq _020132C0
	movs r0, #0x20
	orrs r2, r0
_020132C0:
	ldr r0, _020132E0 @ =0x0400004A
	strh r2, [r0]
	bx lr
_020132C6:
	ldr r2, _020132E4 @ =0x0400104A
	ldrh r3, [r2]
	movs r2, #0x3f
	bics r3, r2
	adds r2, r3, #0
	orrs r2, r0
	cmp r1, #0
	beq _020132DA
	movs r0, #0x20
	orrs r2, r0
_020132DA:
	ldr r0, _020132E4 @ =0x0400104A
	strh r2, [r0]
	bx lr
	.align 2, 0
_020132E0: .4byte 0x0400004A
_020132E4: .4byte 0x0400104A
	thumb_func_end FUN_020132A8

	thumb_func_start FUN_020132E8
FUN_020132E8: @ 0x020132E8
	push {r3}
	sub sp, #4
	cmp r0, #0
	bne _02013308
	cmp r1, #0
	bne _020132FE
	ldr r0, _0201332C @ =0x04000048
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_020132FE:
	ldr r0, _02013330 @ =0x04001048
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_02013308:
	cmp r1, #0
	bne _02013316
	ldr r0, _02013334 @ =0x04000049
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	b _0201331E
_02013316:
	ldr r0, _02013338 @ =0x04001049
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
_0201331E:
	add r1, sp, #0
	movs r0, #0
	ldrsb r0, [r1, r0]
	add sp, #4
	pop {r3}
	bx lr
	nop
_0201332C: .4byte 0x04000048
_02013330: .4byte 0x04001048
_02013334: .4byte 0x04000049
_02013338: .4byte 0x04001049
	thumb_func_end FUN_020132E8

	thumb_func_start FUN_0201333C
FUN_0201333C: @ 0x0201333C
	push {r3}
	sub sp, #4
	cmp r0, #0
	bne _02013348
	ldr r0, _0201335C @ =0x0400004A
	b _0201334A
_02013348:
	ldr r0, _02013360 @ =0x0400104A
_0201334A:
	ldrb r1, [r0]
	add r0, sp, #0
	strb r1, [r0]
	add r1, sp, #0
	movs r0, #0
	ldrsb r0, [r1, r0]
	add sp, #4
	pop {r3}
	bx lr
	.align 2, 0
_0201335C: .4byte 0x0400004A
_02013360: .4byte 0x0400104A
	thumb_func_end FUN_0201333C

	thumb_func_start FUN_02013364
FUN_02013364: @ 0x02013364
	push {r4, r5}
	adds r4, r2, #0
	adds r2, r3, #0
	ldr r3, [sp, #8]
	cmp r3, #0
	bne _020133C2
	ldr r3, [sp, #0xc]
	cmp r3, #0
	bne _0201339C
	lsls r0, r0, #8
	movs r3, #0xff
	adds r5, r0, #0
	lsls r3, r3, #8
	lsls r0, r4, #0x18
	ands r5, r3
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	orrs r4, r0
	ldr r0, _02013414 @ =0x04000040
	orrs r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_0201339C:
	lsls r0, r0, #8
	movs r3, #0xff
	adds r5, r0, #0
	lsls r3, r3, #8
	lsls r0, r4, #0x18
	ands r5, r3
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	orrs r4, r0
	ldr r0, _02013418 @ =0x04001040
	orrs r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_020133C2:
	ldr r3, [sp, #0xc]
	cmp r3, #0
	bne _020133EE
	lsls r0, r0, #8
	movs r3, #0xff
	adds r5, r0, #0
	lsls r3, r3, #8
	lsls r0, r4, #0x18
	ands r5, r3
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	orrs r4, r0
	ldr r0, _0201341C @ =0x04000042
	orrs r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
_020133EE:
	lsls r0, r0, #8
	movs r3, #0xff
	adds r5, r0, #0
	lsls r3, r3, #8
	lsls r0, r4, #0x18
	ands r5, r3
	lsls r1, r1, #8
	ands r3, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	orrs r4, r0
	ldr r0, _02013420 @ =0x04001042
	orrs r1, r3
	strh r4, [r0]
	strh r1, [r0, #4]
	pop {r4, r5}
	bx lr
	.align 2, 0
_02013414: .4byte 0x04000040
_02013418: .4byte 0x04001040
_0201341C: .4byte 0x04000042
_02013420: .4byte 0x04001042
	thumb_func_end FUN_02013364

	thumb_func_start FUN_02013424
FUN_02013424: @ 0x02013424
	push {r4, lr}
	lsls r3, r2, #3
	adds r4, r0, r3
	str r1, [r0, r3]
	str r2, [r4, #4]
	ldr r0, _0201343C @ =FUN_020134BC
	adds r1, r4, #0
	movs r2, #1
	bl FUN_0200E374
	pop {r4, pc}
	nop
_0201343C: .4byte FUN_020134BC
	thumb_func_end FUN_02013424

	thumb_func_start FUN_02013440
FUN_02013440: @ 0x02013440
	push {r4, r5, r6, lr}
	ldr r5, [sp, #0x10]
	adds r0, #0x10
	lsls r4, r5, #5
	adds r6, r0, r4
	lsls r0, r3, #4
	adds r4, r6, r0
	str r1, [r6, r0]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r0, _02013464 @ =FUN_020134D0
	adds r1, r4, #0
	movs r2, #1
	str r5, [r4, #0xc]
	bl FUN_0200E374
	pop {r4, r5, r6, pc}
	nop
_02013464: .4byte FUN_020134D0
	thumb_func_end FUN_02013440

	thumb_func_start FUN_02013468
FUN_02013468: @ 0x02013468
	push {r3, r4, r5, lr}
	movs r4, #0xc
	adds r0, #0x68
	muls r4, r3, r4
	adds r5, r0, r4
	str r1, [r0, r4]
	str r2, [r5, #4]
	ldr r0, _02013484 @ =FUN_020134EC
	adds r1, r5, #0
	movs r2, #1
	str r3, [r5, #8]
	bl FUN_0200E374
	pop {r3, r4, r5, pc}
	.align 2, 0
_02013484: .4byte FUN_020134EC
	thumb_func_end FUN_02013468

	thumb_func_start FUN_02013488
FUN_02013488: @ 0x02013488
	push {r3, r4, r5, r6, r7, lr}
	ldr r5, [sp, #0x20]
	adds r7, r1, #0
	adds r0, #0x80
	lsls r1, r5, #5
	adds r6, r0, r1
	adds r4, r2, #0
	ldr r0, [sp, #0x1c]
	adds r2, r3, #0
	lsls r3, r0, #4
	adds r1, r6, r3
	strh r7, [r6, r3]
	strh r4, [r1, #2]
	strh r2, [r1, #4]
	ldr r2, [sp, #0x18]
	strh r2, [r1, #6]
	str r0, [r1, #8]
	ldr r0, _020134B8 @ =FUN_02013504
	movs r2, #1
	str r5, [r1, #0xc]
	bl FUN_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020134B8: .4byte FUN_02013504
	thumb_func_end FUN_02013488

	thumb_func_start FUN_020134BC
FUN_020134BC: @ 0x020134BC
	push {r4, lr}
	adds r4, r0, #0
	ldm r1, {r0, r1}
	bl FUN_020131F4
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020134BC

	thumb_func_start FUN_020134D0
FUN_020134D0: @ 0x020134D0
	push {r4, lr}
	adds r3, r1, #0
	adds r4, r0, #0
	ldr r0, [r3]
	ldr r1, [r3, #4]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_02013220
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020134D0

	thumb_func_start FUN_020134EC
FUN_020134EC: @ 0x020134EC
	push {r4, lr}
	adds r2, r1, #0
	adds r4, r0, #0
	ldr r0, [r2]
	ldr r1, [r2, #4]
	ldr r2, [r2, #8]
	bl FUN_020132A8
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	thumb_func_end FUN_020134EC

	thumb_func_start FUN_02013504
FUN_02013504: @ 0x02013504
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r3, r1, #0
	adds r4, r0, #0
	ldr r0, [r3, #8]
	movs r1, #2
	str r0, [sp]
	ldr r0, [r3, #0xc]
	movs r2, #4
	str r0, [sp, #4]
	movs r0, #0
	movs r5, #6
	ldrsh r0, [r3, r0]
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	ldrsh r3, [r3, r5]
	bl FUN_02013364
	adds r0, r4, #0
	bl FUN_0200E390
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02013504

	thumb_func_start FUN_02013534
FUN_02013534: @ 0x02013534
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r1, #0
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x68
	bl FUN_0201AA8C
	str r0, [sp, #8]
	cmp r0, #0
	bne _0201354E
	bl FUN_0202551C
_0201354E:
	ldr r4, [sp, #8]
	ldr r5, [sp, #8]
	movs r6, #0
	adds r4, #0x30
_02013556:
	movs r0, #0x23
	adds r1, r6, #0
	movs r2, #0
	adds r3, r4, #0
	str r7, [sp]
	bl FUN_02007A0C
	str r0, [r5]
	cmp r0, #0
	bne _0201356E
	bl FUN_0202551C
_0201356E:
	adds r6, r6, #1
	adds r4, r4, #4
	adds r5, r5, #4
	cmp r6, #0xc
	blt _02013556
	ldr r0, [sp, #4]
	movs r1, #0x14
	adds r4, r0, #0
	muls r4, r1, r4
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_0201AA8C
	ldr r1, [sp, #8]
	cmp r0, #0
	str r0, [r1, #0x60]
	bne _02013594
	bl FUN_0202551C
_02013594:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	adds r2, r4, #0
	str r1, [r0, #0x64]
	ldr r0, [r0, #0x60]
	movs r1, #0
	blx FUN_020E5B44
	ldr r0, [sp, #8]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013534

	thumb_func_start FUN_020135AC
FUN_020135AC: @ 0x020135AC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	bne _020135B6
	bl FUN_0202551C
_020135B6:
	movs r4, #0
	adds r5, r6, #0
_020135BA:
	ldr r0, [r5]
	bl FUN_0201AB0C
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #0xc
	blt _020135BA
	ldr r0, [r6, #0x60]
	bl FUN_0201AB0C
	adds r0, r6, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_020135AC

	thumb_func_start FUN_020135D8
FUN_020135D8: @ 0x020135D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r5, r0, #0
	bne _020135E4
	bl FUN_0202551C
_020135E4:
	ldr r0, [r5]
	bl FUN_02013AD0
	adds r4, r0, #0
	bne _020135F2
	bl FUN_0202551C
_020135F2:
	ldr r0, [r5, #0x10]
	add r3, sp, #8
	str r0, [r4, #8]
	ldr r0, [r5, #0x18]
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [r4, #0x10]
	str r3, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r1, [r5, #4]
	ldr r2, [r5, #0x2c]
	ldrb r0, [r1, #7]
	ldrb r1, [r1, #8]
	bl FUN_02013BD4
	adds r6, r0, #0
	movs r1, #0x24
	ldr r0, [r5, #0x2c]
	muls r1, r6, r1
	bl FUN_0201AACC
	adds r7, r0, #0
	movs r1, #0xc
	ldr r0, [r5, #0x2c]
	muls r1, r6, r1
	bl FUN_0201AA8C
	str r0, [r4]
	str r6, [r4, #4]
	ldr r0, [r5, #0x28]
	add r1, sp, #8
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	adds r2, r7, #0
	str r0, [sp, #4]
	ldr r0, [r5, #4]
	ldr r3, [r5, #0x14]
	bl FUN_02013C5C
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_02013E78
	adds r0, r7, #0
	bl FUN_0201AB0C
	add r0, sp, #8
	bl FUN_02013FA8
	adds r0, r4, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020135D8

	thumb_func_start FUN_02013660
FUN_02013660: @ 0x02013660
	push {r4, lr}
	adds r4, r0, #0
	bne _0201366A
	bl FUN_0202551C
_0201366A:
	ldr r0, [r4]
	cmp r0, #0
	bne _02013674
	bl FUN_0202551C
_02013674:
	adds r0, r4, #0
	bl FUN_02013ECC
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_02013AC0
	pop {r4, pc}
	thumb_func_end FUN_02013660

	thumb_func_start FUN_02013688
FUN_02013688: @ 0x02013688
	push {r4, r5, lr}
	sub sp, #0x14
	add r3, sp, #0
	adds r5, r0, #0
	str r3, [sp, #0xc]
	str r3, [sp, #0x10]
	adds r4, r1, #0
	ldrb r0, [r5, #7]
	ldrb r1, [r5, #8]
	bl FUN_02013BD4
	add r0, sp, #0
	adds r1, r4, #0
	bl FUN_02013E24
	adds r4, r0, #0
	add r0, sp, #0
	bl FUN_02013FA8
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, pc}
	thumb_func_end FUN_02013688

	thumb_func_start FUN_020136B4
FUN_020136B4: @ 0x020136B4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r7, r2, #0
	str r1, [sp]
	cmp r5, #0
	bne _020136C6
	bl FUN_0202551C
_020136C6:
	ldr r0, [sp]
	str r0, [r5, #0xc]
	str r7, [r5, #0x10]
	lsls r0, r0, #0xc
	str r0, [sp]
	ldr r0, [r5, #8]
	lsls r7, r7, #0xc
	cmp r0, #0
	beq _020136E8
	bl FUN_020248AC
	ldr r2, [r0]
	ldr r1, [sp]
	ldr r0, [r0, #4]
	adds r1, r1, r2
	str r1, [sp]
	adds r7, r7, r0
_020136E8:
	movs r6, #0
	str r6, [sp, #0xc]
	ldr r0, [r5, #4]
	cmp r0, #0
	ble _02013722
	adds r4, r6, #0
_020136F4:
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r0, [r0, #4]
	lsls r1, r0, #0xc
	ldr r0, [sp]
	adds r0, r0, r1
	str r0, [sp, #4]
	ldr r0, [r5]
	add r1, sp, #4
	adds r0, r0, r4
	ldr r0, [r0, #8]
	lsls r0, r0, #0xc
	adds r0, r7, r0
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl FUN_020247D4
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _020136F4
_02013722:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020136B4

	thumb_func_start FUN_02013728
FUN_02013728: @ 0x02013728
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	bne _02013734
	bl FUN_0202551C
_02013734:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0201378E
	ldr r1, [r5, #0xc]
	lsls r1, r1, #0xc
	str r1, [sp]
	ldr r1, [r5, #0x10]
	lsls r7, r1, #0xc
	bl FUN_020248AC
	ldr r2, [r0]
	ldr r0, [r0, #4]
	movs r6, #0
	ldr r1, [sp]
	str r6, [sp, #0xc]
	adds r7, r7, r0
	adds r1, r1, r2
	ldr r0, [r5, #4]
	str r1, [sp]
	cmp r0, #0
	ble _0201378E
	adds r4, r6, #0
_02013760:
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r0, [r0, #4]
	lsls r1, r0, #0xc
	ldr r0, [sp]
	adds r0, r0, r1
	str r0, [sp, #4]
	ldr r0, [r5]
	add r1, sp, #4
	adds r0, r0, r4
	ldr r0, [r0, #8]
	lsls r0, r0, #0xc
	adds r0, r7, r0
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl FUN_020247D4
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013760
_0201378E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013728

	thumb_func_start FUN_02013794
FUN_02013794: @ 0x02013794
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	cmp r5, #0
	bne _020137A4
	bl FUN_0202551C
_020137A4:
	cmp r4, #0
	bne _020137AC
	bl FUN_0202551C
_020137AC:
	cmp r6, #0
	bne _020137B4
	bl FUN_0202551C
_020137B4:
	ldr r0, [r5, #0xc]
	str r0, [r4]
	ldr r0, [r5, #0x10]
	str r0, [r6]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02013794

	thumb_func_start FUN_020137C0
FUN_020137C0: @ 0x020137C0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _020137CE
	bl FUN_0202551C
_020137CE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _020137EC
	adds r4, r6, #0
_020137D8:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024830
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _020137D8
_020137EC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020137C0

	thumb_func_start FUN_020137F0
FUN_020137F0: @ 0x020137F0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _020137FE
	bl FUN_0202551C
_020137FE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0201381C
	adds r4, r6, #0
_02013808:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024A04
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013808
_0201381C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020137F0

	thumb_func_start FUN_02013820
FUN_02013820: @ 0x02013820
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _0201382E
	bl FUN_0202551C
_0201382E:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0201384C
	adds r4, r6, #0
_02013838:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024ADC
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013838
_0201384C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013820

	thumb_func_start FUN_02013850
FUN_02013850: @ 0x02013850
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _0201385E
	bl FUN_0202551C
_0201385E:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0201387C
	adds r4, r6, #0
_02013868:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024A14
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013868
_0201387C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013850

	thumb_func_start FUN_02013880
FUN_02013880: @ 0x02013880
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _0201388E
	bl FUN_0202551C
_0201388E:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _020138AC
	adds r4, r6, #0
_02013898:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024A48
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013898
_020138AC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013880

	thumb_func_start FUN_020138B0
FUN_020138B0: @ 0x020138B0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _020138BE
	bl FUN_0202551C
_020138BE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _020138DC
	adds r4, r6, #0
_020138C8:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024A74
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _020138C8
_020138DC:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020138B0

	thumb_func_start FUN_020138E0
FUN_020138E0: @ 0x020138E0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r5, #0
	bne _020138EE
	bl FUN_0202551C
_020138EE:
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _0201390C
	adds r4, r6, #0
_020138F8:
	ldr r0, [r5]
	adds r1, r7, #0
	ldr r0, [r0, r4]
	bl FUN_02024AA8
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _020138F8
_0201390C:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020138E0

	thumb_func_start FUN_02013910
FUN_02013910: @ 0x02013910
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x18
	bl FUN_0201AA8C
	adds r4, r0, #0
	str r4, [r4, #0xc]
	str r4, [r4, #0x10]
	ldrb r0, [r5, #7]
	ldrb r1, [r5, #8]
	adds r2, r6, #0
	adds r3, r4, #0
	bl FUN_02013BD4
	str r0, [r4, #0x14]
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02013910

	thumb_func_start FUN_02013938
FUN_02013938: @ 0x02013938
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02013FA8
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02013938

	thumb_func_start FUN_02013948
FUN_02013948: @ 0x02013948
	ldr r3, _0201394C @ =FUN_02013E24
	bx r3
	.align 2, 0
_0201394C: .4byte FUN_02013E24
	thumb_func_end FUN_02013948

	thumb_func_start FUN_02013950
FUN_02013950: @ 0x02013950
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r5, #0
	bne _02013960
	bl FUN_0202551C
_02013960:
	ldr r0, [r5]
	bl FUN_02013AD0
	adds r4, r0, #0
	bne _0201396E
	bl FUN_0202551C
_0201396E:
	ldr r0, [r5, #0x10]
	movs r1, #0x24
	str r0, [r4, #8]
	ldr r0, [r5, #0x18]
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x1c]
	str r0, [r4, #0x10]
	ldr r2, [r6, #0x14]
	ldr r0, [r5, #0x2c]
	muls r1, r2, r1
	bl FUN_0201AACC
	adds r7, r0, #0
	ldr r2, [r6, #0x14]
	movs r1, #0xc
	ldr r0, [r5, #0x2c]
	muls r1, r2, r1
	bl FUN_0201AA8C
	str r0, [r4]
	ldr r0, [r6, #0x14]
	adds r1, r6, #0
	str r0, [r4, #4]
	ldr r0, [r5, #0x28]
	adds r2, r7, #0
	str r0, [sp]
	ldr r0, [r5, #0x2c]
	str r0, [sp, #4]
	ldr r0, [r5, #4]
	ldr r3, [r5, #0x14]
	bl FUN_02013C5C
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_02013E78
	adds r0, r7, #0
	bl FUN_0201AB0C
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013950

	thumb_func_start FUN_020139C8
FUN_020139C8: @ 0x020139C8
	ldr r3, _020139CC @ =FUN_02013660
	bx r3
	.align 2, 0
_020139CC: .4byte FUN_02013660
	thumb_func_end FUN_020139C8

	thumb_func_start FUN_020139D0
FUN_020139D0: @ 0x020139D0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r0, [r0]
	adds r7, r1, #0
	ldr r0, [r0]
	str r2, [sp, #4]
	adds r5, r3, #0
	str r0, [sp, #8]
	bl FUN_02024B60
	str r0, [sp, #0xc]
	ldr r1, [sp, #0xc]
	adds r0, r7, #0
	bl FUN_02013948
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201AACC
	movs r1, #0
	adds r2, r6, #0
	adds r4, r0, #0
	blx FUN_020E5B44
	ldr r0, [sp, #4]
	ldr r3, [sp, #0xc]
	adds r1, r4, #0
	adds r2, r7, #0
	str r5, [sp]
	bl FUN_02013D88
	adds r0, r4, #0
	adds r1, r6, #0
	blx FUN_020D2894
	ldr r0, [sp, #8]
	bl FUN_02024B1C
	ldr r1, [sp, #0xc]
	cmp r1, #1
	bne _02013A36
	movs r1, #1
	blx FUN_020B802C
	adds r1, r0, #0
	adds r0, r4, #0
	adds r2, r6, #0
	blx FUN_020CFE74
	b _02013A46
_02013A36:
	movs r1, #2
	blx FUN_020B802C
	adds r1, r0, #0
	adds r0, r4, #0
	adds r2, r6, #0
	blx FUN_020CFECC
_02013A46:
	adds r0, r4, #0
	bl FUN_0201AB0C
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020139D0

	thumb_func_start FUN_02013A50
FUN_02013A50: @ 0x02013A50
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	ldr r0, [sp, #0x20]
	adds r7, r1, #0
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x24]
	ldrb r1, [r6, #7]
	str r0, [sp, #0x24]
	adds r0, r3, #0
	adds r0, r7, r0
	str r2, [sp]
	str r3, [sp, #4]
	cmp r1, r0
	bge _02013A72
	bl FUN_0202551C
_02013A72:
	ldrb r2, [r6, #8]
	ldr r1, [sp]
	ldr r0, [sp, #0x20]
	adds r0, r1, r0
	cmp r2, r0
	bge _02013A82
	bl FUN_0202551C
_02013A82:
	ldr r0, [sp]
	movs r4, #0
	cmp r0, #0
	ble _02013ABA
	lsls r0, r7, #5
	adds r5, r4, #0
	str r0, [sp, #8]
_02013A90:
	ldrb r1, [r6, #7]
	ldr r0, [sp, #0x20]
	adds r2, r1, #0
	adds r0, r4, r0
	muls r2, r0, r2
	ldr r0, [sp, #4]
	lsls r1, r5, #5
	adds r2, r2, r0
	ldr r0, [sp, #0x24]
	lsls r2, r2, #5
	adds r0, r0, r1
	ldr r1, [r6, #0xc]
	adds r1, r1, r2
	ldr r2, [sp, #8]
	blx FUN_020E5AD8
	ldr r0, [sp]
	adds r4, r4, #1
	adds r5, r5, r7
	cmp r4, r0
	blt _02013A90
_02013ABA:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013A50

	thumb_func_start FUN_02013AC0
FUN_02013AC0: @ 0x02013AC0
	movs r2, #0x14
	movs r1, #0
_02013AC4:
	strb r1, [r0]
	adds r0, r0, #1
	subs r2, r2, #1
	bne _02013AC4
	bx lr
	.align 2, 0
	thumb_func_end FUN_02013AC0

	thumb_func_start FUN_02013AD0
FUN_02013AD0: @ 0x02013AD0
	ldr r1, [r0, #0x64]
	movs r2, #0
	cmp r1, #0
	ble _02013AF4
	ldr r3, [r0, #0x60]
_02013ADA:
	ldr r1, [r3]
	cmp r1, #0
	bne _02013AEA
	ldr r1, [r0, #0x60]
	movs r0, #0x14
	muls r0, r2, r0
	adds r0, r1, r0
	bx lr
_02013AEA:
	ldr r1, [r0, #0x64]
	adds r2, r2, #1
	adds r3, #0x14
	cmp r2, r1
	blt _02013ADA
_02013AF4:
	movs r0, #0
	bx lr
	thumb_func_end FUN_02013AD0

	thumb_func_start FUN_02013AF8
FUN_02013AF8: @ 0x02013AF8
	push {r3, r4}
	ldr r4, _02013B20 @ =_020F5F2C
	movs r3, #0
_02013AFE:
	ldrb r2, [r4]
	cmp r2, r0
	bgt _02013B10
	ldrb r2, [r4, #1]
	cmp r2, r1
	bgt _02013B10
	adds r0, r3, #0
	pop {r3, r4}
	bx lr
_02013B10:
	adds r3, r3, #1
	adds r4, r4, #2
	cmp r3, #0xc
	blt _02013AFE
	movs r0, #0xc
	pop {r3, r4}
	bx lr
	nop
_02013B20: .4byte _020F5F2C
	thumb_func_end FUN_02013AF8

	thumb_func_start FUN_02013B24
FUN_02013B24: @ 0x02013B24
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r2, #0
	bl FUN_02013F78
	ldr r1, [r6, #0x10]
	adds r4, r0, #0
	bl FUN_02013FC0
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl FUN_02013AF8
	str r0, [r4, #8]
	ldr r0, [r5, #4]
	ldr r1, _02013BCC @ =_020F5F2C
	str r0, [r4]
	ldr r0, [r5]
	ldr r6, _02013BD0 @ =_020F5F2D
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	ldr r2, [r5, #8]
	lsls r3, r0, #1
	ldrb r0, [r1, r3]
	ldrb r3, [r6, r3]
	subs r2, r2, r0
	ldr r0, [r5, #0xc]
	subs r6, r0, r3
	cmp r2, #0
	ble _02013B8C
	str r0, [r5, #0x1c]
	str r2, [r5, #0x18]
	ldr r0, [r5]
	str r0, [r5, #0x10]
	ldr r2, [r4, #8]
	ldr r0, [r5, #4]
	lsls r2, r2, #1
	ldrb r1, [r1, r2]
	adds r0, r0, r1
	str r0, [r5, #0x14]
	adds r0, r5, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bne _02013B84
	bl FUN_0202551C
_02013B84:
	adds r0, r5, #0
	movs r1, #1
	adds r0, #0x20
	strb r1, [r0]
_02013B8C:
	cmp r6, #0
	ble _02013BA2
	ldr r0, [r4, #8]
	ldr r2, [r5]
	lsls r1, r0, #1
	ldr r0, _02013BD0 @ =_020F5F2D
	ldrb r0, [r0, r1]
	adds r0, r2, r0
	str r0, [r5]
	str r6, [r5, #0xc]
	b _02013BC6
_02013BA2:
	adds r0, r5, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #1
	bne _02013BC2
	adds r3, r5, #0
	adds r3, #0x10
	adds r2, r5, #0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	movs r0, #0
	adds r5, #0x20
	strb r0, [r5]
	b _02013BC6
_02013BC2:
	movs r0, #1
	pop {r4, r5, r6, pc}
_02013BC6:
	movs r0, #0
	pop {r4, r5, r6, pc}
	nop
_02013BCC: .4byte _020F5F2C
_02013BD0: .4byte _020F5F2D
	thumb_func_end FUN_02013B24

	thumb_func_start FUN_02013BD4
FUN_02013BD4: @ 0x02013BD4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	adds r7, r0, #0
	str r1, [sp]
	adds r5, r2, #0
	adds r6, r3, #0
	cmp r7, #0
	bne _02013BE8
	bl FUN_0202551C
_02013BE8:
	ldr r0, [sp]
	cmp r0, #0
	bne _02013BF2
	bl FUN_0202551C
_02013BF2:
	ldr r0, [sp]
	movs r4, #0
	str r0, [sp, #0x10]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	add r0, sp, #0x24
	strb r4, [r0]
	ldr r0, [sp]
	str r4, [sp, #0x2c]
	str r7, [sp, #0x30]
	cmp r0, #0
	beq _02013C50
	add r7, sp, #4
_02013C0E:
	ldr r0, [sp, #0xc]
	ldr r1, [sp]
	bl FUN_02013AF8
	lsls r1, r0, #1
	ldr r0, _02013C58 @ =_020F5F2C
	adds r0, r0, r1
	ldrb r0, [r0, #1]
	ldr r1, [sp, #4]
	adds r1, r1, r0
	str r1, [sp, #0x28]
	ldr r1, [sp, #0x10]
	subs r1, r1, r0
	str r1, [sp, #0x34]
	str r0, [sp, #0x10]
_02013C2C:
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r4, r4, #1
	bl FUN_02013B24
	cmp r0, #0
	beq _02013C2C
	add r2, sp, #0x28
	add r3, sp, #4
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [sp, #0x10]
	str r0, [sp]
	cmp r0, #0
	bne _02013C0E
_02013C50:
	adds r0, r4, #0
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02013C58: .4byte _020F5F2C
	thumb_func_end FUN_02013BD4

	thumb_func_start FUN_02013C5C
FUN_02013C5C: @ 0x02013C5C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x30]
	str r1, [sp, #0x14]
	str r0, [sp, #0x30]
	ldr r0, [sp, #0x34]
	adds r5, r2, #0
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x30]
	adds r6, r3, #0
	cmp r0, #1
	bne _02013C7E
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r1, [r0]
	b _02013C82
_02013C7E:
	ldr r0, _02013CC8 @ =0x04001000
	ldr r1, [r0]
_02013C82:
	ldr r0, _02013CCC @ =0x00300010
	adds r7, r1, #0
	ands r7, r0
	adds r0, r7, #0
	bl FUN_02022448
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x14]
	ldr r4, [r0, #0xc]
	cmp r4, r0
	beq _02013CC2
_02013C98:
	adds r0, r5, #0
	blx FUN_020B8008
	str r7, [sp]
	ldr r0, [sp, #0x30]
	str r6, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x34]
	ldr r3, [sp, #0x18]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_02013CD0
	adds r6, r0, #0
	ldr r4, [r4, #0xc]
	ldr r0, [sp, #0x14]
	adds r5, #0x24
	cmp r4, r0
	bne _02013C98
_02013CC2:
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	nop
_02013CC8: .4byte 0x04001000
_02013CCC: .4byte 0x00300010
	thumb_func_end FUN_02013C5C

	thumb_func_start FUN_02013CD0
FUN_02013CD0: @ 0x02013CD0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r6, r1, #0
	str r0, [sp, #8]
	ldr r0, [r6, #8]
	adds r5, r2, #0
	lsls r1, r0, #1
	ldr r0, _02013D74 @ =_020F5F2C
	ldrb r0, [r0, r1]
	str r0, [sp, #0x10]
	ldr r0, _02013D78 @ =_020F5F2D
	ldrb r0, [r0, r1]
	ldr r1, [sp, #0x10]
	adds r4, r1, #0
	muls r4, r0, r4
	str r0, [sp, #0xc]
	cmp r4, r3
	bge _02013CF6
	adds r4, r3, #0
_02013CF6:
	lsls r4, r4, #5
	ldr r0, [sp, #0x34]
	adds r1, r4, #0
	bl FUN_0201AACC
	adds r7, r0, #0
	ldr r0, [r6, #4]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	str r7, [sp, #4]
	ldr r0, [sp, #8]
	ldr r2, [sp, #0xc]
	ldr r3, [r6]
	bl FUN_02013A50
	adds r0, r7, #0
	adds r1, r4, #0
	blx FUN_020D2894
	ldr r0, [sp, #0x30]
	cmp r0, #1
	bne _02013D38
	ldr r6, [sp, #0x2c]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	blx FUN_020CFE74
	movs r0, #1
	str r6, [r5, #4]
	lsls r0, r0, #0x1a
	ldr r1, [r0]
	b _02013D4A
_02013D38:
	ldr r6, [sp, #0x2c]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	blx FUN_020CFECC
	ldr r0, _02013D7C @ =0x04001000
	str r6, [r5, #8]
	ldr r1, [r0]
_02013D4A:
	ldr r0, _02013D80 @ =0x00300010
	ands r0, r1
	str r0, [r5, #0x20]
	ldr r0, _02013D84 @ =0x0000FFFF
	str r0, [r5, #0xc]
	str r0, [r5, #0x10]
	movs r0, #3
	str r0, [r5, #0x14]
	movs r0, #0
	str r0, [r5, #0x18]
	movs r0, #1
	str r0, [r5, #0x1c]
	ldr r0, [sp, #0x28]
	str r0, [r5, #0x20]
	adds r0, r7, #0
	bl FUN_0201AB0C
	ldr r0, [sp, #0x2c]
	adds r0, r0, r4
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02013D74: .4byte _020F5F2C
_02013D78: .4byte _020F5F2D
_02013D7C: .4byte 0x04001000
_02013D80: .4byte 0x00300010
_02013D84: .4byte 0x0000FFFF
	thumb_func_end FUN_02013CD0

	thumb_func_start FUN_02013D88
FUN_02013D88: @ 0x02013D88
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r6, r2, #0
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r7, [sp, #0x30]
	cmp r3, #1
	bne _02013DA0
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r1, [r0]
	b _02013DA4
_02013DA0:
	ldr r0, _02013DD8 @ =0x04001000
	ldr r1, [r0]
_02013DA4:
	ldr r0, _02013DDC @ =0x00300010
	adds r5, r1, #0
	ands r5, r0
	adds r0, r5, #0
	bl FUN_02022448
	ldr r4, [r6, #0xc]
	str r0, [sp, #0x14]
	movs r3, #0
	cmp r4, r6
	beq _02013DD4
_02013DBA:
	ldr r0, [sp, #0x14]
	ldr r2, [sp, #0x10]
	str r0, [sp]
	str r5, [sp, #4]
	ldr r0, [sp, #0xc]
	str r7, [sp, #8]
	adds r1, r4, #0
	bl FUN_02013DE0
	ldr r4, [r4, #0xc]
	adds r3, r0, #0
	cmp r4, r6
	bne _02013DBA
_02013DD4:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02013DD8: .4byte 0x04001000
_02013DDC: .4byte 0x00300010
	thumb_func_end FUN_02013D88

	thumb_func_start FUN_02013DE0
FUN_02013DE0: @ 0x02013DE0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	ldr r1, [r6, #8]
	adds r7, r0, #0
	adds r0, r2, #0
	lsls r2, r1, #1
	ldr r1, _02013E1C @ =_020F5F2C
	adds r5, r3, #0
	ldrb r1, [r1, r2]
	ldr r3, _02013E20 @ =_020F5F2D
	ldrb r2, [r3, r2]
	adds r4, r1, #0
	ldr r3, [sp, #0x20]
	muls r4, r2, r4
	cmp r4, r3
	bge _02013E04
	adds r4, r3, #0
_02013E04:
	ldr r3, [r6, #4]
	adds r0, r0, r5
	str r3, [sp]
	str r0, [sp, #4]
	ldr r3, [r6]
	adds r0, r7, #0
	bl FUN_02013A50
	lsls r0, r4, #5
	adds r0, r5, r0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02013E1C: .4byte _020F5F2C
_02013E20: .4byte _020F5F2D
	thumb_func_end FUN_02013DE0

	thumb_func_start FUN_02013E24
FUN_02013E24: @ 0x02013E24
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r0, #0
	cmp r1, #1
	bne _02013E34
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r1, [r0]
	b _02013E38
_02013E34:
	ldr r0, _02013E6C @ =0x04001000
	ldr r1, [r0]
_02013E38:
	ldr r0, _02013E70 @ =0x00300010
	ands r0, r1
	bl FUN_02022448
	ldr r2, [r4, #0xc]
	movs r3, #0
	cmp r2, r4
	beq _02013E66
	ldr r1, _02013E74 @ =_020F5F2C
_02013E4A:
	ldr r5, [r2, #8]
	lsls r5, r5, #1
	adds r7, r1, r5
	ldrb r6, [r1, r5]
	ldrb r5, [r7, #1]
	muls r5, r6, r5
	cmp r5, r0
	bge _02013E5C
	adds r5, r0, #0
_02013E5C:
	ldr r2, [r2, #0xc]
	lsls r5, r5, #5
	adds r3, r3, r5
	cmp r2, r4
	bne _02013E4A
_02013E66:
	adds r0, r3, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02013E6C: .4byte 0x04001000
_02013E70: .4byte 0x00300010
_02013E74: .4byte _020F5F2C
	thumb_func_end FUN_02013E24

	thumb_func_start FUN_02013E78
FUN_02013E78: @ 0x02013E78
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	adds r0, r1, #0
	ldr r4, [r0, #0xc]
	str r1, [sp, #4]
	adds r7, r2, #0
	adds r6, r3, #0
	cmp r4, r0
	beq _02013EC8
	movs r5, #0
_02013E8E:
	ldr r0, [sp]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_02013EF0
	ldr r1, [r6]
	str r0, [r1, r5]
	ldr r0, [r6]
	ldr r0, [r0, r5]
	cmp r0, #0
	bne _02013EA8
	bl FUN_0202551C
_02013EA8:
	ldr r0, [r4]
	adds r7, #0x24
	lsls r1, r0, #3
	ldr r0, [r6]
	adds r0, r0, r5
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	lsls r1, r0, #3
	ldr r0, [r6]
	adds r0, r0, r5
	str r1, [r0, #8]
	ldr r4, [r4, #0xc]
	ldr r0, [sp, #4]
	adds r5, #0xc
	cmp r4, r0
	bne _02013E8E
_02013EC8:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02013E78

	thumb_func_start FUN_02013ECC
FUN_02013ECC: @ 0x02013ECC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _02013EEC
	adds r4, r6, #0
_02013EDA:
	ldr r0, [r5]
	ldr r0, [r0, r4]
	bl FUN_02024758
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0xc
	cmp r6, r0
	blt _02013EDA
_02013EEC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02013ECC

	thumb_func_start FUN_02013EF0
FUN_02013EF0: @ 0x02013EF0
	push {r4, r5, lr}
	sub sp, #0x44
	adds r5, r0, #0
	movs r0, #0
	str r2, [sp]
	str r0, [sp, #4]
	adds r4, r1, #0
	ldr r1, [r5, #0xc]
	str r1, [sp, #8]
	ldr r1, [r4, #8]
	ldr r2, [r5]
	lsls r1, r1, #2
	adds r1, r2, r1
	ldr r1, [r1, #0x30]
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	ldr r2, [r5, #0x20]
	add r1, sp, #0x20
	strb r2, [r1]
	ldr r1, [r5, #8]
	str r1, [sp, #0x24]
	add r1, sp, #0
	str r1, [sp, #0x28]
	ldr r1, [r5, #0x24]
	str r1, [sp, #0x38]
	ldr r1, [r5, #0x28]
	str r1, [sp, #0x3c]
	ldr r1, [r5, #0x2c]
	str r1, [sp, #0x40]
	str r0, [sp, #0x2c]
	str r0, [sp, #0x30]
	str r0, [sp, #0x34]
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _02013F4C
	bl FUN_020248AC
	adds r3, r0, #0
	ldm r3!, {r0, r1}
	add r2, sp, #0x2c
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
_02013F4C:
	ldr r1, [r4]
	ldr r2, [r5, #0x18]
	lsls r1, r1, #3
	adds r1, r2, r1
	ldr r0, [sp, #0x2c]
	lsls r1, r1, #0xc
	adds r0, r0, r1
	str r0, [sp, #0x2c]
	ldr r1, [r4, #4]
	ldr r2, [r5, #0x1c]
	lsls r1, r1, #3
	adds r1, r2, r1
	ldr r0, [sp, #0x30]
	lsls r1, r1, #0xc
	adds r0, r0, r1
	str r0, [sp, #0x30]
	add r0, sp, #0x24
	bl FUN_02024714
	add sp, #0x44
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02013EF0

	thumb_func_start FUN_02013F78
FUN_02013F78: @ 0x02013F78
	push {r4, lr}
	movs r1, #0x14
	bl FUN_0201AACC
	adds r4, r0, #0
	bne _02013F88
	bl FUN_0202551C
_02013F88:
	movs r0, #0
	str r0, [r4, #0xc]
	str r0, [r4, #0x10]
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02013F78

	thumb_func_start FUN_02013F94
FUN_02013F94: @ 0x02013F94
	push {r4, lr}
	adds r4, r0, #0
	bne _02013F9E
	bl FUN_0202551C
_02013F9E:
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02013F94

	thumb_func_start FUN_02013FA8
FUN_02013FA8: @ 0x02013FA8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	cmp r0, r5
	beq _02013FBE
_02013FB2:
	ldr r4, [r0, #0xc]
	bl FUN_02013F94
	adds r0, r4, #0
	cmp r4, r5
	bne _02013FB2
_02013FBE:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02013FA8

	thumb_func_start FUN_02013FC0
FUN_02013FC0: @ 0x02013FC0
	ldr r2, [r1, #0xc]
	str r2, [r0, #0xc]
	str r1, [r0, #0x10]
	ldr r2, [r1, #0xc]
	str r0, [r2, #0x10]
	str r0, [r1, #0xc]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02013FC0

	thumb_func_start FUN_02013FD0
FUN_02013FD0: @ 0x02013FD0
	ldr r3, _02013FD8 @ =FUN_02013728
	str r1, [r0, #8]
	bx r3
	nop
_02013FD8: .4byte FUN_02013728
	thumb_func_end FUN_02013FD0

	thumb_func_start FUN_02013FDC
FUN_02013FDC: @ 0x02013FDC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r6, [sp, #0x20]
	str r1, [sp, #4]
	adds r5, r2, #0
	adds r4, r3, #0
	str r0, [sp, #0x24]
	movs r7, #0
_02013FF0:
	ldr r1, [r4]
	ldr r0, [sp, #4]
	ldr r2, [r5]
	adds r0, r0, r1
	ldr r1, [sp]
	adds r1, r1, r2
	adds r2, r6, #0
	blx FUN_020E5AD8
	ldr r1, [r5]
	ldr r0, [sp, #0x24]
	adds r7, r7, #1
	adds r0, r1, r0
	str r0, [r5]
	ldr r0, [r4]
	adds r0, r0, r6
	str r0, [r4]
	cmp r7, #8
	blt _02013FF0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02013FDC

	thumb_func_start FUN_0201401C
FUN_0201401C: @ 0x0201401C
	push {r4, r5, r6, lr}
	adds r5, r3, #0
	bl FUN_02007524
	adds r4, r0, #0
	bne _0201402C
	bl FUN_0202551C
_0201402C:
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020B70A8
	adds r6, r0, #0
	cmp r5, #0
	bne _0201403E
	bl FUN_0202551C
_0201403E:
	cmp r6, #0
	bne _02014046
	bl FUN_0202551C
_02014046:
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0201401C

	thumb_func_start FUN_02014050
FUN_02014050: @ 0x02014050
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	ldr r4, [sp, #0x40]
	str r0, [sp, #8]
	adds r6, r0, r2
	ldrh r0, [r4, #2]
	str r1, [sp, #0xc]
	adds r5, r3, #0
	cmp r0, r6
	bge _02014068
	bl FUN_0202551C
_02014068:
	ldr r0, [sp, #0xc]
	ldrh r1, [r4]
	adds r0, r0, r5
	str r0, [sp, #0x14]
	cmp r1, r0
	bge _02014078
	bl FUN_0202551C
_02014078:
	ldr r0, [r4, #0x14]
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x1c]
	ldrh r0, [r4, #2]
	lsls r7, r0, #2
	ldr r0, [sp, #0xc]
	adds r1, r0, #0
	muls r1, r7, r1
	ldr r0, [sp, #8]
	str r1, [sp, #0x18]
	lsls r1, r0, #2
	ldr r0, [sp, #0x18]
	str r1, [sp, #0x10]
	adds r0, r1, r0
	str r0, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bge _020140E2
_020140A4:
	ldr r4, [sp, #8]
	adds r0, r4, #0
	cmp r0, r6
	bge _020140D0
	ldr r0, [sp, #0x18]
	lsls r1, r0, #3
	ldr r0, [sp, #0x10]
	adds r5, r0, r1
_020140B4:
	str r5, [sp, #0x28]
	movs r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x1c]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl FUN_02013FDC
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, r6
	blt _020140B4
_020140D0:
	ldr r0, [sp, #0x18]
	adds r0, r0, r7
	str r0, [sp, #0x18]
	ldr r0, [sp, #0xc]
	adds r1, r0, #1
	ldr r0, [sp, #0x14]
	str r1, [sp, #0xc]
	cmp r1, r0
	blt _020140A4
_020140E2:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02014050

	thumb_func_start FUN_020140E8
FUN_020140E8: @ 0x020140E8
	push {r4, r5}
	sub sp, #8
	ldr r2, _02014120 @ =_020F5F44
	add r1, sp, #0
	ldr r3, [r2]
	ldr r2, [r2, #4]
	str r3, [sp]
	str r2, [sp, #4]
	ldr r2, _02014124 @ =0x000001EF
	movs r5, #0
	adds r3, r2, #0
_020140FE:
	ldr r4, [r1]
	cmp r4, r3
	beq _02014118
	cmp r4, r0
	bne _02014110
	add sp, #8
	movs r0, #1
	pop {r4, r5}
	bx lr
_02014110:
	adds r5, r5, #1
	adds r1, r1, #4
	cmp r5, r2
	blt _020140FE
_02014118:
	movs r0, #0
	add sp, #8
	pop {r4, r5}
	bx lr
	.align 2, 0
_02014120: .4byte _020F5F44
_02014124: .4byte 0x000001EF
	thumb_func_end FUN_020140E8

	thumb_func_start FUN_02014128
FUN_02014128: @ 0x02014128
	push {r4, r5, lr}
	sub sp, #0xc
	adds r4, r3, #0
	movs r3, #0
	str r3, [sp, #8]
	add r3, sp, #8
	adds r5, r0, #0
	bl FUN_0201401C
	ldr r0, [sp, #8]
	adds r1, r5, #0
	ldr r0, [r0, #0x14]
	bl FUN_02009D28
	ldr r0, [sp, #0x34]
	bl FUN_020140E8
	ldr r1, [sp, #0x30]
	cmp r1, #2
	bne _02014160
	cmp r0, #1
	bne _02014160
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x28]
	ldr r0, [r0, #0x14]
	ldr r2, [sp, #0x2c]
	bl FUN_02009B60
_02014160:
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x18]
	str r0, [sp]
	ldr r0, [sp, #0x24]
	ldr r2, [sp, #0x1c]
	str r0, [sp, #4]
	ldr r3, [sp, #0x20]
	adds r0, r4, #0
	bl FUN_02014050
	add sp, #0xc
	pop {r4, r5, pc}
	thumb_func_end FUN_02014128

	thumb_func_start FUN_02014178
FUN_02014178: @ 0x02014178
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r7, r1, #0
	adds r5, r2, #0
	ldr r2, [sp, #0x3c]
	ldr r1, [sp, #0x40]
	adds r6, r0, #0
	muls r1, r2, r1
	adds r0, r5, #0
	lsls r1, r1, #5
	str r3, [sp, #0x20]
	bl FUN_0201AA8C
	adds r4, r0, #0
	ldr r0, [sp, #0x38]
	ldr r3, [sp, #0x20]
	str r0, [sp]
	ldr r0, [sp, #0x3c]
	adds r1, r7, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x40]
	adds r2, r5, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x44]
	str r4, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x4c]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x1c]
	adds r0, r6, #0
	bl FUN_02014128
	adds r0, r4, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02014178

	thumb_func_start FUN_020141C4
FUN_020141C4: @ 0x020141C4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	str r3, [sp, #8]
	ldr r3, [sp, #0x48]
	adds r4, r0, #0
	str r3, [sp, #0x48]
	movs r3, #0
	str r3, [sp, #0x2c]
	bl FUN_02007524
	str r0, [sp, #0x20]
	cmp r0, #0
	bne _020141E2
	bl FUN_0202551C
_020141E2:
	ldr r0, [sp, #0x20]
	add r1, sp, #0x2c
	blx FUN_020B70A8
	cmp r0, #0
	bne _020141F2
	bl FUN_0202551C
_020141F2:
	ldr r1, [sp, #0x4c]
	ldr r0, [sp, #8]
	adds r6, r0, r1
	ldr r0, [sp, #0x2c]
	ldrh r0, [r0, #2]
	cmp r0, r6
	bge _02014204
	bl FUN_0202551C
_02014204:
	ldr r1, [sp, #0x50]
	ldr r0, [sp, #0x48]
	adds r0, r0, r1
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	ldrh r1, [r0]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bge _0201421A
	bl FUN_0202551C
_0201421A:
	ldr r0, [sp, #0x2c]
	adds r1, r4, #0
	ldr r0, [r0, #0x14]
	str r0, [sp, #0x1c]
	bl FUN_02009D28
	ldr r0, [sp, #0x54]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x2c]
	ldrh r0, [r0, #2]
	lsls r7, r0, #2
	ldr r0, [sp, #0x48]
	adds r1, r0, #0
	muls r1, r7, r1
	ldr r0, [sp, #8]
	str r1, [sp, #0x14]
	lsls r1, r0, #2
	ldr r0, [sp, #0x14]
	str r1, [sp, #0xc]
	adds r0, r1, r0
	str r0, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x48]
	ldr r0, [sp, #0x10]
	cmp r1, r0
	bge _0201428E
_02014250:
	ldr r4, [sp, #8]
	adds r0, r4, #0
	cmp r0, r6
	bge _0201427C
	ldr r0, [sp, #0x14]
	lsls r1, r0, #3
	ldr r0, [sp, #0xc]
	adds r5, r0, r1
_02014260:
	str r5, [sp, #0x28]
	movs r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x18]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl FUN_02013FDC
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, r6
	blt _02014260
_0201427C:
	ldr r0, [sp, #0x14]
	adds r0, r0, r7
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x48]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp, #0x48]
	cmp r1, r0
	blt _02014250
_0201428E:
	ldr r0, [sp, #0x20]
	bl FUN_0201AB0C
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020141C4

	thumb_func_start FUN_02014298
FUN_02014298: @ 0x02014298
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r1, #0
	adds r5, r2, #0
	ldr r2, [sp, #0x2c]
	ldr r1, [sp, #0x30]
	adds r6, r0, #0
	muls r1, r2, r1
	adds r0, r5, #0
	lsls r1, r1, #5
	str r3, [sp, #0x10]
	bl FUN_0201AA8C
	adds r4, r0, #0
	ldr r0, [sp, #0x28]
	ldr r3, [sp, #0x10]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	adds r1, r7, #0
	str r0, [sp, #4]
	ldr r0, [sp, #0x30]
	adds r2, r5, #0
	str r0, [sp, #8]
	adds r0, r6, #0
	str r4, [sp, #0xc]
	bl FUN_020141C4
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02014298

	thumb_func_start FUN_020142D4
FUN_020142D4: @ 0x020142D4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x44]
	ldr r1, [sp, #0x38]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x48]
	str r2, [sp, #4]
	str r0, [sp, #0x14]
	adds r0, r2, #0
	adds r7, r0, r1
	ldr r1, [sp, #0x3c]
	adds r0, r3, #0
	adds r0, r0, r1
	adds r1, r3, #0
	str r3, [sp, #8]
	ldr r5, [sp, #0x40]
	str r0, [sp, #0x10]
	cmp r1, r0
	bge _0201434C
	adds r0, r3, #0
	lsls r0, r0, #5
	str r0, [sp, #0xc]
	adds r0, r2, #0
	lsls r0, r0, #5
	str r0, [sp, #0x1c]
_02014308:
	ldr r6, [sp, #4]
	adds r0, r6, #0
	cmp r0, r7
	bge _0201433A
	ldr r1, [sp]
	ldr r0, [sp, #0xc]
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, [sp, #0x1c]
	adds r4, r0, r2
_0201431C:
	ldr r1, [r5]
	ldr r0, [sp, #0x14]
	movs r2, #0x20
	adds r0, r0, r1
	ldr r1, [sp, #0x18]
	adds r1, r1, r4
	blx FUN_020E5AD8
	ldr r0, [r5]
	adds r6, r6, #1
	adds r0, #0x20
	str r0, [r5]
	adds r4, #0x20
	cmp r6, r7
	blt _0201431C
_0201433A:
	ldr r0, [sp, #0xc]
	adds r0, #0x20
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	adds r1, r0, #1
	ldr r0, [sp, #0x10]
	str r1, [sp, #8]
	cmp r1, r0
	blt _02014308
_0201434C:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020142D4

	thumb_func_start FUN_02014350
FUN_02014350: @ 0x02014350
	push {r3, r4, lr}
	sub sp, #0x14
	adds r4, r2, #0
	ldr r2, [r4, #8]
	str r2, [sp]
	ldr r2, [r4, #0xc]
	str r2, [sp, #4]
	ldr r2, [sp, #0x20]
	str r3, [sp, #8]
	str r2, [sp, #0xc]
	ldr r2, [sp, #0x24]
	str r2, [sp, #0x10]
	ldr r2, [r4]
	ldr r3, [r4, #4]
	bl FUN_020142D4
	add sp, #0x14
	pop {r3, r4, pc}
	thumb_func_end FUN_02014350

	thumb_func_start FUN_02014374
FUN_02014374: @ 0x02014374
	push {r4, r5, r6, r7, lr}
	sub sp, #0x7c
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x9c]
	mov ip, r3
	adds r5, r2, #0
	ldr r6, [sp, #0x94]
	ldr r7, [sp, #0x98]
	ldr r3, _020143DC @ =_020F5F6C
	str r1, [sp, #0x10]
	str r0, [sp, #0x9c]
	add r2, sp, #0x1c
	movs r4, #0xc
_0201438E:
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	subs r4, r4, #1
	bne _0201438E
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x90]
	ldr r1, [sp, #0x10]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0xc]
	adds r2, r5, #0
	mov r3, ip
	str r7, [sp, #8]
	bl FUN_02014298
	str r0, [sp, #0x14]
	movs r4, #0
	add r5, sp, #0x1c
_020143B4:
	ldr r0, [sp, #0x14]
	adds r1, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0x9c]
	adds r2, r5, #0
	str r0, [sp, #4]
	adds r0, r6, #0
	add r3, sp, #0x18
	bl FUN_02014350
	adds r4, r4, #1
	adds r5, #0x10
	cmp r4, #6
	blt _020143B4
	ldr r0, [sp, #0x14]
	bl FUN_0201AB0C
	add sp, #0x7c
	pop {r4, r5, r6, r7, pc}
	nop
_020143DC: .4byte _020F5F6C
	thumb_func_end FUN_02014374

	thumb_func_start FUN_020143E0
FUN_020143E0: @ 0x020143E0
	push {r4, lr}
	sub sp, #0x10
	ldr r4, [r3, #4]
	str r4, [sp]
	ldr r4, [r3, #8]
	str r4, [sp, #4]
	ldr r4, [r3, #0xc]
	str r4, [sp, #8]
	ldr r4, [sp, #0x18]
	str r4, [sp, #0xc]
	ldr r3, [r3]
	bl FUN_02014374
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020143E0

	thumb_func_start FUN_02014400
FUN_02014400: @ 0x02014400
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r4, _02014428 @ =_020F5F4C
	adds r5, r3, #0
	add r3, sp, #4
	adds r7, r0, #0
	mov ip, r1
	adds r6, r3, #0
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	adds r0, r7, #0
	mov r1, ip
	adds r3, r6, #0
	str r5, [sp]
	bl FUN_020143E0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02014428: .4byte _020F5F4C
	thumb_func_end FUN_02014400

	thumb_func_start FUN_0201442C
FUN_0201442C: @ 0x0201442C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	movs r1, #0x32
	adds r7, r2, #0
	adds r5, r0, #0
	adds r0, r7, #0
	lsls r1, r1, #6
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r4, #0
	bl FUN_02014400
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201442C

	thumb_func_start FUN_02014450
FUN_02014450: @ 0x02014450
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r7, #0
	movs r1, #0x20
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_02007524
	add r1, sp, #0
	adds r5, r0, #0
	blx FUN_020B7140
	cmp r0, #1
	beq _0201447C
	bl FUN_0202551C
_0201447C:
	ldr r0, [sp]
	adds r1, r4, #0
	ldr r0, [r0, #0xc]
	movs r2, #0x20
	blx FUN_020D47B8
	adds r0, r5, #0
	bl FUN_0201AB0C
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02014450

	thumb_func_start FUN_02014494
FUN_02014494: @ 0x02014494
	push {r4, r5, r6, r7, lr}
	sub sp, #0x8c
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0xac]
	mov ip, r3
	adds r5, r2, #0
	ldr r6, [sp, #0xa4]
	ldr r7, [sp, #0xa8]
	ldr r3, _0201450C @ =_020F5FCC
	str r1, [sp, #0x20]
	str r0, [sp, #0xac]
	add r2, sp, #0x2c
	movs r4, #0xc
_020144AE:
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	subs r4, r4, #1
	bne _020144AE
	movs r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xa0]
	ldr r1, [sp, #0x20]
	str r0, [sp]
	str r6, [sp, #4]
	ldr r0, [sp, #0xb0]
	str r7, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0xb4]
	adds r2, r5, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xb8]
	mov r3, ip
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xbc]
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	bl FUN_02014178
	str r0, [sp, #0x24]
	movs r4, #0
	add r5, sp, #0x2c
_020144E4:
	ldr r0, [sp, #0x24]
	adds r1, r7, #0
	str r0, [sp]
	ldr r0, [sp, #0xac]
	adds r2, r5, #0
	str r0, [sp, #4]
	adds r0, r6, #0
	add r3, sp, #0x28
	bl FUN_02014350
	adds r4, r4, #1
	adds r5, #0x10
	cmp r4, #6
	blt _020144E4
	ldr r0, [sp, #0x24]
	bl FUN_0201AB0C
	add sp, #0x8c
	pop {r4, r5, r6, r7, pc}
	nop
_0201450C: .4byte _020F5FCC
	thumb_func_end FUN_02014494

	thumb_func_start FUN_02014510
FUN_02014510: @ 0x02014510
	push {r4, lr}
	sub sp, #0x20
	ldr r4, [r3, #4]
	str r4, [sp]
	ldr r4, [r3, #8]
	str r4, [sp, #4]
	ldr r4, [r3, #0xc]
	str r4, [sp, #8]
	ldr r4, [sp, #0x28]
	str r4, [sp, #0xc]
	ldr r4, [sp, #0x2c]
	str r4, [sp, #0x10]
	ldr r4, [sp, #0x30]
	str r4, [sp, #0x14]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0x18]
	ldr r4, [sp, #0x38]
	str r4, [sp, #0x1c]
	ldr r3, [r3]
	bl FUN_02014494
	add sp, #0x20
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02014510

	thumb_func_start FUN_02014540
FUN_02014540: @ 0x02014540
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	ldr r4, _02014578 @ =_020F5F5C
	adds r5, r3, #0
	add r3, sp, #0x14
	adds r7, r0, #0
	mov ip, r1
	adds r6, r3, #0
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [sp, #0x38]
	str r5, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x3c]
	mov r1, ip
	str r0, [sp, #8]
	ldr r0, [sp, #0x40]
	adds r3, r6, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x44]
	str r0, [sp, #0x10]
	adds r0, r7, #0
	bl FUN_02014510
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02014578: .4byte _020F5F5C
	thumb_func_end FUN_02014540

	thumb_func_start FUN_0201457C
FUN_0201457C: @ 0x0201457C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #0x10]
	movs r1, #0x32
	adds r5, r2, #0
	adds r7, r0, #0
	adds r0, r5, #0
	lsls r1, r1, #6
	adds r4, r3, #0
	bl FUN_0201AA8C
	adds r6, r0, #0
	ldr r0, [sp, #0x28]
	str r4, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0x10]
	str r0, [sp, #8]
	ldr r0, [sp, #0x30]
	adds r2, r5, #0
	str r0, [sp, #0xc]
	adds r0, r7, #0
	adds r3, r6, #0
	bl FUN_02014540
	adds r0, r6, #0
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201457C

	thumb_func_start FUN_020145B4
FUN_020145B4: @ 0x020145B4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	str r0, [sp, #8]
	ldr r0, [sp, #0x48]
	lsls r7, r1, #2
	str r0, [sp, #0x20]
	adds r0, r3, #0
	adds r1, r0, #0
	muls r1, r7, r1
	str r1, [sp, #0x1c]
	adds r0, r2, #0
	lsls r1, r0, #2
	ldr r0, [sp, #0x1c]
	str r1, [sp, #0x14]
	adds r0, r1, r0
	str r0, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0x24]
	ldr r1, [sp, #0x44]
	adds r0, r3, #0
	adds r0, r0, r1
	adds r1, r3, #0
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	str r0, [sp, #0x18]
	cmp r1, r0
	bge _0201462E
	ldr r1, [sp, #0x40]
	adds r0, r2, #0
	adds r6, r0, r1
_020145F0:
	ldr r4, [sp, #0xc]
	adds r0, r4, #0
	cmp r0, r6
	bge _0201461C
	ldr r0, [sp, #0x1c]
	lsls r1, r0, #3
	ldr r0, [sp, #0x14]
	adds r5, r0, r1
_02014600:
	str r5, [sp, #0x28]
	movs r0, #4
	str r0, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp, #0x20]
	add r2, sp, #0x28
	add r3, sp, #0x24
	str r7, [sp, #4]
	bl FUN_02013FDC
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, r6
	blt _02014600
_0201461C:
	ldr r0, [sp, #0x1c]
	adds r0, r0, r7
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x10]
	adds r1, r0, #1
	ldr r0, [sp, #0x18]
	str r1, [sp, #0x10]
	cmp r1, r0
	blt _020145F0
_0201462E:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020145B4

	thumb_func_start FUN_02014634
FUN_02014634: @ 0x02014634
	push {r3, lr}
	blx FUN_020DB9C0
	movs r0, #0
	ldr r3, _02014664 @ =0x021D1048
	adds r1, r0, #0
	movs r2, #5
_02014642:
	stm r3!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _02014642
	stm r3!, {r0, r1}
	ldr r0, _02014668 @ =0x021D1048
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	ldr r0, _02014664 @ =0x021D1048
	bl FUN_020146CC
	ldr r0, _02014664 @ =0x021D1048
	bl FUN_02014700
	pop {r3, pc}
	.align 2, 0
_02014664: .4byte 0x021D1048
_02014668: .4byte 0x021D1048
	thumb_func_end FUN_02014634

	thumb_func_start FUN_0201466C
FUN_0201466C: @ 0x0201466C
	push {r3, lr}
	ldr r0, _0201468C @ =0x021D1048
	ldr r1, [r0, #4]
	cmp r1, #0
	bne _0201468A
	ldr r1, [r0, #8]
	adds r1, r1, #1
	str r1, [r0, #8]
	cmp r1, #0xa
	ble _0201468A
	movs r1, #0
	str r1, [r0, #8]
	ldr r0, _02014690 @ =0x021D1048
	bl FUN_020146CC
_0201468A:
	pop {r3, pc}
	.align 2, 0
_0201468C: .4byte 0x021D1048
_02014690: .4byte 0x021D1048
	thumb_func_end FUN_0201466C

	thumb_func_start FUN_02014694
FUN_02014694: @ 0x02014694
	push {r4, lr}
	adds r4, r1, #0
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _020146A2
	bl FUN_0202551C
_020146A2:
	adds r3, r4, #0
	movs r0, #1
	adds r2, r4, #0
	adds r3, #0x2c
	str r0, [r4]
	ldm r3!, {r0, r1}
	adds r2, #0x10
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	adds r3, r4, #0
	adds r3, #0x3c
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x20
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	movs r0, #0
	str r0, [r4, #4]
	pop {r4, pc}
	thumb_func_end FUN_02014694

	thumb_func_start FUN_020146CC
FUN_020146CC: @ 0x020146CC
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #1
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r1, r4, #0
	ldr r2, _020146F0 @ =FUN_02014694
	adds r0, #0x2c
	adds r1, #0x3c
	adds r3, r4, #0
	blx FUN_020DBB80
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _020146EE
	bl FUN_0202551C
_020146EE:
	pop {r4, pc}
	.align 2, 0
_020146F0: .4byte FUN_02014694
	thumb_func_end FUN_020146CC

	thumb_func_start FUN_020146F4
FUN_020146F4: @ 0x020146F4
	movs r3, #3
	str r3, [r0, #0x48]
	str r1, [r0, #0x4c]
	str r2, [r0, #0x50]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020146F4

	thumb_func_start FUN_02014700
FUN_02014700: @ 0x02014700
	movs r1, #0
	str r1, [r0, #0x48]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02014700

	thumb_func_start FUN_02014708
FUN_02014708: @ 0x02014708
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0201473C @ =0x021D1048
	adds r4, r1, #0
	ldr r0, [r0]
	cmp r0, #1
	beq _0201471A
	bl FUN_0202551C
_0201471A:
	ldr r2, _02014740 @ =0x021D1058
	ldm r2!, {r0, r1}
	stm r5!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r5!, {r0, r1}
	ldr r0, _0201473C @ =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _02014730
	ldr r2, _02014744 @ =0x021D1094
	b _02014732
_02014730:
	ldr r2, _02014748 @ =0x021D1068
_02014732:
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201473C: .4byte 0x021D1048
_02014740: .4byte 0x021D1058
_02014744: .4byte 0x021D1094
_02014748: .4byte 0x021D1068
	thumb_func_end FUN_02014708

	thumb_func_start FUN_0201474C
FUN_0201474C: @ 0x0201474C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _02014774 @ =0x021D1048
	ldr r0, [r0]
	cmp r0, #1
	beq _0201475C
	bl FUN_0202551C
_0201475C:
	ldr r0, _02014774 @ =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _02014768
	ldr r2, _02014778 @ =0x021D1094
	b _0201476A
_02014768:
	ldr r2, _0201477C @ =0x021D1068
_0201476A:
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	pop {r4, pc}
	.align 2, 0
_02014774: .4byte 0x021D1048
_02014778: .4byte 0x021D1094
_0201477C: .4byte 0x021D1068
	thumb_func_end FUN_0201474C

	thumb_func_start FUN_02014780
FUN_02014780: @ 0x02014780
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0201479C @ =0x021D1048
	ldr r0, [r0]
	cmp r0, #1
	beq _02014790
	bl FUN_0202551C
_02014790:
	ldr r2, _020147A0 @ =0x021D1058
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	pop {r4, pc}
	.align 2, 0
_0201479C: .4byte 0x021D1048
_020147A0: .4byte 0x021D1058
	thumb_func_end FUN_02014780

	thumb_func_start FUN_020147A4
FUN_020147A4: @ 0x020147A4
	push {r3, r4}
	ldr r0, _020147D0 @ =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _020147B2
	ldr r4, _020147D4 @ =0x021D1094
	b _020147B4
_020147B2:
	ldr r4, _020147D8 @ =0x021D1068
_020147B4:
	ldr r1, [r4, #4]
	movs r0, #0x3c
	adds r2, r1, #0
	muls r2, r0, r2
	movs r0, #0xe1
	ldr r1, [r4]
	lsls r0, r0, #4
	muls r0, r1, r0
	ldr r3, [r4, #8]
	adds r0, r2, r0
	adds r0, r3, r0
	pop {r3, r4}
	bx lr
	nop
_020147D0: .4byte 0x021D1048
_020147D4: .4byte 0x021D1094
_020147D8: .4byte 0x021D1068
	thumb_func_end FUN_020147A4

	thumb_func_start FUN_020147DC
FUN_020147DC: @ 0x020147DC
	ldr r0, _020147F0 @ =0x021D1048
	ldr r0, [r0, #0x48]
	cmp r0, #3
	bne _020147E8
	ldr r1, _020147F4 @ =0x021D1094
	b _020147EA
_020147E8:
	ldr r1, _020147F8 @ =0x021D1068
_020147EA:
	ldr r3, _020147FC @ =FUN_020DC330
	ldr r0, _02014800 @ =0x021D1058
	bx r3
	.align 2, 0
_020147F0: .4byte 0x021D1048
_020147F4: .4byte 0x021D1094
_020147F8: .4byte 0x021D1068
_020147FC: .4byte FUN_020DC330
_02014800: .4byte 0x021D1058
	thumb_func_end FUN_020147DC

	thumb_func_start FUN_02014804
FUN_02014804: @ 0x02014804
	push {r3, lr}
	bl FUN_0201481C
	cmp r0, #3
	beq _02014812
	cmp r0, #4
	bne _02014816
_02014812:
	movs r0, #1
	pop {r3, pc}
_02014816:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02014804

	thumb_func_start FUN_0201481C
FUN_0201481C: @ 0x0201481C
	push {lr}
	sub sp, #0xc
	add r0, sp, #0
	bl FUN_0201474C
	ldr r0, [sp]
	bl FUN_02014844
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_0201481C

	thumb_func_start FUN_02014830
FUN_02014830: @ 0x02014830
	push {lr}
	sub sp, #0xc
	add r0, sp, #0
	bl FUN_0201474C
	ldr r0, [sp]
	bl FUN_0201485C
	add sp, #0xc
	pop {pc}
	thumb_func_end FUN_02014830

	thumb_func_start FUN_02014844
FUN_02014844: @ 0x02014844
	push {r4, lr}
	adds r4, r0, #0
	bmi _0201484E
	cmp r4, #0x18
	blt _02014852
_0201484E:
	bl FUN_0202551C
_02014852:
	ldr r0, _02014858 @ =_020F6060
	ldrb r0, [r0, r4]
	pop {r4, pc}
	.align 2, 0
_02014858: .4byte _020F6060
	thumb_func_end FUN_02014844

	thumb_func_start FUN_0201485C
FUN_0201485C: @ 0x0201485C
	push {r3, lr}
	bl FUN_02014844
	cmp r0, #0
	beq _02014870
	cmp r0, #1
	beq _02014874
	cmp r0, #2
	beq _02014874
	b _02014878
_02014870:
	movs r0, #0
	pop {r3, pc}
_02014874:
	movs r0, #1
	pop {r3, pc}
_02014878:
	movs r0, #2
	pop {r3, pc}
	thumb_func_end FUN_0201485C

	thumb_func_start FUN_0201487C
FUN_0201487C: @ 0x0201487C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r6, r3, #0
	ldr r3, _020148E8 @ =_020F6038
	adds r4, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	add r2, sp, #0x14
	ldm r3!, {r0, r1}
	str r2, [sp]
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r3, _020148EC @ =_020F602C
	add r2, sp, #8
	ldm r3!, {r0, r1}
	str r2, [sp, #4]
	stm r2!, {r0, r1}
	ldr r0, [r3]
	ldr r1, [sp, #4]
	str r0, [r2]
	ldr r0, [sp]
	blx FUN_020DC330
	adds r2, r1, #0
	adds r3, r0, #0
	movs r1, #0
	ldr r0, _020148F0 @ =0xBC19137F
	eors r1, r2
	eors r0, r3
	orrs r0, r1
	beq _020148C0
	bl FUN_0202551C
_020148C0:
	subs r0, r4, r5
	mov ip, r7
	mov r0, ip
	sbcs r0, r6
	bge _020148D4
	subs r0, r5, r4
	sbcs r6, r7
	add sp, #0x24
	adds r1, r6, #0
	pop {r4, r5, r6, r7, pc}
_020148D4:
	ldr r0, _020148F0 @ =0xBC19137F
	movs r1, #0
	subs r0, r0, r4
	sbcs r1, r7
	adds r0, r5, r0
	adcs r6, r1
	adds r1, r6, #0
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	nop
_020148E8: .4byte _020F6038
_020148EC: .4byte _020F602C
_020148F0: .4byte 0xBC19137F
	thumb_func_end FUN_0201487C

	thumb_func_start FUN_020148F4
FUN_020148F4: @ 0x020148F4
	ldr r3, _020148FC @ =FUN_02014700
	ldr r0, _02014900 @ =0x021D1048
	bx r3
	nop
_020148FC: .4byte FUN_02014700
_02014900: .4byte 0x021D1048
	thumb_func_end FUN_020148F4

	thumb_func_start FUN_02014904
FUN_02014904: @ 0x02014904
	adds r3, r0, #0
	adds r2, r1, #0
	adds r1, r3, #0
	ldr r3, _02014910 @ =FUN_020146F4
	ldr r0, _02014914 @ =0x021D1048
	bx r3
	.align 2, 0
_02014910: .4byte FUN_020146F4
_02014914: .4byte 0x021D1048
	thumb_func_end FUN_02014904

	thumb_func_start FUN_02014918
FUN_02014918: @ 0x02014918
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #1
	adds r0, r4, #0
	lsls r1, r1, #3
	bl FUN_0201AA8C
	cmp r0, #0
	beq _0201494E
	movs r2, #0
	cmp r5, #0
	bls _02014942
	adds r3, r0, #0
	adds r1, r2, #0
_02014936:
	str r1, [r3]
	str r1, [r3, #4]
	adds r2, r2, #1
	adds r3, #8
	cmp r2, r5
	blo _02014936
_02014942:
	movs r1, #0
	lsls r2, r2, #3
	mvns r1, r1
	str r1, [r0, r2]
	adds r1, r0, r2
	str r4, [r1, #4]
_0201494E:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02014918

	thumb_func_start FUN_02014950
FUN_02014950: @ 0x02014950
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020149E0
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02014950

	thumb_func_start FUN_02014960
FUN_02014960: @ 0x02014960
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	add r1, sp, #0
	adds r7, r2, #0
	adds r5, r3, #0
	bl FUN_020149A4
	adds r4, r0, #0
	beq _0201497E
	adds r0, r6, #0
	adds r1, r7, #0
	bl FUN_0200BBA0
	str r0, [r4]
	str r5, [r4, #4]
_0201497E:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02014960

	thumb_func_start FUN_02014980
FUN_02014980: @ 0x02014980
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r1, #0
	add r1, sp, #0
	adds r5, r2, #0
	bl FUN_020149A4
	adds r4, r0, #0
	beq _0201499E
	ldr r1, [sp]
	adds r0, r6, #0
	bl FUN_0202642C
	str r0, [r4]
	str r5, [r4, #4]
_0201499E:
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02014980

	thumb_func_start FUN_020149A4
FUN_020149A4: @ 0x020149A4
	push {r4, lr}
	ldr r3, [r0]
	cmp r3, #0
	beq _020149C4
	movs r2, #0
	mvns r2, r2
_020149B0:
	cmp r3, r2
	bne _020149BC
	bl FUN_0202551C
	movs r0, #0
	pop {r4, pc}
_020149BC:
	adds r0, #8
	ldr r3, [r0]
	cmp r3, #0
	bne _020149B0
_020149C4:
	movs r2, #0
	mvns r2, r2
	adds r4, r0, #0
	cmp r3, r2
	beq _020149D6
_020149CE:
	adds r0, #8
	ldr r3, [r0]
	cmp r3, r2
	bne _020149CE
_020149D6:
	ldr r0, [r0, #4]
	str r0, [r1]
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020149A4

	thumb_func_start FUN_020149E0
FUN_020149E0: @ 0x020149E0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r0, #0
	ldr r1, [r5]
	mvns r0, r0
	cmp r1, r0
	beq _02014A06
	movs r4, #0
	adds r6, r0, #0
_020149F2:
	ldr r0, [r5]
	cmp r0, #0
	beq _02014A06
	bl FUN_02026380
	str r4, [r5]
	adds r5, #8
	ldr r0, [r5]
	cmp r0, r6
	bne _020149F2
_02014A06:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020149E0

	thumb_func_start FUN_02014A08
FUN_02014A08: @ 0x02014A08
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	movs r1, #0xc
	adds r4, r2, #0
	bl FUN_0201AA8C
	movs r1, #0
	strb r1, [r0]
	strb r1, [r0, #1]
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	strb r1, [r0, #4]
	strb r1, [r0, #5]
	strb r1, [r0, #6]
	strb r1, [r0, #7]
	strb r1, [r0, #8]
	strb r1, [r0, #9]
	strb r1, [r0, #0xa]
	strb r1, [r0, #0xb]
	movs r1, #1
	strb r1, [r0, #9]
	str r5, [r0]
	str r4, [r0, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02014A08

	thumb_func_start FUN_02014A38
FUN_02014A38: @ 0x02014A38
	push {r4, lr}
	adds r4, r0, #0
	bne _02014A42
	bl FUN_0202551C
_02014A42:
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02014A38

	thumb_func_start FUN_02014A4C
FUN_02014A4C: @ 0x02014A4C
	push {r4, lr}
	adds r4, r0, #0
	bne _02014A56
	bl FUN_0202551C
_02014A56:
	ldrb r0, [r4, #8]
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02014A4C

	thumb_func_start FUN_02014A60
FUN_02014A60: @ 0x02014A60
	push {r4, lr}
	adds r4, r0, #0
	bne _02014A6A
	bl FUN_0202551C
_02014A6A:
	ldrb r1, [r4, #8]
	movs r0, #1
	eors r0, r1
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02014A60

	thumb_func_start FUN_02014A78
FUN_02014A78: @ 0x02014A78
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02014A86
	bl FUN_0202551C
_02014A86:
	strb r4, [r5, #9]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02014A78

	thumb_func_start FUN_02014A8C
FUN_02014A8C: @ 0x02014A8C
	cmp r0, #0
	beq _02014A9E
	ldrb r1, [r0, #9]
	cmp r1, #0
	beq _02014A9E
	ldrb r2, [r0, #8]
	movs r1, #1
	eors r1, r2
	strb r1, [r0, #8]
_02014A9E:
	bx lr
	thumb_func_end FUN_02014A8C

	thumb_func_start FUN_02014AA0
FUN_02014AA0: @ 0x02014AA0
	push {r3, lr}
	movs r0, #0
	blx FUN_020D4294
	movs r0, #0
	blx FUN_020D422C
	pop {r3, pc}
	thumb_func_end FUN_02014AA0

	thumb_func_start FUN_02014AB0
FUN_02014AB0: @ 0x02014AB0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r3, #1
	bne _02014ACA
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	blx FUN_020D43E8
	pop {r4, r5, r6, pc}
_02014ACA:
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	blx FUN_020D4448
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02014AB0

	thumb_func_start FUN_02014AD8
FUN_02014AD8: @ 0x02014AD8
	push {r3, r4, r5, lr}
	ldr r1, _02014B04 @ =0x0000079C
	adds r5, r0, #0
	bl FUN_0201AA8C
	ldr r2, _02014B04 @ =0x0000079C
	movs r1, #0
	adds r4, r0, #0
	blx FUN_020E5B44
	movs r2, #3
	lsls r2, r2, #8
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r4, r2
	bl FUN_02014A08
	movs r1, #6
	lsls r1, r1, #8
	str r0, [r4, r1]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02014B04: .4byte 0x0000079C
	thumb_func_end FUN_02014AD8

	thumb_func_start FUN_02014B08
FUN_02014B08: @ 0x02014B08
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r5, #0
	bne _02014B1A
	bl FUN_0202551C
_02014B1A:
	ldr r0, _02014B88 @ =0x00000604
	ldr r0, [r5, r0]
	cmp r0, #0
	beq _02014B26
	bl FUN_0202551C
_02014B26:
	ldr r0, _02014B8C @ =0x0000078C
	movs r2, #0
	strb r4, [r5, r0]
	adds r1, r0, #1
	strb r6, [r5, r1]
	adds r1, r0, #0
	adds r1, #0xc
	strh r2, [r5, r1]
	add r2, sp, #8
	movs r1, #0x14
	ldrsh r2, [r2, r1]
	adds r1, r0, #0
	adds r1, #0xe
	strh r2, [r5, r1]
	adds r1, r0, #4
	ldr r2, [sp, #0x20]
	adds r0, #8
	str r2, [r5, r1]
	ldr r1, [sp, #0x24]
	ldr r3, [sp, #0x18]
	str r1, [r5, r0]
	ldr r0, _02014B90 @ =0x0000060C
	movs r1, #0xc0
	adds r0, r5, r0
	adds r2, r7, #0
	bl FUN_02014C60
	ldr r0, _02014B94 @ =FUN_02014CBC
	ldr r2, [sp, #0x28]
	adds r1, r5, #0
	bl FUN_0200E320
	ldr r1, _02014B88 @ =0x00000604
	movs r2, #3
	str r0, [r5, r1]
	ldr r0, _02014B98 @ =0x00000794
	adds r1, r5, #0
	ldr r0, [r5, r0]
	lsls r2, r2, #8
	blx FUN_020D47EC
	ldr r0, _02014B98 @ =0x00000794
	movs r2, #3
	lsls r2, r2, #8
	ldr r0, [r5, r0]
	adds r1, r5, r2
	blx FUN_020D47EC
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02014B88: .4byte 0x00000604
_02014B8C: .4byte 0x0000078C
_02014B90: .4byte 0x0000060C
_02014B94: .4byte FUN_02014CBC
_02014B98: .4byte 0x00000794
	thumb_func_end FUN_02014B08

	thumb_func_start FUN_02014B9C
FUN_02014B9C: @ 0x02014B9C
	push {r4, lr}
	adds r4, r0, #0
	bne _02014BA6
	bl FUN_0202551C
_02014BA6:
	ldr r0, _02014BD0 @ =0x00000604
	ldr r0, [r4, r0]
	cmp r0, #0
	beq _02014BCC
	bl FUN_0200E390
	ldr r0, _02014BD0 @ =0x00000604
	movs r1, #0
	str r1, [r4, r0]
	subs r0, r0, #4
	ldr r0, [r4, r0]
	bl FUN_02014A4C
	ldr r1, _02014BD4 @ =0x00000794
	movs r2, #3
	ldr r1, [r4, r1]
	lsls r2, r2, #8
	blx FUN_020E5B44
_02014BCC:
	pop {r4, pc}
	nop
_02014BD0: .4byte 0x00000604
_02014BD4: .4byte 0x00000794
	thumb_func_end FUN_02014B9C

	thumb_func_start FUN_02014BD8
FUN_02014BD8: @ 0x02014BD8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02014B9C
	bl FUN_02014D68
	movs r0, #6
	lsls r0, r0, #8
	ldr r0, [r4, r0]
	bl FUN_02014A38
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02014BD8

	thumb_func_start FUN_02014BF8
FUN_02014BF8: @ 0x02014BF8
	movs r1, #6
	lsls r1, r1, #8
	ldr r3, _02014C04 @ =FUN_02014A4C
	ldr r0, [r0, r1]
	bx r3
	nop
_02014C04: .4byte FUN_02014A4C
	thumb_func_end FUN_02014BF8

	thumb_func_start FUN_02014C08
FUN_02014C08: @ 0x02014C08
	push {r4, lr}
	adds r4, r0, #0
	beq _02014C36
	ldr r0, _02014C38 @ =0x00000604
	ldr r1, [r4, r0]
	cmp r1, #0
	beq _02014C36
	subs r0, r0, #4
	ldr r0, [r4, r0]
	bl FUN_02014A8C
	movs r0, #6
	lsls r0, r0, #8
	ldr r0, [r4, r0]
	bl FUN_02014A4C
	adds r1, r0, #0
	ldr r0, _02014C3C @ =0x00000794
	movs r2, #3
	ldr r0, [r4, r0]
	lsls r2, r2, #8
	blx FUN_020D47EC
_02014C36:
	pop {r4, pc}
	.align 2, 0
_02014C38: .4byte 0x00000604
_02014C3C: .4byte 0x00000794
	thumb_func_end FUN_02014C08

	thumb_func_start FUN_02014C40
FUN_02014C40: @ 0x02014C40
	push {r4, lr}
	adds r4, r0, #0
	beq _02014C58
	ldr r0, _02014C5C @ =0x00000604
	ldr r0, [r4, r0]
	cmp r0, #0
	beq _02014C58
	bl FUN_02014D68
	adds r0, r4, #0
	bl FUN_02014D70
_02014C58:
	pop {r4, pc}
	nop
_02014C5C: .4byte 0x00000604
	thumb_func_end FUN_02014C40

	thumb_func_start FUN_02014C60
FUN_02014C60: @ 0x02014C60
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r4, #0
	adds r7, r1, #0
	adds r5, r0, #0
	adds r6, r4, #0
	str r2, [sp]
	cmp r7, #0
	bls _02014CAE
	asrs r0, r3, #0x1f
	str r3, [sp, #4]
	str r0, [sp, #8]
_02014C78:
	asrs r0, r4, #4
	lsls r1, r0, #2
	ldr r0, _02014CB4 @ =0x021094DC
	ldr r2, [sp, #4]
	ldrsh r0, [r0, r1]
	ldr r3, [sp, #8]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	lsls r2, r2, #0xa
	adds r0, r0, r2
	ldr r2, _02014CB8 @ =0x00000000
	adcs r1, r2
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r0, r0, #0xc
	strh r0, [r5]
	ldr r0, [sp]
	adds r6, r6, #1
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r5, r5, #2
	cmp r6, r7
	blo _02014C78
_02014CAE:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02014CB4: .4byte 0x021094DC
_02014CB8: .4byte 0x00000000
	thumb_func_end FUN_02014C60

	thumb_func_start FUN_02014CBC
FUN_02014CBC: @ 0x02014CBC
	push {r3, r4, r5, r6, r7, lr}
	movs r0, #6
	adds r6, r1, #0
	lsls r0, r0, #8
	ldr r0, [r6, r0]
	bl FUN_02014A4C
	adds r5, r0, #0
	ldr r0, _02014D58 @ =0x00000798
	movs r1, #0x64
	ldrsh r0, [r6, r0]
	blx FUN_020F2998
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _02014D5C @ =0x0000078C
	ldrb r4, [r6, r0]
	adds r0, r0, #1
	ldrb r0, [r6, r0]
	cmp r4, r0
	bgt _02014D24
	lsls r0, r4, #2
	adds r5, r5, r0
_02014CEA:
	ldr r2, [r5]
	lsls r0, r2, #0x10
	asrs r7, r0, #0x10
	lsls r0, r3, #1
	adds r1, r6, r0
	ldr r0, _02014D60 @ =0x0000060C
	ldrsh r0, [r1, r0]
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	lsrs r0, r2, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	lsrs r1, r1, #0x10
	orrs r0, r1
	stm r5!, {r0}
	adds r0, r3, #1
	movs r1, #0xc0
	blx FUN_020F2998
	lsls r0, r1, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _02014D64 @ =0x0000078D
	adds r4, r4, #1
	ldrb r0, [r6, r0]
	cmp r4, r0
	ble _02014CEA
_02014D24:
	ldr r1, _02014D58 @ =0x00000798
	adds r0, r1, #2
	ldrsh r2, [r6, r1]
	ldrsh r0, [r6, r0]
	adds r4, r6, r1
	adds r0, r2, r0
	strh r0, [r4]
	ldrsh r0, [r6, r1]
	movs r1, #0x4b
	lsls r1, r1, #8
	cmp r0, r1
	blt _02014D48
	movs r0, #0
	ldrsh r0, [r4, r0]
	blx FUN_020F2998
	strh r1, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02014D48:
	cmp r0, #0
	bge _02014D54
	movs r0, #0
	ldrsh r0, [r4, r0]
	adds r0, r0, r1
	strh r0, [r4]
_02014D54:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014D58: .4byte 0x00000798
_02014D5C: .4byte 0x0000078C
_02014D60: .4byte 0x0000060C
_02014D64: .4byte 0x0000078D
	thumb_func_end FUN_02014CBC

	thumb_func_start FUN_02014D68
FUN_02014D68: @ 0x02014D68
	ldr r3, _02014D6C @ =FUN_02014AA0
	bx r3
	.align 2, 0
_02014D6C: .4byte FUN_02014AA0
	thumb_func_end FUN_02014D68

	thumb_func_start FUN_02014D70
FUN_02014D70: @ 0x02014D70
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bne _02014D7A
	bl FUN_0202551C
_02014D7A:
	movs r0, #6
	lsls r0, r0, #8
	ldr r0, [r4, r0]
	bl FUN_02014A60
	movs r1, #3
	lsls r1, r1, #8
	adds r5, r0, #0
	blx FUN_020D2894
	movs r1, #0x79
	lsls r1, r1, #4
	ldr r1, [r4, r1]
	adds r0, r5, #0
	movs r2, #4
	movs r3, #1
	bl FUN_02014AB0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02014D70

	thumb_func_start FUN_02014DA0
FUN_02014DA0: @ 0x02014DA0
	movs r1, #0
	ldr r2, _02014DB0 @ =0x021D10A8
	adds r0, r1, #0
_02014DA6:
	adds r1, r1, #1
	stm r2!, {r0}
	cmp r1, #0x10
	blt _02014DA6
	bx lr
	.align 2, 0
_02014DB0: .4byte 0x021D10A8
	thumb_func_end FUN_02014DA0

	thumb_func_start FUN_02014DB4
FUN_02014DB4: @ 0x02014DB4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r1, [sp, #8]
	ldr r1, _02014EA8 @ =0x021D10A8
	adds r7, r0, #0
	adds r6, r2, #0
	str r3, [sp, #0xc]
	movs r5, #0
_02014DC4:
	ldr r0, [r1]
	cmp r0, #0
	beq _02014DD2
	adds r5, r5, #1
	adds r1, r1, #4
	cmp r5, #0x10
	blt _02014DC4
_02014DD2:
	cmp r5, #0x10
	blt _02014DDC
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02014DDC:
	ldr r0, [sp, #0x2c]
	movs r1, #0xdc
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _02014DEC
	bl FUN_0202551C
_02014DEC:
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xdc
	blx FUN_020E5B44
	adds r2, r4, #0
	ldr r0, [sp, #8]
	str r7, [r4, #0x18]
	ldr r3, _02014EAC @ =_020F6090
	str r0, [r4, #0x1c]
	ldm r3!, {r0, r1}
	adds r2, #0x34
	stm r2!, {r0, r1}
	ldr r0, [r3]
	ldr r3, _02014EB0 @ =_020F6078
	str r0, [r2]
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x40
	stm r2!, {r0, r1}
	ldr r0, [r3]
	ldr r3, _02014EB4 @ =_020F6084
	str r0, [r2]
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x4c
	stm r2!, {r0, r1}
	ldr r0, [r3]
	movs r1, #0
	str r0, [r2]
	ldr r2, [sp, #0xc]
	adds r0, r6, #0
	blx FUN_020E5B44
	ldr r0, [sp, #0xc]
	str r6, [r4, #0xc]
	str r6, [r4, #0x10]
	adds r0, r6, r0
	str r0, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0xda
	strb r5, [r0]
	ldr r0, _02014EA8 @ =0x021D10A8
	lsls r5, r5, #2
	str r4, [r0, r5]
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _02014E80
	ldr r0, [sp, #0x2c]
	bl FUN_02023114
	str r0, [r4, #0x20]
	movs r3, #0
	str r3, [r4, #0x24]
	str r3, [r4, #0x28]
	movs r0, #2
	str r3, [r4, #0x2c]
	lsls r0, r0, #0xc
	strh r0, [r4, #0x30]
	str r3, [sp]
	ldr r0, [r4, #0x20]
	ldr r1, _02014EAC @ =_020F6090
	str r0, [sp, #4]
	ldrh r2, [r4, #0x30]
	ldr r0, _02014EB4 @ =_020F6084
	bl FUN_02023308
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0xdb
	strb r1, [r0]
	ldr r0, [r4, #0x20]
	bl FUN_0202313C
_02014E80:
	movs r0, #6
	str r0, [sp]
	movs r0, #0x3f
	str r0, [sp, #4]
	ldr r0, _02014EB8 @ =_020F609C
	movs r1, #0x14
	ldr r0, [r0, r5]
	movs r2, #0xc8
	movs r3, #5
	blx FUN_020988F4
	str r0, [r4]
	ldr r1, _02014EB0 @ =_020F6078
	adds r0, r4, #0
	bl FUN_020154E4
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014EA8: .4byte 0x021D10A8
_02014EAC: .4byte _020F6090
_02014EB0: .4byte _020F6078
_02014EB4: .4byte _020F6084
_02014EB8: .4byte _020F609C
	thumb_func_end FUN_02014DB4

	thumb_func_start FUN_02014EBC
FUN_02014EBC: @ 0x02014EBC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bl FUN_020154B8
	adds r0, r5, #0
	adds r0, #0xd8
	ldrb r1, [r0]
	movs r0, #1
	tst r0, r1
	beq _02014EDA
	adds r0, r5, #0
	adds r0, #0x58
	blx FUN_020B5CD8
	b _02014EFA
_02014EDA:
	movs r0, #2
	tst r0, r1
	beq _02014EFA
	movs r6, #0
	adds r4, r5, #0
	adds r7, r6, #0
_02014EE6:
	ldr r0, [r4, #0x58]
	cmp r0, #0
	beq _02014EF2
	blx FUN_020B68A4
	str r7, [r4, #0x58]
_02014EF2:
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, #0x10
	blt _02014EE6
_02014EFA:
	adds r0, r5, #0
	adds r0, #0xd8
	ldrb r1, [r0]
	movs r0, #4
	tst r0, r1
	beq _02014F10
	adds r0, r5, #0
	adds r0, #0x98
	blx FUN_020B5EC4
	b _02014F38
_02014F10:
	movs r0, #8
	tst r0, r1
	beq _02014F38
	movs r6, #0
	adds r4, r5, #0
	adds r7, r6, #0
_02014F1C:
	adds r0, r4, #0
	adds r0, #0x98
	ldr r0, [r0]
	cmp r0, #0
	beq _02014F30
	blx FUN_020B6C3C
	adds r0, r4, #0
	adds r0, #0x98
	str r7, [r0]
_02014F30:
	adds r6, r6, #1
	adds r4, r4, #4
	cmp r6, #0x10
	blt _02014F1C
_02014F38:
	adds r0, r5, #0
	movs r1, #0
	adds r0, #0xd8
	strb r1, [r0]
	str r1, [r5, #8]
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _02014F50
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r5, #4]
_02014F50:
	ldr r2, _02014F80 @ =0x021D10A8
	movs r1, #0
_02014F54:
	ldr r0, [r2]
	cmp r0, r5
	bne _02014F64
	ldr r0, _02014F80 @ =0x021D10A8
	movs r2, #0
	lsls r1, r1, #2
	str r2, [r0, r1]
	b _02014F6C
_02014F64:
	adds r1, r1, #1
	adds r2, r2, #4
	cmp r1, #0x10
	blt _02014F54
_02014F6C:
	ldr r0, [r5, #0x20]
	cmp r0, #0
	beq _02014F76
	bl FUN_02023120
_02014F76:
	adds r0, r5, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02014F80: .4byte 0x021D10A8
	thumb_func_end FUN_02014EBC

	thumb_func_start FUN_02014F84
FUN_02014F84: @ 0x02014F84
	push {r3, r4, r5, lr}
	ldr r5, _02014FA0 @ =0x021D10A8
	movs r4, #0
_02014F8A:
	ldr r0, [r5]
	cmp r0, #0
	beq _02014F94
	bl FUN_02014EBC
_02014F94:
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #0x10
	blt _02014F8A
	pop {r3, r4, r5, pc}
	nop
_02014FA0: .4byte 0x021D10A8
	thumb_func_end FUN_02014F84

	thumb_func_start FUN_02014FA4
FUN_02014FA4: @ 0x02014FA4
	push {r4, lr}
	ldr r1, _02014FCC @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #8]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02014FBC
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02014FBC:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02014FC8
	bl FUN_0202551C
_02014FC8:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02014FCC: .4byte 0x021D10A0
	thumb_func_end FUN_02014FA4

	thumb_func_start FUN_02014FD0
FUN_02014FD0: @ 0x02014FD0
	push {r4, lr}
	ldr r1, _02014FF8 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0xc]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02014FE8
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02014FE8:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02014FF4
	bl FUN_0202551C
_02014FF4:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02014FF8: .4byte 0x021D10A0
	thumb_func_end FUN_02014FD0

	thumb_func_start FUN_02014FFC
FUN_02014FFC: @ 0x02014FFC
	push {r4, lr}
	ldr r1, _02015024 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x10]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015014
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015014:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015020
	bl FUN_0202551C
_02015020:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015024: .4byte 0x021D10A0
	thumb_func_end FUN_02014FFC

	thumb_func_start FUN_02015028
FUN_02015028: @ 0x02015028
	push {r4, lr}
	ldr r1, _02015050 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x14]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015040
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015040:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _0201504C
	bl FUN_0202551C
_0201504C:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015050: .4byte 0x021D10A0
	thumb_func_end FUN_02015028

	thumb_func_start FUN_02015054
FUN_02015054: @ 0x02015054
	push {r4, lr}
	ldr r1, _0201507C @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x18]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _0201506C
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_0201506C:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015078
	bl FUN_0202551C
_02015078:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201507C: .4byte 0x021D10A0
	thumb_func_end FUN_02015054

	thumb_func_start FUN_02015080
FUN_02015080: @ 0x02015080
	push {r4, lr}
	ldr r1, _020150A8 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x1c]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015098
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015098:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150A4
	bl FUN_0202551C
_020150A4:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020150A8: .4byte 0x021D10A0
	thumb_func_end FUN_02015080

	thumb_func_start FUN_020150AC
FUN_020150AC: @ 0x020150AC
	push {r4, lr}
	ldr r1, _020150D4 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x20]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _020150C4
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_020150C4:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150D0
	bl FUN_0202551C
_020150D0:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020150D4: .4byte 0x021D10A0
	thumb_func_end FUN_020150AC

	thumb_func_start FUN_020150D8
FUN_020150D8: @ 0x020150D8
	push {r4, lr}
	ldr r1, _02015100 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x24]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _020150F0
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_020150F0:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020150FC
	bl FUN_0202551C
_020150FC:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015100: .4byte 0x021D10A0
	thumb_func_end FUN_020150D8

	thumb_func_start FUN_02015104
FUN_02015104: @ 0x02015104
	push {r4, lr}
	ldr r1, _0201512C @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x28]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _0201511C
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_0201511C:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015128
	bl FUN_0202551C
_02015128:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201512C: .4byte 0x021D10A0
	thumb_func_end FUN_02015104

	thumb_func_start FUN_02015130
FUN_02015130: @ 0x02015130
	push {r4, lr}
	ldr r1, _02015158 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x2c]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015148
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015148:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015154
	bl FUN_0202551C
_02015154:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015158: .4byte 0x021D10A0
	thumb_func_end FUN_02015130

	thumb_func_start FUN_0201515C
FUN_0201515C: @ 0x0201515C
	push {r4, lr}
	ldr r1, _02015184 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x30]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015174
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015174:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015180
	bl FUN_0202551C
_02015180:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015184: .4byte 0x021D10A0
	thumb_func_end FUN_0201515C

	thumb_func_start FUN_02015188
FUN_02015188: @ 0x02015188
	push {r4, lr}
	ldr r1, _020151B0 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x34]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _020151A0
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_020151A0:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020151AC
	bl FUN_0202551C
_020151AC:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020151B0: .4byte 0x021D10A0
	thumb_func_end FUN_02015188

	thumb_func_start FUN_020151B4
FUN_020151B4: @ 0x020151B4
	push {r4, lr}
	ldr r1, _020151DC @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x38]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _020151CC
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_020151CC:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _020151D8
	bl FUN_0202551C
_020151D8:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_020151DC: .4byte 0x021D10A0
	thumb_func_end FUN_020151B4

	thumb_func_start FUN_020151E0
FUN_020151E0: @ 0x020151E0
	push {r4, lr}
	ldr r1, _02015208 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x3c]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _020151F8
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_020151F8:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015204
	bl FUN_0202551C
_02015204:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015208: .4byte 0x021D10A0
	thumb_func_end FUN_020151E0

	thumb_func_start FUN_0201520C
FUN_0201520C: @ 0x0201520C
	push {r4, lr}
	ldr r1, _02015234 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x40]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015224
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015224:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _02015230
	bl FUN_0202551C
_02015230:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015234: .4byte 0x021D10A0
	thumb_func_end FUN_0201520C

	thumb_func_start FUN_02015238
FUN_02015238: @ 0x02015238
	push {r4, lr}
	ldr r1, _02015260 @ =0x021D10A0
	movs r2, #3
	ldr r1, [r1, #0x44]
	ldr r4, [r1, #0x10]
	adds r0, r4, r0
	adds r3, r0, #0
	ands r3, r2
	beq _02015250
	movs r2, #4
	subs r2, r2, r3
	adds r0, r0, r2
_02015250:
	str r0, [r1, #0x10]
	ldr r1, [r1, #0x14]
	cmp r0, r1
	blo _0201525C
	bl FUN_0202551C
_0201525C:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_02015260: .4byte 0x021D10A0
	thumb_func_end FUN_02015238

	thumb_func_start FUN_02015264
FUN_02015264: @ 0x02015264
	ldr r3, _02015268 @ =FUN_02007524
	bx r3
	.align 2, 0
_02015268: .4byte FUN_02007524
	thumb_func_end FUN_02015264

	thumb_func_start FUN_0201526C
FUN_0201526C: @ 0x0201526C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r6, r1, #0
	adds r4, r2, #0
	adds r7, r3, #0
	cmp r0, #0
	bne _02015280
	bl FUN_0202551C
_02015280:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0201528A
	bl FUN_0202551C
_0201528A:
	adds r0, r5, #0
	adds r0, #0xd8
	strb r4, [r0]
	movs r0, #1
	tst r0, r4
	beq _020152A0
	adds r0, r5, #0
	adds r0, #0x58
	blx FUN_020B5C98
	b _020152B6
_020152A0:
	movs r0, #2
	tst r0, r4
	beq _020152B6
	movs r1, #0
	adds r2, r5, #0
	adds r0, r1, #0
_020152AC:
	adds r1, r1, #1
	str r0, [r2, #0x58]
	adds r2, r2, #4
	cmp r1, #0x10
	blt _020152AC
_020152B6:
	movs r0, #4
	tst r0, r4
	beq _020152C6
	adds r0, r5, #0
	adds r0, #0x98
	blx FUN_020B5EA8
	b _020152E0
_020152C6:
	movs r0, #8
	tst r0, r4
	beq _020152E0
	movs r2, #0
	adds r3, r5, #0
	adds r1, r2, #0
_020152D2:
	adds r0, r3, #0
	adds r0, #0x98
	adds r2, r2, #1
	adds r3, r3, #4
	str r1, [r0]
	cmp r2, #0x10
	blt _020152D2
_020152E0:
	str r6, [r5, #4]
	cmp r7, #1
	bne _020152EE
	adds r0, r5, #0
	bl FUN_02015300
	pop {r3, r4, r5, r6, r7, pc}
_020152EE:
	ldr r0, _020152FC @ =FUN_02015340
	adds r1, r5, #0
	movs r2, #5
	bl FUN_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020152FC: .4byte FUN_02015340
	thumb_func_end FUN_0201526C

	thumb_func_start FUN_02015300
FUN_02015300: @ 0x02015300
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	blx FUN_0209857C
	ldr r0, _0201533C @ =0x021D10A0
	str r4, [r0]
	ldr r1, [r4, #0x18]
	ldr r0, [r4]
	cmp r1, #0
	bne _0201531E
	blx FUN_020983E8
	b _02015322
_0201531E:
	blx FUN_020984B0
_02015322:
	ldr r1, [r4, #0x1c]
	ldr r0, [r4]
	cmp r1, #0
	bne _02015330
	blx FUN_020983D4
	b _02015334
_02015330:
	blx FUN_020983FC
_02015334:
	ldr r0, _0201533C @ =0x021D10A0
	movs r1, #0
	str r1, [r0]
	pop {r4, pc}
	.align 2, 0
_0201533C: .4byte 0x021D10A0
	thumb_func_end FUN_02015300

	thumb_func_start FUN_02015340
FUN_02015340: @ 0x02015340
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	bl FUN_02015300
	adds r0, r4, #0
	bl FUN_0200E390
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015340

	thumb_func_start FUN_02015354
FUN_02015354: @ 0x02015354
	push {r4, lr}
	adds r4, r0, #0
	bne _0201535E
	bl FUN_0202551C
_0201535E:
	ldr r0, _02015390 @ =0x021D10A0
	ldr r0, [r0]
	cmp r0, #0
	bne _0201536A
	bl FUN_0202551C
_0201536A:
	ldr r0, _02015390 @ =0x021D10A0
	movs r1, #0
	ldr r3, [r0]
	adds r2, r3, #0
_02015372:
	ldr r0, [r2, #0x58]
	cmp r0, #0
	bne _02015380
	lsls r0, r1, #2
	adds r0, r3, r0
	str r4, [r0, #0x58]
	pop {r4, pc}
_02015380:
	adds r1, r1, #1
	adds r2, r2, #4
	cmp r1, #0x10
	blt _02015372
	bl FUN_0202551C
	pop {r4, pc}
	nop
_02015390: .4byte 0x021D10A0
	thumb_func_end FUN_02015354

	thumb_func_start FUN_02015394
FUN_02015394: @ 0x02015394
	push {r4, lr}
	adds r4, r0, #0
	bne _0201539E
	bl FUN_0202551C
_0201539E:
	ldr r0, _020153D4 @ =0x021D10A0
	ldr r0, [r0]
	cmp r0, #0
	bne _020153AA
	bl FUN_0202551C
_020153AA:
	ldr r0, _020153D4 @ =0x021D10A0
	movs r1, #0
	ldr r3, [r0]
	adds r2, r3, #0
_020153B2:
	adds r0, r2, #0
	adds r0, #0x98
	ldr r0, [r0]
	cmp r0, #0
	bne _020153C6
	lsls r0, r1, #2
	adds r0, r3, r0
	adds r0, #0x98
	str r4, [r0]
	pop {r4, pc}
_020153C6:
	adds r1, r1, #1
	adds r2, r2, #4
	cmp r1, #0x10
	blt _020153B2
	bl FUN_0202551C
	pop {r4, pc}
	.align 2, 0
_020153D4: .4byte 0x021D10A0
	thumb_func_end FUN_02015394

	thumb_func_start FUN_020153D8
FUN_020153D8: @ 0x020153D8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x20]
	cmp r1, #0
	beq _020153F4
	adds r0, #0xdb
	ldrb r0, [r0]
	bl FUN_020233D8
	ldr r0, [r4, #0x20]
	bl FUN_0202313C
	bl FUN_02023154
_020153F4:
	blx FUN_020BEF98
	ldr r0, [r4]
	ldr r1, _02015410 @ =0x021DA4E8
	blx FUN_020981D4
	ldr r0, [r4, #0x20]
	cmp r0, #0
	beq _0201540A
	bl FUN_02023148
_0201540A:
	blx FUN_020BEF98
	pop {r4, pc}
	.align 2, 0
_02015410: .4byte 0x021DA4E8
	thumb_func_end FUN_020153D8

	thumb_func_start FUN_02015414
FUN_02015414: @ 0x02015414
	ldr r3, _0201541C @ =FUN_0209829C
	ldr r0, [r0]
	bx r3
	nop
_0201541C: .4byte FUN_0209829C
	thumb_func_end FUN_02015414

	thumb_func_start FUN_02015420
FUN_02015420: @ 0x02015420
	movs r0, #0
	ldr r3, _02015438 @ =0x021D10A8
	adds r2, r0, #0
_02015426:
	ldr r1, [r3]
	cmp r1, #0
	beq _0201542E
	adds r0, r0, #1
_0201542E:
	adds r2, r2, #1
	adds r3, r3, #4
	cmp r2, #0x10
	blt _02015426
	bx lr
	.align 2, 0
_02015438: .4byte 0x021D10A8
	thumb_func_end FUN_02015420

	thumb_func_start FUN_0201543C
FUN_0201543C: @ 0x0201543C
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0201545C @ =0x021D10A8
	adds r6, r4, #0
_02015444:
	ldr r0, [r5]
	cmp r0, #0
	beq _02015450
	bl FUN_020153D8
	adds r4, r4, #1
_02015450:
	adds r6, r6, #1
	adds r5, r5, #4
	cmp r6, #0x10
	blt _02015444
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_0201545C: .4byte 0x021D10A8
	thumb_func_end FUN_0201543C

	thumb_func_start FUN_02015460
FUN_02015460: @ 0x02015460
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _02015480 @ =0x021D10A8
	adds r6, r4, #0
_02015468:
	ldr r0, [r5]
	cmp r0, #0
	beq _02015474
	bl FUN_02015414
	adds r4, r4, #1
_02015474:
	adds r6, r6, #1
	adds r5, r5, #4
	cmp r6, #0x10
	blt _02015468
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02015480: .4byte 0x021D10A8
	thumb_func_end FUN_02015460

	thumb_func_start FUN_02015484
FUN_02015484: @ 0x02015484
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	blx FUN_02098160
	str r0, [r4, #8]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015484

	thumb_func_start FUN_02015494
FUN_02015494: @ 0x02015494
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _020154AC @ =0x021D10A0
	str r3, [r0, #4]
	ldr r0, [r4]
	blx FUN_020980CC
	ldr r1, _020154AC @ =0x021D10A0
	movs r2, #0
	str r2, [r1, #4]
	str r0, [r4, #8]
	pop {r4, pc}
	.align 2, 0
_020154AC: .4byte 0x021D10A0
	thumb_func_end FUN_02015494

	thumb_func_start FUN_020154B0
FUN_020154B0: @ 0x020154B0
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020154B0

	thumb_func_start FUN_020154B8
FUN_020154B8: @ 0x020154B8
	ldr r3, _020154C0 @ =FUN_02097FF4
	ldr r0, [r0]
	bx r3
	nop
_020154C0: .4byte FUN_02097FF4
	thumb_func_end FUN_020154B8

	thumb_func_start FUN_020154C4
FUN_020154C4: @ 0x020154C4
	ldr r3, _020154CC @ =FUN_02098038
	ldr r0, [r0]
	bx r3
	nop
_020154CC: .4byte FUN_02098038
	thumb_func_end FUN_020154C4

	thumb_func_start FUN_020154D0
FUN_020154D0: @ 0x020154D0
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end FUN_020154D0

	thumb_func_start FUN_020154D4
FUN_020154D4: @ 0x020154D4
	adds r2, r0, #0
	adds r2, #0x40
	adds r3, r1, #0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end FUN_020154D4

	thumb_func_start FUN_020154E4
FUN_020154E4: @ 0x020154E4
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r3, r4, #0
	adds r2, r5, #0
	ldm r3!, {r0, r1}
	adds r2, #0x40
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r1, [r5, #0x20]
	adds r0, r4, #0
	bl FUN_02023204
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020154E4

	thumb_func_start FUN_02015504
FUN_02015504: @ 0x02015504
	ldr r0, _0201550C @ =0x021D10A0
	ldr r0, [r0, #4]
	bx lr
	nop
_0201550C: .4byte 0x021D10A0
	thumb_func_end FUN_02015504

	thumb_func_start FUN_02015510
FUN_02015510: @ 0x02015510
	ldr r2, _02015520 @ =_020F6078
	adds r3, r0, #0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	nop
_02015520: .4byte _020F6078
	thumb_func_end FUN_02015510

	thumb_func_start FUN_02015524
FUN_02015524: @ 0x02015524
	ldr r0, [r0, #0x20]
	bx lr
	thumb_func_end FUN_02015524

	thumb_func_start FUN_02015528
FUN_02015528: @ 0x02015528
	adds r0, #0xdb
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015528

	thumb_func_start FUN_02015530
FUN_02015530: @ 0x02015530
	adds r0, #0xdb
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015530

	thumb_func_start FUN_02015538
FUN_02015538: @ 0x02015538
	adds r2, r0, #0
	adds r2, #0x50
	ldrh r2, [r2]
	strh r2, [r1]
	adds r2, r0, #0
	adds r2, #0x52
	ldrh r2, [r2]
	adds r0, #0x54
	strh r2, [r1, #2]
	ldrh r0, [r0]
	strh r0, [r1, #4]
	bx lr
	thumb_func_end FUN_02015538

	thumb_func_start FUN_02015550
FUN_02015550: @ 0x02015550
	push {r4, r5, r6, r7}
	ldr r0, [r0, #0x20]
	adds r4, r1, #0
	ldrh r2, [r0, #0x1c]
	cmp r2, #0
	bne _02015562
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_02015562:
	movs r1, #0
	cmp r2, #0
	ble _020155EC
	ldr r3, [r0, #0x18]
	ldr r7, _020155F4 @ =FUN_0209DD30
	ldr r0, _020155F8 @ =FUN_0209DDF8
_0201556E:
	cmp r3, #0
	beq _020155E4
	cmp r4, #5
	bhi _020155DE
	adds r5, r4, r4
	add r5, pc
	ldrh r5, [r5, #6]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	add pc, r5
_02015582: @ jump table
	.2byte _0201558E - _02015582 - 2 @ case 0
	.2byte _0201559A - _02015582 - 2 @ case 1
	.2byte _020155A6 - _02015582 - 2 @ case 2
	.2byte _020155B4 - _02015582 - 2 @ case 3
	.2byte _020155C2 - _02015582 - 2 @ case 4
	.2byte _020155D0 - _02015582 - 2 @ case 5
_0201558E:
	ldr r5, [r3]
	cmp r5, r0
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_0201559A:
	ldr r5, [r3]
	cmp r5, r7
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155A6:
	ldr r6, [r3]
	ldr r5, _020155FC @ =FUN_0209DCAC
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155B4:
	ldr r6, [r3]
	ldr r5, _02015600 @ =FUN_0209DBD4
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155C2:
	ldr r6, [r3]
	ldr r5, _02015604 @ =FUN_0209DAB8
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155D0:
	ldr r6, [r3]
	ldr r5, _02015608 @ =FUN_0209DA24
	cmp r6, r5
	bne _020155E4
	ldr r0, [r3, #4]
	pop {r4, r5, r6, r7}
	bx lr
_020155DE:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
_020155E4:
	adds r1, r1, #1
	adds r3, #8
	cmp r1, r2
	blt _0201556E
_020155EC:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	nop
_020155F4: .4byte FUN_0209DD30
_020155F8: .4byte FUN_0209DDF8
_020155FC: .4byte FUN_0209DCAC
_02015600: .4byte FUN_0209DBD4
_02015604: .4byte FUN_0209DAB8
_02015608: .4byte FUN_0209DA24
	thumb_func_end FUN_02015550

	thumb_func_start FUN_0201560C
FUN_0201560C: @ 0x0201560C
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #0
	bl FUN_02015550
	cmp r0, #0
	beq _02015626
	ldrh r1, [r4]
	strh r1, [r0]
	ldrh r1, [r4, #2]
	strh r1, [r0, #2]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
_02015626:
	pop {r4, pc}
	thumb_func_end FUN_0201560C

	thumb_func_start FUN_02015628
FUN_02015628: @ 0x02015628
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #2
	bl FUN_02015550
	adds r2, r0, #0
	beq _0201563E
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
_0201563E:
	pop {r4, pc}
	thumb_func_end FUN_02015628

	thumb_func_start FUN_02015640
FUN_02015640: @ 0x02015640
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r1, #0
	movs r1, #2
	bl FUN_02015550
	adds r2, r0, #0
	bne _02015666
	add r2, sp, #0
	movs r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	str r0, [r2, #8]
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	add sp, #0xc
	str r0, [r4]
	pop {r3, r4, pc}
_02015666:
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015640

	thumb_func_start FUN_02015674
FUN_02015674: @ 0x02015674
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #2
	bl FUN_02015550
	cmp r0, #0
	beq _02015688
	movs r1, #0
	ldrsh r1, [r4, r1]
	strh r1, [r0, #0xc]
_02015688:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015674

	thumb_func_start FUN_0201568C
FUN_0201568C: @ 0x0201568C
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #2
	bl FUN_02015550
	cmp r0, #0
	bne _020156A0
	movs r0, #0
	strh r0, [r4]
	pop {r4, pc}
_020156A0:
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	strh r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_0201568C

	thumb_func_start FUN_020156A8
FUN_020156A8: @ 0x020156A8
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #3
	bl FUN_02015550
	cmp r0, #0
	beq _020156BA
	ldrh r1, [r4]
	strh r1, [r0]
_020156BA:
	pop {r4, pc}
	thumb_func_end FUN_020156A8

	thumb_func_start FUN_020156BC
FUN_020156BC: @ 0x020156BC
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #3
	bl FUN_02015550
	cmp r0, #0
	bne _020156D0
	movs r0, #0
	strh r0, [r4]
	pop {r4, pc}
_020156D0:
	ldrh r0, [r0]
	strh r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020156BC

	thumb_func_start FUN_020156D8
FUN_020156D8: @ 0x020156D8
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #3
	bl FUN_02015550
	cmp r0, #0
	beq _020156EA
	ldrh r1, [r4]
	strh r1, [r0, #2]
_020156EA:
	pop {r4, pc}
	thumb_func_end FUN_020156D8

	thumb_func_start FUN_020156EC
FUN_020156EC: @ 0x020156EC
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #3
	bl FUN_02015550
	cmp r0, #0
	bne _02015700
	movs r0, #0
	strh r0, [r4]
	pop {r4, pc}
_02015700:
	ldrh r0, [r0, #2]
	strh r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020156EC

	thumb_func_start FUN_02015708
FUN_02015708: @ 0x02015708
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #5
	bl FUN_02015550
	adds r2, r0, #0
	beq _0201571E
	ldm r4!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
_0201571E:
	pop {r4, pc}
	thumb_func_end FUN_02015708

	thumb_func_start FUN_02015720
FUN_02015720: @ 0x02015720
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r1, #0
	movs r1, #5
	bl FUN_02015550
	adds r2, r0, #0
	bne _02015746
	add r2, sp, #0
	movs r0, #0
	str r0, [r2]
	str r0, [r2, #4]
	str r0, [r2, #8]
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	add sp, #0xc
	str r0, [r4]
	pop {r3, r4, pc}
_02015746:
	ldm r2!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r2]
	str r0, [r4]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015720

	thumb_func_start FUN_02015754
FUN_02015754: @ 0x02015754
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #5
	bl FUN_02015550
	cmp r0, #0
	beq _02015768
	movs r1, #0
	ldrsh r1, [r4, r1]
	strh r1, [r0, #0xc]
_02015768:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015754

	thumb_func_start FUN_0201576C
FUN_0201576C: @ 0x0201576C
	push {r4, lr}
	adds r4, r1, #0
	movs r1, #5
	bl FUN_02015550
	cmp r0, #0
	bne _02015780
	movs r0, #0
	strh r0, [r4]
	pop {r4, pc}
_02015780:
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	strh r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_0201576C

	thumb_func_start FUN_02015788
FUN_02015788: @ 0x02015788
	push {r3, r4, r5, lr}
	movs r1, #8
	adds r5, r0, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	beq _020157AA
	ldr r0, _020157B0 @ =0x0001020F
	adds r1, r5, #0
	str r0, [r4]
	movs r0, #4
	bl FUN_02026354
	ldr r1, _020157B4 @ =_020F60DC
	str r0, [r4, #4]
	bl FUN_020269A0
_020157AA:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_020157B0: .4byte 0x0001020F
_020157B4: .4byte _020F60DC
	thumb_func_end FUN_02015788

	thumb_func_start FUN_020157B8
FUN_020157B8: @ 0x020157B8
	push {r4, lr}
	adds r4, r0, #0
	bne _020157C2
	bl FUN_0202551C
_020157C2:
	cmp r4, #0
	beq _020157D6
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _020157D0
	bl FUN_02026380
_020157D0:
	adds r0, r4, #0
	bl FUN_0201AB0C
_020157D6:
	pop {r4, pc}
	thumb_func_end FUN_020157B8

	thumb_func_start FUN_020157D8
FUN_020157D8: @ 0x020157D8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _020157E6
	bl FUN_0202551C
_020157E6:
	cmp r5, #0
	beq _020157EC
	str r4, [r5]
_020157EC:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020157D8

	thumb_func_start FUN_020157F0
FUN_020157F0: @ 0x020157F0
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	str r3, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	ldr r0, [r6]
	adds r5, r1, #0
	str r0, [sp, #8]
	movs r1, #0
	adds r4, r2, #0
	str r1, [sp, #0xc]
	ldr r2, [r6, #4]
	adds r0, r5, #0
	adds r3, r4, #0
	bl FUN_020200FC
	adds r0, r5, #0
	bl FUN_0201D8A0
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020157F0

	thumb_func_start FUN_0201581C
FUN_0201581C: @ 0x0201581C
	ldr r1, _02015830 @ =0x0000FFFF
	movs r2, #0
	strh r1, [r0]
_02015822:
	adds r2, r2, #1
	strh r1, [r0, #4]
	adds r0, r0, #2
	cmp r2, #2
	blt _02015822
	bx lr
	nop
_02015830: .4byte 0x0000FFFF
	thumb_func_end FUN_0201581C

	thumb_func_start FUN_02015834
FUN_02015834: @ 0x02015834
	strh r1, [r0]
	movs r2, #0
	ldr r1, _02015848 @ =0x0000FFFF
	strh r2, [r0, #2]
_0201583C:
	adds r2, r2, #1
	strh r1, [r0, #4]
	adds r0, r0, #2
	cmp r2, #2
	blt _0201583C
	bx lr
	.align 2, 0
_02015848: .4byte 0x0000FFFF
	thumb_func_end FUN_02015834

	thumb_func_start FUN_0201584C
FUN_0201584C: @ 0x0201584C
	push {r4, lr}
	movs r1, #4
	adds r4, r0, #0
	bl FUN_02015834
	movs r0, #5
	strh r0, [r4, #2]
	pop {r4, pc}
	thumb_func_end FUN_0201584C

	thumb_func_start FUN_0201585C
FUN_0201585C: @ 0x0201585C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldrb r1, [r4]
	adds r5, r0, #0
	bl FUN_02015834
	ldrb r0, [r4, #1]
	strh r0, [r5, #2]
	movs r0, #2
	ldrsb r0, [r4, r0]
	cmp r0, #0
	ble _02015880
	bl FUN_02015DC8
	ldrh r1, [r4, #4]
	bl FUN_02015B60
	strh r0, [r5, #4]
_02015880:
	movs r0, #3
	ldrsb r0, [r4, r0]
	cmp r0, #0
	ble _02015894
	bl FUN_02015DC8
	ldrh r1, [r4, #6]
	bl FUN_02015B60
	strh r0, [r5, #6]
_02015894:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201585C

	thumb_func_start FUN_02015898
FUN_02015898: @ 0x02015898
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r0, [sp]
	adds r0, r1, #0
	str r1, [sp, #4]
	bl FUN_0200BD08
	ldr r5, [sp]
	ldr r7, _020158FC @ =0x0000FFFF
	adds r6, r0, #0
	movs r4, #0
_020158AE:
	ldrh r2, [r5, #4]
	cmp r2, r7
	beq _020158C4
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0200C528
	adds r4, r4, #1
	adds r5, r5, #2
	cmp r4, #2
	blt _020158AE
_020158C4:
	ldr r2, [sp]
	movs r0, #1
	ldrh r2, [r2]
	movs r1, #0x1b
	lsls r3, r2, #1
	ldr r2, _02015900 @ =_020F60E0
	ldrh r2, [r2, r3]
	ldr r3, [sp, #4]
	bl FUN_0200BAF8
	adds r5, r0, #0
	ldr r2, [sp]
	ldr r3, [sp, #4]
	ldrh r2, [r2, #2]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0200BC4C
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_0200BB44
	adds r0, r6, #0
	bl FUN_0200BDA0
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020158FC: .4byte 0x0000FFFF
_02015900: .4byte _020F60E0
	thumb_func_end FUN_02015898

	thumb_func_start FUN_02015904
FUN_02015904: @ 0x02015904
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	ldrh r1, [r4]
	movs r0, #0x1b
	lsls r2, r1, #1
	ldr r1, _0201591C @ =_020F60E0
	ldrh r1, [r1, r2]
	ldrh r2, [r4, #2]
	bl FUN_0200B9C4
	pop {r4, pc}
	.align 2, 0
_0201591C: .4byte _020F60E0
	thumb_func_end FUN_02015904

	thumb_func_start FUN_02015920
FUN_02015920: @ 0x02015920
	ldrh r1, [r0]
	ldr r0, _02015930 @ =0x0000FFFF
	cmp r1, r0
	beq _0201592C
	movs r0, #1
	bx lr
_0201592C:
	movs r0, #0
	bx lr
	.align 2, 0
_02015930: .4byte 0x0000FFFF
	thumb_func_end FUN_02015920

	thumb_func_start FUN_02015934
FUN_02015934: @ 0x02015934
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	bl FUN_02015964
	movs r3, #0
	cmp r0, #0
	bls _0201595A
	ldr r1, _02015960 @ =0x0000FFFF
_02015948:
	ldrh r2, [r4, #4]
	cmp r2, r1
	bne _02015952
	movs r0, #0
	pop {r4, pc}
_02015952:
	adds r3, r3, #1
	adds r4, r4, #2
	cmp r3, r0
	blo _02015948
_0201595A:
	movs r0, #1
	pop {r4, pc}
	nop
_02015960: .4byte 0x0000FFFF
	thumb_func_end FUN_02015934

	thumb_func_start FUN_02015964
FUN_02015964: @ 0x02015964
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #5
	blo _02015972
	bl FUN_0202551C
_02015972:
	adds r0, r5, #0
	bl FUN_02015A38
	cmp r4, r0
	blo _02015980
	bl FUN_0202551C
_02015980:
	ldr r1, _020159D4 @ =_020F60E0
	lsls r2, r5, #1
	ldrh r1, [r1, r2]
	movs r0, #0x1b
	adds r2, r4, #0
	movs r3, #0
	bl FUN_0200B9C4
	str r0, [sp]
	bl FUN_02026AA4
	adds r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _020159D8 @ =0x0000FFFF
	movs r5, #0
	cmp r1, r0
	beq _020159C8
	adds r7, r0, #0
	subs r6, r0, #1
_020159A6:
	cmp r1, r6
	bne _020159C0
	adds r0, r4, #0
	bl FUN_0201FB5C
	cmp r0, #0
	beq _020159B6
	adds r5, r5, #1
_020159B6:
	adds r0, r4, #0
	bl FUN_0201FB1C
	adds r4, r0, #0
	b _020159C2
_020159C0:
	adds r4, r4, #2
_020159C2:
	ldrh r1, [r4]
	cmp r1, r7
	bne _020159A6
_020159C8:
	ldr r0, [sp]
	bl FUN_02026380
	adds r0, r5, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020159D4: .4byte _020F60E0
_020159D8: .4byte 0x0000FFFF
	thumb_func_end FUN_02015964

	thumb_func_start FUN_020159DC
FUN_020159DC: @ 0x020159DC
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r0, [r0, #4]
	bx lr
	thumb_func_end FUN_020159DC

	thumb_func_start FUN_020159E4
FUN_020159E4: @ 0x020159E4
	ldrh r0, [r0]
	bx lr
	thumb_func_end FUN_020159E4

	thumb_func_start FUN_020159E8
FUN_020159E8: @ 0x020159E8
	ldrh r0, [r0, #2]
	bx lr
	thumb_func_end FUN_020159E8

	thumb_func_start FUN_020159EC
FUN_020159EC: @ 0x020159EC
	push {r3, r4}
	ldrh r3, [r0]
	ldrh r2, [r1]
	cmp r3, r2
	bne _020159FE
	ldrh r3, [r0, #2]
	ldrh r2, [r1, #2]
	cmp r3, r2
	beq _02015A04
_020159FE:
	movs r0, #0
	pop {r3, r4}
	bx lr
_02015A04:
	movs r4, #0
_02015A06:
	ldrh r3, [r0, #4]
	ldrh r2, [r1, #4]
	cmp r3, r2
	beq _02015A14
	movs r0, #0
	pop {r3, r4}
	bx lr
_02015A14:
	adds r4, r4, #1
	adds r1, r1, #2
	adds r0, r0, #2
	cmp r4, #2
	blt _02015A06
	movs r0, #1
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_020159EC

	thumb_func_start FUN_02015A24
FUN_02015A24: @ 0x02015A24
	ldrh r2, [r1]
	strh r2, [r0]
	ldrh r2, [r1, #2]
	strh r2, [r0, #2]
	ldrh r2, [r1, #4]
	strh r2, [r0, #4]
	ldrh r1, [r1, #6]
	strh r1, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015A24

	thumb_func_start FUN_02015A38
FUN_02015A38: @ 0x02015A38
	cmp r0, #5
	bhs _02015A40
	movs r0, #0x14
	bx lr
_02015A40:
	movs r0, #0
	bx lr
	thumb_func_end FUN_02015A38

	thumb_func_start FUN_02015A44
FUN_02015A44: @ 0x02015A44
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r4, #5
	blo _02015A54
	bl FUN_0202551C
_02015A54:
	strh r4, [r5]
	strh r6, [r5, #2]
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02015A44

	thumb_func_start FUN_02015A5C
FUN_02015A5C: @ 0x02015A5C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r4, #2
	blo _02015A6C
	bl FUN_0202551C
_02015A6C:
	lsls r0, r4, #1
	adds r0, r5, r0
	strh r6, [r0, #4]
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02015A5C

	thumb_func_start FUN_02015A74
FUN_02015A74: @ 0x02015A74
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4]
	ldrh r1, [r4, #2]
	bl FUN_02015964
	cmp r0, #2
	bhs _02015A94
	lsls r1, r0, #1
	adds r2, r4, r1
	ldr r1, _02015A98 @ =0x0000FFFF
_02015A8A:
	adds r0, r0, #1
	strh r1, [r2, #4]
	adds r2, r2, #2
	cmp r0, #2
	blo _02015A8A
_02015A94:
	pop {r4, pc}
	nop
_02015A98: .4byte 0x0000FFFF
	thumb_func_end FUN_02015A74

	thumb_func_start FUN_02015A9C
FUN_02015A9C: @ 0x02015A9C
	push {r3, r4, r5, r6, r7, lr}
	movs r1, #0x30
	adds r6, r0, #0
	bl FUN_0201AA8C
	ldr r4, _02015AD0 @ =_020F612C
	str r0, [sp]
	movs r7, #0
	adds r5, r0, #0
_02015AAE:
	ldr r0, [sp]
	movs r1, #0x1b
	str r6, [r0]
	ldrh r2, [r4]
	movs r0, #1
	adds r3, r6, #0
	bl FUN_0200BAF8
	str r0, [r5, #4]
	adds r7, r7, #1
	adds r4, r4, #2
	adds r5, r5, #4
	cmp r7, #0xb
	blt _02015AAE
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02015AD0: .4byte _020F612C
	thumb_func_end FUN_02015A9C

	thumb_func_start FUN_02015AD4
FUN_02015AD4: @ 0x02015AD4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r4, #0
	adds r5, r6, #0
_02015ADC:
	ldr r0, [r5, #4]
	bl FUN_0200BB44
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #0xb
	blt _02015ADC
	adds r0, r6, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02015AD4

	thumb_func_start FUN_02015AF4
FUN_02015AF4: @ 0x02015AF4
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r2, #0
	adds r0, r1, #0
	add r1, sp, #4
	add r2, sp, #0
	bl FUN_02015BB0
	ldr r0, [sp, #4]
	ldr r1, [sp]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #4]
	adds r2, r4, #0
	bl FUN_0200BB6C
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015AF4

	thumb_func_start FUN_02015B1C
FUN_02015B1C: @ 0x02015B1C
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r1, #0
	ldr r1, _02015B58 @ =0x0000FFFF
	cmp r0, r1
	beq _02015B4C
	add r1, sp, #8
	add r2, sp, #4
	bl FUN_02015BB0
	ldr r0, [sp, #8]
	movs r3, #0
	lsls r1, r0, #1
	ldr r0, _02015B5C @ =_020F612C
	ldrh r0, [r0, r1]
	str r0, [sp, #8]
	str r4, [sp]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	movs r0, #0x1b
	bl FUN_0200B8D4
	add sp, #0xc
	pop {r3, r4, pc}
_02015B4C:
	adds r0, r4, #0
	bl FUN_020263AC
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02015B58: .4byte 0x0000FFFF
_02015B5C: .4byte _020F612C
	thumb_func_end FUN_02015B1C

	thumb_func_start FUN_02015B60
FUN_02015B60: @ 0x02015B60
	push {r4, r5}
	ldr r4, _02015BA4 @ =_020F612C
	movs r2, #0
_02015B66:
	ldrh r3, [r4]
	cmp r0, r3
	bne _02015B94
	movs r4, #0
	adds r3, r4, #0
	cmp r2, #0
	bls _02015B8A
	ldr r0, _02015BA8 @ =_020F6142
_02015B76:
	lsls r5, r4, #1
	ldrh r5, [r0, r5]
	adds r4, r4, #1
	lsls r4, r4, #0x10
	adds r3, r3, r5
	lsls r3, r3, #0x10
	lsrs r4, r4, #0x10
	lsrs r3, r3, #0x10
	cmp r4, r2
	blo _02015B76
_02015B8A:
	adds r0, r3, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5}
	bx lr
_02015B94:
	adds r2, r2, #1
	adds r4, r4, #2
	cmp r2, #0xb
	blo _02015B66
	ldr r0, _02015BAC @ =0x0000FFFF
	pop {r4, r5}
	bx lr
	nop
_02015BA4: .4byte _020F612C
_02015BA8: .4byte _020F6142
_02015BAC: .4byte 0x0000FFFF
	thumb_func_end FUN_02015B60

	thumb_func_start FUN_02015BB0
FUN_02015BB0: @ 0x02015BB0
	push {r3, r4, r5, r6}
	ldr r3, _02015BE8 @ =0x00000FFF
	ldr r6, _02015BEC @ =_020F6142
	ands r3, r0
	movs r0, #0
	adds r5, r0, #0
_02015BBC:
	ldrh r4, [r6]
	adds r0, r0, r4
	cmp r3, r0
	bhs _02015BD8
	str r5, [r1]
	ldr r1, _02015BEC @ =_020F6142
	lsls r4, r5, #1
	ldrh r1, [r1, r4]
	subs r0, r0, r1
	subs r0, r3, r0
	str r0, [r2]
	movs r0, #1
	pop {r3, r4, r5, r6}
	bx lr
_02015BD8:
	adds r5, r5, #1
	adds r6, r6, #2
	cmp r5, #0xb
	blo _02015BBC
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
	nop
_02015BE8: .4byte 0x00000FFF
_02015BEC: .4byte _020F6142
	thumb_func_end FUN_02015BB0

	thumb_func_start FUN_02015BF0
FUN_02015BF0: @ 0x02015BF0
	movs r0, #8
	bx lr
	thumb_func_end FUN_02015BF0

	thumb_func_start FUN_02015BF4
FUN_02015BF4: @ 0x02015BF4
	push {r3, lr}
	movs r2, #0
	str r2, [r0]
	ldr r3, _02015C20 @ =_020F6120
	str r2, [r0, #4]
_02015BFE:
	ldrb r1, [r3]
	cmp r1, #2
	bne _02015C10
	ldr r1, _02015C24 @ =_020F6121
	lsls r2, r2, #1
	ldrb r1, [r1, r2]
	bl FUN_02015CFC
	b _02015C18
_02015C10:
	adds r2, r2, #1
	adds r3, r3, #2
	cmp r2, #6
	blo _02015BFE
_02015C18:
	movs r0, #0x1e
	bl FUN_0202893C
	pop {r3, pc}
	.align 2, 0
_02015C20: .4byte _020F6120
_02015C24: .4byte _020F6121
	thumb_func_end FUN_02015BF4

	thumb_func_start FUN_02015C28
FUN_02015C28: @ 0x02015C28
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x1e
	bl FUN_02028900
	adds r0, r4, #0
	movs r1, #0x1e
	bl FUN_020272C8
	pop {r4, pc}
	thumb_func_end FUN_02015C28

	thumb_func_start FUN_02015C3C
FUN_02015C3C: @ 0x02015C3C
	ldr r0, [r0, #4]
	adds r2, r0, #0
	lsrs r2, r1
	movs r0, #1
	ands r0, r2
	bx lr
	thumb_func_end FUN_02015C3C

	thumb_func_start FUN_02015C48
FUN_02015C48: @ 0x02015C48
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r2, #0
	ldr r3, [r4, #4]
	adds r5, r2, #0
	movs r0, #1
_02015C54:
	adds r1, r3, #0
	lsrs r1, r2
	tst r1, r0
	bne _02015C5E
	adds r5, r5, #1
_02015C5E:
	adds r2, r2, #1
	cmp r2, #0x20
	blo _02015C54
	cmp r5, #0
	beq _02015CA0
	bl FUN_0201FD44
	adds r1, r5, #0
	blx FUN_020F2BA4
	ldr r3, [r4, #4]
	movs r5, #0
	movs r0, #1
_02015C78:
	adds r2, r3, #0
	lsrs r2, r5
	tst r2, r0
	bne _02015C9A
	cmp r1, #0
	bne _02015C98
	movs r0, #1
	ldr r1, [r4, #4]
	lsls r0, r5
	orrs r0, r1
	str r0, [r4, #4]
	movs r0, #0x1e
	bl FUN_0202893C
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
_02015C98:
	subs r1, r1, #1
_02015C9A:
	adds r5, r5, #1
	cmp r5, #0x20
	blo _02015C78
_02015CA0:
	movs r0, #0x1e
	bl FUN_0202893C
	movs r0, #0x20
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015C48

	thumb_func_start FUN_02015CAC
FUN_02015CAC: @ 0x02015CAC
	ldr r3, [r0, #4]
	movs r2, #0
	movs r0, #1
_02015CB2:
	adds r1, r3, #0
	lsrs r1, r2
	tst r1, r0
	bne _02015CBE
	movs r0, #0
	bx lr
_02015CBE:
	adds r2, r2, #1
	cmp r2, #0x20
	blo _02015CB2
	movs r0, #1
	bx lr
	thumb_func_end FUN_02015CAC

	thumb_func_start FUN_02015CC8
FUN_02015CC8: @ 0x02015CC8
	push {r3, r4}
	movs r3, #0
	ldr r4, _02015CEC @ =_020F6142
	adds r2, r3, #0
_02015CD0:
	ldrh r1, [r4]
	adds r2, r2, #1
	adds r4, r4, #2
	adds r1, r3, r1
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	cmp r2, #9
	blt _02015CD0
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r3, r4}
	bx lr
	nop
_02015CEC: .4byte _020F6142
	thumb_func_end FUN_02015CC8

	thumb_func_start FUN_02015CF0
FUN_02015CF0: @ 0x02015CF0
	ldr r0, [r0]
	adds r2, r0, #0
	lsrs r2, r1
	movs r0, #1
	ands r0, r2
	bx lr
	thumb_func_end FUN_02015CF0

	thumb_func_start FUN_02015CFC
FUN_02015CFC: @ 0x02015CFC
	movs r2, #1
	ldr r3, [r0]
	lsls r2, r1
	adds r1, r3, #0
	orrs r1, r2
	str r1, [r0]
	ldr r3, _02015D10 @ =FUN_0202893C
	movs r0, #0x1e
	bx r3
	nop
_02015D10: .4byte FUN_0202893C
	thumb_func_end FUN_02015CFC

	thumb_func_start FUN_02015D14
FUN_02015D14: @ 0x02015D14
	push {r4, r5, lr}
	sub sp, #0xc
	movs r1, #8
	adds r5, r0, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r1, #0
	strb r1, [r4]
	strb r1, [r4, #1]
	strb r1, [r4, #2]
	strb r1, [r4, #3]
	strb r1, [r4, #4]
	strb r1, [r4, #5]
	strb r1, [r4, #6]
	strb r1, [r4, #7]
	str r1, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	movs r0, #0xd6
	adds r2, r1, #0
	adds r3, r5, #0
	bl FUN_02007AC4
	str r0, [r4, #4]
	ldr r0, [sp, #8]
	lsrs r0, r0, #2
	str r0, [r4]
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015D14

	thumb_func_start FUN_02015D54
FUN_02015D54: @ 0x02015D54
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015D54

	thumb_func_start FUN_02015D68
FUN_02015D68: @ 0x02015D68
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_02015D68

	thumb_func_start FUN_02015D6C
FUN_02015D6C: @ 0x02015D6C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02015D7A
	bl FUN_0202551C
_02015D7A:
	ldr r0, [r5]
	cmp r0, r4
	bhi _02015D84
	ldr r0, _02015D90 @ =0x0000FFFF
	pop {r3, r4, r5, pc}
_02015D84:
	ldr r1, [r5, #4]
	lsls r0, r4, #2
	ldr r0, [r1, r0]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r3, r4, r5, pc}
	.align 2, 0
_02015D90: .4byte 0x0000FFFF
	thumb_func_end FUN_02015D6C

	thumb_func_start FUN_02015D94
FUN_02015D94: @ 0x02015D94
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02015DA2
	bl FUN_0202551C
_02015DA2:
	ldr r3, [r5]
	movs r1, #0
	cmp r3, #0
	bls _02015DC0
	ldr r2, [r5, #4]
_02015DAC:
	ldr r0, [r2]
	cmp r4, r0
	bne _02015DB8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	pop {r3, r4, r5, pc}
_02015DB8:
	adds r1, r1, #1
	adds r2, r2, #4
	cmp r1, r3
	blo _02015DAC
_02015DC0:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015D94

	thumb_func_start FUN_02015DC8
FUN_02015DC8: @ 0x02015DC8
	cmp r0, #0xb
	blt _02015DCE
	movs r0, #0
_02015DCE:
	lsls r1, r0, #1
	ldr r0, _02015DD8 @ =_020F612C
	ldrh r0, [r0, r1]
	bx lr
	nop
_02015DD8: .4byte _020F612C
	thumb_func_end FUN_02015DC8

	thumb_func_start FUN_02015DDC
FUN_02015DDC: @ 0x02015DDC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r1, #0x18
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _02015DF0
	bl FUN_0202551C
_02015DF0:
	ldr r0, [r5]
	ldr r1, [r5, #0xc]
	bl FUN_0201605C
	str r0, [r4]
	ldr r0, [r5]
	str r0, [r4, #4]
	ldr r0, [r5, #4]
	ldr r1, [r5, #0xc]
	bl FUN_0201608C
	str r0, [r4, #8]
	ldr r0, [r5, #4]
	str r0, [r4, #0xc]
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl FUN_020160BC
	str r0, [r4, #0x10]
	ldr r0, [r5, #8]
	str r0, [r4, #0x14]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015DDC

	thumb_func_start FUN_02015E20
FUN_02015E20: @ 0x02015E20
	push {r4, lr}
	adds r4, r0, #0
	bne _02015E2A
	bl FUN_0202551C
_02015E2A:
	ldr r0, [r4]
	cmp r0, #0
	bne _02015E34
	bl FUN_0202551C
_02015E34:
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _02015E3E
	bl FUN_0202551C
_02015E3E:
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _02015E48
	bl FUN_0202551C
_02015E48:
	ldr r0, [r4]
	bl FUN_0201AB0C
	ldr r0, [r4, #8]
	bl FUN_0201AB0C
	ldr r0, [r4, #0x10]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02015E20

	thumb_func_start FUN_02015E64
FUN_02015E64: @ 0x02015E64
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _02015E98 @ =0x04000444
	movs r6, #0
	str r6, [r0]
	ldr r0, [r5, #4]
	cmp r0, #0
	ble _02015E8E
	adds r4, r6, #0
_02015E76:
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r1, [r0, #0x20]
	cmp r1, #0
	beq _02015E84
	bl FUN_020161CC
_02015E84:
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0x40
	cmp r6, r0
	blt _02015E76
_02015E8E:
	ldr r0, _02015E9C @ =0x04000448
	movs r1, #1
	str r1, [r0]
	pop {r4, r5, r6, pc}
	nop
_02015E98: .4byte 0x04000444
_02015E9C: .4byte 0x04000448
	thumb_func_end FUN_02015E64

	thumb_func_start FUN_02015EA0
FUN_02015EA0: @ 0x02015EA0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_02016118
	adds r4, r0, #0
	bne _02015EB2
	bl FUN_0202551C
_02015EB2:
	ldr r0, [r5, #4]
	ldr r0, [r0, #8]
	cmp r0, #0
	beq _02015EBE
	bl FUN_0202551C
_02015EBE:
	ldr r0, [r5, #4]
	bl FUN_02016170
	str r0, [r4]
	cmp r0, #0
	bne _02015ECE
	bl FUN_0202551C
_02015ECE:
	ldr r0, [r5, #4]
	ldr r1, [r4]
	adds r2, r4, #4
	bl FUN_02016198
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02015EA0

	thumb_func_start FUN_02015EDC
FUN_02015EDC: @ 0x02015EDC
	push {r4, lr}
	ldr r1, _02015EF0 @ =_02110928
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r1]
	blx r1
	adds r0, r4, #0
	bl FUN_02016044
	pop {r4, pc}
	.align 2, 0
_02015EF0: .4byte _02110928
	thumb_func_end FUN_02015EDC

	thumb_func_start FUN_02015EF4
FUN_02015EF4: @ 0x02015EF4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	movs r6, #0
	cmp r0, #0
	ble _02015F1A
	adds r4, r6, #0
_02015F02:
	ldr r1, [r5, #8]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _02015F10
	adds r0, r1, r4
	bl FUN_02015EDC
_02015F10:
	ldr r0, [r5, #0xc]
	adds r6, r6, #1
	adds r4, #0x28
	cmp r6, r0
	blt _02015F02
_02015F1A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02015EF4

	thumb_func_start FUN_02015F1C
FUN_02015F1C: @ 0x02015F1C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_02016144
	adds r4, r0, #0
	bne _02015F2E
	bl FUN_0202551C
_02015F2E:
	ldr r0, [r5, #8]
	bl FUN_02016184
	str r0, [r4]
	cmp r0, #0
	bne _02015F3E
	bl FUN_0202551C
_02015F3E:
	ldr r0, [r5, #4]
	ldr r1, [r4]
	adds r2, r4, #4
	bl FUN_020161A8
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02015F1C

	thumb_func_start FUN_02015F4C
FUN_02015F4C: @ 0x02015F4C
	push {r4, lr}
	ldr r1, _02015F60 @ =_02110930
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r1]
	blx r1
	adds r0, r4, #0
	bl FUN_02016050
	pop {r4, pc}
	.align 2, 0
_02015F60: .4byte _02110930
	thumb_func_end FUN_02015F4C

	thumb_func_start FUN_02015F64
FUN_02015F64: @ 0x02015F64
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x14]
	movs r6, #0
	cmp r0, #0
	ble _02015F8A
	adds r4, r6, #0
_02015F72:
	ldr r1, [r5, #0x10]
	ldr r0, [r1, r4]
	cmp r0, #0
	beq _02015F80
	adds r0, r1, r4
	bl FUN_02015F4C
_02015F80:
	ldr r0, [r5, #0x14]
	adds r6, r6, #1
	adds r4, #0x18
	cmp r6, r0
	blt _02015F72
_02015F8A:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02015F64

	thumb_func_start FUN_02015F8C
FUN_02015F8C: @ 0x02015F8C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_020160EC
	adds r4, r0, #0
	bne _02015F9E
	bl FUN_0202551C
_02015F9E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0201630C
	movs r0, #1
	str r0, [r4, #0x1c]
	str r0, [r4, #0x20]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02015F8C

	thumb_func_start FUN_02015FB0
FUN_02015FB0: @ 0x02015FB0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02015FBE
	bl FUN_0202551C
_02015FBE:
	str r4, [r5, #0x20]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02015FB0

	thumb_func_start FUN_02015FC4
FUN_02015FC4: @ 0x02015FC4
	strh r1, [r0]
	strh r2, [r0, #2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FC4

	thumb_func_start FUN_02015FCC
FUN_02015FCC: @ 0x02015FCC
	ldrh r1, [r0, #2]
	ldrh r0, [r0]
	lsls r1, r1, #0x10
	orrs r0, r1
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FCC

	thumb_func_start FUN_02015FD8
FUN_02015FD8: @ 0x02015FD8
	strh r1, [r0, #4]
	strh r2, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FD8

	thumb_func_start FUN_02015FE0
FUN_02015FE0: @ 0x02015FE0
	strh r1, [r0, #8]
	strh r2, [r0, #0xa]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FE0

	thumb_func_start FUN_02015FE8
FUN_02015FE8: @ 0x02015FE8
	ldrh r1, [r0, #0xa]
	ldrh r0, [r0, #8]
	lsls r1, r1, #0x10
	orrs r0, r1
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FE8

	thumb_func_start FUN_02015FF4
FUN_02015FF4: @ 0x02015FF4
	str r1, [r0, #0x14]
	bx lr
	thumb_func_end FUN_02015FF4

	thumb_func_start FUN_02015FF8
FUN_02015FF8: @ 0x02015FF8
	ldr r0, [r0, #0x14]
	bx lr
	thumb_func_end FUN_02015FF8

	thumb_func_start FUN_02015FFC
FUN_02015FFC: @ 0x02015FFC
	adds r0, #0x3e
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02015FFC

	thumb_func_start FUN_02016004
FUN_02016004: @ 0x02016004
	str r1, [r0, #0x24]
	bx lr
	thumb_func_end FUN_02016004

	thumb_func_start FUN_02016008
FUN_02016008: @ 0x02016008
	str r1, [r0, #0x28]
	bx lr
	thumb_func_end FUN_02016008

	thumb_func_start FUN_0201600C
FUN_0201600C: @ 0x0201600C
	str r1, [r0, #0x2c]
	bx lr
	thumb_func_end FUN_0201600C

	thumb_func_start FUN_02016010
FUN_02016010: @ 0x02016010
	str r1, [r0, #0x30]
	bx lr
	thumb_func_end FUN_02016010

	thumb_func_start FUN_02016014
FUN_02016014: @ 0x02016014
	cmp r1, #0
	bne _0201601C
	str r2, [r0, #0x34]
	bx lr
_0201601C:
	str r2, [r0, #0x38]
	bx lr
	thumb_func_end FUN_02016014

	thumb_func_start FUN_02016020
FUN_02016020: @ 0x02016020
	str r1, [r0, #0x18]
	bx lr
	thumb_func_end FUN_02016020

	thumb_func_start FUN_02016024
FUN_02016024: @ 0x02016024
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	movs r2, #0x40
	blx FUN_020E5B44
	adds r0, r4, #0
	movs r1, #0x1f
	adds r0, #0x3e
	strb r1, [r0]
	ldr r0, _02016040 @ =0x00007FFF
	strh r0, [r4, #0x3c]
	pop {r4, pc}
	nop
_02016040: .4byte 0x00007FFF
	thumb_func_end FUN_02016024

	thumb_func_start FUN_02016044
FUN_02016044: @ 0x02016044
	ldr r3, _0201604C @ =FUN_020B8008
	movs r1, #0
	stm r0!, {r1}
	bx r3
	.align 2, 0
_0201604C: .4byte FUN_020B8008
	thumb_func_end FUN_02016044

	thumb_func_start FUN_02016050
FUN_02016050: @ 0x02016050
	ldr r3, _02016058 @ =FUN_020B804C
	movs r1, #0
	stm r0!, {r1}
	bx r3
	.align 2, 0
_02016058: .4byte FUN_020B804C
	thumb_func_end FUN_02016050

	thumb_func_start FUN_0201605C
FUN_0201605C: @ 0x0201605C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r0, r1, #0
	lsls r1, r6, #6
	bl FUN_0201AA8C
	adds r7, r0, #0
	bne _02016070
	bl FUN_0202551C
_02016070:
	movs r4, #0
	cmp r6, #0
	ble _02016086
	adds r5, r7, #0
_02016078:
	adds r0, r5, #0
	bl FUN_02016024
	adds r4, r4, #1
	adds r5, #0x40
	cmp r4, r6
	blt _02016078
_02016086:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201605C

	thumb_func_start FUN_0201608C
FUN_0201608C: @ 0x0201608C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r0, r1, #0
	movs r1, #0x28
	muls r1, r6, r1
	bl FUN_0201AA8C
	adds r7, r0, #0
	bne _020160A2
	bl FUN_0202551C
_020160A2:
	movs r4, #0
	cmp r6, #0
	ble _020160B8
	adds r5, r7, #0
_020160AA:
	adds r0, r5, #0
	bl FUN_02016044
	adds r4, r4, #1
	adds r5, #0x28
	cmp r4, r6
	blt _020160AA
_020160B8:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201608C

	thumb_func_start FUN_020160BC
FUN_020160BC: @ 0x020160BC
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r0, r1, #0
	movs r1, #0x18
	muls r1, r6, r1
	bl FUN_0201AA8C
	adds r7, r0, #0
	bne _020160D2
	bl FUN_0202551C
_020160D2:
	movs r4, #0
	cmp r6, #0
	ble _020160E8
	adds r5, r7, #0
_020160DA:
	adds r0, r5, #0
	bl FUN_02016050
	adds r4, r4, #1
	adds r5, #0x18
	cmp r4, r6
	blt _020160DA
_020160E8:
	adds r0, r7, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020160BC

	thumb_func_start FUN_020160EC
FUN_020160EC: @ 0x020160EC
	push {r3, r4}
	ldr r4, [r0, #4]
	movs r1, #0
	cmp r4, #0
	ble _02016110
	ldr r3, [r0]
	adds r2, r3, #0
_020160FA:
	ldr r0, [r2, #0x1c]
	cmp r0, #0
	bne _02016108
	lsls r0, r1, #6
	adds r0, r3, r0
	pop {r3, r4}
	bx lr
_02016108:
	adds r1, r1, #1
	adds r2, #0x40
	cmp r1, r4
	blt _020160FA
_02016110:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020160EC

	thumb_func_start FUN_02016118
FUN_02016118: @ 0x02016118
	push {r3, r4}
	ldr r4, [r0, #4]
	movs r1, #0
	cmp r4, #0
	ble _0201613E
	ldr r3, [r0, #8]
	adds r2, r3, #0
_02016126:
	ldr r0, [r2]
	cmp r0, #0
	bne _02016136
	movs r0, #0x28
	muls r0, r1, r0
	adds r0, r3, r0
	pop {r3, r4}
	bx lr
_02016136:
	adds r1, r1, #1
	adds r2, #0x28
	cmp r1, r4
	blt _02016126
_0201613E:
	movs r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02016118

	thumb_func_start FUN_02016144
FUN_02016144: @ 0x02016144
	push {r3, r4}
	ldr r4, [r0, #4]
	movs r1, #0
	cmp r4, #0
	ble _0201616A
	ldr r3, [r0, #0x10]
	adds r2, r3, #0
_02016152:
	ldr r0, [r2]
	cmp r0, #0
	bne _02016162
	movs r0, #0x18
	muls r0, r1, r0
	adds r0, r3, r0
	pop {r3, r4}
	bx lr
_02016162:
	adds r1, r1, #1
	adds r2, #0x18
	cmp r1, r4
	blt _02016152
_0201616A:
	movs r0, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02016144

	thumb_func_start FUN_02016170
FUN_02016170: @ 0x02016170
	push {r3, lr}
	ldr r3, _02016180 @ =_02110924
	movs r1, #0
	ldr r0, [r0, #0x10]
	ldr r3, [r3]
	adds r2, r1, #0
	blx r3
	pop {r3, pc}
	.align 2, 0
_02016180: .4byte _02110924
	thumb_func_end FUN_02016170

	thumb_func_start FUN_02016184
FUN_02016184: @ 0x02016184
	push {r3, lr}
	ldr r3, _02016194 @ =_0211092C
	movs r1, #0
	ldr r3, [r3]
	lsls r0, r0, #5
	adds r2, r1, #0
	blx r3
	pop {r3, pc}
	.align 2, 0
_02016194: .4byte _0211092C
	thumb_func_end FUN_02016184

	thumb_func_start FUN_02016198
FUN_02016198: @ 0x02016198
	push {r3, lr}
	lsls r1, r1, #0x10
	adds r3, r2, #0
	lsrs r1, r1, #0xd
	movs r2, #0
	blx FUN_020B82CC
	pop {r3, pc}
	thumb_func_end FUN_02016198

	thumb_func_start FUN_020161A8
FUN_020161A8: @ 0x020161A8
	push {r3, r4, r5, lr}
	adds r3, r2, #0
	ldr r2, _020161C8 @ =0xFFFF0000
	adds r5, r0, #0
	ands r2, r1
	lsrs r2, r2, #0x10
	lsls r1, r1, #0x10
	ldr r4, [r5, #8]
	lsls r2, r2, #3
	str r2, [r5, #8]
	lsrs r1, r1, #0xd
	movs r2, #0
	blx FUN_020B86CC
	str r4, [r5, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
_020161C8: .4byte 0xFFFF0000
	thumb_func_end FUN_020161A8

	thumb_func_start FUN_020161CC
FUN_020161CC: @ 0x020161CC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	ldr r7, _020162EC @ =0x04000444
	movs r6, #0
	adds r5, r0, #0
	str r6, [r7]
	ldrh r1, [r5, #0x3c]
	ldr r0, _020162F0 @ =0x7FFF8000
	orrs r0, r1
	str r0, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, _020162F4 @ =0x00004210
	adds r0, #0x80
	str r1, [r0]
	ldr r3, [r5, #0x24]
	ldr r4, [r3, #8]
	ldr r2, [r3, #0x10]
	ldr r1, [r3, #4]
	ldr r0, [r3]
	lsls r3, r2, #0x1d
	lsls r2, r1, #0x17
	lsls r1, r0, #0x14
	ldr r0, [r5, #0x28]
	lsls r4, r4, #0x1a
	lsrs r0, r0, #3
	orrs r4, r0
	movs r0, #1
	lsls r0, r0, #0x1e
	orrs r0, r4
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	str r0, [r7, #0x64]
	ldr r0, [r5, #0x24]
	ldr r0, [r0, #8]
	cmp r0, #2
	bne _02016218
	movs r6, #1
_02016218:
	ldr r0, [r5, #0x30]
	ldr r1, [r5, #0x2c]
	lsls r0, r0, #5
	adds r1, r1, r0
	movs r0, #4
	subs r0, r0, r6
	lsrs r1, r0
	ldr r2, _020162F8 @ =0x040004AC
	adds r0, r5, #0
	str r1, [r2]
	adds r0, #0x3e
	ldrb r0, [r0]
	subs r2, #8
	lsls r1, r0, #0x10
	movs r0, #0xc0
	orrs r0, r1
	str r0, [r2]
	ldr r0, [r5, #0x34]
	cmp r0, #0
	beq _0201624A
	movs r0, #8
	ldrsh r0, [r5, r0]
	movs r7, #0
	str r0, [sp, #0x14]
	b _02016252
_0201624A:
	movs r0, #8
	ldrsh r7, [r5, r0]
	movs r0, #0
	str r0, [sp, #0x14]
_02016252:
	ldr r0, [r5, #0x38]
	cmp r0, #0
	beq _02016260
	movs r0, #0xa
	ldrsh r6, [r5, r0]
	movs r4, #0
	b _02016266
_02016260:
	movs r0, #0xa
	ldrsh r4, [r5, r0]
	movs r6, #0
_02016266:
	ldr r0, [r5, #0x14]
	movs r1, #6
	lsls r2, r0, #0xc
	movs r0, #2
	ldrsh r0, [r5, r0]
	ldrsh r1, [r5, r1]
	movs r3, #4
	ldrsh r3, [r5, r3]
	adds r0, r0, r1
	lsls r1, r0, #0xc
	movs r0, #0
	ldrsh r0, [r5, r0]
	adds r0, r0, r3
	ldr r3, _020162FC @ =0x04000470
	lsls r0, r0, #0xc
	str r0, [r3]
	str r1, [r3]
	str r2, [r3]
	ldr r0, [r5, #0x18]
	ldr r1, _02016300 @ =0x021094DC
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r0, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r0, [r1, r0]
	ldrsh r1, [r1, r2]
	blx FUN_020CFC30
	ldr r2, [r5, #0x10]
	ldr r0, [r5, #0xc]
	ldr r1, _02016304 @ =0x0400046C
	movs r3, #8
	str r0, [r1]
	str r2, [r1]
	lsrs r0, r1, #0xe
	str r0, [r1]
	movs r2, #4
	movs r0, #6
	ldrsh r2, [r5, r2]
	ldrsh r0, [r5, r0]
	rsbs r2, r2, #0
	rsbs r0, r0, #0
	lsls r2, r2, #0xc
	lsls r0, r0, #0xc
	str r2, [r1, #4]
	str r0, [r1, #4]
	movs r0, #0
	str r0, [r1, #4]
	movs r1, #0xa
	ldrsh r1, [r5, r1]
	adds r2, r0, #0
	str r1, [sp]
	ldr r1, [sp, #0x14]
	str r1, [sp, #4]
	str r6, [sp, #8]
	str r7, [sp, #0xc]
	str r4, [sp, #0x10]
	ldrsh r3, [r5, r3]
	adds r1, r0, #0
	blx FUN_020B7418
	ldr r0, _02016308 @ =0x04000448
	movs r1, #1
	str r1, [r0]
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020162EC: .4byte 0x04000444
_020162F0: .4byte 0x7FFF8000
_020162F4: .4byte 0x00004210
_020162F8: .4byte 0x040004AC
_020162FC: .4byte 0x04000470
_02016300: .4byte 0x021094DC
_02016304: .4byte 0x0400046C
_02016308: .4byte 0x04000448
	thumb_func_end FUN_020161CC

	thumb_func_start FUN_0201630C
FUN_0201630C: @ 0x0201630C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	ldr r1, [r5, #4]
	adds r7, r0, #0
	ldr r2, [r1, #0x10]
	movs r6, #8
	movs r0, #0
	cmp r2, #0
	ble _0201632A
_0201631E:
	ldr r2, [r5, #4]
	adds r0, r0, #1
	ldr r2, [r2, #0x10]
	lsls r6, r6, #1
	cmp r0, r2
	blt _0201631E
_0201632A:
	ldr r1, [r1, #0x14]
	movs r4, #8
	movs r0, #0
	cmp r1, #0
	ble _02016340
_02016334:
	ldr r1, [r5, #4]
	adds r0, r0, #1
	ldr r1, [r1, #0x14]
	lsls r4, r4, #1
	cmp r0, r1
	blt _02016334
_02016340:
	movs r1, #0xc
	movs r2, #0xe
	ldrsh r1, [r5, r1]
	ldrsh r2, [r5, r2]
	adds r0, r7, #0
	bl FUN_02015FC4
	lsrs r1, r6, #0x1f
	lsrs r2, r4, #0x1f
	adds r1, r6, r1
	adds r2, r4, r2
	lsls r1, r1, #0xf
	lsls r2, r2, #0xf
	adds r0, r7, #0
	asrs r1, r1, #0x10
	asrs r2, r2, #0x10
	bl FUN_02015FD8
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [r7, #0xc]
	str r0, [r7, #0x10]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl FUN_02015FE0
	ldr r1, [r5, #0x18]
	adds r0, r7, #0
	bl FUN_02015FF4
	ldr r1, [r5, #0x14]
	adds r0, r7, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_02015FFC
	ldr r1, [r5, #4]
	adds r0, r7, #0
	adds r1, #0x10
	bl FUN_02016004
	ldr r0, [r5, #4]
	movs r1, #0
	adds r0, r0, #4
	blx FUN_020B802C
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_02016008
	ldr r0, [r5, #8]
	movs r1, #0
	adds r0, r0, #4
	blx FUN_020B8078
	adds r1, r0, #0
	adds r0, r7, #0
	bl FUN_0201600C
	ldrh r1, [r5, #0x1c]
	adds r0, r7, #0
	bl FUN_02016010
	movs r1, #0
	adds r0, r7, #0
	adds r2, r1, #0
	bl FUN_02016014
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	bl FUN_02016014
	ldrh r1, [r5, #0x10]
	adds r0, r7, #0
	bl FUN_02016020
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201630C

	thumb_func_start FUN_020163E0
FUN_020163E0: @ 0x020163E0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	ldr r0, _02016488 @ =FUN_020164D0
	movs r1, #0x50
	movs r2, #0
	bl FUN_02007200
	str r0, [sp, #4]
	bl FUN_0201F988
	adds r4, r0, #0
	cmp r5, #0
	beq _02016424
	cmp r6, #0
	bne _02016414
	adds r0, r5, #0
	movs r1, #0
	bl FUN_0200335C
	str r0, [sp]
	ldr r0, _0201648C @ =FUN_020165D4
	str r0, [r4, #4]
	b _0201643E
_02016414:
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0200335C
	str r0, [sp]
	ldr r0, _02016490 @ =FUN_020165F0
	str r0, [r4, #4]
	b _0201643E
_02016424:
	cmp r6, #0
	bne _02016434
	bl FUN_02026E84
	str r0, [sp]
	ldr r0, _02016494 @ =FUN_020165A4
	str r0, [r4, #4]
	b _0201643E
_02016434:
	bl FUN_02026E94
	str r0, [sp]
	ldr r0, _02016498 @ =FUN_020165BC
	str r0, [r4, #4]
_0201643E:
	ldr r1, [sp]
	lsls r0, r7, #5
	str r0, [sp, #8]
	adds r0, r1, r0
	adds r1, r4, #0
	adds r1, #0xc
	movs r2, #0x20
	blx FUN_020D47B8
	ldr r1, [sp]
	ldr r0, [sp, #8]
	movs r2, #0x20
	adds r0, r1, r0
	adds r1, r4, #0
	adds r1, #0x2c
	blx FUN_020D47B8
	ldr r0, [sp, #4]
	movs r1, #1
	str r0, [r4]
	adds r0, r4, #0
	str r5, [r4, #8]
	adds r0, #0x4c
	strb r6, [r0]
	adds r0, r4, #0
	adds r0, #0x4d
	strb r7, [r0]
	adds r0, r4, #0
	adds r0, #0x4e
	strb r1, [r0]
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x4f
	strb r1, [r0]
	adds r0, r4, #0
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02016488: .4byte FUN_020164D0
_0201648C: .4byte FUN_020165D4
_02016490: .4byte FUN_020165F0
_02016494: .4byte FUN_020165A4
_02016498: .4byte FUN_020165BC
	thumb_func_end FUN_020163E0

	thumb_func_start FUN_0201649C
FUN_0201649C: @ 0x0201649C
	cmp r1, #0
	beq _020164AA
	cmp r1, #1
	beq _020164B2
	cmp r1, #2
	beq _020164BA
	bx lr
_020164AA:
	movs r1, #0
	adds r0, #0x4e
	strb r1, [r0]
	bx lr
_020164B2:
	movs r1, #2
	adds r0, #0x4e
	strb r1, [r0]
	bx lr
_020164BA:
	movs r1, #3
	adds r0, #0x4e
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201649C

	thumb_func_start FUN_020164C4
FUN_020164C4: @ 0x020164C4
	ldr r3, _020164CC @ =FUN_02007234
	ldr r0, [r0]
	bx r3
	nop
_020164CC: .4byte FUN_02007234
	thumb_func_end FUN_020164C4

	thumb_func_start FUN_020164D0
FUN_020164D0: @ 0x020164D0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r0, #0x4e
	ldrb r0, [r0]
	cmp r0, #3
	bhi _02016546
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_020164EC: @ jump table
	.2byte _020164F4 - _020164EC - 2 @ case 0
	.2byte _02016504 - _020164EC - 2 @ case 1
	.2byte _02016546 - _020164EC - 2 @ case 2
	.2byte _02016538 - _020164EC - 2 @ case 3
_020164F4:
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x4f
	strb r1, [r0]
	movs r0, #1
	adds r4, #0x4e
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02016504:
	adds r0, r4, #0
	bl FUN_02016548
	cmp r0, #1
	bne _02016518
	adds r1, r4, #0
	ldr r2, [r4, #4]
	adds r0, r4, #0
	adds r1, #0x2c
	blx r2
_02016518:
	adds r0, r4, #0
	adds r0, #0x4f
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r4, #0
	adds r0, #0x4f
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4f
	ldrb r0, [r0]
	cmp r0, #0x20
	bne _02016546
	movs r0, #0
	adds r4, #0x4f
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02016538:
	ldr r2, [r4, #4]
	adds r0, r4, #0
	adds r1, #0xc
	blx r2
	adds r0, r5, #0
	bl FUN_02007234
_02016546:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020164D0

	thumb_func_start FUN_02016548
FUN_02016548: @ 0x02016548
	push {r4, r5}
	adds r1, r0, #0
	adds r1, #0x4f
	ldrb r1, [r1]
	cmp r1, #0
	bne _02016576
	movs r1, #0x1e
	movs r4, #0
	movs r3, #1
	lsls r1, r1, #0xa
_0201655C:
	adds r2, r3, #0
	lsls r2, r4
	tst r2, r1
	beq _02016568
	ldrh r2, [r0, #0xc]
	strh r2, [r0, #0x2c]
_02016568:
	adds r4, r4, #1
	adds r0, r0, #2
	cmp r4, #0x10
	blo _0201655C
	movs r0, #1
	pop {r4, r5}
	bx lr
_02016576:
	cmp r1, #0x18
	bne _0201659E
	movs r1, #0x1e
	movs r5, #0
	adds r4, r0, #0
	movs r3, #1
	lsls r1, r1, #0xa
_02016584:
	adds r2, r3, #0
	lsls r2, r5
	tst r2, r1
	beq _02016590
	ldrh r2, [r0, #0x2a]
	strh r2, [r4, #0x2c]
_02016590:
	adds r5, r5, #1
	adds r4, r4, #2
	cmp r5, #0x10
	blo _02016584
	movs r0, #1
	pop {r4, r5}
	bx lr
_0201659E:
	movs r0, #0
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_02016548

	thumb_func_start FUN_020165A4
FUN_020165A4: @ 0x020165A4
	push {r3, lr}
	adds r3, r0, #0
	adds r3, #0x4d
	ldrb r3, [r3]
	movs r0, #0
	movs r2, #0x20
	lsls r3, r3, #0x15
	lsrs r3, r3, #0x10
	bl FUN_0201C260
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020165A4

	thumb_func_start FUN_020165BC
FUN_020165BC: @ 0x020165BC
	push {r3, lr}
	adds r3, r0, #0
	adds r3, #0x4d
	ldrb r3, [r3]
	movs r0, #4
	movs r2, #0x20
	lsls r3, r3, #0x15
	lsrs r3, r3, #0x10
	bl FUN_0201C260
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020165BC

	thumb_func_start FUN_020165D4
FUN_020165D4: @ 0x020165D4
	push {r3, lr}
	adds r3, r0, #0
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [r3, #8]
	adds r3, #0x4d
	ldrb r3, [r3]
	movs r2, #0
	lsls r3, r3, #0x14
	lsrs r3, r3, #0x10
	bl FUN_0200316C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020165D4

	thumb_func_start FUN_020165F0
FUN_020165F0: @ 0x020165F0
	push {r3, lr}
	adds r3, r0, #0
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [r3, #8]
	adds r3, #0x4d
	ldrb r3, [r3]
	movs r2, #1
	lsls r3, r3, #0x14
	lsrs r3, r3, #0x10
	bl FUN_0200316C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020165F0

	thumb_func_start FUN_0201660C
FUN_0201660C: @ 0x0201660C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r1, #0x78
	bl FUN_0201AA8C
	adds r1, r5, #0
	adds r4, r0, #0
	bl FUN_02016A1C
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201660C

	thumb_func_start FUN_02016624
FUN_02016624: @ 0x02016624
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x77
	ldrb r1, [r1]
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	cmp r1, #1
	bne _0201663A
	bl FUN_020169CC
_0201663A:
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02016624

	thumb_func_start FUN_02016644
FUN_02016644: @ 0x02016644
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	str r0, [r5, #0x5c]
	ldr r0, [r4, #4]
	str r0, [r5, #0x60]
	adds r0, r5, #0
	ldrb r1, [r4, #0x10]
	adds r0, #0x70
	strb r1, [r0]
	adds r0, r5, #0
	ldrb r1, [r4, #0x11]
	adds r0, #0x71
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x74
	ldrb r1, [r0]
	movs r0, #1
	bics r1, r0
	adds r0, r5, #0
	adds r0, #0x74
	strb r1, [r0]
	ldrb r0, [r4, #0x12]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x1c
	cmp r1, #2
	bhs _0201667E
	b _02016680
_0201667E:
	movs r1, #0
_02016680:
	adds r0, r5, #0
	adds r0, #0x75
	strb r1, [r0]
	ldrb r0, [r4, #0x13]
	lsls r1, r0, #1
	ldr r0, _020166F4 @ =_020F61B8
	ldrb r1, [r0, r1]
	adds r0, r5, #0
	adds r0, #0x72
	strb r1, [r0]
	ldrb r0, [r4, #0x13]
	lsls r1, r0, #1
	ldr r0, _020166F8 @ =_020F61B9
	ldrb r1, [r0, r1]
	adds r0, r5, #0
	adds r0, #0x73
	strb r1, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02016A64
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02016A84
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02016AB0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02016B4C
	adds r0, r5, #0
	adds r0, #0x77
	ldrb r1, [r0]
	movs r0, #0xf
	bics r1, r0
	movs r0, #1
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x77
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x77
	ldrb r1, [r0]
	movs r0, #0xf0
	bics r1, r0
	movs r0, #0x80
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x77
	strb r1, [r0]
	adds r0, r5, #0
	bl FUN_020167C4
	pop {r3, r4, r5, pc}
	nop
_020166F4: .4byte _020F61B8
_020166F8: .4byte _020F61B9
	thumb_func_end FUN_02016644

	thumb_func_start FUN_020166FC
FUN_020166FC: @ 0x020166FC
	ldr r3, _02016700 @ =FUN_02016644
	bx r3
	.align 2, 0
_02016700: .4byte FUN_02016644
	thumb_func_end FUN_020166FC

	thumb_func_start FUN_02016704
FUN_02016704: @ 0x02016704
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	bl FUN_02016644
	cmp r4, #0
	beq _02016742
	ldr r3, [r5, #0x64]
	movs r0, #0x98
	movs r1, #0
	add r2, sp, #4
	bl FUN_020079F4
	adds r7, r0, #0
	movs r0, #0x40
	str r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r6, #0xc]
	ldr r2, [r5, #0x60]
	lsls r3, r3, #0x14
	ldr r1, [r1, #0xc]
	adds r0, r4, #0
	lsrs r2, r2, #2
	lsrs r3, r3, #0x10
	bl FUN_0200316C
	adds r0, r7, #0
	bl FUN_0201AB0C
_02016742:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02016704

	thumb_func_start FUN_02016748
FUN_02016748: @ 0x02016748
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x77
	ldrb r2, [r1]
	movs r1, #0xf0
	bics r2, r1
	movs r1, #0x80
	orrs r2, r1
	adds r1, r4, #0
	adds r1, #0x77
	strb r2, [r1]
	bl FUN_020168F4
	cmp r0, #0
	bne _02016784
	adds r1, r4, #0
	adds r1, #0x77
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x1c
	bne _02016784
	adds r4, #0x76
	ldrb r0, [r4]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	bne _02016782
	movs r0, #3
	pop {r4, pc}
_02016782:
	movs r0, #4
_02016784:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02016748

	thumb_func_start FUN_02016788
FUN_02016788: @ 0x02016788
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0x28
	adds r6, r1, #0
	adds r4, #0xc
	muls r6, r0, r6
	adds r5, r4, r6
	adds r0, r5, #0
	adds r0, #0x25
	ldrb r0, [r0]
	adds r3, r5, #0
	lsls r2, r2, #2
	str r0, [sp]
	adds r3, #0x24
	adds r2, r5, r2
	ldrb r3, [r3]
	ldr r0, [r4, r6]
	ldr r1, [r5, #4]
	ldr r2, [r2, #0x10]
	bl FUN_02016E40
	ldr r1, [r5, #4]
	ldr r0, [r4, r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0201EFBC
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_02016788

	thumb_func_start FUN_020167C4
FUN_020167C4: @ 0x020167C4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x74
	ldrb r1, [r1]
	lsls r1, r1, #0x1f
	lsrs r1, r1, #0x1f
	bne _020167F6
	adds r1, r4, #0
	adds r1, #0x75
	ldrb r1, [r1]
	movs r2, #1
	bl FUN_02016788
	adds r0, r4, #0
	adds r4, #0x75
	ldrb r2, [r4]
	movs r1, #1
	eors r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #0
	bl FUN_02016788
	pop {r4, pc}
_020167F6:
	adds r4, #0x75
	ldrb r1, [r4]
	movs r2, #0
	bl FUN_02016788
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020167C4

	thumb_func_start FUN_02016804
FUN_02016804: @ 0x02016804
	push {r3, lr}
	movs r2, #1
	adds r3, r1, #0
	tst r3, r2
	beq _02016832
	adds r1, r0, #0
	adds r1, #0x76
	ldrb r3, [r1]
	movs r1, #0xf
	bics r3, r1
	adds r1, r0, #0
	adds r1, #0x75
	ldrb r2, [r1]
	movs r1, #0xf
	adds r0, #0x76
	ands r1, r2
	orrs r1, r3
	strb r1, [r0]
	ldr r0, _0201687C @ =0x000005E4
	bl FUN_0200604C
	movs r0, #1
	pop {r3, pc}
_02016832:
	movs r3, #2
	tst r3, r1
	beq _02016854
	adds r1, r0, #0
	adds r1, #0x76
	ldrb r3, [r1]
	movs r1, #0xf
	adds r0, #0x76
	bics r3, r1
	adds r1, r3, #0
	orrs r1, r2
	strb r1, [r0]
	ldr r0, _0201687C @ =0x000005E4
	bl FUN_0200604C
	movs r0, #1
	pop {r3, pc}
_02016854:
	movs r3, #0xc0
	tst r1, r3
	beq _02016876
	adds r1, r0, #0
	adds r1, #0x75
	ldrb r1, [r1]
	eors r2, r1
	adds r1, r0, #0
	adds r1, #0x75
	strb r2, [r1]
	bl FUN_020167C4
	ldr r0, _02016880 @ =0x000005DC
	bl FUN_0200604C
	movs r0, #0
	pop {r3, pc}
_02016876:
	movs r0, #0
	pop {r3, pc}
	nop
_0201687C: .4byte 0x000005E4
_02016880: .4byte 0x000005DC
	thumb_func_end FUN_02016804

	thumb_func_start FUN_02016884
FUN_02016884: @ 0x02016884
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x76
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	bne _020168B0
	ldr r0, [r4]
	bl FUN_02026CC4
	cmp r0, #0
	beq _020168B0
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r1, [r0]
	movs r0, #1
	adds r4, #0x74
	bics r1, r0
	movs r0, #1
	orrs r1, r0
	strb r1, [r4]
	pop {r4, pc}
_020168B0:
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	cmp r0, #1
	bne _020168E2
	ldr r0, _020168F0 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #0xc3
	tst r0, r1
	beq _020168E2
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r1, [r0]
	movs r0, #1
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0x74
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020167C4
	movs r0, #0
	pop {r4, pc}
_020168E2:
	ldr r1, _020168F0 @ =0x021D110C
	adds r0, r4, #0
	ldr r1, [r1, #0x48]
	bl FUN_02016804
	pop {r4, pc}
	nop
_020168F0: .4byte 0x021D110C
	thumb_func_end FUN_02016884

	thumb_func_start FUN_020168F4
FUN_020168F4: @ 0x020168F4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0x77
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #1
	beq _02016908
	bl FUN_0202551C
_02016908:
	adds r0, r4, #0
	adds r0, #0x76
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r1, r0, #0x1c
	cmp r1, #3
	bne _02016952
	adds r0, r4, #0
	bl FUN_02016884
	cmp r0, #0
	bne _02016924
	movs r0, #0
	pop {r3, r4, r5, pc}
_02016924:
	adds r1, r4, #0
	adds r1, #0x76
	ldrb r1, [r1]
	adds r0, r4, #0
	movs r2, #1
	lsls r1, r1, #0x1c
	lsrs r1, r1, #0x1c
	bl FUN_02016788
	adds r0, r4, #0
	adds r4, #0x76
	ldrb r1, [r4]
	lsls r1, r1, #0x1c
	lsrs r2, r1, #0x1c
	movs r1, #1
	eors r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #0
	bl FUN_02016788
	movs r0, #0
	pop {r3, r4, r5, pc}
_02016952:
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x1a
	cmp r5, #8
	bne _0201696C
	cmp r1, #0
	bne _02016968
	movs r0, #1
	pop {r3, r4, r5, pc}
_02016968:
	movs r0, #2
	pop {r3, r4, r5, pc}
_0201696C:
	lsrs r2, r5, #0x1f
	lsls r0, r5, #0x1f
	subs r0, r0, r2
	movs r3, #0x1f
	rors r0, r3
	adds r0, r2, r0
	bne _0201699A
	lsrs r0, r5, #1
	lsrs r2, r0, #0x1f
	lsls r0, r0, #0x1f
	subs r0, r0, r2
	rors r0, r3
	adds r0, r2, r0
	bne _02016992
	adds r0, r4, #0
	movs r2, #1
	bl FUN_02016788
	b _0201699A
_02016992:
	adds r0, r4, #0
	movs r2, #0
	bl FUN_02016788
_0201699A:
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r2, [r0]
	movs r1, #0xfc
	adds r4, #0x74
	adds r0, r2, #0
	bics r0, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x1a
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x18
	orrs r0, r1
	strb r0, [r4]
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020168F4

	thumb_func_start FUN_020169C0
FUN_020169C0: @ 0x020169C0
	adds r0, #0x74
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bx lr
	.align 2, 0
	thumb_func_end FUN_020169C0

	thumb_func_start FUN_020169CC
FUN_020169CC: @ 0x020169CC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, [r6]
	bl FUN_02026CAC
	adds r5, r6, #0
	movs r4, #0
	adds r5, #0xc
_020169DC:
	adds r0, r5, #0
	bl FUN_02016CC4
	adds r4, r4, #1
	adds r5, #0x28
	cmp r4, #2
	blt _020169DC
	ldr r1, [r6, #0x64]
	adds r0, r6, #0
	bl FUN_02016A1C
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020169CC

	thumb_func_start FUN_020169F4
FUN_020169F4: @ 0x020169F4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02016A02
	bl FUN_0202551C
_02016A02:
	adds r0, r5, #0
	adds r0, #0x76
	ldrb r1, [r0]
	movs r0, #0xf0
	adds r5, #0x76
	bics r1, r0
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x18
	orrs r0, r1
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020169F4

	thumb_func_start FUN_02016A1C
FUN_02016A1C: @ 0x02016A1C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	movs r1, #0
	movs r2, #0x78
	blx FUN_020E5B44
	adds r0, r5, #0
	adds r0, #0x77
	ldrb r2, [r0]
	movs r1, #0xf
	adds r0, r5, #0
	bics r2, r1
	adds r0, #0x77
	strb r2, [r0]
	adds r0, r5, #0
	str r4, [r5, #0x64]
	adds r0, #0x76
	ldrb r2, [r0]
	movs r0, #3
	bics r2, r1
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x76
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x77
	ldrb r1, [r0]
	movs r0, #0xf0
	adds r5, #0x77
	bics r1, r0
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02016A1C

	thumb_func_start FUN_02016A64
FUN_02016A64: @ 0x02016A64
	push {r3, lr}
	sub sp, #8
	adds r3, r0, #0
	ldr r0, [r1, #8]
	movs r1, #1
	str r0, [sp]
	ldr r0, [r3, #0x64]
	str r0, [sp, #4]
	ldr r2, [r3, #0x5c]
	ldr r3, [r3, #0x60]
	movs r0, #0x98
	bl FUN_02016D24
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02016A64

	thumb_func_start FUN_02016A84
FUN_02016A84: @ 0x02016A84
	push {r3, lr}
	sub sp, #8
	adds r3, r1, #0
	ldr r1, [r0, #0x60]
	cmp r1, #4
	bhs _02016A94
	movs r2, #0
	b _02016A96
_02016A94:
	movs r2, #4
_02016A96:
	movs r1, #0x40
	str r1, [sp]
	ldr r0, [r0, #0x64]
	movs r1, #0
	str r0, [sp, #4]
	ldr r3, [r3, #0xc]
	movs r0, #0x98
	lsls r3, r3, #5
	bl FUN_02016D74
	add sp, #8
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02016A84

	thumb_func_start FUN_02016AB0
FUN_02016AB0: @ 0x02016AB0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r7, r0, #0
	movs r2, #0
	adds r3, r7, #0
_02016ABA:
	adds r2, r2, #1
	lsls r0, r2, #0xc
	str r0, [r3, #0x68]
	adds r3, r3, #4
	cmp r2, #2
	blt _02016ABA
	ldr r0, [r7, #0x5c]
	add r2, sp, #4
	str r0, [sp, #4]
	ldr r0, [r7, #0x60]
	movs r5, #2
	strb r0, [r2, #0x12]
	movs r0, #0x98
	strh r0, [r2, #8]
	ldr r0, [r1, #8]
	strh r0, [r2, #0xe]
	ldr r0, [r1, #0xc]
	strh r0, [r2, #0x10]
	adds r0, r7, #0
	adds r0, #0x68
	str r0, [sp, #8]
	adds r0, r7, #0
	strb r5, [r2, #0x13]
	adds r0, #0x70
	ldrb r0, [r0]
	strb r0, [r2, #0x14]
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _02016AF6
	movs r5, #6
_02016AF6:
	adds r0, r7, #0
	movs r6, #0
	str r0, [sp]
	adds r0, #0xc
	adds r4, r6, #0
	str r0, [sp]
_02016B02:
	movs r0, #0
	add r1, sp, #4
_02016B06:
	adds r2, r5, r0
	adds r2, r2, r4
	strh r2, [r1, #0xa]
	adds r0, r0, #1
	adds r1, r1, #2
	cmp r0, #2
	blt _02016B06
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, #0x73
	adds r0, #0x71
	ldrb r1, [r1]
	ldrb r0, [r0]
	muls r1, r6, r1
	adds r1, r0, r1
	add r0, sp, #4
	strb r1, [r0, #0x15]
	ldrh r0, [r0, #0x10]
	adds r1, r0, r6
	add r0, sp, #4
	strh r1, [r0, #0x10]
	ldr r0, [sp]
	ldr r2, [r7, #0x64]
	add r1, sp, #4
	bl FUN_02016C28
	ldr r0, [sp]
	adds r6, r6, #1
	adds r0, #0x28
	adds r4, r4, #2
	str r0, [sp]
	cmp r6, #2
	blt _02016B02
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02016AB0

	thumb_func_start FUN_02016B4C
FUN_02016B4C: @ 0x02016B4C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0
	adds r1, r4, #0
_02016B56:
	adds r2, r4, #0
	adds r2, #0x71
	ldrb r3, [r2]
	adds r2, r4, #0
	adds r2, #0x73
	ldrb r2, [r2]
	muls r2, r0, r2
	adds r2, r3, r2
	lsls r2, r2, #3
	strb r2, [r1, #4]
	adds r2, r4, #0
	adds r2, #0x70
	ldrb r2, [r2]
	adds r0, r0, #1
	lsls r2, r2, #3
	strb r2, [r1, #6]
	adds r2, r4, #0
	adds r2, #0x73
	ldrb r2, [r2]
	adds r3, r2, #0
	adds r2, r4, #0
	adds r2, #0x71
	ldrb r2, [r2]
	muls r3, r0, r3
	adds r2, r3, r2
	lsls r2, r2, #3
	strb r2, [r1, #5]
	adds r2, r4, #0
	adds r2, #0x70
	ldrb r3, [r2]
	adds r2, r4, #0
	adds r2, #0x72
	ldrb r2, [r2]
	adds r2, r3, r2
	lsls r2, r2, #3
	strb r2, [r1, #7]
	adds r1, r1, #4
	cmp r0, #2
	blt _02016B56
	ldr r0, [r4, #0x64]
	ldr r2, _02016BBC @ =FUN_02016BC0
	str r0, [sp]
	adds r0, r4, #4
	movs r1, #2
	adds r3, r4, #0
	bl FUN_02026C44
	str r0, [r4]
	add sp, #4
	pop {r3, r4, pc}
	nop
_02016BBC: .4byte FUN_02016BC0
	thumb_func_end FUN_02016B4C

	thumb_func_start FUN_02016BC0
FUN_02016BC0: @ 0x02016BC0
	push {r3, r4, lr}
	sub sp, #4
	adds r3, r2, #0
	adds r3, #0x77
	ldrb r3, [r3]
	movs r4, #0xf0
	bics r3, r4
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	lsls r4, r4, #0x1c
	lsrs r4, r4, #0x18
	orrs r4, r3
	adds r3, r2, #0
	adds r3, #0x77
	strb r4, [r3]
	cmp r1, #0
	bne _02016C20
	adds r1, r2, #0
	adds r1, #0x76
	ldrb r1, [r1]
	movs r3, #0xf
	bics r1, r3
	lsls r3, r0, #0x18
	lsrs r4, r3, #0x18
	movs r3, #0xf
	ands r3, r4
	orrs r3, r1
	adds r1, r2, #0
	adds r1, #0x76
	strb r3, [r1]
	movs r1, #0x28
	adds r2, #0xc
	muls r1, r0, r1
	adds r3, r2, r1
	adds r0, r3, #0
	adds r0, #0x25
	ldrb r0, [r0]
	str r0, [sp]
	ldr r0, [r2, r1]
	ldr r1, [r3, #4]
	ldr r2, [r3, #0x14]
	adds r3, #0x24
	ldrb r3, [r3]
	bl FUN_02016E40
	ldr r0, _02016C24 @ =0x000005E4
	bl FUN_0200604C
_02016C20:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
_02016C24: .4byte 0x000005E4
	thumb_func_end FUN_02016BC0

	thumb_func_start FUN_02016C28
FUN_02016C28: @ 0x02016C28
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r1, #0
	ldr r1, [r5, #4]
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r2, r0, #0
	str r1, [r0, #0x18]
	ldrb r0, [r5, #0x13]
	adds r2, #0x18
	ldr r6, [sp, #4]
	str r0, [r2, #4]
	movs r0, #0
	str r0, [r2, #8]
	str r0, [sp, #0xc]
	ldr r1, [r5]
	ldr r0, [sp, #4]
	ldr r4, [sp, #4]
	str r1, [r0]
	ldrb r1, [r5, #0x12]
	adds r6, #0x10
	adds r7, r5, #0
	str r1, [r0, #4]
	ldrb r1, [r5, #0x14]
	adds r0, #0x24
	strb r1, [r0]
	ldr r0, [sp, #4]
	ldrb r1, [r5, #0x15]
	adds r0, #0x25
	strb r1, [r0]
_02016C64:
	ldr r0, [sp, #8]
	movs r2, #1
	str r0, [sp]
	ldrh r0, [r5, #8]
	ldrh r1, [r7, #0xa]
	adds r3, r6, #0
	bl FUN_020079D8
	str r0, [r4, #8]
	ldrh r1, [r5, #0xe]
	ldr r0, [r4, #0x10]
	bl FUN_02016E8C
	ldrh r1, [r5, #0x10]
	ldr r0, [r4, #0x10]
	bl FUN_02016EAC
	ldr r0, [sp, #0xc]
	adds r6, r6, #4
	adds r0, r0, #1
	adds r7, r7, #2
	adds r4, r4, #4
	str r0, [sp, #0xc]
	cmp r0, #2
	blt _02016C64
	ldr r0, [sp, #4]
	ldr r3, [sp, #4]
	adds r0, #0x25
	ldrb r0, [r0]
	ldr r1, [sp, #4]
	ldr r2, [sp, #4]
	str r0, [sp]
	ldr r0, [sp, #4]
	adds r3, #0x24
	ldrb r3, [r3]
	ldr r0, [r0]
	ldr r1, [r1, #4]
	ldr r2, [r2, #0x10]
	bl FUN_02016E40
	ldr r0, [sp, #4]
	movs r1, #0
	adds r0, #0x26
	str r0, [sp, #4]
	strb r1, [r0]
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02016C28

	thumb_func_start FUN_02016CC4
FUN_02016CC4: @ 0x02016CC4
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r0, #0x25
	ldrb r0, [r0]
	ldr r1, [r6, #0x10]
	adds r3, r6, #0
	str r0, [sp]
	ldrh r0, [r1]
	movs r2, #0
	adds r3, #0x24
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	str r2, [sp, #0xc]
	ldr r1, [r6, #4]
	ldrb r3, [r3]
	lsls r1, r1, #0x18
	ldr r0, [r6]
	lsrs r1, r1, #0x18
	bl FUN_0201C8C4
	ldr r1, [r6, #4]
	ldr r0, [r6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0201EFBC
	movs r4, #0
	adds r5, r6, #0
_02016D08:
	ldr r0, [r5, #8]
	bl FUN_0201AB0C
	adds r4, r4, #1
	adds r5, r5, #4
	cmp r4, #2
	blt _02016D08
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x28
	blx FUN_020E5B44
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02016CC4

	thumb_func_start FUN_02016D24
FUN_02016D24: @ 0x02016D24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	str r1, [sp, #4]
	ldr r0, [sp, #0x24]
	movs r1, #0x10
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r2, r4, #0
	movs r1, #0x10
	movs r0, #0
_02016D40:
	strb r0, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _02016D40
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #4]
	str r0, [sp]
	adds r0, r7, #0
	movs r2, #1
	adds r3, r4, #4
	bl FUN_020079BC
	str r0, [r4, #8]
	str r5, [r4]
	ldr r0, [sp, #0x20]
	strh r6, [r4, #0xc]
	strh r0, [r4, #0xe]
	ldr r0, _02016D70 @ =FUN_02016DBC
	adds r1, r4, #0
	movs r2, #0x80
	bl FUN_0200E374
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02016D70: .4byte FUN_02016DBC
	thumb_func_end FUN_02016D24

	thumb_func_start FUN_02016D74
FUN_02016D74: @ 0x02016D74
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	str r1, [sp]
	ldr r0, [sp, #0x1c]
	movs r1, #0x10
	adds r5, r2, #0
	adds r6, r3, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r2, r4, #0
	movs r1, #0x10
	movs r0, #0
_02016D8E:
	strb r0, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _02016D8E
	ldr r1, [sp]
	ldr r3, [sp, #0x1c]
	adds r0, r7, #0
	adds r2, r4, #0
	bl FUN_020079F4
	str r0, [r4, #4]
	strh r5, [r4, #8]
	ldr r0, [sp, #0x18]
	strh r6, [r4, #0xa]
	strh r0, [r4, #0xc]
	ldr r0, _02016DB8 @ =FUN_02016DF8
	adds r1, r4, #0
	movs r2, #0x80
	bl FUN_0200E374
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02016DB8: .4byte FUN_02016DF8
	thumb_func_end FUN_02016D74

	thumb_func_start FUN_02016DBC
FUN_02016DBC: @ 0x02016DBC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4, #4]
	adds r5, r0, #0
	ldr r0, [r1, #0x14]
	ldr r1, [r1, #0x10]
	blx FUN_020D2894
	ldrh r0, [r4, #0xe]
	ldr r3, [r4, #4]
	str r0, [sp]
	ldrh r1, [r4, #0xc]
	ldr r2, [r3, #0x14]
	ldr r0, [r4]
	lsls r1, r1, #0x18
	ldr r3, [r3, #0x10]
	lsrs r1, r1, #0x18
	bl FUN_0201C0C0
	adds r0, r5, #0
	bl FUN_0200E390
	ldr r0, [r4, #8]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02016DBC

	thumb_func_start FUN_02016DF8
FUN_02016DF8: @ 0x02016DF8
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4]
	ldrh r1, [r4, #0xc]
	ldr r0, [r0, #0xc]
	blx FUN_020D2894
	ldrh r0, [r4, #8]
	cmp r0, #0
	bne _02016E1C
	ldr r0, [r4]
	ldrh r1, [r4, #0xa]
	ldrh r2, [r4, #0xc]
	ldr r0, [r0, #0xc]
	blx FUN_020CFC6C
	b _02016E2C
_02016E1C:
	cmp r0, #4
	bne _02016E2C
	ldr r0, [r4]
	ldrh r1, [r4, #0xa]
	ldrh r2, [r4, #0xc]
	ldr r0, [r0, #0xc]
	blx FUN_020CFCC0
_02016E2C:
	adds r0, r5, #0
	bl FUN_0200E390
	ldr r0, [r4, #4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02016DF8

	thumb_func_start FUN_02016E40
FUN_02016E40: @ 0x02016E40
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	adds r4, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldrh r6, [r1]
	ldrh r3, [r1, #2]
	lsls r2, r2, #0x18
	lsls r6, r6, #0x15
	lsrs r6, r6, #0x18
	lsls r3, r3, #0x15
	str r6, [sp]
	lsrs r3, r3, #0x18
	str r3, [sp, #4]
	adds r1, #0xc
	str r1, [sp, #8]
	movs r1, #0
	str r1, [sp, #0xc]
	str r1, [sp, #0x10]
	str r6, [sp, #0x14]
	str r3, [sp, #0x18]
	ldr r3, [sp, #0x30]
	lsls r1, r4, #0x18
	lsls r3, r3, #0x18
	lsrs r1, r1, #0x18
	lsrs r2, r2, #0x18
	lsrs r3, r3, #0x18
	adds r5, r0, #0
	bl FUN_0201C4EC
	lsls r1, r4, #0x18
	adds r0, r5, #0
	lsrs r1, r1, #0x18
	bl FUN_0201EFBC
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02016E40

	thumb_func_start FUN_02016E8C
FUN_02016E8C: @ 0x02016E8C
	push {r3, r4}
	ldr r2, [r0, #8]
	adds r0, #0xc
	lsrs r4, r2, #1
	movs r3, #0
	cmp r4, #0
	ble _02016EA8
_02016E9A:
	ldrh r2, [r0]
	adds r3, r3, #1
	adds r2, r2, r1
	strh r2, [r0]
	adds r0, r0, #2
	cmp r3, r4
	blt _02016E9A
_02016EA8:
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02016E8C

	thumb_func_start FUN_02016EAC
FUN_02016EAC: @ 0x02016EAC
	push {r4, r5}
	ldr r2, [r0, #8]
	adds r0, #0xc
	lsrs r3, r2, #1
	movs r2, #0
	cmp r3, #0
	ble _02016ED2
	ldr r4, _02016ED8 @ =0x00000FFF
	lsls r1, r1, #0xc
_02016EBE:
	ldrh r5, [r0]
	adds r2, r2, #1
	ands r5, r4
	strh r5, [r0]
	ldrh r5, [r0]
	orrs r5, r1
	strh r5, [r0]
	adds r0, r0, #2
	cmp r2, r3
	blt _02016EBE
_02016ED2:
	pop {r4, r5}
	bx lr
	nop
_02016ED8: .4byte 0x00000FFF
	thumb_func_end FUN_02016EAC

	thumb_func_start FUN_02016EDC
FUN_02016EDC: @ 0x02016EDC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	movs r1, #0xc
	adds r6, r0, #0
	adds r7, r2, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	strb r7, [r4, #8]
	movs r0, #0x1d
	strb r5, [r4, #9]
	lsls r0, r0, #4
	adds r7, r5, #0
	muls r7, r0, r7
	adds r0, r6, #0
	adds r1, r7, #0
	str r6, [r4, #4]
	bl FUN_0201AA8C
	movs r1, #0
	adds r2, r7, #0
	str r0, [r4]
	blx FUN_020D4994
	movs r3, #0
	cmp r5, #0
	ble _02016F28
	movs r0, #0x1d
	adds r6, r3, #0
	movs r2, #1
	lsls r0, r0, #4
_02016F1A:
	ldr r1, [r4]
	adds r3, r3, #1
	adds r1, r1, r6
	str r2, [r1, #0x20]
	adds r6, r6, r0
	cmp r3, r5
	blt _02016F1A
_02016F28:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02016EDC

	thumb_func_start FUN_02016F2C
FUN_02016F2C: @ 0x02016F2C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02016F2C

	thumb_func_start FUN_02016F40
FUN_02016F40: @ 0x02016F40
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	str r3, [sp, #4]
	adds r0, r2, #0
	ldrh r6, [r0]
	ldrh r0, [r0, #2]
	adds r7, r1, #0
	ldrb r1, [r5, #9]
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	str r2, [sp]
	cmp r0, r1
	blo _02016F60
	bl FUN_0202551C
_02016F60:
	ldr r0, [sp, #4]
	movs r1, #0x1d
	adds r4, r0, #0
	lsls r1, r1, #4
	ldr r0, [r5]
	muls r4, r1, r4
	adds r0, r0, r4
	ldr r0, [r0, #0x10]
	cmp r0, #0
	beq _02016F78
	bl FUN_0202551C
_02016F78:
	ldr r0, [r5]
	movs r2, #0x1d
	adds r0, r0, r4
	movs r1, #0
	lsls r2, r2, #4
	blx FUN_020D4994
	ldr r0, [r5]
	movs r1, #1
	adds r0, r0, r4
	str r1, [r0, #0x10]
	ldr r0, [r5]
	cmp r6, #0x8f
	str r7, [r0, r4]
	blt _02016F9A
	movs r6, #0
	str r6, [sp, #8]
_02016F9A:
	ldr r0, [r5]
	adds r0, r0, r4
	str r6, [r0, #0x14]
	ldrb r0, [r5, #8]
	cmp r0, #0
	beq _02016FAC
	ldr r0, [sp]
	ldrb r2, [r0, #4]
	b _02016FAE
_02016FAC:
	movs r2, #0
_02016FAE:
	ldr r0, [r5]
	adds r1, r0, r4
	movs r0, #0x73
	lsls r0, r0, #2
	strb r2, [r1, r0]
	ldr r1, [r5]
	ldr r2, [r5, #4]
	adds r1, r1, r4
	ldr r1, [r1, #0x14]
	movs r0, #0x5a
	bl FUN_02007540
	ldr r1, [r5]
	movs r2, #0
	adds r1, r1, r4
	str r0, [r1, #8]
	ldr r0, [r5]
	movs r6, #0x1c
	adds r1, r0, r4
	ldr r0, [r1, #8]
	str r0, [r1, #0xc]
	ldr r0, [r5]
	adds r0, r0, r4
	str r2, [r0, #0x1c]
	ldr r0, [r5]
	adds r0, r0, r4
	str r2, [r0, #0x20]
	ldr r0, [r5]
	adds r1, r0, r4
	ldr r0, _02017060 @ =0x000001CD
	strb r2, [r1, r0]
	ldr r1, [r5]
	adds r3, r1, r4
	adds r1, r0, #1
	strb r6, [r3, r1]
	ldr r1, [r5]
	adds r0, r0, #2
	adds r1, r1, r4
	strb r2, [r1, r0]
	ldr r1, [r5]
	ldr r0, _02017064 @ =FUN_020170C4
	adds r1, r1, r4
	bl FUN_0200E320
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #4]
	ldr r0, [r5]
	adds r1, r0, r4
	ldr r0, [sp, #8]
	str r0, [r1, #0x54]
	adds r0, r7, #0
	movs r1, #0
	bl FUN_02008A78
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x58]
	adds r0, r7, #0
	movs r1, #1
	bl FUN_02008A78
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x5c]
	ldr r1, [r5]
	movs r0, #0
	adds r1, r1, r4
	str r0, [r1, #0x60]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x64]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x68]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x6c]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x70]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x74]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x78]
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_02017060: .4byte 0x000001CD
_02017064: .4byte FUN_020170C4
	thumb_func_end FUN_02016F40

	thumb_func_start FUN_02017068
FUN_02017068: @ 0x02017068
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrb r0, [r5, #9]
	adds r4, r1, #0
	cmp r4, r0
	blo _02017078
	bl FUN_0202551C
_02017078:
	movs r0, #0x1d
	lsls r0, r0, #4
	ldr r1, [r5]
	muls r0, r4, r0
	adds r0, r1, r0
	ldr r0, [r0, #0x20]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02017068

	thumb_func_start FUN_02017088
FUN_02017088: @ 0x02017088
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0x1d
	lsls r0, r0, #4
	adds r4, r1, #0
	muls r4, r0, r4
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020170C2
	bl FUN_0200E390
	ldr r1, [r5]
	movs r0, #0
	adds r1, r1, r4
	str r0, [r1, #4]
	ldr r1, [r5]
	movs r2, #1
	adds r1, r1, r4
	str r2, [r1, #0x20]
	ldr r1, [r5]
	adds r1, r1, r4
	str r0, [r1, #0x10]
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r0, [r0, #8]
	bl FUN_0201AB0C
_020170C2:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02017088

	thumb_func_start FUN_020170C4
FUN_020170C4: @ 0x020170C4
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0x54]
	cmp r0, #0
	bne _020170D8
	adds r0, r4, #0
	bl FUN_020170FC
	b _020170DC
_020170D8:
	subs r0, r0, #1
	str r0, [r4, #0x54]
_020170DC:
	ldr r0, [r4, #0x1c]
	cmp r0, #0
	beq _020170FA
	movs r0, #1
	str r0, [r4, #0x20]
	movs r0, #0
	str r0, [r4, #0x10]
	adds r0, r5, #0
	bl FUN_0200E390
	movs r0, #0
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	bl FUN_0201AB0C
_020170FA:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020170C4

	thumb_func_start FUN_020170FC
FUN_020170FC: @ 0x020170FC
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r6, #0
	str r6, [r5, #0x18]
	adds r7, r5, #0
	str r6, [r5, #0x44]
	adds r4, r6, #0
	adds r7, #0x7c
_0201710C:
	movs r0, #0x54
	adds r1, r4, #0
	muls r1, r0, r1
	adds r0, r7, r1
	ldr r1, [r7, r1]
	cmp r1, #0
	beq _0201713A
	adds r1, r0, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	cmp r1, #0
	bne _0201712C
	ldr r2, [r0, #0x50]
	adds r1, r5, #0
	blx r2
	b _02017140
_0201712C:
	adds r1, r0, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	adds r0, #0x2d
	subs r1, r1, #1
	strb r1, [r0]
	b _02017140
_0201713A:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_02017140:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	blo _0201710C
	cmp r6, #4
	bne _02017154
	ldr r0, _020171E8 @ =0x000001CD
	movs r1, #0
	strb r1, [r5, r0]
_02017154:
	ldr r0, _020171E8 @ =0x000001CD
	ldrb r1, [r5, r0]
	cmp r1, #0
	beq _0201716A
	adds r0, r5, #0
	bl FUN_020179D4
	adds r0, r5, #0
	bl FUN_02017A1C
	pop {r3, r4, r5, r6, r7, pc}
_0201716A:
	adds r0, r0, #2
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _02017182
	ldr r0, [r5]
	bl FUN_02009138
	cmp r0, #0
	bne _020171E4
	ldr r0, _020171EC @ =0x000001CF
	movs r1, #0
	strb r1, [r5, r0]
_02017182:
	adds r6, r5, #0
	adds r4, r5, #0
	ldr r7, _020171F0 @ =_020F61F8
	adds r6, #0xc
	adds r4, #0x44
_0201718C:
	ldr r0, [r4]
	adds r0, r0, #1
	str r0, [r4]
	ldr r0, [r5, #0xc]
	ldr r0, [r0]
	cmp r0, #0x22
	blo _0201719E
	bl FUN_0202551C
_0201719E:
	ldr r1, [r5, #0xc]
	adds r0, r5, #0
	ldr r1, [r1]
	lsls r1, r1, #2
	ldr r1, [r7, r1]
	blx r1
	ldr r0, [r5, #0x1c]
	cmp r0, #0
	bne _020171E4
	ldr r0, [r6]
	adds r0, r0, #4
	str r0, [r6]
	ldr r0, [r5, #0x18]
	cmp r0, #0
	bne _020171E4
	ldr r0, _020171E8 @ =0x000001CD
	ldrb r0, [r5, r0]
	cmp r0, #0
	beq _020171D2
	adds r0, r5, #0
	bl FUN_020179D4
	adds r0, r5, #0
	bl FUN_02017A1C
	pop {r3, r4, r5, r6, r7, pc}
_020171D2:
	movs r0, #1
	ldr r1, [r5, #0x44]
	lsls r0, r0, #8
	cmp r1, r0
	blt _0201718C
	bl FUN_0202551C
	movs r0, #1
	str r0, [r5, #0x1c]
_020171E4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020171E8: .4byte 0x000001CD
_020171EC: .4byte 0x000001CF
_020171F0: .4byte _020F61F8
	thumb_func_end FUN_020170FC

	thumb_func_start FUN_020171F4
FUN_020171F4: @ 0x020171F4
	push {r4, lr}
	lsls r1, r1, #2
	ldr r4, [r0, r1]
	cmp r2, #1
	beq _02017202
	bl FUN_0202551C
_02017202:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020171F4

	thumb_func_start FUN_02017208
FUN_02017208: @ 0x02017208
	ldr r3, _02017210 @ =FUN_020171F4
	adds r2, r1, #0
	movs r1, #0
	bx r3
	.align 2, 0
_02017210: .4byte FUN_020171F4
	thumb_func_end FUN_02017208

	thumb_func_start FUN_02017214
FUN_02017214: @ 0x02017214
	ldr r3, _0201721C @ =FUN_02017208
	movs r1, #1
	bx r3
	nop
_0201721C: .4byte FUN_02017208
	thumb_func_end FUN_02017214

	thumb_func_start FUN_02017220
FUN_02017220: @ 0x02017220
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	movs r3, #0
	adds r0, #0x7c
	movs r2, #0x54
_0201722A:
	adds r1, r3, #0
	muls r1, r2, r1
	adds r4, r0, r1
	ldr r1, [r0, r1]
	cmp r1, #0
	bne _02017254
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x54
	blx FUN_020D4994
	movs r0, #1
	str r0, [r4]
	movs r0, #0xc
	adds r1, r5, #0
	muls r1, r0, r1
	ldr r0, _02017268 @ =_020F61BC
	ldr r0, [r0, r1]
	str r0, [r4, #0x50]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_02017254:
	adds r1, r3, #1
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	cmp r3, #4
	blo _0201722A
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
	nop
_02017268: .4byte _020F61BC
	thumb_func_end FUN_02017220

	thumb_func_start FUN_0201726C
FUN_0201726C: @ 0x0201726C
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r0, #0xc]
	adds r1, r1, #4
	str r1, [r0, #0xc]
	adds r0, r1, #0
	bl FUN_02017214
	str r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_0201726C

	thumb_func_start FUN_02017280
FUN_02017280: @ 0x02017280
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r0, #0xc]
	adds r1, r1, #4
	str r1, [r0, #0xc]
	adds r0, r1, #0
	bl FUN_02017214
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02017280

	thumb_func_start FUN_02017294
FUN_02017294: @ 0x02017294
	push {r4, lr}
	adds r4, r1, #0
	ldr r1, [r0, #0xc]
	adds r1, r1, #4
	str r1, [r0, #0xc]
	adds r0, r1, #0
	bl FUN_02017214
	strb r0, [r4]
	ldrb r0, [r4]
	cmp r0, #8
	blo _020172B0
	bl FUN_0202551C
_020172B0:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017294

	thumb_func_start FUN_020172B4
FUN_020172B4: @ 0x020172B4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl FUN_02017294
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02017294
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020172B4

	thumb_func_start FUN_020172C8
FUN_020172C8: @ 0x020172C8
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_02017294
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _02017308
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #2
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	adds r1, r6, #0
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r4]
	adds r0, r5, #0
	bl FUN_0201726C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_02017308:
	cmp r0, #0x13
	bne _02017334
	add r1, sp, #0
	add r2, sp, #0
	adds r0, r5, #0
	adds r1, #2
	adds r2, #1
	bl FUN_020172B4
	add r0, sp, #0
	ldrb r1, [r0, #2]
	add sp, #4
	lsls r1, r1, #2
	adds r1, r5, r1
	ldr r1, [r1, #0x24]
	str r1, [r4]
	ldrb r0, [r0, #1]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	pop {r3, r4, r5, r6, pc}
_02017334:
	bl FUN_0202551C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_020172C8

	thumb_func_start FUN_0201733C
FUN_0201733C: @ 0x0201733C
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_02017294
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #1
	bl FUN_02017280
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x12
	bne _0201736E
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0201726C
	b _0201738E
_0201736E:
	cmp r0, #0x13
	bne _0201738A
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #3
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #3]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r4]
	b _0201738E
_0201738A:
	bl FUN_0202551C
_0201738E:
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _020173A2
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201726C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
_020173A2:
	cmp r0, #0x13
	bne _020173C0
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #2
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	pop {r3, r4, r5, r6, pc}
_020173C0:
	bl FUN_0202551C
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_0201733C

	thumb_func_start FUN_020173C8
FUN_020173C8: @ 0x020173C8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r2, #0
	add r2, sp, #0
	adds r2, #3
	adds r5, r0, #0
	adds r6, r3, #0
	bl FUN_020172B4
	add r0, sp, #0
	ldrb r0, [r0, #3]
	add r1, sp, #0
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r7, [r0, #0x24]
	adds r0, r5, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _020173FE
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201726C
	b _0201741E
_020173FE:
	cmp r0, #0x15
	bne _0201741A
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #2
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [r6]
	b _0201741E
_0201741A:
	bl FUN_0202551C
_0201741E:
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017438
	adds r0, r5, #0
	add r1, sp, #4
	bl FUN_0201726C
	b _02017458
_02017438:
	cmp r0, #0x15
	bne _02017454
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #1
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #1]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _02017458
_02017454:
	bl FUN_0202551C
_02017458:
	ldr r0, [sp, #4]
	adds r0, r7, r0
	lsrs r2, r0, #0x1f
	lsls r1, r0, #0x10
	subs r1, r1, r2
	movs r0, #0x10
	rors r1, r0
	adds r0, r2, r1
	str r0, [r4]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020173C8

	thumb_func_start FUN_02017470
FUN_02017470: @ 0x02017470
	ldr r2, [r0]
	ldr r0, [r1]
	subs r0, r2, r0
	bpl _0201747C
	movs r0, #0xf
	bx lr
_0201747C:
	cmp r0, #0
	ble _02017484
	movs r0, #0x10
	bx lr
_02017484:
	movs r0, #0x11
	bx lr
	thumb_func_end FUN_02017470

	thumb_func_start FUN_02017488
FUN_02017488: @ 0x02017488
	adds r2, r0, #0
	ldr r0, [r2]
	ldr r2, [r2, #0x74]
	movs r1, #1
	rsbs r3, r2, #0
	asrs r2, r3, #2
	lsrs r2, r2, #0x1d
	adds r2, r3, r2
	ldr r3, _020174A0 @ =FUN_02008C2C
	asrs r2, r2, #3
	bx r3
	nop
_020174A0: .4byte FUN_02008C2C
	thumb_func_end FUN_02017488

	thumb_func_start FUN_020174A4
FUN_020174A4: @ 0x020174A4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020174BC
	movs r0, #1
	str r0, [r4, #0x18]
	str r0, [r4, #0x1c]
	pop {r4, pc}
	thumb_func_end FUN_020174A4

	thumb_func_start FUN_020174B4
FUN_020174B4: @ 0x020174B4
	movs r1, #1
	str r1, [r0, #0x18]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020174B4

	thumb_func_start FUN_020174BC
FUN_020174BC: @ 0x020174BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r2, [r4, #0x58]
	movs r1, #0
	bl FUN_020087A4
	ldr r0, [r4]
	ldr r2, [r4, #0x5c]
	movs r1, #1
	bl FUN_020087A4
	ldr r0, [r4]
	movs r1, #9
	movs r2, #0
	bl FUN_020087A4
	ldr r0, [r4]
	movs r1, #0xa
	movs r2, #0
	bl FUN_020087A4
	movs r1, #0xc
	adds r2, r1, #0
	ldr r0, [r4]
	adds r2, #0xf4
	bl FUN_020087A4
	movs r1, #0xd
	adds r2, r1, #0
	ldr r0, [r4]
	adds r2, #0xf3
	bl FUN_020087A4
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020174BC

	thumb_func_start FUN_02017504
FUN_02017504: @ 0x02017504
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	adds r1, #1
	add r2, sp, #0
	adds r4, r0, #0
	bl FUN_020172B4
	add r0, sp, #0
	ldrb r1, [r0]
	ldrb r0, [r0, #1]
	lsls r1, r1, #2
	adds r1, r4, r1
	lsls r0, r0, #2
	ldr r1, [r1, #0x24]
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017504

	thumb_func_start FUN_0201752C
FUN_0201752C: @ 0x0201752C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_020172C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	adds r1, r1, r0
	add r0, sp, #0
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0201752C

	thumb_func_start FUN_02017550
FUN_02017550: @ 0x02017550
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_020172C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	adds r2, r1, #0
	muls r2, r0, r2
	add r0, sp, #0
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r4, r0
	str r2, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017550

	thumb_func_start FUN_02017578
FUN_02017578: @ 0x02017578
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_0201733C
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	subs r1, r1, r0
	add r0, sp, #0
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_02017578

	thumb_func_start FUN_0201759C
FUN_0201759C: @ 0x0201759C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_0201733C
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	blx FUN_020F2998
	add r1, sp, #0
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r4, r1
	str r0, [r1, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201759C

	thumb_func_start FUN_020175C4
FUN_020175C4: @ 0x020175C4
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_0201733C
	ldr r0, [sp, #8]
	ldr r1, [sp, #4]
	blx FUN_020F2998
	add r0, sp, #0
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_020175C4

	thumb_func_start FUN_020175EC
FUN_020175EC: @ 0x020175EC
	push {r3, r4, r5, lr}
	sub sp, #0x10
	add r1, sp, #0
	adds r5, r0, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017620
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #3
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #3]
	add r1, sp, #8
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_0201726C
	b _0201764E
_02017620:
	cmp r0, #0x15
	bne _0201764A
	add r1, sp, #0
	add r2, sp, #0
	adds r0, r5, #0
	adds r1, #3
	adds r2, #2
	bl FUN_020172B4
	add r0, sp, #0
	ldrb r1, [r0, #3]
	lsls r1, r1, #2
	adds r1, r5, r1
	ldr r1, [r1, #0x24]
	str r1, [sp, #0xc]
	ldrb r0, [r0, #2]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #8]
	b _0201764E
_0201764A:
	bl FUN_0202551C
_0201764E:
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #1
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x11
	bls _02017664
	bl FUN_0202551C
_02017664:
	add r0, sp, #0xc
	add r1, sp, #8
	bl FUN_02017470
	adds r4, r0, #0
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _02017692
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #3
	bl FUN_02017294
	adds r0, r5, #0
	add r1, sp, #4
	bl FUN_0201726C
	b _020176B6
_02017692:
	cmp r0, #0x15
	bne _020176B2
	add r1, sp, #0
	add r2, sp, #0
	adds r0, r5, #0
	adds r1, #3
	adds r2, #2
	bl FUN_020172B4
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020176B6
_020176B2:
	bl FUN_0202551C
_020176B6:
	add r0, sp, #0
	ldrb r1, [r0, #1]
	cmp r1, r4
	bne _020176C8
	ldrb r0, [r0, #3]
	ldr r1, [sp, #4]
	lsls r0, r0, #2
	adds r0, r5, r0
	str r1, [r0, #0x24]
_020176C8:
	add sp, #0x10
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020175EC

	thumb_func_start FUN_020176CC
FUN_020176CC: @ 0x020176CC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	add r1, sp, #0
	bl FUN_02017294
	ldr r0, [r4, #0xc]
	adds r0, r0, #4
	str r0, [r4, #0xc]
	bl FUN_02017214
	add r1, sp, #0
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r4, r1
	str r0, [r1, #0x24]
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_020176CC

	thumb_func_start FUN_020176F0
FUN_020176F0: @ 0x020176F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x50]
	cmp r0, #0
	beq _020176FE
	bl FUN_0202551C
_020176FE:
	ldr r0, [r4, #0xc]
	adds r0, r0, #4
	str r0, [r4, #0xc]
	str r0, [r4, #0x50]
	ldr r0, [r4, #0xc]
	bl FUN_02017214
	str r0, [r4, #0x48]
	movs r0, #0
	str r0, [r4, #0x4c]
	pop {r4, pc}
	thumb_func_end FUN_020176F0

	thumb_func_start FUN_02017714
FUN_02017714: @ 0x02017714
	ldr r1, [r0, #0x4c]
	adds r2, r1, #1
	str r2, [r0, #0x4c]
	ldr r1, [r0, #0x48]
	cmp r2, r1
	blt _0201772A
	movs r1, #0
	str r1, [r0, #0x50]
	str r1, [r0, #0x4c]
	str r1, [r0, #0x48]
	bx lr
_0201772A:
	ldr r1, [r0, #0x50]
	str r1, [r0, #0xc]
	bx lr
	thumb_func_end FUN_02017714

	thumb_func_start FUN_02017730
FUN_02017730: @ 0x02017730
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	add r1, sp, #4
	bl FUN_0201726C
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02017294
	add r2, sp, #0
	ldrb r2, [r2]
	ldr r0, [r4]
	ldr r1, [sp, #4]
	lsls r2, r2, #2
	adds r2, r4, r2
	ldr r2, [r2, #0x24]
	bl FUN_020087A4
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017730

	thumb_func_start FUN_0201775C
FUN_0201775C: @ 0x0201775C
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	add r1, sp, #4
	bl FUN_0201726C
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02017294
	add r2, sp, #0
	ldrb r2, [r2]
	ldr r0, [r4]
	ldr r1, [sp, #4]
	lsls r2, r2, #2
	adds r2, r4, r2
	ldr r2, [r2, #0x24]
	bl FUN_02008C2C
	add sp, #8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201775C

	thumb_func_start FUN_02017788
FUN_02017788: @ 0x02017788
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #8
	adds r4, r0, #0
	bl FUN_0201726C
	add r1, sp, #0
	adds r0, r4, #0
	adds r1, #1
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x14
	bne _020177B0
	adds r0, r4, #0
	add r1, sp, #4
	bl FUN_0201726C
	b _020177D0
_020177B0:
	cmp r0, #0x15
	bne _020177CC
	add r1, sp, #0
	adds r0, r4, #0
	adds r1, #2
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020177D0
_020177CC:
	bl FUN_0202551C
_020177D0:
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x16
	bne _020177EE
	ldr r0, [r4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	bl FUN_020087A4
	add sp, #0xc
	pop {r3, r4, pc}
_020177EE:
	cmp r0, #0x17
	bne _02017800
	ldr r0, [r4]
	ldr r1, [sp, #8]
	ldr r2, [sp, #4]
	bl FUN_02008C2C
	add sp, #0xc
	pop {r3, r4, pc}
_02017800:
	bl FUN_0202551C
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_02017788

	thumb_func_start FUN_02017808
FUN_02017808: @ 0x02017808
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_020173C8
	ldr r0, [sp, #8]
	ldr r2, [sp, #4]
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02017838 @ =0x021094DC
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r1, r0, #0xc
	add r0, sp, #0
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02017838: .4byte 0x021094DC
	thumb_func_end FUN_02017808

	thumb_func_start FUN_0201783C
FUN_0201783C: @ 0x0201783C
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #0
	add r2, sp, #8
	add r3, sp, #4
	adds r4, r0, #0
	bl FUN_020173C8
	ldr r1, [sp, #8]
	ldr r0, [sp, #4]
	asrs r1, r1, #4
	lsls r1, r1, #1
	adds r1, r1, #1
	lsls r2, r1, #1
	ldr r1, _02017870 @ =0x021094DC
	ldrsh r1, [r1, r2]
	muls r1, r0, r1
	add r0, sp, #0
	ldrb r0, [r0]
	asrs r1, r1, #0xc
	lsls r0, r0, #2
	adds r0, r4, r0
	str r1, [r0, #0x24]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_02017870: .4byte 0x021094DC
	thumb_func_end FUN_0201783C

	thumb_func_start FUN_02017874
FUN_02017874: @ 0x02017874
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	adds r4, r0, #0
	adds r1, #1
	bl FUN_02017294
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r1, [r0]
	cmp r1, #8
	bne _020178A0
	ldrb r0, [r0, #1]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x60]
	pop {r3, r4, pc}
_020178A0:
	cmp r1, #9
	bne _020178B2
	ldrb r0, [r0, #1]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x64]
	pop {r3, r4, pc}
_020178B2:
	bl FUN_0202551C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017874

	thumb_func_start FUN_020178BC
FUN_020178BC: @ 0x020178BC
	push {r3, r4, lr}
	sub sp, #4
	add r1, sp, #0
	adds r4, r0, #0
	adds r1, #1
	bl FUN_02017294
	adds r0, r4, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r1, [r0]
	cmp r1, #8
	bne _020178EC
	ldrb r0, [r0, #1]
	ldr r1, [r4, #0x60]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	adds r0, r1, r0
	str r0, [r4, #0x60]
	pop {r3, r4, pc}
_020178EC:
	cmp r1, #9
	bne _02017902
	ldrb r0, [r0, #1]
	ldr r1, [r4, #0x64]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	adds r0, r1, r0
	str r0, [r4, #0x64]
	pop {r3, r4, pc}
_02017902:
	bl FUN_0202551C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_020178BC

	thumb_func_start FUN_0201790C
FUN_0201790C: @ 0x0201790C
	push {r3, r4, r5, lr}
	sub sp, #8
	add r1, sp, #0
	adds r1, #3
	adds r5, r0, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0, #3]
	cmp r0, #8
	bne _02017928
	adds r4, r5, #0
	adds r4, #0x60
	b _02017968
_02017928:
	cmp r0, #9
	bne _02017932
	adds r4, r5, #0
	adds r4, #0x64
	b _02017968
_02017932:
	cmp r0, #0xa
	bne _0201793C
	adds r4, r5, #0
	adds r4, #0x68
	b _02017968
_0201793C:
	cmp r0, #0xb
	bne _02017946
	adds r4, r5, #0
	adds r4, #0x6c
	b _02017968
_02017946:
	cmp r0, #0xc
	bne _02017950
	adds r4, r5, #0
	adds r4, #0x70
	b _02017968
_02017950:
	cmp r0, #0xd
	bne _0201795A
	adds r4, r5, #0
	adds r4, #0x74
	b _02017968
_0201795A:
	cmp r0, #0xe
	bne _02017964
	adds r4, r5, #0
	adds r4, #0x78
	b _02017968
_02017964:
	bl FUN_0202551C
_02017968:
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #1
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0, #1]
	cmp r0, #0x14
	bne _02017984
	adds r0, r5, #0
	add r1, sp, #4
	bl FUN_0201726C
	b _020179A4
_02017984:
	cmp r0, #0x15
	bne _020179A0
	add r1, sp, #0
	adds r0, r5, #0
	adds r1, #2
	bl FUN_02017294
	add r0, sp, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0, #0x24]
	str r0, [sp, #4]
	b _020179A4
_020179A0:
	bl FUN_0202551C
_020179A4:
	adds r0, r5, #0
	add r1, sp, #0
	bl FUN_02017280
	add r0, sp, #0
	ldrb r0, [r0]
	cmp r0, #0x16
	bne _020179BC
	ldr r0, [sp, #4]
	add sp, #8
	str r0, [r4]
	pop {r3, r4, r5, pc}
_020179BC:
	cmp r0, #0x17
	bne _020179CC
	ldr r0, [sp, #4]
	ldr r1, [r4]
	add sp, #8
	adds r0, r1, r0
	str r0, [r4]
	pop {r3, r4, r5, pc}
_020179CC:
	bl FUN_0202551C
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201790C

	thumb_func_start FUN_020179D4
FUN_020179D4: @ 0x020179D4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #0x73
	lsls r0, r0, #2
	ldrb r0, [r4, r0]
	cmp r0, #0
	ldr r0, [r4]
	beq _020179F6
	ldr r3, [r4, #0x60]
	ldr r2, [r4, #0x68]
	ldr r5, [r4, #0x58]
	adds r2, r3, r2
	movs r1, #0
	subs r2, r5, r2
	bl FUN_020087A4
	b _02017A06
_020179F6:
	ldr r3, [r4, #0x58]
	ldr r2, [r4, #0x60]
	ldr r5, [r4, #0x68]
	adds r2, r3, r2
	movs r1, #0
	adds r2, r5, r2
	bl FUN_020087A4
_02017A06:
	ldr r3, [r4, #0x5c]
	ldr r2, [r4, #0x64]
	ldr r5, [r4, #0x6c]
	adds r2, r3, r2
	ldr r0, [r4]
	movs r1, #1
	adds r2, r5, r2
	bl FUN_020087A4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020179D4

	thumb_func_start FUN_02017A1C
FUN_02017A1C: @ 0x02017A1C
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xc
	adds r2, r1, #0
	ldr r3, [r4, #0x70]
	adds r2, #0xf4
	ldr r0, [r4]
	adds r2, r3, r2
	bl FUN_020087A4
	movs r1, #0xd
	adds r2, r1, #0
	ldr r3, [r4, #0x74]
	adds r2, #0xf3
	ldr r0, [r4]
	adds r2, r3, r2
	bl FUN_020087A4
	ldr r2, [r4, #0x78]
	ldr r0, [r4]
	lsls r2, r2, #0x10
	movs r1, #9
	lsrs r2, r2, #0x10
	bl FUN_020087A4
	ldr r0, _02017A80 @ =0x000001CE
	ldrb r0, [r4, r0]
	cmp r0, #0x1b
	bne _02017A64
	ldr r0, [r4, #0x74]
	cmp r0, #0
	bge _02017A7E
	adds r0, r4, #0
	bl FUN_02017488
	pop {r4, pc}
_02017A64:
	cmp r0, #0x1d
	bne _02017A76
	ldr r0, [r4, #0x74]
	cmp r0, #0
	beq _02017A7E
	adds r0, r4, #0
	bl FUN_02017488
	pop {r4, pc}
_02017A76:
	cmp r0, #0x1c
	beq _02017A7E
	bl FUN_0202551C
_02017A7E:
	pop {r4, pc}
	.align 2, 0
_02017A80: .4byte 0x000001CE
	thumb_func_end FUN_02017A1C

	thumb_func_start FUN_02017A84
FUN_02017A84: @ 0x02017A84
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	add r1, sp, #0
	bl FUN_02017294
	ldr r0, [r4, #0xc]
	adds r0, r0, #4
	str r0, [r4, #0xc]
	bl FUN_02017214
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	beq _02017AA6
	cmp r0, #0xa
	bne _02017AB6
_02017AA6:
	add r0, sp, #0
	ldrb r0, [r0]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x68]
	pop {r3, r4, pc}
_02017AB6:
	cmp r0, #9
	beq _02017ABE
	cmp r0, #0xb
	bne _02017ACE
_02017ABE:
	add r0, sp, #0
	ldrb r0, [r0]
	add sp, #4
	lsls r0, r0, #2
	adds r0, r4, r0
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x6c]
	pop {r3, r4, pc}
_02017ACE:
	bl FUN_0202551C
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017A84

	thumb_func_start FUN_02017AD8
FUN_02017AD8: @ 0x02017AD8
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x54
	bl FUN_0201726C
	movs r0, #1
	str r0, [r4, #0x18]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017AD8

	thumb_func_start FUN_02017AEC
FUN_02017AEC: @ 0x02017AEC
	push {r3, r4, lr}
	sub sp, #0xc
	add r1, sp, #4
	adds r1, #2
	adds r4, r0, #0
	bl FUN_02017280
	add r1, sp, #4
	adds r0, r4, #0
	adds r1, #1
	bl FUN_02017280
	adds r0, r4, #0
	add r1, sp, #4
	bl FUN_02017280
	adds r0, r4, #0
	add r1, sp, #8
	bl FUN_0201726C
	ldr r0, [sp, #8]
	add r3, sp, #4
	str r0, [sp]
	ldrb r1, [r3, #2]
	ldrb r2, [r3, #1]
	ldrb r3, [r3]
	ldr r0, [r4]
	bl FUN_020090B4
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017AEC

	thumb_func_start FUN_02017B2C
FUN_02017B2C: @ 0x02017B2C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_02009138
	cmp r0, #0
	beq _02017B42
	ldr r0, _02017B44 @ =0x000001CF
	movs r1, #1
	strb r1, [r4, r0]
	str r1, [r4, #0x18]
_02017B42:
	pop {r4, pc}
	.align 2, 0
_02017B44: .4byte 0x000001CF
	thumb_func_end FUN_02017B2C

	thumb_func_start FUN_02017B48
FUN_02017B48: @ 0x02017B48
	ldr r1, _02017B50 @ =0x000001CD
	movs r2, #1
	strb r2, [r0, r1]
	bx lr
	.align 2, 0
_02017B50: .4byte 0x000001CD
	thumb_func_end FUN_02017B48

	thumb_func_start FUN_02017B54
FUN_02017B54: @ 0x02017B54
	push {r4, lr}
	ldr r1, _02017B88 @ =0x000001CE
	adds r4, r0, #0
	adds r1, r4, r1
	bl FUN_02017280
	ldr r0, _02017B88 @ =0x000001CE
	movs r1, #1
	ldrb r0, [r4, r0]
	adds r2, r1, #0
	cmp r0, #0x1b
	beq _02017B72
	cmp r0, #0x1d
	beq _02017B72
	movs r2, #0
_02017B72:
	cmp r2, #0
	bne _02017B7C
	cmp r0, #0x1c
	beq _02017B7C
	movs r1, #0
_02017B7C:
	cmp r1, #0
	bne _02017B84
	bl FUN_0202551C
_02017B84:
	pop {r4, pc}
	nop
_02017B88: .4byte 0x000001CE
	thumb_func_end FUN_02017B54

	thumb_func_start FUN_02017B8C
FUN_02017B8C: @ 0x02017B8C
	ldr r3, _02017B94 @ =FUN_02017C78
	movs r1, #0
	bx r3
	nop
_02017B94: .4byte FUN_02017C78
	thumb_func_end FUN_02017B8C

	thumb_func_start FUN_02017B98
FUN_02017B98: @ 0x02017B98
	ldr r3, _02017BA0 @ =FUN_02017C78
	movs r1, #1
	bx r3
	nop
_02017BA0: .4byte FUN_02017C78
	thumb_func_end FUN_02017B98

	thumb_func_start FUN_02017BA4
FUN_02017BA4: @ 0x02017BA4
	ldr r3, _02017BAC @ =FUN_02017C78
	movs r1, #2
	bx r3
	nop
_02017BAC: .4byte FUN_02017C78
	thumb_func_end FUN_02017BA4

	thumb_func_start FUN_02017BB0
FUN_02017BB0: @ 0x02017BB0
	ldr r3, _02017BB8 @ =FUN_02017C78
	movs r1, #3
	bx r3
	nop
_02017BB8: .4byte FUN_02017C78
	thumb_func_end FUN_02017BB0

	thumb_func_start FUN_02017BBC
FUN_02017BBC: @ 0x02017BBC
	ldr r3, _02017BC4 @ =FUN_02017C78
	movs r1, #4
	bx r3
	nop
_02017BC4: .4byte FUN_02017C78
	thumb_func_end FUN_02017BBC

	thumb_func_start FUN_02017BC8
FUN_02017BC8: @ 0x02017BC8
	push {r3, lr}
	cmp r0, #0x18
	bne _02017BD4
	ldr r0, [r2]
	str r0, [r3]
	pop {r3, pc}
_02017BD4:
	cmp r0, #0x19
	bne _02017BE2
	ldr r1, [r1]
	ldr r0, [r2]
	adds r0, r1, r0
	str r0, [r3]
	pop {r3, pc}
_02017BE2:
	cmp r0, #0x1a
	bne _02017BF0
	ldr r1, [r3]
	ldr r0, [r2]
	adds r0, r1, r0
	str r0, [r3]
	pop {r3, pc}
_02017BF0:
	bl FUN_0202551C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02017BC8

	thumb_func_start FUN_02017BF8
FUN_02017BF8: @ 0x02017BF8
	push {r3, lr}
	subs r0, #0x23
	cmp r0, #4
	bhi _02017C70
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02017C0C: @ jump table
	.2byte _02017C16 - _02017C0C - 2 @ case 0
	.2byte _02017C28 - _02017C0C - 2 @ case 1
	.2byte _02017C3A - _02017C0C - 2 @ case 2
	.2byte _02017C4C - _02017C0C - 2 @ case 3
	.2byte _02017C5E - _02017C0C - 2 @ case 4
_02017C16:
	adds r0, r1, #0
	adds r0, #0x3c
	str r0, [r1, #0x24]
	adds r0, r2, #0
	adds r0, #0x68
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x68]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C28:
	adds r0, r1, #0
	adds r0, #0x40
	str r0, [r1, #0x24]
	adds r0, r2, #0
	adds r0, #0x6c
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x6c]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C3A:
	adds r0, r1, #0
	adds r0, #0x44
	str r0, [r1, #0x24]
	adds r0, r2, #0
	adds r0, #0x70
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x70]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C4C:
	adds r0, r1, #0
	adds r0, #0x48
	str r0, [r1, #0x24]
	adds r0, r2, #0
	adds r0, #0x74
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x74]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C5E:
	adds r0, r1, #0
	adds r0, #0x4c
	str r0, [r1, #0x24]
	adds r0, r2, #0
	adds r0, #0x78
	str r0, [r1, #0x28]
	ldr r0, [r2, #0x78]
	str r0, [r1, #0x30]
	pop {r3, pc}
_02017C70:
	bl FUN_0202551C
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02017BF8

	thumb_func_start FUN_02017C78
FUN_02017C78: @ 0x02017C78
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r1, #0
	lsls r1, r6, #0x18
	lsrs r1, r1, #0x18
	adds r5, r0, #0
	bl FUN_02017220
	str r0, [sp, #4]
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r1, #0x2c
	bl FUN_02017280
	ldr r1, [sp, #4]
	adds r0, r5, #0
	adds r1, #0x2d
	bl FUN_02017280
	movs r0, #0xc
	muls r0, r6, r0
	ldr r1, _02017D14 @ =_020F61C0
	str r0, [sp]
	ldr r0, [r1, r0]
	movs r4, #0
	cmp r0, #0
	ble _02017CCE
	ldr r1, _02017D18 @ =_020F61BC
	ldr r0, [sp]
	adds r6, r1, r0
	ldr r0, [sp, #4]
	adds r7, r0, #4
_02017CB8:
	lsls r1, r4, #2
	adds r0, r5, #0
	adds r1, r7, r1
	bl FUN_0201726C
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, [r6, #4]
	cmp r4, r0
	blt _02017CB8
_02017CCE:
	ldr r1, _02017D1C @ =_020F61C4
	ldr r0, [sp]
	adds r2, r5, #0
	ldr r0, [r1, r0]
	lsls r1, r0, #2
	ldr r0, [sp, #4]
	adds r0, r0, r1
	ldr r0, [r0, #4]
	ldr r1, [sp, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FUN_02017BF8
	ldr r0, [sp, #4]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #0
	bne _02017D00
	ldr r0, [sp, #4]
	adds r1, r5, #0
	adds r2, r0, #0
	ldr r2, [r2, #0x50]
	blx r2
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_02017D00:
	ldr r0, [sp, #4]
	adds r0, #0x2d
	ldrb r0, [r0]
	subs r1, r0, #1
	ldr r0, [sp, #4]
	adds r0, #0x2d
	str r0, [sp, #4]
	strb r1, [r0]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02017D14: .4byte _020F61C0
_02017D18: .4byte _020F61BC
_02017D1C: .4byte _020F61C4
	thumb_func_end FUN_02017C78

	thumb_func_start FUN_02017D20
FUN_02017D20: @ 0x02017D20
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x1c]
	ldr r1, [r4, #0x10]
	adds r0, r0, #1
	ldr r2, [r4, #0x14]
	muls r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [r4, #4]
	subs r0, #0x1e
	cmp r0, #3
	bhi _02017DAC
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02017D48: @ jump table
	.2byte _02017D50 - _02017D48 - 2 @ case 0
	.2byte _02017D64 - _02017D48 - 2 @ case 1
	.2byte _02017D7C - _02017D48 - 2 @ case 2
	.2byte _02017D92 - _02017D48 - 2 @ case 3
_02017D50:
	asrs r0, r1, #4
	lsls r1, r0, #2
	ldr r0, _02017DD4 @ =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r1, r0, #0xc
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017D64:
	asrs r1, r1, #4
	lsls r1, r1, #1
	adds r1, r1, #1
	lsls r2, r1, #1
	ldr r1, _02017DD4 @ =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	muls r1, r0, r1
	ldr r0, [r4, #0x24]
	asrs r1, r1, #0xc
	str r1, [r0]
	b _02017DB0
_02017D7C:
	asrs r0, r1, #4
	lsls r1, r0, #2
	ldr r0, _02017DD4 @ =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xc
	rsbs r1, r0, #0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017D92:
	asrs r1, r1, #4
	lsls r1, r1, #1
	adds r1, r1, #1
	lsls r2, r1, #1
	ldr r1, _02017DD4 @ =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	muls r1, r0, r1
	asrs r0, r1, #0xc
	rsbs r1, r0, #0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017DB0
_02017DAC:
	bl FUN_0202551C
_02017DB0:
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	adds r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	adds r1, #0x30
	bl FUN_02017BC8
	ldr r0, [r4, #0x1c]
	adds r1, r0, #1
	str r1, [r4, #0x1c]
	ldr r0, [r4, #0x18]
	cmp r1, r0
	blt _02017DD2
	movs r0, #0
	str r0, [r4]
_02017DD2:
	pop {r4, pc}
	.align 2, 0
_02017DD4: .4byte 0x021094DC
	thumb_func_end FUN_02017D20

	thumb_func_start FUN_02017DD8
FUN_02017DD8: @ 0x02017DD8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x1c]
	ldr r1, [r4, #0x10]
	adds r0, r0, #1
	muls r0, r1, r0
	ldr r1, [r4, #0x18]
	blx FUN_020F2998
	ldr r1, [r4, #0x14]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [r4, #4]
	subs r0, #0x1e
	cmp r0, #3
	bhi _02017E6A
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_02017E06: @ jump table
	.2byte _02017E0E - _02017E06 - 2 @ case 0
	.2byte _02017E22 - _02017E06 - 2 @ case 1
	.2byte _02017E3A - _02017E06 - 2 @ case 2
	.2byte _02017E50 - _02017E06 - 2 @ case 3
_02017E0E:
	asrs r0, r1, #4
	lsls r1, r0, #2
	ldr r0, _02017E94 @ =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r1, r0, #0xc
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E22:
	asrs r1, r1, #4
	lsls r1, r1, #1
	adds r1, r1, #1
	lsls r2, r1, #1
	ldr r1, _02017E94 @ =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	muls r1, r0, r1
	ldr r0, [r4, #0x24]
	asrs r1, r1, #0xc
	str r1, [r0]
	b _02017E6E
_02017E3A:
	asrs r0, r1, #4
	lsls r1, r0, #2
	ldr r0, _02017E94 @ =0x021094DC
	ldr r2, [r4, #0xc]
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xc
	rsbs r1, r0, #0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E50:
	asrs r1, r1, #4
	lsls r1, r1, #1
	adds r1, r1, #1
	lsls r2, r1, #1
	ldr r1, _02017E94 @ =0x021094DC
	ldr r0, [r4, #0xc]
	ldrsh r1, [r1, r2]
	muls r1, r0, r1
	asrs r0, r1, #0xc
	rsbs r1, r0, #0
	ldr r0, [r4, #0x24]
	str r1, [r0]
	b _02017E6E
_02017E6A:
	bl FUN_0202551C
_02017E6E:
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	adds r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	adds r1, #0x30
	bl FUN_02017BC8
	ldr r0, [r4, #0x1c]
	adds r1, r0, #1
	str r1, [r4, #0x1c]
	ldr r0, [r4, #0x18]
	cmp r1, r0
	blt _02017E90
	movs r0, #0
	str r0, [r4]
_02017E90:
	pop {r4, pc}
	nop
_02017E94: .4byte 0x021094DC
	thumb_func_end FUN_02017DD8

	thumb_func_start FUN_02017E98
FUN_02017E98: @ 0x02017E98
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x24]
	ldr r3, [r4, #0xc]
	ldr r2, [r4, #0x14]
	ldr r5, [r4, #8]
	muls r2, r3, r2
	ldr r0, [r1]
	adds r2, r5, r2
	adds r0, r0, r2
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2c
	adds r1, r4, #0
	ldrb r0, [r0]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	adds r1, #0x30
	bl FUN_02017BC8
	ldr r0, [r4, #0x14]
	adds r1, r0, #1
	str r1, [r4, #0x14]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	blt _02017ED0
	movs r0, #0
	str r0, [r4]
_02017ED0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02017E98

	thumb_func_start FUN_02017ED4
FUN_02017ED4: @ 0x02017ED4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x10]
	adds r1, r0, #1
	ldr r0, [r4, #8]
	muls r0, r1, r0
	ldr r1, [r4, #0xc]
	blx FUN_020F2998
	ldr r1, [r4, #0x24]
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2c
	adds r1, r4, #0
	ldrb r0, [r0]
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	adds r1, #0x30
	bl FUN_02017BC8
	ldr r0, [r4, #0x10]
	adds r1, r0, #1
	str r1, [r4, #0x10]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	blt _02017F0C
	movs r0, #0
	str r0, [r4]
_02017F0C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017ED4

	thumb_func_start FUN_02017F10
FUN_02017F10: @ 0x02017F10
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #8]
	muls r0, r1, r0
	ldr r1, [r4, #0x24]
	adds r2, r2, r0
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #0x18
	beq _02017F34
	cmp r0, #0x1a
	bne _02017F5A
_02017F34:
	cmp r2, #0
	ldr r2, [r4, #0x10]
	bge _02017F4A
	ldr r1, [r4, #0x24]
	ldr r0, [r1]
	cmp r0, r2
	bgt _02017F90
	str r2, [r1]
	movs r0, #0
	str r0, [r4]
	b _02017F90
_02017F4A:
	ldr r1, [r4, #0x24]
	ldr r0, [r1]
	cmp r0, r2
	blt _02017F90
	str r2, [r1]
	movs r0, #0
	str r0, [r4]
	b _02017F90
_02017F5A:
	cmp r0, #0x19
	bne _02017F8C
	ldr r1, [r4, #0x24]
	ldr r3, [r4, #0x30]
	ldr r0, [r1]
	adds r3, r3, r0
	cmp r2, #0
	ldr r2, [r4, #0x10]
	bge _02017F7C
	cmp r3, r2
	bgt _02017F90
	subs r2, r2, r3
	adds r0, r0, r2
	str r0, [r1]
	movs r0, #0
	str r0, [r4]
	b _02017F90
_02017F7C:
	cmp r3, r2
	blt _02017F90
	subs r2, r3, r2
	subs r0, r0, r2
	str r0, [r1]
	movs r0, #0
	str r0, [r4]
	b _02017F90
_02017F8C:
	bl FUN_0202551C
_02017F90:
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	adds r1, r4, #0
	ldr r2, [r4, #0x24]
	ldr r3, [r4, #0x28]
	adds r1, #0x30
	bl FUN_02017BC8
	ldr r0, [r4, #0x14]
	adds r0, r0, #1
	str r0, [r4, #0x14]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02017F10

	thumb_func_start FUN_02017FAC
FUN_02017FAC: @ 0x02017FAC
	ldr r3, _02017FC8 @ =_020F6280
	movs r2, #0
_02017FB0:
	ldrh r1, [r3, #2]
	cmp r0, r1
	bhs _02017FBA
	adds r0, r2, #0
	bx lr
_02017FBA:
	adds r2, r2, #1
	adds r3, r3, #2
	cmp r2, #2
	blt _02017FB0
	adds r0, r2, #0
	bx lr
	nop
_02017FC8: .4byte _020F6280
	thumb_func_end FUN_02017FAC

	thumb_func_start FUN_02017FCC
FUN_02017FCC: @ 0x02017FCC
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02017FAC
	lsls r1, r0, #1
	ldr r0, _02017FE0 @ =_020F6280
	ldrh r0, [r0, r1]
	subs r0, r4, r0
	pop {r4, pc}
	nop
_02017FE0: .4byte _020F6280
	thumb_func_end FUN_02017FCC

	thumb_func_start FUN_02017FE4
FUN_02017FE4: @ 0x02017FE4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #3
	blt _02017FF2
	bl FUN_0202551C
_02017FF2:
	ldr r0, _02017FFC @ =_020F6280
	lsls r1, r5, #1
	ldrh r0, [r0, r1]
	adds r0, r4, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02017FFC: .4byte _020F6280
	thumb_func_end FUN_02017FE4

	thumb_func_start FUN_02018000
FUN_02018000: @ 0x02018000
	cmp r0, #1
	blo _02018008
	cmp r0, #0x6f
	bls _02018022
_02018008:
	movs r1, #0x7d
	lsls r1, r1, #4
	cmp r0, r1
	blo _02018016
	adds r1, #0xa
	cmp r0, r1
	bls _02018022
_02018016:
	ldr r1, _0201802C @ =0x00000BB8
	cmp r0, r1
	blo _02018026
	adds r1, #0x4c
	cmp r0, r1
	bhi _02018026
_02018022:
	movs r0, #1
	bx lr
_02018026:
	movs r0, #0
	bx lr
	nop
_0201802C: .4byte 0x00000BB8
	thumb_func_end FUN_02018000

	thumb_func_start FUN_02018030
FUN_02018030: @ 0x02018030
	push {r3, r4, r5, lr}
	movs r4, #0
	adds r5, r0, #0
	adds r0, r1, #0
	adds r1, r2, #0
	str r4, [sp]
	adds r2, r4, #0
	bl FUN_02007C98
	str r0, [r5]
	adds r0, r5, #0
	bl FUN_02018324
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02018030

	thumb_func_start FUN_0201804C
FUN_0201804C: @ 0x0201804C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0201F668
	ldr r0, [r4]
	ldr r1, [r4, #0xc]
	bl FUN_0201F64C
	adds r0, r5, #0
	bl FUN_0200E390
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201804C

	thumb_func_start FUN_02018068
FUN_02018068: @ 0x02018068
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _02018098
	add r1, sp, #4
	add r2, sp, #0
	blx FUN_020BE4D0
	ldr r1, _020180B4 @ =_02110928
	ldr r0, [sp, #4]
	ldr r1, [r1]
	blx r1
	ldr r1, _020180B4 @ =_02110928
	ldr r0, [sp]
	ldr r1, [r1]
	blx r1
	ldr r0, [r4, #0xc]
	blx FUN_020BE588
	ldr r1, _020180B8 @ =_02110930
	ldr r1, [r1]
	blx r1
_02018098:
	ldr r0, [r4]
	cmp r0, #0
	beq _020180A2
	bl FUN_0201AB0C
_020180A2:
	movs r1, #0x10
	movs r0, #0
_020180A6:
	strb r0, [r4]
	adds r4, r4, #1
	subs r1, r1, #1
	bne _020180A6
	add sp, #8
	pop {r4, pc}
	nop
_020180B4: .4byte _02110928
_020180B8: .4byte _02110930
	thumb_func_end FUN_02018068

	thumb_func_start FUN_020180BC
FUN_020180BC: @ 0x020180BC
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r4, r1, #0
	movs r6, #0
	adds r1, r3, #0
	adds r5, r0, #0
	adds r0, r2, #0
	ldr r3, [sp, #0x18]
	adds r2, r6, #0
	str r6, [sp]
	bl FUN_02007C98
	adds r2, r0, #0
	ldr r3, [sp, #0x1c]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020182F8
	adds r0, r6, #0
	str r0, [r5, #0x10]
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_020180BC

	thumb_func_start FUN_020180E8
FUN_020180E8: @ 0x020180E8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020182F8
	movs r0, #1
	str r0, [r4, #0x10]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020180E8

	thumb_func_start FUN_020180F8
FUN_020180F8: @ 0x020180F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _02018116
	adds r0, r1, #0
	ldr r1, [r4, #8]
	blx FUN_020C2BA0
	ldr r0, [r4, #0x10]
	cmp r0, #0
	bne _02018116
	ldr r0, [r4]
	bl FUN_0201AB0C
_02018116:
	movs r1, #0x14
	movs r0, #0
_0201811A:
	strb r0, [r4]
	adds r4, r4, #1
	subs r1, r1, #1
	bne _0201811A
	pop {r4, pc}
	thumb_func_end FUN_020180F8

	thumb_func_start FUN_02018124
FUN_02018124: @ 0x02018124
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	ldr r0, [r0, #8]
	ldrh r0, [r0, #4]
	lsls r2, r0, #0xc
	cmp r1, #0
	ble _02018142
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	adds r1, r2, #0
	blx FUN_020F2998
	str r1, [r4, #0xc]
	b _02018154
_02018142:
	ldr r0, [r4, #0xc]
	adds r3, r4, #0
	adds r3, #0xc
	adds r0, r0, r1
	str r0, [r4, #0xc]
	bpl _02018154
	ldr r0, [r3]
	adds r0, r0, r2
	str r0, [r3]
_02018154:
	ldr r1, [r4, #0xc]
	ldr r0, [r4, #8]
	str r1, [r0]
	pop {r4, pc}
	thumb_func_end FUN_02018124

	thumb_func_start FUN_0201815C
FUN_0201815C: @ 0x0201815C
	push {r3, r4}
	ldr r2, [r0, #8]
	ldr r3, [r0, #0xc]
	ldr r2, [r2, #8]
	ldrh r2, [r2, #4]
	lsls r4, r2, #0xc
	movs r2, #0
	cmp r1, #0
	ble _0201817E
	adds r1, r3, r1
	cmp r1, r4
	bge _02018178
	str r1, [r0, #0xc]
	b _0201818A
_02018178:
	str r4, [r0, #0xc]
	movs r2, #1
	b _0201818A
_0201817E:
	adds r1, r3, r1
	bmi _02018186
	str r1, [r0, #0xc]
	b _0201818A
_02018186:
	str r2, [r0, #0xc]
	movs r2, #1
_0201818A:
	ldr r1, [r0, #0xc]
	ldr r0, [r0, #8]
	str r1, [r0]
	adds r0, r2, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201815C

	thumb_func_start FUN_02018198
FUN_02018198: @ 0x02018198
	str r1, [r0, #0xc]
	ldr r0, [r0, #8]
	str r1, [r0]
	bx lr
	thumb_func_end FUN_02018198

	thumb_func_start FUN_020181A0
FUN_020181A0: @ 0x020181A0
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end FUN_020181A0

	thumb_func_start FUN_020181A4
FUN_020181A4: @ 0x020181A4
	ldr r0, [r0, #8]
	ldr r0, [r0, #8]
	ldrh r0, [r0, #4]
	lsls r0, r0, #0xc
	bx lr
	.align 2, 0
	thumb_func_end FUN_020181A4

	thumb_func_start FUN_020181B0
FUN_020181B0: @ 0x020181B0
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	movs r1, #0
	movs r2, #0x78
	adds r4, r0, #0
	blx FUN_020E5B44
	ldr r1, [r5, #8]
	adds r0, r4, #0
	blx FUN_020BE120
	movs r0, #1
	str r0, [r4, #0x6c]
	lsls r0, r0, #0xc
	str r0, [r4, #0x60]
	str r0, [r4, #0x64]
	str r0, [r4, #0x68]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020181B0

	thumb_func_start FUN_020181D4
FUN_020181D4: @ 0x020181D4
	ldr r3, _020181DC @ =FUN_020BE294
	ldr r1, [r1, #8]
	bx r3
	nop
_020181DC: .4byte FUN_020BE294
	thumb_func_end FUN_020181D4

	thumb_func_start FUN_020181E0
FUN_020181E0: @ 0x020181E0
	ldr r3, _020181E8 @ =FUN_020BE388
	ldr r1, [r1, #8]
	bx r3
	nop
_020181E8: .4byte FUN_020BE388
	thumb_func_end FUN_020181E0

	thumb_func_start FUN_020181EC
FUN_020181EC: @ 0x020181EC
	push {r4, lr}
	sub sp, #0x48
	adds r4, r0, #0
	ldr r0, [r4, #0x6c]
	cmp r0, #0
	beq _02018280
	add r0, sp, #0x24
	blx FUN_020CAFEC
	adds r0, r4, #0
	adds r0, #0x70
	ldrh r0, [r0]
	ldr r3, _02018284 @ =0x021094DC
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl FUN_020CB0D0
	add r1, sp, #0x24
	add r0, sp, #0
	adds r2, r1, #0
	blx FUN_020CB410
	adds r0, r4, #0
	adds r0, #0x74
	ldrh r0, [r0]
	ldr r3, _02018284 @ =0x021094DC
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl FUN_020CB108
	add r1, sp, #0x24
	add r0, sp, #0
	adds r2, r1, #0
	blx FUN_020CB410
	adds r0, r4, #0
	adds r0, #0x72
	ldrh r0, [r0]
	ldr r3, _02018284 @ =0x021094DC
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl FUN_020CB0EC
	add r1, sp, #0x24
	add r0, sp, #0
	adds r2, r1, #0
	blx FUN_020CB410
	adds r1, r4, #0
	adds r0, r4, #0
	adds r4, #0x60
	adds r1, #0x54
	add r2, sp, #0x24
	adds r3, r4, #0
	bl FUN_0201F554
_02018280:
	add sp, #0x48
	pop {r4, pc}
	.align 2, 0
_02018284: .4byte 0x021094DC
	thumb_func_end FUN_020181EC

	thumb_func_start FUN_02018288
FUN_02018288: @ 0x02018288
	push {r3, lr}
	adds r2, r1, #0
	ldr r1, [r0, #0x6c]
	cmp r1, #0
	beq _0201829E
	adds r1, r0, #0
	adds r3, r0, #0
	adds r1, #0x54
	adds r3, #0x60
	bl FUN_0201F554
_0201829E:
	pop {r3, pc}
	thumb_func_end FUN_02018288

	thumb_func_start FUN_020182A0
FUN_020182A0: @ 0x020182A0
	str r1, [r0, #0x6c]
	bx lr
	thumb_func_end FUN_020182A0

	thumb_func_start FUN_020182A4
FUN_020182A4: @ 0x020182A4
	ldr r0, [r0, #0x6c]
	bx lr
	thumb_func_end FUN_020182A4

	thumb_func_start FUN_020182A8
FUN_020182A8: @ 0x020182A8
	str r1, [r0, #0x54]
	str r2, [r0, #0x58]
	str r3, [r0, #0x5c]
	bx lr
	thumb_func_end FUN_020182A8

	thumb_func_start FUN_020182B0
FUN_020182B0: @ 0x020182B0
	push {r3, r4}
	ldr r4, [r0, #0x54]
	str r4, [r1]
	ldr r1, [r0, #0x58]
	str r1, [r2]
	ldr r0, [r0, #0x5c]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020182B0

	thumb_func_start FUN_020182C4
FUN_020182C4: @ 0x020182C4
	str r1, [r0, #0x60]
	str r2, [r0, #0x64]
	str r3, [r0, #0x68]
	bx lr
	thumb_func_end FUN_020182C4

	thumb_func_start FUN_020182CC
FUN_020182CC: @ 0x020182CC
	push {r3, r4}
	ldr r4, [r0, #0x60]
	str r4, [r1]
	ldr r1, [r0, #0x64]
	str r1, [r2]
	ldr r0, [r0, #0x68]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020182CC

	thumb_func_start FUN_020182E0
FUN_020182E0: @ 0x020182E0
	lsls r2, r2, #1
	adds r0, r0, r2
	adds r0, #0x70
	strh r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020182E0

	thumb_func_start FUN_020182EC
FUN_020182EC: @ 0x020182EC
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r0, #0x70
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020182EC

	thumb_func_start FUN_020182F8
FUN_020182F8: @ 0x020182F8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	str r2, [r5]
	adds r0, r2, #0
	movs r1, #0
	adds r6, r3, #0
	blx FUN_020C3B90
	str r0, [r5, #4]
	ldr r1, [r5, #4]
	ldr r2, [r4, #8]
	adds r0, r6, #0
	blx FUN_020C2B7C
	str r0, [r5, #8]
	ldr r1, [r5, #4]
	ldr r2, [r4, #8]
	ldr r3, [r4, #0xc]
	blx FUN_020BE008
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020182F8

	thumb_func_start FUN_02018324
FUN_02018324: @ 0x02018324
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	bne _02018332
	bl FUN_0202551C
_02018332:
	ldr r0, [r4]
	blx FUN_020C3B40
	str r0, [r4, #4]
	cmp r0, #0
	beq _0201835E
	adds r2, r0, #0
	adds r2, #8
	beq _02018352
	ldrb r1, [r0, #9]
	cmp r1, #0
	bls _02018352
	ldrh r1, [r0, #0xe]
	adds r1, r2, r1
	adds r1, r1, #4
	b _02018354
_02018352:
	movs r1, #0
_02018354:
	cmp r1, #0
	beq _0201835E
	ldr r1, [r1]
	adds r0, r0, r1
	b _02018360
_0201835E:
	movs r0, #0
_02018360:
	str r0, [r4, #8]
	ldr r0, [r4]
	blx FUN_020C3B50
	str r0, [r4, #0xc]
	cmp r0, #0
	beq _0201837A
	movs r2, #1
	ldr r0, _0201837C @ =FUN_0201804C
	adds r1, r4, #0
	lsls r2, r2, #0xa
	bl FUN_0200E374
_0201837A:
	pop {r4, pc}
	.align 2, 0
_0201837C: .4byte FUN_0201804C
	thumb_func_end FUN_02018324

	thumb_func_start FUN_02018380
FUN_02018380: @ 0x02018380
	ldr r0, _02018388 @ =0x021D10E8
	movs r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02018388: .4byte 0x021D10E8
	thumb_func_end FUN_02018380

	thumb_func_start FUN_0201838C
FUN_0201838C: @ 0x0201838C
	push {r3, lr}
	ldr r1, _020183AC @ =0x021D10E8
	movs r2, #1
	str r2, [r1]
	movs r2, #0
	str r2, [r1, #0x10]
	str r2, [r1, #0x14]
	str r2, [r1, #8]
	str r2, [r1, #0xc]
	str r0, [r1, #4]
	bl FUN_020254FC
	ldr r2, _020183AC @ =0x021D10E8
	str r0, [r2, #0x18]
	str r1, [r2, #0x1c]
	pop {r3, pc}
	.align 2, 0
_020183AC: .4byte 0x021D10E8
	thumb_func_end FUN_0201838C

	thumb_func_start FUN_020183B0
FUN_020183B0: @ 0x020183B0
	push {r3, r4, r5, lr}
	ldr r0, _020183EC @ =0x021D10E8
	ldr r0, [r0]
	cmp r0, #0
	beq _020183EA
	bl FUN_020254FC
	ldr r2, _020183EC @ =0x021D10E8
	ldr r3, [r2, #0x18]
	ldr r2, [r2, #0x1c]
	subs r0, r0, r3
	sbcs r1, r2
	bl FUN_02025504
	adds r5, r1, #0
	ldr r1, _020183EC @ =0x021D10E8
	adds r4, r0, #0
	ldr r3, [r1, #8]
	ldr r2, [r1, #0xc]
	subs r0, r3, r4
	sbcs r2, r5
	bhs _020183EA
	ldr r0, [r1, #4]
	subs r1, r4, r3
	bl FUN_0202CDBC
	ldr r0, _020183EC @ =0x021D10E8
	str r4, [r0, #8]
	str r5, [r0, #0xc]
_020183EA:
	pop {r3, r4, r5, pc}
	.align 2, 0
_020183EC: .4byte 0x021D10E8
	thumb_func_end FUN_020183B0

	thumb_func_start FUN_020183F0
FUN_020183F0: @ 0x020183F0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	movs r1, #1
	cmp r0, #0
	beq _02018402
	cmp r0, #1
	beq _02018402
	movs r1, #0
_02018402:
	cmp r1, #0
	bne _0201840A
	bl FUN_0202551C
_0201840A:
	ldr r0, [r4]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020183F0

	thumb_func_start FUN_02018410
FUN_02018410: @ 0x02018410
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	beq _02018420
	cmp r4, #1
	beq _02018420
	bl FUN_0202551C
_02018420:
	str r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02018410

	thumb_func_start FUN_02018424
FUN_02018424: @ 0x02018424
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r1, #0
	movs r1, #0x18
	adds r5, r0, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r1, #0
	movs r2, #0x18
	blx FUN_020D4994
	str r5, [r4]
	movs r2, #0
	movs r0, #0xa5
	movs r1, #1
	adds r3, r5, #0
	str r2, [sp]
	bl FUN_02007A44
	adds r1, r4, #4
	str r0, [r4, #0xc]
	blx FUN_020B70F4
	movs r1, #0
	movs r0, #0xa5
	adds r2, r1, #0
	adds r3, r5, #0
	str r1, [sp]
	bl FUN_02007A44
	adds r1, r4, #0
	adds r1, #8
	str r0, [r4, #0x10]
	blx FUN_020B7140
	str r6, [r4, #0x14]
	adds r0, r4, #0
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_02018424

	thumb_func_start FUN_02018474
FUN_02018474: @ 0x02018474
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x10]
	bl FUN_0201AB0C
	ldr r0, [r4, #0xc]
	bl FUN_0201AB0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x18
	blx FUN_020D4994
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02018474

	thumb_func_start FUN_02018498
FUN_02018498: @ 0x02018498
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	str r2, [sp]
	adds r7, r1, #0
	ldr r0, [r5]
	movs r1, #0x38
	adds r6, r3, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r1, #0
	movs r2, #0x38
	blx FUN_020D4994
	adds r0, r7, #0
	adds r1, r4, #4
	movs r2, #0x18
	blx FUN_020D4A50
	str r5, [r4]
	add r0, sp, #8
	ldrb r1, [r0, #0x18]
	ldrb r0, [r4, #0x18]
	cmp r1, r0
	bhs _020184D0
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
_020184D0:
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x25
	strb r1, [r0]
	ldr r0, [r5]
	add r3, sp, #8
	str r0, [r4, #0x2c]
	adds r0, r4, #0
	ldrb r1, [r3, #0x10]
	adds r0, #0x29
	strb r1, [r0]
	adds r0, r4, #0
	ldrb r1, [r3, #0x18]
	adds r0, #0x24
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x27
	ldrb r0, [r0]
	movs r1, #0xfe
	bics r0, r1
	ldr r1, [sp]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x18
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x27
	strb r1, [r0]
	ldr r0, [sp, #0x24]
	str r0, [r4, #0x30]
	ldr r0, [sp, #0x28]
	str r0, [r4, #0x34]
	adds r0, r4, #0
	adds r0, #0x27
	ldrb r2, [r0]
	movs r0, #1
	bics r2, r0
	ldr r0, [sp, #0x2c]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #1
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x27
	strb r1, [r0]
	ldrb r1, [r3, #0x14]
	cmp r1, #0
	bne _02018546
	ldrb r1, [r4, #0x18]
	ldrb r3, [r4, #5]
	ldr r0, [r7, #0xc]
	movs r2, #4
	bl FUN_0201881C
	adds r1, r4, #0
	adds r1, #0x26
	strb r0, [r1]
	b _0201854C
_02018546:
	adds r0, r4, #0
	adds r0, #0x26
	strb r1, [r0]
_0201854C:
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _0201855E
	cmp r0, #1
	beq _02018566
	cmp r0, #2
	beq _0201859C
	bl FUN_0202551C
_0201855E:
	adds r0, r4, #0
	adds r0, #0x28
	strb r6, [r0]
	b _020185B8
_02018566:
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r1, [r0]
	movs r0, #1
	adds r1, r1, #1
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0x26
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r1, r0, #2
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	subs r1, r6, r0
	bpl _02018594
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x28
	strb r1, [r0]
	b _020185B8
_02018594:
	adds r0, r4, #0
	adds r0, #0x28
	strb r1, [r0]
	b _020185B8
_0201859C:
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r0, r0, #2
	subs r1, r6, r0
	bpl _020185B2
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x28
	strb r1, [r0]
	b _020185B8
_020185B2:
	adds r0, r4, #0
	adds r0, #0x28
	strb r1, [r0]
_020185B8:
	adds r0, r4, #0
	bl FUN_02018890
	ldr r2, [r4]
	ldr r3, [r4, #0x2c]
	ldr r2, [r2, #0x14]
	adds r0, r5, #0
	adds r1, r4, #4
	bl FUN_02018744
	adds r0, r4, #0
	bl FUN_020189AC
	adds r0, r4, #0
	bl FUN_02018C90
	adds r1, r4, #0
	adds r1, #0x24
	ldrb r1, [r1]
	adds r0, r4, #0
	bl FUN_02018DF4
	ldr r1, _020185F8 @ =0x000005DC
	adds r0, r4, #0
	bl FUN_02018FE8
	adds r0, r4, #0
	movs r1, #0
	bl FUN_02018FFC
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020185F8: .4byte 0x000005DC
	thumb_func_end FUN_02018498

	thumb_func_start FUN_020185FC
FUN_020185FC: @ 0x020185FC
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	movs r4, #0
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	bl FUN_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end FUN_020185FC

	thumb_func_start FUN_02018620
FUN_02018620: @ 0x02018620
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	movs r4, #0
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	str r4, [sp, #0x14]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0x18]
	bl FUN_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02018620

	thumb_func_start FUN_02018648
FUN_02018648: @ 0x02018648
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrb r5, [r4, #0x10]
	str r5, [sp]
	ldrb r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrb r4, [r4, #0x18]
	str r4, [sp, #8]
	ldr r4, [sp, #0x34]
	str r4, [sp, #0xc]
	ldr r4, [sp, #0x38]
	str r4, [sp, #0x10]
	ldr r4, [sp, #0x3c]
	str r4, [sp, #0x14]
	movs r4, #0
	str r4, [sp, #0x18]
	bl FUN_02018498
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02018648

	thumb_func_start FUN_02018674
FUN_02018674: @ 0x02018674
	adds r0, #0x27
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x19
	bx lr
	.align 2, 0
	thumb_func_end FUN_02018674

	thumb_func_start FUN_02018680
FUN_02018680: @ 0x02018680
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	movs r2, #0x38
	blx FUN_020D4994
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02018680

	thumb_func_start FUN_02018694
FUN_02018694: @ 0x02018694
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02018D90
	adds r0, r4, #0
	bl FUN_02018998
	pop {r4, pc}
	thumb_func_end FUN_02018694

	thumb_func_start FUN_020186A4
FUN_020186A4: @ 0x020186A4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0x25
	ldrb r1, [r1]
	cmp r1, #1
	bne _02018716
	adds r1, r5, #0
	adds r1, #0x2b
	ldrb r4, [r1]
	cmp r4, #0
	bne _020186CE
	bl FUN_02018694
	ldr r1, [r5, #0x10]
	adds r5, #0x2a
	ldrb r0, [r5]
	lsls r0, r0, #3
	adds r0, r1, r0
	ldr r0, [r0, #4]
	pop {r3, r4, r5, pc}
_020186CE:
	lsrs r2, r4, #0x1f
	lsls r1, r4, #0x1f
	subs r1, r1, r2
	movs r3, #0x1f
	rors r1, r3
	adds r1, r2, r1
	bne _02018704
	lsrs r1, r4, #1
	lsrs r2, r1, #0x1f
	lsls r1, r1, #0x1f
	subs r1, r1, r2
	rors r1, r3
	adds r1, r2, r1
	bne _020186F8
	adds r1, r5, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	movs r2, #1
	bl FUN_02018D0C
	b _02018704
_020186F8:
	adds r1, r5, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	movs r2, #0
	bl FUN_02018D0C
_02018704:
	adds r0, r5, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	adds r5, #0x2b
	subs r0, r0, #1
	strb r0, [r5]
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02018716:
	add r1, sp, #0
	bl FUN_02018E08
	adds r4, r0, #0
	ldr r0, [sp]
	cmp r0, #0
	bne _0201872C
	adds r0, r5, #0
	bl FUN_02018E8C
	adds r4, r0, #0
_0201872C:
	movs r0, #1
	mvns r0, r0
	cmp r4, r0
	bne _0201873E
	adds r0, r5, #0
	bl FUN_02018694
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_0201873E:
	adds r0, r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020186A4

	thumb_func_start FUN_02018744
FUN_02018744: @ 0x02018744
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r3, #0
	movs r1, #0x10
	adds r7, r2, #0
	bl FUN_0201AACC
	movs r1, #0
	movs r2, #0x10
	adds r4, r0, #0
	blx FUN_020D4994
	ldr r0, [r6, #4]
	adds r1, r4, #0
	str r0, [r4, #8]
	ldr r0, [r6, #8]
	movs r2, #0x80
	str r0, [r4, #0xc]
	ldr r0, [r5, #0x10]
	str r0, [r4]
	ldrb r0, [r5, #2]
	strb r0, [r4, #4]
	ldrh r0, [r5, #8]
	strh r0, [r4, #6]
	ldrb r0, [r5, #3]
	strb r0, [r4, #5]
	ldr r0, _020187BC @ =FUN_020187C0
	bl FUN_0200E374
	cmp r7, #0
	beq _020187B8
	ldrb r0, [r5, #2]
	cmp r0, #4
	bhs _020187A2
	movs r0, #0x20
	str r0, [sp]
	ldrb r3, [r5, #3]
	ldr r1, [r4, #0xc]
	adds r0, r7, #0
	lsls r3, r3, #0x14
	ldr r1, [r1, #0xc]
	movs r2, #0
	lsrs r3, r3, #0x10
	bl FUN_0200316C
	pop {r3, r4, r5, r6, r7, pc}
_020187A2:
	movs r0, #0x20
	str r0, [sp]
	ldrb r3, [r5, #3]
	ldr r1, [r4, #0xc]
	adds r0, r7, #0
	lsls r3, r3, #0x14
	ldr r1, [r1, #0xc]
	movs r2, #1
	lsrs r3, r3, #0x10
	bl FUN_0200316C
_020187B8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020187BC: .4byte FUN_020187C0
	thumb_func_end FUN_02018744

	thumb_func_start FUN_020187C0
FUN_020187C0: @ 0x020187C0
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r4, #8]
	adds r5, r0, #0
	ldr r0, [r1, #0x14]
	ldr r1, [r1, #0x10]
	blx FUN_020D2894
	ldrh r0, [r4, #6]
	ldr r3, [r4, #8]
	str r0, [sp]
	ldr r2, [r3, #0x14]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	ldr r3, [r3, #0x10]
	bl FUN_0201C0C0
	ldr r0, [r4, #0xc]
	movs r1, #0x20
	ldr r0, [r0, #0xc]
	blx FUN_020D2894
	ldrb r0, [r4, #4]
	cmp r0, #4
	ldr r0, [r4, #0xc]
	bhs _02018802
	ldrb r1, [r4, #5]
	ldr r0, [r0, #0xc]
	movs r2, #0x20
	lsls r1, r1, #5
	blx FUN_020CFC6C
	b _0201880E
_02018802:
	ldrb r1, [r4, #5]
	ldr r0, [r0, #0xc]
	movs r2, #0x20
	lsls r1, r1, #5
	blx FUN_020CFCC0
_0201880E:
	adds r0, r5, #0
	bl FUN_0200E390
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020187C0

	thumb_func_start FUN_0201881C
FUN_0201881C: @ 0x0201881C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp]
	movs r4, #0
	adds r7, r1, #0
	adds r5, r0, #0
	adds r6, r4, #0
	str r3, [sp, #4]
	cmp r7, #0
	ble _02018864
_02018830:
	ldr r0, [r5]
	cmp r0, #0
	bne _0201883A
	bl FUN_0202551C
_0201883A:
	movs r0, #0
	ldr r1, [r5]
	mvns r0, r0
	cmp r1, r0
	bne _02018848
	bl FUN_0202551C
_02018848:
	ldr r0, [sp]
	ldr r1, [r5]
	movs r2, #0
	bl FUN_02002F30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r4
	bls _0201885C
	adds r4, r0, #0
_0201885C:
	adds r6, r6, #1
	adds r5, #8
	cmp r6, r7
	blt _02018830
_02018864:
	ldr r0, [sp, #4]
	lsls r0, r0, #1
	adds r0, r4, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	lsrs r2, r3, #0x1f
	lsls r1, r3, #0x1d
	subs r1, r1, r2
	movs r0, #0x1d
	rors r1, r0
	adds r0, r2, r1
	bne _02018884
	lsls r0, r3, #0x15
	add sp, #8
	lsrs r0, r0, #0x18
	pop {r3, r4, r5, r6, r7, pc}
_02018884:
	lsrs r0, r3, #3
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201881C

	thumb_func_start FUN_02018890
FUN_02018890: @ 0x02018890
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r5, r0, #0
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0x2c]
	bl FUN_0201D39C
	str r0, [r5, #0x1c]
	ldrb r1, [r5, #0x18]
	ldr r0, [r5, #0x2c]
	adds r1, r1, #1
	lsls r1, r1, #2
	bl FUN_0201AA8C
	str r0, [r5, #0x20]
	ldrb r2, [r5, #0x18]
	movs r1, #0
	adds r2, r2, #1
	lsls r2, r2, #2
	blx FUN_020D4994
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	movs r0, #0
	str r0, [sp, #0x20]
	ldrb r0, [r5, #0x18]
	cmp r0, #0
	ble _02018988
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x1c]
	str r0, [sp, #0x18]
	adds r6, r0, #0
	adds r7, r0, #0
	adds r4, r0, #0
_020188DC:
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	adds r3, #0x28
	adds r1, r0, #1
	ldr r0, [sp, #0x18]
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	str r0, [sp, #0xc]
	ldrh r1, [r5, #0xa]
	ldr r0, [sp, #0x1c]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	ldrb r3, [r3]
	ldr r1, [r5, #0x1c]
	ldrb r2, [r5, #6]
	adds r3, r3, #1
	lsls r3, r3, #0x18
	ldr r0, [r5, #0x14]
	adds r1, r1, r6
	lsrs r3, r3, #0x18
	bl FUN_0201D40C
	ldr r0, [r5, #0x1c]
	movs r1, #3
	adds r0, r0, r6
	bl FUN_0201D978
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r2, r5, #0
	adds r2, #0x26
	adds r0, r0, #1
	lsls r0, r0, #3
	adds r1, r0, r7
	ldr r0, [r5, #0x20]
	adds r6, #0x10
	strb r1, [r0, r4]
	ldr r0, [r5, #0x20]
	adds r7, #0x18
	adds r1, r0, r4
	ldrb r0, [r0, r4]
	adds r0, #0x10
	strb r0, [r1, #1]
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r0, [r0]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, [r5, #0x20]
	adds r0, r0, r4
	strb r1, [r0, #2]
	ldr r0, [r5, #0x20]
	ldrb r2, [r2]
	adds r1, r0, r4
	ldrb r0, [r1, #2]
	lsls r2, r2, #3
	adds r4, r4, #4
	adds r0, r0, r2
	strb r0, [r1, #3]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x14]
	adds r0, r1, r0
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	ldrb r1, [r5, #0x18]
	adds r0, r0, #3
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x20]
	adds r0, r0, #1
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _020188DC
_02018988:
	ldr r0, [sp, #0x20]
	ldr r1, [r5, #0x20]
	movs r2, #0xff
	lsls r0, r0, #2
	strb r2, [r1, r0]
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02018890

	thumb_func_start FUN_02018998
FUN_02018998: @ 0x02018998
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	bl FUN_0201AB0C
	ldrb r1, [r4, #0x18]
	ldr r0, [r4, #0x1c]
	bl FUN_0201D54C
	pop {r4, pc}
	thumb_func_end FUN_02018998

	thumb_func_start FUN_020189AC
FUN_020189AC: @ 0x020189AC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	ldrh r4, [r5, #0xc]
	subs r0, r0, #1
	str r0, [sp, #0x10]
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _020189C6
	adds r4, #0xc
_020189C6:
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	lsls r2, r4, #0x10
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	adds r3, #0x28
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	adds r2, r4, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r3, #0x28
	lsls r2, r2, #0x10
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	adds r2, r4, #2
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsls r2, r2, #0x10
	adds r3, #0x28
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	adds r3, r5, #0
	adds r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r4, r3
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x24
	ldrh r4, [r5, #0xc]
	ldrb r1, [r0]
	ldr r0, [sp, #0x10]
	adds r4, #9
	cmp r1, r0
	bne _02018A62
	adds r4, #0xc
_02018A62:
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	adds r3, r5, #0
	lsls r0, r1, #1
	adds r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsls r2, r4, #0x10
	adds r3, #0x28
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	adds r3, r5, #0
	lsls r0, r1, #1
	adds r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r2, r4, #1
	lsls r2, r2, #0x10
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	adds r3, #0x28
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	adds r3, r5, #0
	ldrb r1, [r5, #0x18]
	ldrb r2, [r0]
	adds r3, #0x28
	lsls r0, r1, #1
	adds r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	adds r2, r4, #2
	lsls r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	adds r3, r5, #0
	adds r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r4, r3
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldrb r1, [r5, #0x18]
	movs r6, #0
	subs r0, r1, #1
	cmp r0, #0
	ble _02018BFE
	ldr r0, [sp, #0x10]
	adds r7, r6, #0
	subs r0, r0, #1
	str r0, [sp, #0x14]
_02018B22:
	ldrh r0, [r5, #0xc]
	adds r4, r0, #6
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _02018B34
	cmp r6, #0
	beq _02018B38
_02018B34:
	cmp r0, r6
	bne _02018B3C
_02018B38:
	adds r4, #0xc
	b _02018B50
_02018B3C:
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _02018B48
	ldr r1, [sp, #0x14]
	cmp r6, r1
	beq _02018B4E
_02018B48:
	adds r1, r6, #1
	cmp r0, r1
	bne _02018B50
_02018B4E:
	adds r4, #0x12
_02018B50:
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r1, r7, #3
	adds r3, r5, #0
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	adds r3, #0x28
	lsls r2, r4, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	lsrs r2, r2, #0x10
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r1, r7, #3
	adds r3, r5, #0
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r3, #0x28
	adds r2, r4, #1
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	adds r3, r5, #0
	adds r2, r4, #2
	ldrb r0, [r0]
	adds r1, r7, #3
	adds r3, #0x28
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	adds r3, r5, #0
	adds r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r4, r3
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldrb r1, [r5, #0x18]
	adds r6, r6, #1
	adds r7, r7, #3
	subs r0, r1, #1
	cmp r6, r0
	blt _02018B22
_02018BFE:
	movs r7, #0
	cmp r1, #0
	ble _02018C8C
	adds r6, r7, #0
_02018C06:
	ldrh r0, [r5, #0xc]
	adds r4, r0, #3
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, r7
	bne _02018C16
	adds r4, #0xc
_02018C16:
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	lsls r2, r4, #0x10
	adds r0, r0, r6
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	adds r3, #0x28
	lsrs r2, r2, #0x10
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl FUN_0201C8C4
	adds r0, r5, #0
	adds r0, #0x29
	ldrb r0, [r0]
	adds r3, r5, #0
	adds r2, r4, #2
	adds r0, r0, r6
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	lsls r2, r2, #0x10
	adds r3, #0x28
	str r0, [sp, #0xc]
	ldrb r4, [r3]
	adds r3, r5, #0
	adds r3, #0x26
	ldrb r3, [r3]
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	adds r3, r4, r3
	adds r3, r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r2, #0x10
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldrb r0, [r5, #0x18]
	adds r7, r7, #1
	adds r6, r6, #3
	cmp r7, r0
	blt _02018C06
_02018C8C:
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020189AC

	thumb_func_start FUN_02018C90
FUN_02018C90: @ 0x02018C90
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	adds r0, #0x26
	ldrb r0, [r0]
	movs r7, #0
	lsls r0, r0, #3
	str r0, [sp, #0x10]
	ldrb r0, [r5, #0x18]
	cmp r0, #0
	ble _02018CFA
	adds r6, r7, #0
	adds r4, r7, #0
_02018CAA:
	ldrb r0, [r5, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x19
	bne _02018CB6
	ldrb r3, [r5, #5]
	b _02018CC8
_02018CB6:
	ldr r1, [r5, #0x10]
	movs r0, #4
	ldr r1, [r1, r6]
	movs r2, #0
	bl FUN_02002F30
	ldr r1, [sp, #0x10]
	subs r0, r1, r0
	lsrs r3, r0, #1
_02018CC8:
	movs r0, #0
	str r0, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	ldr r0, _02018D08 @ =0x00010203
	movs r1, #4
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r2, [r5, #0x10]
	ldr r0, [r5, #0x1c]
	ldr r2, [r2, r6]
	adds r0, r0, r4
	bl FUN_020200FC
	ldr r0, [r5, #0x1c]
	adds r0, r0, r4
	bl FUN_0201D5C8
	ldrb r0, [r5, #0x18]
	adds r7, r7, #1
	adds r6, #8
	adds r4, #0x10
	cmp r7, r0
	blt _02018CAA
_02018CFA:
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl FUN_0201EFBC
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_02018D08: .4byte 0x00010203
	thumb_func_end FUN_02018C90

	thumb_func_start FUN_02018D0C
FUN_02018D0C: @ 0x02018D0C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r2, #0
	beq _02018D20
	movs r0, #6
	ldr r7, _02018D88 @ =0x00040506
	str r0, [sp, #0x14]
	b _02018D26
_02018D20:
	movs r0, #3
	ldr r7, _02018D8C @ =0x00010203
	str r0, [sp, #0x14]
_02018D26:
	adds r0, r5, #0
	adds r0, #0x26
	ldrb r0, [r0]
	lsls r6, r0, #3
	ldrb r0, [r5, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x19
	bne _02018D3C
	ldrb r0, [r5, #5]
	str r0, [sp, #0x10]
	b _02018D50
_02018D3C:
	ldr r2, [r5, #0x10]
	lsls r1, r4, #3
	ldr r1, [r2, r1]
	movs r0, #4
	movs r2, #0
	bl FUN_02002F30
	subs r0, r6, r0
	lsrs r0, r0, #1
	str r0, [sp, #0x10]
_02018D50:
	ldr r0, [r5, #0x1c]
	lsls r6, r4, #4
	ldr r1, [sp, #0x14]
	adds r0, r0, r6
	bl FUN_0201D978
	movs r1, #0
	str r1, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, [r5, #0x1c]
	ldr r3, [r5, #0x10]
	lsls r2, r4, #3
	ldr r2, [r3, r2]
	ldr r3, [sp, #0x10]
	adds r0, r0, r6
	movs r1, #4
	bl FUN_020200FC
	ldr r0, [r5, #0x1c]
	adds r0, r0, r6
	bl FUN_0201D5C8
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02018D88: .4byte 0x00040506
_02018D8C: .4byte 0x00010203
	thumb_func_end FUN_02018D0C

	thumb_func_start FUN_02018D90
FUN_02018D90: @ 0x02018D90
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldrb r0, [r5, #0x18]
	movs r6, #0
	cmp r0, #0
	ble _02018DB2
	adds r4, r6, #0
_02018DA0:
	ldr r0, [r5, #0x1c]
	adds r0, r0, r4
	bl FUN_0201D8E4
	ldrb r0, [r5, #0x18]
	adds r6, r6, #1
	adds r4, #0x10
	cmp r6, r0
	blt _02018DA0
_02018DB2:
	adds r1, r5, #0
	adds r1, #0x29
	ldrb r1, [r1]
	adds r3, r5, #0
	adds r3, #0x28
	str r1, [sp]
	adds r1, r5, #0
	adds r1, #0x26
	ldrb r1, [r1]
	movs r2, #0
	adds r1, r1, #2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #4]
	lsls r1, r0, #1
	adds r0, r0, r1
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldrb r0, [r5, #7]
	str r0, [sp, #0xc]
	ldrb r1, [r5, #6]
	ldrb r3, [r3]
	ldr r0, [r5, #0x14]
	bl FUN_0201C8C4
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl FUN_0201EFBC
	add sp, #0x10
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02018D90

	thumb_func_start FUN_02018DF4
FUN_02018DF4: @ 0x02018DF4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_020189AC
	ldrb r1, [r4, #6]
	ldr r0, [r4, #0x14]
	bl FUN_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02018DF4

	thumb_func_start FUN_02018E08
FUN_02018E08: @ 0x02018E08
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	bl FUN_02025224
	adds r6, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r6, r0
	bne _02018E24
	movs r1, #0
	str r1, [r4]
	pop {r4, r5, r6, pc}
_02018E24:
	lsls r0, r6, #0x18
	movs r2, #1
	lsrs r1, r0, #0x18
	adds r0, r5, #0
	str r2, [r4]
	adds r0, #0x24
	strb r1, [r0]
	adds r0, r5, #0
	bl FUN_02018D0C
	adds r0, r5, #0
	bl FUN_020189AC
	ldrb r1, [r5, #6]
	ldr r0, [r5, #0x14]
	bl FUN_0201EFBC
	adds r0, r5, #0
	movs r1, #1
	adds r0, #0x25
	strb r1, [r0]
	adds r0, r5, #0
	movs r1, #8
	adds r0, #0x2b
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x2a
	strb r6, [r0]
	adds r0, r5, #0
	adds r0, #0x27
	ldrb r1, [r0]
	movs r0, #0xfe
	bics r1, r0
	movs r0, #2
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x27
	strb r1, [r0]
	ldr r1, _02018E88 @ =0x000005DC
	adds r0, r5, #0
	bl FUN_02018FE8
	adds r0, r5, #0
	movs r1, #2
	bl FUN_02018FFC
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
	nop
_02018E88: .4byte 0x000005DC
	thumb_func_end FUN_02018E08

	thumb_func_start FUN_02018E8C
FUN_02018E8C: @ 0x02018E8C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _02018FDC @ =0x021D110C
	ldr r1, [r0, #0x48]
	ldr r0, _02018FE0 @ =0x00000CF3
	tst r0, r1
	beq _02018EAA
	adds r0, r5, #0
	adds r0, #0x27
	ldrb r1, [r0]
	movs r0, #0xfe
	bics r1, r0
	adds r0, r5, #0
	adds r0, #0x27
	strb r1, [r0]
_02018EAA:
	ldr r0, _02018FDC @ =0x021D110C
	movs r1, #2
	ldr r0, [r0, #0x48]
	tst r1, r0
	beq _02018ECA
	ldr r1, _02018FE4 @ =0x000005DC
	adds r0, r5, #0
	bl FUN_02018FE8
	adds r0, r5, #0
	movs r1, #3
	bl FUN_02018FFC
	movs r0, #1
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02018ECA:
	movs r2, #1
	adds r1, r0, #0
	tst r1, r2
	beq _02018F10
	adds r1, r5, #0
	adds r1, #0x24
	ldrb r1, [r1]
	adds r0, r5, #0
	bl FUN_02018D0C
	adds r0, r5, #0
	movs r1, #1
	adds r0, #0x25
	strb r1, [r0]
	adds r0, r5, #0
	movs r1, #8
	adds r0, #0x2b
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x2a
	strb r1, [r0]
	ldr r1, _02018FE4 @ =0x000005DC
	adds r0, r5, #0
	bl FUN_02018FE8
	adds r0, r5, #0
	movs r1, #2
	bl FUN_02018FFC
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
_02018F10:
	adds r1, r5, #0
	adds r1, #0x24
	ldrb r4, [r1]
	movs r1, #0x40
	tst r0, r1
	beq _02018F6E
	ldrb r0, [r5, #4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _02018F36
	ldrb r1, [r5, #0x18]
	subs r0, r1, #1
	adds r0, r4, r0
	blx FUN_020F2998
	adds r0, r5, #0
	adds r0, #0x24
	strb r1, [r0]
	b _02018F48
_02018F36:
	cmp r4, #0
	beq _02018F48
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	subs r1, r0, #1
	adds r0, r5, #0
	adds r0, #0x24
	strb r1, [r0]
_02018F48:
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r4, r0
	beq _02018F6E
	ldr r1, _02018FE4 @ =0x000005DC
	adds r0, r5, #0
	bl FUN_02018FE8
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02018FFC
	adds r1, r5, #0
	adds r1, #0x24
	ldrb r1, [r1]
	adds r0, r5, #0
	bl FUN_02018DF4
_02018F6E:
	ldr r0, _02018FDC @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #0x80
	tst r0, r1
	beq _02018FD6
	ldrb r0, [r5, #4]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	beq _02018F96
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	ldrb r1, [r5, #0x18]
	adds r0, r0, #1
	blx FUN_020F2998
	adds r0, r5, #0
	adds r0, #0x24
	strb r1, [r0]
	b _02018FB2
_02018F96:
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r1, [r0]
	ldrb r0, [r5, #0x18]
	subs r0, r0, #1
	cmp r1, r0
	bge _02018FB2
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r1, r0, #1
	adds r0, r5, #0
	adds r0, #0x24
	strb r1, [r0]
_02018FB2:
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r4, r0
	beq _02018FD6
	ldr r1, _02018FE4 @ =0x000005DC
	adds r0, r5, #0
	bl FUN_02018FE8
	adds r0, r5, #0
	movs r1, #1
	bl FUN_02018FFC
	adds r0, r5, #0
	adds r5, #0x24
	ldrb r1, [r5]
	bl FUN_02018DF4
_02018FD6:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02018FDC: .4byte 0x021D110C
_02018FE0: .4byte 0x00000CF3
_02018FE4: .4byte 0x000005DC
	thumb_func_end FUN_02018E8C

	thumb_func_start FUN_02018FE8
FUN_02018FE8: @ 0x02018FE8
	push {r3, lr}
	adds r0, #0x27
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	bne _02018FFA
	adds r0, r1, #0
	bl FUN_0200604C
_02018FFA:
	pop {r3, pc}
	thumb_func_end FUN_02018FE8

	thumb_func_start FUN_02018FFC
FUN_02018FFC: @ 0x02018FFC
	push {r4, lr}
	ldr r4, [r0, #0x30]
	adds r3, r1, #0
	cmp r4, #0
	beq _02019010
	adds r1, r0, #0
	adds r1, #0x24
	ldrb r1, [r1]
	ldr r2, [r0, #0x34]
	blx r4
_02019010:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02018FFC

	thumb_func_start FUN_02019014
FUN_02019014: @ 0x02019014
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	movs r1, #0x34
	bl FUN_0201AA8C
	movs r1, #0
	movs r2, #0x34
	adds r4, r0, #0
	blx FUN_020D4994
	str r5, [r4]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02019014

	thumb_func_start FUN_02019030
FUN_02019030: @ 0x02019030
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201915C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02019030

	thumb_func_start FUN_02019040
FUN_02019040: @ 0x02019040
	push {r4, r5, r6, lr}
	sub sp, #0x28
	adds r5, r0, #0
	ldrb r0, [r5, #7]
	adds r3, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	bne _020190DE
	cmp r4, #0
	beq _020190DE
	movs r0, #1
	strb r0, [r5, #7]
	adds r2, r5, #0
	ldm r3!, {r0, r1}
	adds r2, #0x1c
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r1, [r5]
	add r0, sp, #0
	bl FUN_02023618
	add r0, sp, #0
	ldrh r1, [r0]
	strh r1, [r0, #8]
	ldrh r1, [r0, #2]
	strh r1, [r0, #0xa]
	ldrh r1, [r0, #4]
	strh r1, [r0, #0xc]
	ldrh r1, [r0, #6]
	strh r1, [r0, #0xe]
	ldr r1, [r5]
	add r0, sp, #0x10
	bl FUN_02023630
	add r3, sp, #0x10
	ldm r3!, {r0, r1}
	add r2, sp, #0x1c
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [r5]
	bl FUN_02023658
	adds r6, r0, #0
	add r0, sp, #0
	ldrh r0, [r0, #8]
	strh r0, [r5, #8]
	ldr r0, [r5]
	bl FUN_0202360C
	strh r0, [r5, #0xa]
	cmp r6, #0
	beq _020190BE
	adds r2, r5, #0
	add r0, sp, #0x1c
	adds r1, r6, #0
	adds r2, #0xc
	blx FUN_020CCDAC
	b _020190C6
_020190BE:
	movs r0, #0
	str r0, [r5, #0xc]
	str r0, [r5, #0x10]
	str r0, [r5, #0x14]
_020190C6:
	ldr r0, [r5]
	bl FUN_02023614
	str r0, [r5, #0x18]
	ldr r0, _020190E4 @ =FUN_020190FC
	strb r4, [r5, #4]
	movs r2, #0
	adds r1, r5, #0
	strb r2, [r5, #5]
	bl FUN_0200E320
	str r0, [r5, #0x30]
_020190DE:
	add sp, #0x28
	pop {r4, r5, r6, pc}
	nop
_020190E4: .4byte FUN_020190FC
	thumb_func_end FUN_02019040

	thumb_func_start FUN_020190E8
FUN_020190E8: @ 0x020190E8
	ldrb r0, [r0, #7]
	cmp r0, #0
	bne _020190F2
	movs r0, #1
	b _020190F4
_020190F2:
	movs r0, #0
_020190F4:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
	thumb_func_end FUN_020190E8

	thumb_func_start FUN_020190FC
FUN_020190FC: @ 0x020190FC
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldrb r0, [r4, #6]
	cmp r0, #0
	bne _0201912E
	ldrb r0, [r4, #5]
	adds r2, r4, #0
	adds r1, #8
	adds r0, r0, #1
	strb r0, [r4, #5]
	ldrb r0, [r4, #4]
	adds r2, #0x1c
	str r0, [sp]
	ldrb r3, [r4, #5]
	ldr r0, [r4]
	bl FUN_0201917C
	ldrb r1, [r4, #5]
	ldrb r0, [r4, #4]
	cmp r1, r0
	blo _02019158
	adds r0, r4, #0
	bl FUN_0201915C
	pop {r3, r4, r5, pc}
_0201912E:
	ldrb r5, [r4, #4]
	adds r2, r4, #0
	adds r1, #0x1c
	str r5, [sp]
	ldrb r3, [r4, #5]
	ldr r0, [r4]
	adds r2, #8
	subs r3, r5, r3
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	bl FUN_0201917C
	ldrb r0, [r4, #5]
	subs r0, r0, #1
	strb r0, [r4, #5]
	ldrb r0, [r4, #5]
	cmp r0, #0
	bne _02019158
	adds r0, r4, #0
	bl FUN_0201915C
_02019158:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020190FC

	thumb_func_start FUN_0201915C
FUN_0201915C: @ 0x0201915C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _0201916E
	bl FUN_0200E390
	movs r0, #0
	str r0, [r4, #0x30]
_0201916E:
	movs r0, #0
	strb r0, [r4, #4]
	strb r0, [r4, #5]
	strb r0, [r4, #6]
	strb r0, [r4, #7]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201915C

	thumb_func_start FUN_0201917C
FUN_0201917C: @ 0x0201917C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r3, [sp, #4]
	ldr r4, [sp, #0x20]
	adds r5, r1, #0
	adds r6, r2, #0
	str r4, [sp]
	adds r1, #0x10
	adds r2, #0x10
	adds r7, r0, #0
	bl FUN_02019218
	str r4, [sp]
	ldr r3, [sp, #4]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl FUN_020191C4
	str r4, [sp]
	ldr r3, [sp, #4]
	adds r0, r7, #0
	adds r1, r5, #2
	adds r2, r6, #2
	bl FUN_02019238
	str r4, [sp]
	ldr r3, [sp, #4]
	adds r0, r7, #0
	adds r1, r5, #4
	adds r2, r6, #4
	bl FUN_0201925C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201917C

	thumb_func_start FUN_020191C4
FUN_020191C4: @ 0x020191C4
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	add r4, sp, #0
	movs r0, #0
	strh r0, [r4]
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	ldrh r4, [r1]
	ldrh r0, [r2]
	cmp r0, r4
	blo _020191F2
	subs r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r1, #0
	add r1, sp, #8
	ldrb r1, [r1, #0x10]
	muls r0, r3, r0
	blx FUN_020F2998
	b _02019206
_020191F2:
	subs r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r1, #0
	add r1, sp, #8
	ldrb r1, [r1, #0x10]
	muls r0, r3, r0
	blx FUN_020F2998
	rsbs r0, r0, #0
_02019206:
	adds r1, r4, r0
	add r0, sp, #0
	strh r1, [r0]
	add r0, sp, #0
	adds r1, r5, #0
	bl FUN_02023558
	add sp, #8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020191C4

	thumb_func_start FUN_02019218
FUN_02019218: @ 0x02019218
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r4, [r1]
	ldr r0, [r2]
	subs r1, r0, r4
	adds r0, r1, #0
	add r1, sp, #0
	ldrb r1, [r1, #0x10]
	muls r0, r3, r0
	blx FUN_020F2998
	adds r0, r4, r0
	adds r1, r5, #0
	bl FUN_020235D4
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02019218

	thumb_func_start FUN_02019238
FUN_02019238: @ 0x02019238
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrh r4, [r1]
	ldrh r0, [r2]
	subs r1, r0, r4
	adds r0, r1, #0
	add r1, sp, #0
	ldrb r1, [r1, #0x10]
	muls r0, r3, r0
	blx FUN_020F2998
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r5, #0
	bl FUN_02023494
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02019238

	thumb_func_start FUN_0201925C
FUN_0201925C: @ 0x0201925C
	push {r3, r4, r5, lr}
	sub sp, #0x18
	adds r5, r0, #0
	adds r0, r2, #0
	add r2, sp, #0
	adds r4, r3, #0
	blx FUN_020CCDAC
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_020192A4
	str r0, [sp, #0xc]
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp, #4]
	adds r1, r4, #0
	bl FUN_020192A4
	str r0, [sp, #0x10]
	add r2, sp, #0x18
	ldrb r2, [r2, #0x10]
	ldr r0, [sp, #8]
	adds r1, r4, #0
	bl FUN_020192A4
	str r0, [sp, #0x14]
	add r0, sp, #0xc
	adds r1, r5, #0
	bl FUN_02023514
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201925C

	thumb_func_start FUN_020192A4
FUN_020192A4: @ 0x020192A4
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r6, r2, #0
	cmp r4, #0
	bne _020192B4
	bl FUN_0202551C
_020192B4:
	adds r0, r5, #0
	muls r0, r4, r0
	adds r1, r6, #0
	blx FUN_020F2998
	adds r7, r0, #0
	subs r0, r4, #1
	muls r0, r5, r0
	adds r1, r6, #0
	blx FUN_020F2998
	subs r0, r7, r0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020192A4

	thumb_func_start FUN_020192D0
FUN_020192D0: @ 0x020192D0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r0, #0
	adds r1, r0, #0
	bl FUN_0201A0FC
	bl FUN_0201A108
	bl FUN_02022C54
	bl FUN_02022CBC
	movs r1, #1
	lsls r1, r1, #0x1a
	ldr r0, [r1]
	ldr r2, _0201934C @ =0xFFFFE0FF
	ands r0, r2
	str r0, [r1]
	ldr r0, _02019350 @ =0x04001000
	ldr r3, [r0]
	ands r2, r3
	str r2, [r0]
	ldr r3, [r1]
	ldr r2, _02019354 @ =0xFFFF1FFF
	ands r3, r2
	str r3, [r1]
	ldr r3, [r0]
	adds r1, #0x50
	ands r2, r3
	str r2, [r0]
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r2, #0xa
	movs r0, #3
	movs r1, #0x7b
	lsls r2, r2, #0xe
	bl FUN_0201A910
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x7b
	bl FUN_02007280
	movs r1, #0
	movs r2, #0x80
	adds r5, r0, #0
	blx FUN_020D4994
	adds r0, r4, #0
	bl FUN_020072A4
	str r0, [r5]
	ldr r1, _02019358 @ =0x0000047D
	movs r0, #0xb
	movs r2, #1
	bl FUN_02004EC4
	movs r0, #1
	pop {r3, r4, r5, pc}
	nop
_0201934C: .4byte 0xFFFFE0FF
_02019350: .4byte 0x04001000
_02019354: .4byte 0xFFFF1FFF
_02019358: .4byte 0x0000047D
	thumb_func_end FUN_020192D0

	thumb_func_start FUN_0201935C
FUN_0201935C: @ 0x0201935C
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	bl FUN_02007290
	ldr r1, [r5]
	adds r4, r0, #0
	cmp r1, #8
	bhi _0201945A
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02019378: @ jump table
	.2byte _0201938A - _02019378 - 2 @ case 0
	.2byte _02019394 - _02019378 - 2 @ case 1
	.2byte _020193B6 - _02019378 - 2 @ case 2
	.2byte _020193CA - _02019378 - 2 @ case 3
	.2byte _020193F2 - _02019378 - 2 @ case 4
	.2byte _0201940E - _02019378 - 2 @ case 5
	.2byte _02019426 - _02019378 - 2 @ case 6
	.2byte _0201943A - _02019378 - 2 @ case 7
	.2byte _02019456 - _02019378 - 2 @ case 8
_0201938A:
	bl FUN_020194B4
	movs r0, #1
	str r0, [r5]
	b _0201945A
_02019394:
	bl FUN_02034DB8
	cmp r0, #0
	beq _0201945A
	ldr r1, [r4, #0x10]
	ldr r0, _02019480 @ =0x021D1108
	str r1, [r0]
	ldr r0, _02019484 @ =FUN_02019520
	ldr r1, _02019488 @ =FUN_02019548
	blx FUN_021EC294
	movs r0, #1
	str r0, [r4, #0x78]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193B6:
	ldr r0, _0201948C @ =_020F6288
	adds r1, r4, #0
	movs r2, #0x7b
	bl FUN_0200724C
	str r0, [r4, #8]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193CA:
	ldr r0, [r4, #8]
	bl FUN_020072A8
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl FUN_02007278
	ldr r0, [r4, #0x7c]
	cmp r0, #1
	bne _020193EC
	movs r0, #1
	str r0, [r4, #4]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_020193EC:
	movs r0, #8
	str r0, [r5]
	b _0201945A
_020193F2:
	ldr r0, [r4]
	ldrb r0, [r0, #0xc]
	bl FUN_02087E10
	ldr r1, [r4]
	movs r2, #0x7b
	ldr r1, [r1]
	bl FUN_0200724C
	str r0, [r4, #8]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_0201940E:
	ldr r0, [r4, #8]
	bl FUN_020072A8
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl FUN_02007278
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_02019426:
	ldr r0, _0201948C @ =_020F6288
	adds r1, r4, #0
	movs r2, #0x7b
	bl FUN_0200724C
	str r0, [r4, #8]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_0201943A:
	ldr r0, [r4, #8]
	bl FUN_020072A8
	cmp r0, #1
	bne _0201945A
	ldr r0, [r4, #8]
	bl FUN_02007278
	movs r0, #0
	str r0, [r4, #4]
	ldr r0, [r5]
	adds r0, r0, #1
	str r0, [r5]
	b _0201945A
_02019456:
	movs r0, #1
	pop {r3, r4, r5, pc}
_0201945A:
	ldr r0, [r4, #0x78]
	cmp r0, #1
	bne _0201947C
	ldr r0, [r4, #4]
	cmp r0, #1
	bne _0201947C
	ldr r0, [r4, #0x7c]
	cmp r0, #1
	bne _0201947C
	blx FUN_021ECB40
	blx FUN_021EC9D4
	movs r1, #3
	subs r0, r1, r0
	bl FUN_0203A930
_0201947C:
	movs r0, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02019480: .4byte 0x021D1108
_02019484: .4byte FUN_02019520
_02019488: .4byte FUN_02019548
_0201948C: .4byte _020F6288
	thumb_func_end FUN_0201935C

	thumb_func_start FUN_02019490
FUN_02019490: @ 0x02019490
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_02007290
	adds r4, r0, #0
	bl FUN_020194F8
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r5, #0
	bl FUN_02007294
	movs r0, #0x7b
	bl FUN_0201A9C4
	movs r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02019490

	thumb_func_start FUN_020194B4
FUN_020194B4: @ 0x020194B4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x78]
	cmp r0, #0
	bne _020194F2
	bl FUN_020915B0
	bl FUN_02091614
	movs r0, #0x7b
	bl FUN_02039FD8
	ldr r1, _020194F4 @ =0x00020020
	movs r0, #0x7b
	bl FUN_0201AA8C
	str r0, [r4, #0xc]
	adds r0, #0x1f
	movs r1, #0x1f
	bics r0, r1
	movs r1, #2
	lsls r1, r1, #0x10
	movs r2, #0
	blx FUN_020B535C
	str r0, [r4, #0x10]
	bl FUN_02034D8C
	movs r0, #4
	bl FUN_0201A4CC
_020194F2:
	pop {r4, pc}
	.align 2, 0
_020194F4: .4byte 0x00020020
	thumb_func_end FUN_020194B4

	thumb_func_start FUN_020194F8
FUN_020194F8: @ 0x020194F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x78]
	cmp r0, #1
	bne _0201951E
	ldr r0, [r4, #0x10]
	blx FUN_020B5394
	ldr r0, [r4, #0xc]
	bl FUN_0201AB0C
	bl FUN_02091624
	bl FUN_020915C0
	bl FUN_02034DE0
	movs r0, #0
	str r0, [r4, #0x78]
_0201951E:
	pop {r4, pc}
	thumb_func_end FUN_020194F8

	thumb_func_start FUN_02019520
FUN_02019520: @ 0x02019520
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	blx FUN_020D3A38
	adds r6, r0, #0
	ldr r0, _02019544 @ =0x021D1108
	adds r1, r5, #0
	ldr r0, [r0]
	adds r2, r4, #0
	blx FUN_020B53A0
	adds r4, r0, #0
	adds r0, r6, #0
	blx FUN_020D3A4C
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
_02019544: .4byte 0x021D1108
	thumb_func_end FUN_02019520

	thumb_func_start FUN_02019548
FUN_02019548: @ 0x02019548
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	beq _02019564
	blx FUN_020D3A38
	adds r4, r0, #0
	ldr r0, _02019568 @ =0x021D1108
	adds r1, r5, #0
	ldr r0, [r0]
	blx FUN_020B5530
	adds r0, r4, #0
	blx FUN_020D3A4C
_02019564:
	pop {r3, r4, r5, pc}
	nop
_02019568: .4byte 0x021D1108
	thumb_func_end FUN_02019548

	thumb_func_start FUN_0201956C
FUN_0201956C: @ 0x0201956C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, r3, #0
	movs r1, #0x10
	adds r5, r2, #0
	str r3, [sp]
	bl FUN_0201AA8C
	adds r4, r0, #0
	str r6, [r4]
	strh r5, [r4, #8]
	ldr r0, [sp]
	lsls r2, r7, #0x10
	str r0, [r4, #0xc]
	ldrh r0, [r4, #0xa]
	ldr r1, _020195BC @ =0xFFFF8000
	lsrs r3, r2, #0x10
	lsrs r2, r1, #0x11
	ands r0, r1
	ands r2, r3
	orrs r0, r2
	strh r0, [r4, #0xa]
	ldrh r2, [r4, #0xa]
	subs r0, r1, #1
	lsls r5, r5, #4
	ands r0, r2
	strh r0, [r4, #0xa]
	ldr r0, [sp]
	adds r1, r5, #0
	bl FUN_0201AA8C
	movs r1, #0
	adds r2, r5, #0
	str r0, [r4, #4]
	blx FUN_020D4994
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020195BC: .4byte 0xFFFF8000
	thumb_func_end FUN_0201956C

	thumb_func_start FUN_020195C0
FUN_020195C0: @ 0x020195C0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #8]
	movs r6, #0
	cmp r0, #0
	bls _020195E4
	adds r4, r6, #0
_020195CE:
	ldr r0, [r5, #4]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _020195DA
	bl FUN_0201AB0C
_020195DA:
	ldrh r0, [r5, #8]
	adds r6, r6, #1
	adds r4, #0x10
	cmp r6, r0
	blo _020195CE
_020195E4:
	ldr r0, [r5, #4]
	bl FUN_0201AB0C
	adds r0, r5, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_020195C0

	thumb_func_start FUN_020195F4
FUN_020195F4: @ 0x020195F4
	push {r3, r4, r5, r6, r7, lr}
	lsls r7, r1, #4
	ldr r4, [r0, #4]
	ldr r1, [sp, #0x18]
	adds r6, r3, #0
	muls r1, r6, r1
	ldr r0, [r0, #0xc]
	adds r5, r4, r7
	lsls r1, r1, #1
	str r2, [sp]
	bl FUN_0201AA8C
	str r0, [r4, r7]
	ldrh r0, [r5, #4]
	movs r1, #0x3f
	bics r0, r1
	lsls r1, r6, #0x10
	lsrs r2, r1, #0x10
	movs r1, #0x3f
	ands r1, r2
	orrs r0, r1
	strh r0, [r5, #4]
	ldrh r1, [r5, #4]
	ldr r0, _02019660 @ =0xFFFFF03F
	ands r1, r0
	ldr r0, [sp, #0x18]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x14
	orrs r0, r1
	strh r0, [r5, #4]
	ldr r0, [sp]
	ldr r1, _02019664 @ =0xFFFF1FFF
	strb r0, [r5, #0xa]
	movs r0, #0
	strb r0, [r5, #6]
	strb r0, [r5, #7]
	ldrh r2, [r5, #4]
	ands r1, r2
	strh r1, [r5, #4]
	movs r1, #1
	ldrh r2, [r5, #4]
	lsls r1, r1, #0xc
	orrs r1, r2
	strh r1, [r5, #4]
	strb r0, [r5, #0xc]
	movs r1, #0x20
	strb r1, [r5, #0xd]
	strb r0, [r5, #0xe]
	movs r0, #0x18
	strb r0, [r5, #0xf]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019660: .4byte 0xFFFFF03F
_02019664: .4byte 0xFFFF1FFF
	thumb_func_end FUN_020195F4

	thumb_func_start FUN_02019668
FUN_02019668: @ 0x02019668
	push {r4, lr}
	ldr r3, [r0, #4]
	lsls r1, r1, #4
	adds r4, r3, r1
	adds r0, r2, #0
	ldrh r2, [r4, #4]
	ldr r1, [r3, r1]
	lsls r3, r2, #0x1a
	lsls r2, r2, #0x14
	lsrs r3, r3, #0x1a
	lsrs r2, r2, #0x1a
	muls r2, r3, r2
	lsls r2, r2, #1
	blx FUN_020D47B8
	pop {r4, pc}
	thumb_func_end FUN_02019668

	thumb_func_start FUN_02019688
FUN_02019688: @ 0x02019688
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x18]
	add r3, sp, #4
	bl FUN_020079D8
	ldr r2, [sp, #4]
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, #0xc
	bl FUN_02019668
	adds r0, r6, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02019688

	thumb_func_start FUN_020196B8
FUN_020196B8: @ 0x020196B8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	adds r4, r1, #0
	str r0, [sp]
	adds r0, r2, #0
	adds r1, r3, #0
	ldr r2, [sp, #0x18]
	add r3, sp, #4
	bl FUN_02007C2C
	ldr r2, [sp, #4]
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, #0xc
	bl FUN_02019668
	adds r0, r6, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020196B8

	thumb_func_start FUN_020196E8
FUN_020196E8: @ 0x020196E8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x38
	str r0, [sp, #0x1c]
	adds r0, r2, #0
	ldr r2, [sp, #0x1c]
	lsls r1, r1, #4
	ldr r2, [r2, #4]
	adds r4, r2, r1
	strb r0, [r4, #6]
	strb r3, [r4, #7]
	movs r1, #0xd
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x28]
	cmp r0, r1
	bge _020197E6
	movs r1, #0xf
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x20]
	cmp r3, r1
	bge _020197E6
	ldrh r1, [r4, #4]
	lsls r2, r1, #0x1a
	lsrs r2, r2, #0x1a
	str r2, [sp, #0x2c]
	adds r7, r0, r2
	movs r2, #0xc
	ldrsb r2, [r4, r2]
	mov ip, r2
	cmp r7, r2
	blt _020197E6
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x1a
	str r1, [sp, #0x24]
	adds r6, r3, r1
	movs r1, #0xe
	ldrsb r2, [r4, r1]
	cmp r6, r2
	blt _020197E6
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x34]
	ldr r1, [sp, #0x2c]
	movs r5, #0
	lsls r1, r1, #0x18
	str r5, [sp, #0x30]
	mov r5, ip
	lsrs r1, r1, #0x18
	cmp r0, r5
	bge _02019762
	mov r5, ip
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	str r5, [sp, #0x34]
	mov r5, ip
	subs r0, r5, r0
	subs r1, r1, r0
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	str r0, [sp, #0x30]
_02019762:
	ldr r0, [sp, #0x28]
	cmp r7, r0
	blt _02019770
	subs r0, r7, r0
	subs r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_02019770:
	lsls r0, r3, #0x18
	lsrs r7, r0, #0x18
	ldr r0, [sp, #0x24]
	movs r5, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r3, r2
	bge _02019790
	lsls r5, r2, #0x18
	subs r2, r2, r3
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r5, #0x18
	lsrs r0, r0, #0x18
	lsrs r5, r2, #0x18
_02019790:
	ldr r2, [sp, #0x20]
	cmp r6, r2
	blt _0201979E
	subs r2, r6, r2
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0201979E:
	str r1, [sp]
	str r0, [sp, #4]
	ldr r0, [r4]
	adds r3, r7, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x30]
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x24]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x1c]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	ldr r2, [sp, #0x34]
	bl FUN_0201C4EC
	ldr r2, [sp, #0x1c]
	ldr r0, [sp, #0x1c]
	ldrh r2, [r2, #0xa]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	lsls r2, r2, #0x11
	lsrs r3, r2, #0xf
	ldr r2, _020197EC @ =_020F6298
	ldr r2, [r2, r3]
	blx r2
	ldrh r1, [r4, #4]
	ldr r0, _020197F0 @ =0xFFFFEFFF
	ands r0, r1
	strh r0, [r4, #4]
_020197E6:
	add sp, #0x38
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020197EC: .4byte _020F6298
_020197F0: .4byte 0xFFFFEFFF
	thumb_func_end FUN_020196E8

	thumb_func_start FUN_020197F4
FUN_020197F4: @ 0x020197F4
	push {r4, lr}
	ldr r2, [r0, #4]
	lsls r3, r1, #4
	adds r4, r2, r3
	movs r2, #6
	movs r3, #7
	ldrsb r2, [r4, r2]
	ldrsb r3, [r4, r3]
	bl FUN_020196E8
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020197F4

	thumb_func_start FUN_0201980C
FUN_0201980C: @ 0x0201980C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	ldr r2, [r0, #4]
	str r0, [sp, #0x10]
	lsls r0, r1, #4
	adds r4, r2, r0
	movs r0, #1
	ldrh r1, [r4, #4]
	lsls r0, r0, #0xc
	orrs r0, r1
	strh r0, [r4, #4]
	movs r0, #0xd
	ldrsb r6, [r4, r0]
	movs r0, #6
	ldrsb r0, [r4, r0]
	cmp r0, r6
	bge _020198F4
	movs r1, #0xf
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x28]
	movs r1, #7
	ldrsb r3, [r4, r1]
	ldr r1, [sp, #0x28]
	cmp r3, r1
	bge _020198F4
	ldrh r2, [r4, #4]
	lsls r1, r2, #0x1a
	lsrs r1, r1, #0x1a
	str r1, [sp, #0x24]
	adds r7, r0, r1
	movs r1, #0xc
	ldrsb r1, [r4, r1]
	mov ip, r1
	cmp r7, r1
	blt _020198F4
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x1a
	str r1, [sp, #0x1c]
	ldr r1, [sp, #0x1c]
	str r3, [sp, #0x18]
	adds r2, r3, r1
	movs r1, #0xe
	ldrsb r1, [r4, r1]
	str r1, [sp, #0x14]
	cmp r2, r1
	blt _020198F4
	ldr r1, [sp, #0x24]
	mov r5, ip
	lsls r1, r1, #0x18
	str r0, [sp, #0x20]
	asrs r1, r1, #0x18
	cmp r0, r5
	bge _02019884
	mov r5, ip
	str r5, [sp, #0x20]
	mov r5, ip
	subs r0, r5, r0
	subs r0, r1, r0
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
_02019884:
	cmp r7, r6
	blt _02019890
	subs r0, r7, r6
	subs r0, r1, r0
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
_02019890:
	ldr r0, [sp, #0x1c]
	ldr r5, [sp, #0x14]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r3, r5
	bge _020198AA
	adds r3, r5, #0
	adds r6, r5, #0
	ldr r5, [sp, #0x18]
	subs r5, r6, r5
	subs r0, r0, r5
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
_020198AA:
	ldr r5, [sp, #0x28]
	cmp r2, r5
	blt _020198B8
	subs r2, r2, r5
	subs r0, r0, r2
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
_020198B8:
	lsls r2, r3, #0x18
	lsrs r2, r2, #0x18
	lsls r1, r1, #0x18
	str r2, [sp]
	lsrs r1, r1, #0x18
	lsls r0, r0, #0x18
	str r1, [sp, #4]
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x10]
	ldr r3, [sp, #0x20]
	ldrb r1, [r4, #0xa]
	lsls r3, r3, #0x18
	ldr r0, [r0]
	movs r2, #0
	lsrs r3, r3, #0x18
	bl FUN_0201C8C4
	ldr r2, [sp, #0x10]
	ldr r0, [sp, #0x10]
	ldrh r2, [r2, #0xa]
	ldrb r1, [r4, #0xa]
	ldr r0, [r0]
	lsls r2, r2, #0x11
	lsrs r3, r2, #0xf
	ldr r2, _020198F8 @ =_020F6298
	ldr r2, [r2, r3]
	blx r2
_020198F4:
	add sp, #0x2c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_020198F8: .4byte _020F6298
	thumb_func_end FUN_0201980C

	thumb_func_start FUN_020198FC
FUN_020198FC: @ 0x020198FC
	push {r3, r4}
	ldr r4, [r0, #4]
	lsls r1, r1, #4
	adds r1, r4, r1
	strb r2, [r1, #8]
	ldr r2, _0201992C @ =0xFFFFFFF8
	strb r3, [r1, #9]
	add r2, sp
	ldrb r2, [r2, #0x10]
	strb r2, [r1, #0xb]
	ldrh r3, [r1, #4]
	ldr r2, _02019930 @ =0xFFFF1FFF
	ands r3, r2
	movs r2, #2
	lsls r2, r2, #0xc
	orrs r3, r2
	strh r3, [r1, #4]
	ldrh r3, [r0, #0xa]
	lsls r1, r2, #2
	orrs r1, r3
	strh r1, [r0, #0xa]
	pop {r3, r4}
	bx lr
	nop
_0201992C: .4byte 0xFFFFFFF8
_02019930: .4byte 0xFFFF1FFF
	thumb_func_end FUN_020198FC

	thumb_func_start FUN_02019934
FUN_02019934: @ 0x02019934
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1f
	beq _02019970
	ldr r0, _02019974 @ =0xFFFF7FFF
	adds r6, r5, #0
	ands r0, r1
	strh r0, [r5, #0xa]
	ldrh r0, [r5, #8]
	adds r6, #0xa
	movs r4, #0
	cmp r0, #0
	bls _02019970
	movs r7, #2
	lsls r7, r7, #0xe
_02019956:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02019978
	cmp r0, #1
	bne _02019968
	ldrh r0, [r6]
	orrs r0, r7
	strh r0, [r6]
_02019968:
	ldrh r0, [r5, #8]
	adds r4, r4, #1
	cmp r4, r0
	blo _02019956
_02019970:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019974: .4byte 0xFFFF7FFF
	thumb_func_end FUN_02019934

	thumb_func_start FUN_02019978
FUN_02019978: @ 0x02019978
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r2, [r5, #4]
	lsls r4, r6, #4
	adds r2, r2, r4
	ldrh r2, [r2, #4]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x1d
	bne _02019990
	movs r0, #0
	pop {r4, r5, r6, pc}
_02019990:
	bl FUN_0201980C
	ldr r2, [r5, #4]
	adds r1, r2, #6
	adds r3, r2, r4
	movs r2, #8
	ldrsb r0, [r1, r4]
	ldrsb r2, [r3, r2]
	adds r0, r0, r2
	strb r0, [r1, r4]
	ldr r2, [r5, #4]
	adds r1, r2, #7
	adds r3, r2, r4
	movs r2, #9
	ldrsb r0, [r1, r4]
	ldrsb r2, [r3, r2]
	adds r0, r0, r2
	strb r0, [r1, r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_020197F4
	ldr r1, [r5, #4]
	adds r1, #0xb
	ldrb r0, [r1, r4]
	subs r0, r0, #1
	strb r0, [r1, r4]
	ldr r0, [r5, #4]
	adds r2, r0, r4
	ldrb r0, [r2, #0xb]
	cmp r0, #0
	bne _020199DC
	ldrh r1, [r2, #4]
	ldr r0, _020199E0 @ =0xFFFF1FFF
	ands r0, r1
	strh r0, [r2, #4]
	movs r0, #0
	pop {r4, r5, r6, pc}
_020199DC:
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_020199E0: .4byte 0xFFFF1FFF
	thumb_func_end FUN_02019978

	thumb_func_start FUN_020199E4
FUN_020199E4: @ 0x020199E4
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	adds r0, r2, r0
	ldrh r0, [r0, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1d
	bx lr
	.align 2, 0
	thumb_func_end FUN_020199E4

	thumb_func_start FUN_020199F4
FUN_020199F4: @ 0x020199F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r2, [sp]
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	adds r1, r2, r0
	ldr r0, [r2, r0]
	adds r7, r3, #0
	mov ip, r0
	ldrh r0, [r1, #4]
	add r1, sp, #0x10
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	mov lr, r0
	ldrb r0, [r1, #0x14]
	adds r0, r7, r0
	str r0, [sp, #4]
	cmp r7, r0
	bge _02019A58
	ldrb r0, [r1, #0x18]
	ldrb r1, [r1, #0x10]
	ldr r6, _02019A5C @ =0x00000FFF
	lsls r5, r0, #0xc
	ldr r0, [sp]
	adds r2, r0, r1
_02019A26:
	ldr r1, [sp]
	adds r0, r1, #0
	cmp r0, r2
	bge _02019A4C
	mov r0, lr
	muls r0, r7, r0
	lsls r3, r0, #1
	mov r0, ip
	adds r3, r0, r3
_02019A38:
	lsls r0, r1, #1
	ldrh r4, [r3, r0]
	ands r4, r6
	orrs r4, r5
	strh r4, [r3, r0]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r2
	blt _02019A38
_02019A4C:
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [sp, #4]
	cmp r7, r0
	blt _02019A26
_02019A58:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02019A5C: .4byte 0x00000FFF
	thumb_func_end FUN_020199F4

	thumb_func_start FUN_02019A60
FUN_02019A60: @ 0x02019A60
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	str r0, [sp]
	lsls r0, r1, #4
	str r0, [sp, #0xc]
	ldr r0, [sp]
	movs r6, #0
	ldr r1, [r0, #4]
	ldr r0, [sp, #0xc]
	adds r3, r1, r0
	ldr r0, [r1, r0]
	mov ip, r0
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	mov lr, r0
	ldrh r0, [r2, #0xa]
	lsls r0, r0, #0x11
	lsrs r7, r0, #0x11
	ldrb r0, [r2, #9]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	ldrb r0, [r2, #8]
	cmp r0, #0
	ble _02019B04
_02019A94:
	ldrb r0, [r2, #6]
	adds r3, r0, r6
	ldr r0, [sp]
	ldr r1, [r0, #4]
	ldr r0, [sp, #0xc]
	adds r0, r1, r0
	ldrh r0, [r0, #4]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1a
	cmp r3, r0
	bge _02019B04
	ldrb r0, [r2, #7]
	movs r1, #0
	str r0, [sp, #4]
	cmp r0, #0
	ble _02019AF0
_02019AB4:
	ldr r0, [sp]
	ldrb r5, [r2, #5]
	ldr r3, [r0, #4]
	ldr r0, [sp, #0xc]
	adds r4, r5, r1
	adds r0, r3, r0
	ldrh r0, [r0, #4]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	cmp r4, r0
	bge _02019AF0
	ldr r0, [sp, #8]
	adds r3, r7, r1
	adds r0, r0, r3
	ldrb r3, [r2, #6]
	adds r4, r3, r6
	mov r3, lr
	muls r4, r3, r4
	adds r3, r5, r4
	adds r3, r1, r3
	lsls r4, r3, #1
	mov r3, ip
	strh r0, [r3, r4]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldrb r0, [r2, #7]
	str r0, [sp, #4]
	cmp r1, r0
	blt _02019AB4
_02019AF0:
	ldr r0, [sp, #4]
	adds r0, r7, r0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldrb r0, [r2, #8]
	cmp r6, r0
	blt _02019A94
_02019B04:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02019A60

	thumb_func_start FUN_02019B08
FUN_02019B08: @ 0x02019B08
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	ldr r0, [r2, r0]
	bx lr
	thumb_func_end FUN_02019B08

	thumb_func_start FUN_02019B10
FUN_02019B10: @ 0x02019B10
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	adds r0, r2, r0
	ldrb r0, [r0, #0xa]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019B10

	thumb_func_start FUN_02019B1C
FUN_02019B1C: @ 0x02019B1C
	push {r4, r5}
	cmp r2, #0
	beq _02019B2E
	ldr r5, [r0, #4]
	lsls r4, r1, #4
	adds r5, r5, r4
	movs r4, #6
	ldrsb r4, [r5, r4]
	strb r4, [r2]
_02019B2E:
	cmp r3, #0
	beq _02019B3E
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	adds r1, r2, r0
	movs r0, #7
	ldrsb r0, [r1, r0]
	strb r0, [r3]
_02019B3E:
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019B1C

	thumb_func_start FUN_02019B44
FUN_02019B44: @ 0x02019B44
	push {r4, r5}
	cmp r2, #0
	beq _02019B58
	ldr r5, [r0, #4]
	lsls r4, r1, #4
	adds r4, r5, r4
	ldrh r4, [r4, #4]
	lsls r4, r4, #0x1a
	lsrs r4, r4, #0x1a
	strh r4, [r2]
_02019B58:
	cmp r3, #0
	beq _02019B6A
	ldr r2, [r0, #4]
	lsls r0, r1, #4
	adds r0, r2, r0
	ldrh r0, [r0, #4]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1a
	strh r0, [r3]
_02019B6A:
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019B44

	thumb_func_start FUN_02019B70
FUN_02019B70: @ 0x02019B70
	push {r3, r4}
	ldr r4, [r0, #4]
	lsls r1, r1, #4
	adds r4, r4, r1
	strb r2, [r4, #0xc]
	ldr r2, [r0, #4]
	adds r2, r2, r1
	strb r3, [r2, #0xd]
	ldr r3, _02019B9C @ =0xFFFFFFF8
	movs r2, #0x10
	add r3, sp
	ldrsb r4, [r3, r2]
	ldr r2, [r0, #4]
	adds r2, r2, r1
	strb r4, [r2, #0xe]
	movs r2, #0x14
	ldr r0, [r0, #4]
	ldrsb r2, [r3, r2]
	adds r0, r0, r1
	strb r2, [r0, #0xf]
	pop {r3, r4}
	bx lr
	.align 2, 0
_02019B9C: .4byte 0xFFFFFFF8
	thumb_func_end FUN_02019B70

	thumb_func_start FUN_02019BA0
FUN_02019BA0: @ 0x02019BA0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019BA0

	thumb_func_start FUN_02019BA4
FUN_02019BA4: @ 0x02019BA4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [sp, #0x20]
	movs r1, #0x20
	adds r6, r2, #0
	adds r7, r3, #0
	bl FUN_0201AA8C
	str r5, [r0]
	str r4, [r0, #4]
	str r6, [r0, #0x18]
	str r7, [r0, #0x1c]
	movs r2, #0
	ldr r1, [sp, #0x18]
	strb r2, [r0, #0xc]
	str r1, [r0, #8]
	add r1, sp, #8
	ldrb r1, [r1, #0x14]
	strb r1, [r0, #0xd]
	movs r1, #0xff
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	subs r1, r2, #1
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02019BA4

	thumb_func_start FUN_02019BDC
FUN_02019BDC: @ 0x02019BDC
	ldr r3, _02019BE0 @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_02019BE0: .4byte FUN_0201AB0C
	thumb_func_end FUN_02019BDC

	thumb_func_start FUN_02019BE4
FUN_02019BE4: @ 0x02019BE4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r4, #0
	adds r5, r0, #0
	adds r6, r4, #0
	subs r7, r4, #1
_02019BF0:
	ldr r2, [r5]
	lsls r1, r4, #2
	ldrb r0, [r2, r1]
	cmp r0, #0xff
	beq _02019C1A
	adds r0, r2, r1
	bl FUN_02025320
	cmp r0, #1
	bne _02019C12
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02019E4C
	cmp r0, r7
	bne _02019D0E
	movs r6, #1
_02019C12:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _02019BF0
_02019C1A:
	cmp r6, #0
	beq _02019C26
	movs r0, #0
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019C26:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _02019C4C
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019C4C
	ldr r0, _02019D14 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #0xf3
	tst r1, r0
	beq _02019C46
	adds r0, r5, #0
	bl FUN_02019E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019C46:
	add sp, #0x10
	subs r0, #0xf4
	pop {r3, r4, r5, r6, r7, pc}
_02019C4C:
	ldr r0, _02019D14 @ =0x021D110C
	movs r1, #0x40
	ldr r0, [r0, #0x48]
	tst r1, r0
	beq _02019C72
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #0
	str r0, [sp, #0xc]
	b _02019CE0
_02019C72:
	movs r1, #0x80
	tst r1, r0
	beq _02019C96
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #1
	str r0, [sp, #0xc]
	b _02019CE0
_02019C96:
	movs r1, #0x20
	tst r1, r0
	beq _02019CBA
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #2
	str r0, [sp, #0xc]
	b _02019CE0
_02019CBA:
	movs r1, #0x10
	tst r0, r1
	beq _02019CDE
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #3
	str r0, [sp, #0xc]
	b _02019CE0
_02019CDE:
	movs r2, #0xff
_02019CE0:
	cmp r2, #0xff
	beq _02019CF0
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_02019EB8
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019CF0:
	ldr r0, _02019D14 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #1
	tst r0, r1
	beq _02019D00
	add sp, #0x10
	ldrb r0, [r5, #0xd]
	pop {r3, r4, r5, r6, r7, pc}
_02019D00:
	movs r0, #2
	tst r1, r0
	beq _02019D0C
	add sp, #0x10
	subs r0, r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_02019D0C:
	subs r0, r0, #3
_02019D0E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019D14: .4byte 0x021D110C
	thumb_func_end FUN_02019BE4

	thumb_func_start FUN_02019D18
FUN_02019D18: @ 0x02019D18
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	movs r4, #0
	adds r5, r0, #0
	adds r6, r4, #0
	subs r7, r4, #1
_02019D24:
	ldr r2, [r5]
	lsls r1, r4, #2
	ldrb r0, [r2, r1]
	cmp r0, #0xff
	beq _02019D4E
	adds r0, r2, r1
	bl FUN_02025320
	cmp r0, #1
	bne _02019D46
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02019E4C
	cmp r0, r7
	bne _02019E42
	movs r6, #1
_02019D46:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _02019D24
_02019D4E:
	cmp r6, #0
	beq _02019D5A
	movs r0, #0
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019D5A:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _02019D80
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019D80
	ldr r0, _02019E48 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #0xf3
	tst r1, r0
	beq _02019D7A
	adds r0, r5, #0
	bl FUN_02019E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019D7A:
	add sp, #0x10
	subs r0, #0xf4
	pop {r3, r4, r5, r6, r7, pc}
_02019D80:
	ldr r0, _02019E48 @ =0x021D110C
	movs r1, #0x40
	ldr r0, [r0, #0x4c]
	tst r1, r0
	beq _02019DA6
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	str r1, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #0
	str r0, [sp, #0xc]
	b _02019E14
_02019DA6:
	movs r1, #0x80
	tst r1, r0
	beq _02019DCA
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #1
	str r0, [sp, #0xc]
	b _02019E14
_02019DCA:
	movs r1, #0x20
	tst r1, r0
	beq _02019DEE
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #2
	str r0, [sp, #0xc]
	b _02019E14
_02019DEE:
	movs r1, #0x10
	tst r0, r1
	beq _02019E12
	movs r1, #0
	str r1, [sp]
	ldrb r0, [r5, #0xd]
	adds r2, r1, #0
	adds r3, r1, #0
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, [r5, #4]
	bl FUN_02020A24
	adds r2, r0, #0
	movs r0, #3
	str r0, [sp, #0xc]
	b _02019E14
_02019E12:
	movs r2, #0xff
_02019E14:
	cmp r2, #0xff
	beq _02019E24
	ldr r1, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_02019EB8
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_02019E24:
	ldr r0, _02019E48 @ =0x021D110C
	ldr r1, [r0, #0x48]
	movs r0, #1
	tst r0, r1
	beq _02019E34
	add sp, #0x10
	ldrb r0, [r5, #0xd]
	pop {r3, r4, r5, r6, r7, pc}
_02019E34:
	movs r0, #2
	tst r1, r0
	beq _02019E40
	add sp, #0x10
	subs r0, r0, #4
	pop {r3, r4, r5, r6, r7, pc}
_02019E40:
	subs r0, r0, #3
_02019E42:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02019E48: .4byte 0x021D110C
	thumb_func_end FUN_02019D18

	thumb_func_start FUN_02019E4C
FUN_02019E4C: @ 0x02019E4C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0x10
	adds r4, r1, #0
	bl FUN_0201A06C
	cmp r0, #1
	bne _02019E90
	strb r4, [r5, #0xd]
	movs r0, #0xff
	strb r0, [r5, #0xe]
	strb r0, [r5, #0xf]
	ldr r0, [r5, #8]
	cmp r0, #1
	bne _02019E80
	ldrb r0, [r5, #0xc]
	cmp r0, #1
	bne _02019E80
	movs r0, #0
	str r0, [r5, #8]
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #4]
	blx r3
_02019E80:
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #0xc]
	blx r3
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
_02019E90:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02019E4C

	thumb_func_start FUN_02019E98
FUN_02019E98: @ 0x02019E98
	push {r3, lr}
	adds r3, r0, #0
	movs r0, #1
	str r0, [r3, #8]
	movs r0, #0xff
	strb r0, [r3, #0xe]
	strb r0, [r3, #0xf]
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldrb r2, [r3, #0xe]
	ldr r3, [r3, #0x18]
	ldr r3, [r3]
	blx r3
	movs r0, #3
	mvns r0, r0
	pop {r3, pc}
	thumb_func_end FUN_02019E98

	thumb_func_start FUN_02019EB8
FUN_02019EB8: @ 0x02019EB8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r2, #0
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0x80
	adds r1, r4, #0
	tst r1, r0
	beq _02019EDA
	ldrb r1, [r5, #0xf]
	cmp r1, #0xff
	beq _02019ED4
	adds r4, r1, #0
	b _02019EDA
_02019ED4:
	eors r0, r4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_02019EDA:
	movs r0, #1
	str r0, [sp, #0xc]
	movs r7, #0
_02019EE0:
	lsrs r2, r4, #0x1f
	lsls r1, r4, #0x1b
	subs r1, r1, r2
	movs r0, #0x1b
	rors r1, r0
	adds r1, r2, r1
	movs r0, #1
	lsls r0, r1
	lsrs r1, r4, #5
	lsls r1, r1, #2
	adds r1, r5, r1
	ldr r1, [r1, #0x10]
	tst r0, r1
	bne _02019F2A
	str r7, [sp, #0xc]
	str r7, [sp]
	str r4, [sp, #4]
	str r6, [sp, #8]
	ldr r0, [r5, #4]
	adds r1, r7, #0
	adds r2, r7, #0
	adds r3, r7, #0
	bl FUN_02020A24
	movs r1, #0x7f
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r4
	beq _02019F22
	ldrb r0, [r5, #0xd]
	cmp r1, r0
	bne _02019F26
_02019F22:
	ldrb r4, [r5, #0xd]
	b _02019F2A
_02019F26:
	adds r4, r1, #0
	b _02019EE0
_02019F2A:
	ldrb r0, [r5, #0xd]
	cmp r0, r4
	beq _02019F6A
	ldr r1, [r5, #4]
	lsls r0, r4, #3
	adds r0, r1, r0
	adds r1, r6, #0
	bl FUN_0201A020
	cmp r0, #1
	bne _02019F4C
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _02019F4C
	ldrb r0, [r5, #0xd]
	strb r0, [r5, #0xf]
	b _02019F50
_02019F4C:
	movs r0, #0xff
	strb r0, [r5, #0xf]
_02019F50:
	ldrb r0, [r5, #0xd]
	strb r0, [r5, #0xe]
	strb r4, [r5, #0xd]
	ldr r3, [r5, #0x18]
	ldrb r1, [r5, #0xd]
	ldrb r2, [r5, #0xe]
	ldr r0, [r5, #0x1c]
	ldr r3, [r3, #8]
	blx r3
	movs r0, #2
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02019F6A:
	movs r0, #0
	mvns r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02019EB8

	thumb_func_start FUN_02019F74
FUN_02019F74: @ 0x02019F74
	ldrb r0, [r0, #0xd]
	bx lr
	thumb_func_end FUN_02019F74

	thumb_func_start FUN_02019F78
FUN_02019F78: @ 0x02019F78
	ldrb r0, [r0, #0xf]
	bx lr
	thumb_func_end FUN_02019F78

	thumb_func_start FUN_02019F7C
FUN_02019F7C: @ 0x02019F7C
	strb r1, [r0, #0xd]
	movs r1, #0xff
	strb r1, [r0, #0xe]
	strb r1, [r0, #0xf]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019F7C

	thumb_func_start FUN_02019F88
FUN_02019F88: @ 0x02019F88
	strb r1, [r0, #0xd]
	strb r2, [r0, #0xe]
	strb r3, [r0, #0xf]
	bx lr
	thumb_func_end FUN_02019F88

	thumb_func_start FUN_02019F90
FUN_02019F90: @ 0x02019F90
	ldr r0, [r0, #8]
	bx lr
	thumb_func_end FUN_02019F90

	thumb_func_start FUN_02019F94
FUN_02019F94: @ 0x02019F94
	push {r3, lr}
	adds r3, r0, #0
	str r1, [r3, #8]
	cmp r1, #1
	bne _02019FB4
	movs r0, #0xff
	strb r0, [r3, #0xe]
	strb r0, [r3, #0xf]
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldr r3, [r3, #0x18]
	movs r2, #0
	ldr r3, [r3]
	mvns r2, r2
	blx r3
	pop {r3, pc}
_02019FB4:
	ldr r0, [r3, #0x1c]
	ldrb r1, [r3, #0xd]
	ldr r3, [r3, #0x18]
	movs r2, #0
	ldr r3, [r3, #4]
	mvns r2, r2
	blx r3
	pop {r3, pc}
	thumb_func_end FUN_02019F94

	thumb_func_start FUN_02019FC4
FUN_02019FC4: @ 0x02019FC4
	movs r1, #0
	mvns r1, r1
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02019FC4

	thumb_func_start FUN_02019FD0
FUN_02019FD0: @ 0x02019FD0
	push {r4, r5}
	movs r4, #1
	lsrs r2, r1, #5
	movs r3, #0x1f
	ands r1, r3
	adds r5, r4, #0
	lsls r5, r1
	adds r0, #0x10
	lsls r2, r2, #2
	ldr r4, [r0, r2]
	adds r1, r5, #0
	tst r1, r4
	beq _02019FF4
	subs r3, #0x20
	adds r1, r5, #0
	eors r1, r3
	ands r1, r4
	str r1, [r0, r2]
_02019FF4:
	pop {r4, r5}
	bx lr
	thumb_func_end FUN_02019FD0

	thumb_func_start FUN_02019FF8
FUN_02019FF8: @ 0x02019FF8
	push {r3, r4}
	movs r3, #0x1f
	lsrs r2, r1, #5
	movs r4, #1
	ands r1, r3
	lsls r4, r1
	adds r0, #0x10
	lsls r2, r2, #2
	ldr r1, [r0, r2]
	adds r3, r4, #0
	tst r3, r1
	bne _0201A014
	eors r1, r4
	str r1, [r0, r2]
_0201A014:
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02019FF8

	thumb_func_start FUN_0201A018
FUN_0201A018: @ 0x0201A018
	ldr r2, [r0, #4]
	lsls r0, r1, #3
	adds r0, r2, r0
	bx lr
	thumb_func_end FUN_0201A018

	thumb_func_start FUN_0201A020
FUN_0201A020: @ 0x0201A020
	cmp r1, #3
	bhi _0201A068
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201A030: @ jump table
	.2byte _0201A038 - _0201A030 - 2 @ case 0
	.2byte _0201A044 - _0201A030 - 2 @ case 1
	.2byte _0201A050 - _0201A030 - 2 @ case 2
	.2byte _0201A05C - _0201A030 - 2 @ case 3
_0201A038:
	ldrb r1, [r0, #5]
	movs r0, #0x80
	tst r0, r1
	beq _0201A068
	movs r0, #1
	bx lr
_0201A044:
	ldrb r1, [r0, #4]
	movs r0, #0x80
	tst r0, r1
	beq _0201A068
	movs r0, #1
	bx lr
_0201A050:
	ldrb r1, [r0, #7]
	movs r0, #0x80
	tst r0, r1
	beq _0201A068
	movs r0, #1
	bx lr
_0201A05C:
	ldrb r1, [r0, #6]
	movs r0, #0x80
	tst r0, r1
	beq _0201A068
	movs r0, #1
	bx lr
_0201A068:
	movs r0, #0
	bx lr
	thumb_func_end FUN_0201A020

	thumb_func_start FUN_0201A06C
FUN_0201A06C: @ 0x0201A06C
	push {r3, r4}
	movs r3, #0x1f
	movs r2, #1
	ands r3, r1
	lsrs r1, r1, #5
	adds r4, r2, #0
	lsls r1, r1, #2
	lsls r4, r3
	ldr r0, [r0, r1]
	tst r0, r4
	bne _0201A084
	movs r2, #0
_0201A084:
	adds r0, r2, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201A06C

	thumb_func_start FUN_0201A08C
FUN_0201A08C: @ 0x0201A08C
	push {r3, lr}
	ldr r3, _0201A0B4 @ =OSi_IntrTable
	ldr r1, _0201A0B8 @ =0x00003FF8
	movs r0, #1
	ldr r2, [r3, r1]
	orrs r0, r2
	str r0, [r3, r1]
	movs r0, #3
	blx FUN_020D422C
	ldr r0, _0201A0BC @ =0x021D110C
	ldr r0, [r0, #0x1c]
	bl FUN_0201F880
	ldr r0, _0201A0BC @ =0x021D110C
	ldr r1, [r0, #0x30]
	adds r1, r1, #1
	str r1, [r0, #0x30]
	pop {r3, pc}
	nop
_0201A0B4: .4byte OSi_IntrTable
_0201A0B8: .4byte 0x00003FF8
_0201A0BC: .4byte 0x021D110C
	thumb_func_end FUN_0201A08C

	thumb_func_start FUN_0201A0C0
FUN_0201A0C0: @ 0x0201A0C0
	ldr r3, _0201A0D4 @ =OSi_IntrTable
	ldr r1, _0201A0D8 @ =0x00003FF8
	movs r0, #1
	ldr r2, [r3, r1]
	orrs r0, r2
	str r0, [r3, r1]
	ldr r3, _0201A0DC @ =FUN_020D422C
	movs r0, #3
	bx r3
	nop
_0201A0D4: .4byte OSi_IntrTable
_0201A0D8: .4byte 0x00003FF8
_0201A0DC: .4byte FUN_020D422C
	thumb_func_end FUN_0201A0C0

	thumb_func_start FUN_0201A0E0
FUN_0201A0E0: @ 0x0201A0E0
	push {r3, lr}
	movs r0, #1
	blx FUN_020D1204
	ldr r1, _0201A0F8 @ =FUN_0201A0C0
	movs r0, #1
	blx FUN_020D1004
	movs r0, #1
	blx FUN_020D11D4
	pop {r3, pc}
	.align 2, 0
_0201A0F8: .4byte FUN_0201A0C0
	thumb_func_end FUN_0201A0E0

	thumb_func_start FUN_0201A0FC
FUN_0201A0FC: @ 0x0201A0FC
	ldr r2, _0201A104 @ =0x021D110C
	str r0, [r2]
	str r1, [r2, #4]
	bx lr
	.align 2, 0
_0201A104: .4byte 0x021D110C
	thumb_func_end FUN_0201A0FC

	thumb_func_start FUN_0201A108
FUN_0201A108: @ 0x0201A108
	push {r3, lr}
	movs r0, #0
	bl FUN_0201A16C
	ldr r0, _0201A11C @ =0x021D110C
	movs r1, #0
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	pop {r3, pc}
	nop
_0201A11C: .4byte 0x021D110C
	thumb_func_end FUN_0201A108

	thumb_func_start FUN_0201A120
FUN_0201A120: @ 0x0201A120
	push {r3, lr}
	cmp r0, #0
	bne _0201A138
	movs r0, #0
	bl FUN_0201A16C
	ldr r0, _0201A154 @ =0x021D110C
	movs r1, #0
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	movs r0, #1
	pop {r3, pc}
_0201A138:
	ldr r2, _0201A154 @ =0x021D110C
	ldr r3, [r2, #8]
	cmp r3, #0
	bne _0201A14E
	str r1, [r2, #0xc]
	str r0, [r2, #8]
	movs r0, #1
	bl FUN_0201A16C
	movs r0, #1
	pop {r3, pc}
_0201A14E:
	movs r0, #0
	pop {r3, pc}
	nop
_0201A154: .4byte 0x021D110C
	thumb_func_end FUN_0201A120

	thumb_func_start FUN_0201A158
FUN_0201A158: @ 0x0201A158
	push {r3, lr}
	ldr r0, _0201A168 @ =0x021D110C
	ldr r1, [r0, #8]
	cmp r1, #0
	beq _0201A166
	ldr r0, [r0, #0xc]
	blx r1
_0201A166:
	pop {r3, pc}
	.align 2, 0
_0201A168: .4byte 0x021D110C
	thumb_func_end FUN_0201A158

	thumb_func_start FUN_0201A16C
FUN_0201A16C: @ 0x0201A16C
	push {r3, lr}
	ldr r2, _0201A1AC @ =0x04000208
	ldrh r1, [r2]
	movs r1, #0
	strh r1, [r2]
	cmp r0, #0
	bne _0201A18A
	ldr r0, [r2, #8]
	movs r0, #2
	blx FUN_020D1204
	movs r0, #0
	blx FUN_020CD910
	b _0201A1A0
_0201A18A:
	ldr r0, [r2, #8]
	ldr r1, _0201A1B0 @ =FUN_0201A158
	movs r0, #2
	blx FUN_020D1004
	movs r0, #2
	blx FUN_020D11D4
	movs r0, #1
	blx FUN_020CD910
_0201A1A0:
	ldr r1, _0201A1AC @ =0x04000208
	ldrh r0, [r1]
	movs r0, #1
	strh r0, [r1]
	pop {r3, pc}
	nop
_0201A1AC: .4byte 0x04000208
_0201A1B0: .4byte FUN_0201A158
	thumb_func_end FUN_0201A16C

	thumb_func_start FUN_0201A1B4
FUN_0201A1B4: @ 0x0201A1B4
	push {r3, lr}
	sub sp, #0x30
	add r0, sp, #0x10
	blx FUN_020D3E78
	add r0, sp, #0
	add r1, sp, #0x10
	movs r2, #0x20
	blx FUN_020E3758
	movs r3, #0
	adds r1, r3, #0
	add r2, sp, #0
_0201A1CE:
	ldrb r0, [r2]
	adds r1, r1, #1
	adds r2, r2, #1
	adds r3, r3, r0
	cmp r1, #0x10
	blo _0201A1CE
	lsls r0, r3, #0x18
	lsrs r3, r0, #0x18
	movs r0, #3
	tst r0, r3
	beq _0201A1EE
	movs r0, #3
_0201A1E6:
	adds r3, r3, #1
	adds r1, r3, #0
	tst r1, r0
	bne _0201A1E6
_0201A1EE:
	ldr r0, _0201A1FC @ =_020F62A4
	movs r1, #4
	movs r2, #0xa1
	bl FUN_0201A7BC
	add sp, #0x30
	pop {r3, pc}
	.align 2, 0
_0201A1FC: .4byte _020F62A4
	thumb_func_end FUN_0201A1B4

	thumb_func_start FUN_0201A200
FUN_0201A200: @ 0x0201A200
	push {r3, r4, r5, lr}
	blx FUN_020D290C
	blx FUN_020CD784
	ldr r2, _0201A324 @ =0x04000304
	ldr r0, _0201A328 @ =0xFFFFFDF1
	ldrh r1, [r2]
	ands r1, r0
	ldr r0, _0201A32C @ =0x0000020E
	orrs r0, r1
	strh r0, [r2]
	blx FUN_020CD7C4
	blx FUN_020D33C0
	bl FUN_0201A1B4
	movs r0, #0xa0
	bl FUN_0201F82C
	adds r1, r0, #0
	movs r0, #0
	movs r2, #4
	blx FUN_020D2CA0
	adds r1, r0, #0
	movs r0, #0xa0
	bl FUN_0201F834
	ldr r1, _0201A330 @ =0x021D110C
	str r0, [r1, #0x18]
	movs r0, #0x20
	bl FUN_0201F82C
	adds r1, r0, #0
	movs r0, #0
	movs r2, #4
	blx FUN_020D2CA0
	adds r1, r0, #0
	movs r0, #0x20
	bl FUN_0201F834
	ldr r1, _0201A330 @ =0x021D110C
	str r0, [r1, #0x1c]
	movs r0, #0x20
	bl FUN_0201F82C
	adds r1, r0, #0
	movs r0, #0
	movs r2, #4
	blx FUN_020D2CA0
	adds r1, r0, #0
	movs r0, #0x20
	bl FUN_0201F834
	ldr r1, _0201A330 @ =0x021D110C
	str r0, [r1, #0x20]
	movs r0, #4
	bl FUN_0201F82C
	adds r1, r0, #0
	movs r0, #0
	movs r2, #4
	blx FUN_020D2CA0
	adds r1, r0, #0
	movs r0, #4
	bl FUN_0201F834
	ldr r1, _0201A330 @ =0x021D110C
	str r0, [r1, #0x24]
	blx FUN_020CD978
	ldr r2, _0201A334 @ =0x04001000
	ldr r0, _0201A338 @ =0xFFFEFFFF
	ldr r1, [r2]
	ands r0, r1
	str r0, [r2]
	ldr r2, _0201A324 @ =0x04000304
	ldrh r1, [r2]
	lsrs r0, r2, #0xb
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0201A33C @ =FUN_0201A08C
	movs r0, #1
	blx FUN_020D1004
	movs r0, #1
	blx FUN_020D11D4
	movs r0, #1
	lsls r0, r0, #0x12
	blx FUN_020D11D4
	ldr r1, _0201A340 @ =0x04000208
	ldrh r0, [r1]
	movs r0, #1
	strh r0, [r1]
	blx FUN_020CD944
	movs r0, #1
	blx FUN_020D7F60
	bl FUN_02027010
	movs r0, #0
	adds r1, r0, #0
	blx FUN_020D8728
	adds r4, r0, #0
	movs r0, #0
	adds r1, r4, #0
	movs r2, #4
	blx FUN_020D2CA0
	adds r5, r0, #0
	bne _0201A2F4
	bl FUN_0202551C
_0201A2F4:
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020D8728
	ldr r0, _0201A330 @ =0x021D110C
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #8]
	str r1, [r0, #0x10]
	str r1, [r0, #0x14]
	str r1, [r0, #0x74]
	str r1, [r0, #0x2c]
	ldr r0, _0201A344 @ =0x021D116C
	strb r1, [r0, #9]
	movs r0, #5
	movs r1, #9
	lsls r0, r0, #8
	lsls r1, r1, #0xa
	blx FUN_020DC9DC
	movs r0, #0
	bl FUN_0201FFB0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201A324: .4byte 0x04000304
_0201A328: .4byte 0xFFFFFDF1
_0201A32C: .4byte 0x0000020E
_0201A330: .4byte 0x021D110C
_0201A334: .4byte 0x04001000
_0201A338: .4byte 0xFFFEFFFF
_0201A33C: .4byte FUN_0201A08C
_0201A340: .4byte 0x04000208
_0201A344: .4byte 0x021D116C
	thumb_func_end FUN_0201A200

	thumb_func_start FUN_0201A348
FUN_0201A348: @ 0x0201A348
	push {r3, lr}
	ldr r0, _0201A398 @ =0x000001FF
	blx FUN_020CE630
	movs r1, #0x1a
	movs r2, #0x29
	movs r0, #0
	lsls r1, r1, #0x16
	lsls r2, r2, #0xe
	blx FUN_020D4858
	blx FUN_020CEB60
	movs r1, #7
	movs r2, #1
	movs r0, #0xc0
	lsls r1, r1, #0x18
	lsls r2, r2, #0xa
	blx FUN_020D4858
	movs r2, #1
	ldr r1, _0201A39C @ =0x07000400
	movs r0, #0xc0
	lsls r2, r2, #0xa
	blx FUN_020D4858
	movs r1, #5
	movs r2, #1
	movs r0, #0
	lsls r1, r1, #0x18
	lsls r2, r2, #0xa
	blx FUN_020D4858
	movs r2, #1
	ldr r1, _0201A3A0 @ =0x05000400
	movs r0, #0
	lsls r2, r2, #0xa
	blx FUN_020D4858
	pop {r3, pc}
	.align 2, 0
_0201A398: .4byte 0x000001FF
_0201A39C: .4byte 0x07000400
_0201A3A0: .4byte 0x05000400
	thumb_func_end FUN_0201A348

	thumb_func_start FUN_0201A3A4
FUN_0201A3A4: @ 0x0201A3A4
	push {r4, r5, r6, lr}
	sub sp, #0x48
	adds r6, r0, #0
	adds r4, r1, #0
	add r0, sp, #0
	blx FUN_020D7F98
	add r0, sp, #0
	adds r1, r4, #0
	blx FUN_020D8278
	cmp r0, #0
	beq _0201A3F0
	ldr r1, [sp, #0x28]
	ldr r0, [sp, #0x24]
	subs r5, r1, r0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	beq _0201A3E8
	add r0, sp, #0
	adds r1, r4, #0
	adds r2, r5, #0
	blx FUN_020D83CC
	cmp r5, r0
	beq _0201A3E8
	adds r0, r6, #0
	adds r1, r4, #0
	bl FUN_0201AB80
	movs r4, #0
_0201A3E8:
	add r0, sp, #0
	blx FUN_020D82C0
	b _0201A3F2
_0201A3F0:
	movs r4, #0
_0201A3F2:
	adds r0, r4, #0
	add sp, #0x48
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201A3A4

	thumb_func_start FUN_0201A3F8
FUN_0201A3F8: @ 0x0201A3F8
	push {r3, r4, r5, lr}
	sub sp, #0x48
	adds r5, r0, #0
	add r0, sp, #0
	adds r4, r1, #0
	blx FUN_020D7F98
	add r0, sp, #0
	adds r1, r5, #0
	blx FUN_020D8278
	cmp r0, #0
	beq _0201A42A
	ldr r1, [sp, #0x28]
	ldr r0, [sp, #0x24]
	subs r2, r1, r0
	ldr r1, [r4]
	cmp r1, #0
	beq _0201A424
	add r0, sp, #0
	blx FUN_020D83CC
_0201A424:
	add r0, sp, #0
	blx FUN_020D82C0
_0201A42A:
	add sp, #0x48
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201A3F8

	thumb_func_start FUN_0201A430
FUN_0201A430: @ 0x0201A430
	push {r3, r4, r5, r6, r7, lr}
	movs r6, #0
	ldr r5, _0201A454 @ =0x021D157C
	movs r4, #0x7f
	subs r7, r6, #1
_0201A43A:
	ldr r0, [r5]
	cmp r0, #0
	beq _0201A448
	bl FUN_0201AB0C
	str r6, [r5]
	str r6, [r5, #4]
_0201A448:
	subs r4, r4, #1
	subs r5, #8
	cmp r4, r7
	bgt _0201A43A
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201A454: .4byte 0x021D157C
	thumb_func_end FUN_0201A430

	thumb_func_start FUN_0201A458
FUN_0201A458: @ 0x0201A458
	push {r3, lr}
	sub sp, #8
	ldr r0, _0201A4A4 @ =0x021D110C
	movs r2, #0
	str r2, [r0, #0x34]
	str r2, [r0, #0x38]
	str r2, [r0, #0x3c]
	str r2, [r0, #0x40]
	str r2, [r0, #0x44]
	str r2, [r0, #0x48]
	str r2, [r0, #0x4c]
	str r2, [r0, #0x50]
	movs r1, #4
	str r1, [r0, #0x54]
	movs r1, #8
	str r1, [r0, #0x58]
	ldr r0, _0201A4A8 @ =0x021D114C
	strh r2, [r0, #0x20]
	strh r2, [r0, #0x22]
	strh r2, [r0, #0x24]
	strh r2, [r0, #0x26]
	ldr r0, _0201A4AC @ =0x021D116C
	strb r2, [r0, #8]
	blx FUN_020D9EF0
	bl FUN_020210A0
	add r0, sp, #0
	blx FUN_020D9F68
	cmp r0, #1
	bne _0201A49E
	add r0, sp, #0
	blx FUN_020D9FFC
_0201A49E:
	add sp, #8
	pop {r3, pc}
	nop
_0201A4A4: .4byte 0x021D110C
_0201A4A8: .4byte 0x021D114C
_0201A4AC: .4byte 0x021D116C
	thumb_func_end FUN_0201A458

	thumb_func_start FUN_0201A4B0
FUN_0201A4B0: @ 0x0201A4B0
	ldr r1, _0201A4B8 @ =0x021D116C
	strb r0, [r1, #0xa]
	bx lr
	nop
_0201A4B8: .4byte 0x021D116C
	thumb_func_end FUN_0201A4B0

	thumb_func_start FUN_0201A4BC
FUN_0201A4BC: @ 0x0201A4BC
	ldr r1, _0201A4C8 @ =0x021D116C
	ldrb r2, [r1, #0xb]
	orrs r0, r2
	strb r0, [r1, #0xb]
	bx lr
	nop
_0201A4C8: .4byte 0x021D116C
	thumb_func_end FUN_0201A4BC

	thumb_func_start FUN_0201A4CC
FUN_0201A4CC: @ 0x0201A4CC
	ldr r1, _0201A4D8 @ =0x021D116C
	mvns r0, r0
	ldrb r2, [r1, #0xb]
	ands r0, r2
	strb r0, [r1, #0xb]
	bx lr
	.align 2, 0
_0201A4D8: .4byte 0x021D116C
	thumb_func_end FUN_0201A4CC

	thumb_func_start FUN_0201A4DC
FUN_0201A4DC: @ 0x0201A4DC
	push {r4, lr}
	sub sp, #0x10
	ldr r2, _0201A5D0 @ =0x027FFFA8
	movs r0, #2
	ldrh r1, [r2]
	lsls r0, r0, #0xe
	ands r0, r1
	asrs r0, r0, #0xf
	beq _0201A502
	ldr r0, _0201A5D4 @ =0x021D110C
	movs r1, #0
	str r1, [r0, #0x48]
	str r1, [r0, #0x44]
	str r1, [r0, #0x4c]
	ldr r0, _0201A5D8 @ =0x021D114C
	add sp, #0x10
	strh r1, [r0, #0x24]
	strh r1, [r0, #0x26]
	pop {r4, pc}
_0201A502:
	ldr r0, _0201A5DC @ =0x04000130
	ldrh r1, [r0]
	ldrh r0, [r2]
	orrs r1, r0
	ldr r0, _0201A5E0 @ =0x00002FFF
	eors r1, r0
	ands r0, r1
	lsls r0, r0, #0x10
	ldr r1, _0201A5D4 @ =0x021D110C
	lsrs r2, r0, #0x10
	ldr r0, [r1, #0x5c]
	orrs r0, r2
	movs r2, #0
	str r2, [r1, #0x5c]
	ldr r2, [r1, #0x38]
	adds r3, r0, #0
	eors r3, r2
	ands r3, r0
	str r3, [r1, #0x3c]
	str r3, [r1, #0x40]
	cmp r0, #0
	beq _0201A542
	cmp r2, r0
	bne _0201A542
	ldr r2, [r1, #0x50]
	subs r2, r2, #1
	str r2, [r1, #0x50]
	bne _0201A548
	str r0, [r1, #0x40]
	ldr r2, [r1, #0x54]
	str r2, [r1, #0x50]
	b _0201A548
_0201A542:
	ldr r1, _0201A5D4 @ =0x021D110C
	ldr r2, [r1, #0x58]
	str r2, [r1, #0x50]
_0201A548:
	ldr r1, _0201A5D4 @ =0x021D110C
	str r0, [r1, #0x38]
	ldr r2, [r1, #0x3c]
	str r2, [r1, #0x48]
	str r0, [r1, #0x44]
	ldr r0, [r1, #0x40]
	str r0, [r1, #0x4c]
	bl FUN_0201A5E8
	ldr r0, _0201A5E4 @ =0x021D116C
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _0201A574
	add r4, sp, #8
_0201A564:
	blx FUN_020DA124
	adds r0, r4, #0
	blx FUN_020DA1B8
	cmp r0, #0
	bne _0201A564
	b _0201A57A
_0201A574:
	add r0, sp, #8
	blx FUN_020DA3A0
_0201A57A:
	add r0, sp, #0
	add r1, sp, #8
	blx FUN_020DA6E0
	add r1, sp, #0
	ldrh r3, [r1, #6]
	cmp r3, #0
	bne _0201A596
	ldrh r2, [r1]
	ldr r0, _0201A5D8 @ =0x021D114C
	strh r2, [r0, #0x20]
	ldrh r1, [r1, #2]
	strh r1, [r0, #0x22]
	b _0201A5BA
_0201A596:
	ldr r0, _0201A5D8 @ =0x021D114C
	ldrh r2, [r0, #0x26]
	cmp r2, #0
	beq _0201A5B6
	cmp r3, #1
	beq _0201A5AA
	cmp r3, #2
	beq _0201A5B0
	cmp r3, #3
	b _0201A5BA
_0201A5AA:
	ldrh r1, [r1, #2]
	strh r1, [r0, #0x22]
	b _0201A5BA
_0201A5B0:
	ldrh r1, [r1]
	strh r1, [r0, #0x20]
	b _0201A5BA
_0201A5B6:
	movs r0, #0
	strh r0, [r1, #4]
_0201A5BA:
	add r0, sp, #0
	ldrh r2, [r0, #4]
	ldr r0, _0201A5D8 @ =0x021D114C
	ldrh r1, [r0, #0x26]
	eors r1, r2
	ands r1, r2
	strh r1, [r0, #0x24]
	strh r2, [r0, #0x26]
	add sp, #0x10
	pop {r4, pc}
	nop
_0201A5D0: .4byte 0x027FFFA8
_0201A5D4: .4byte 0x021D110C
_0201A5D8: .4byte 0x021D114C
_0201A5DC: .4byte 0x04000130
_0201A5E0: .4byte 0x00002FFF
_0201A5E4: .4byte 0x021D116C
	thumb_func_end FUN_0201A4DC

	thumb_func_start FUN_0201A5E8
FUN_0201A5E8: @ 0x0201A5E8
	ldr r0, _0201A710 @ =0x021D110C
	ldr r1, [r0, #0x34]
	cmp r1, #3
	bls _0201A5F2
	b _0201A70C
_0201A5F2:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201A5FE: @ jump table
	.2byte _0201A70C - _0201A5FE - 2 @ case 0
	.2byte _0201A606 - _0201A5FE - 2 @ case 1
	.2byte _0201A63C - _0201A5FE - 2 @ case 2
	.2byte _0201A6C2 - _0201A5FE - 2 @ case 3
_0201A606:
	ldr r2, [r0, #0x48]
	movs r1, #8
	adds r3, r2, #0
	tst r3, r1
	beq _0201A616
	lsls r1, r1, #7
	orrs r1, r2
	str r1, [r0, #0x48]
_0201A616:
	ldr r1, _0201A710 @ =0x021D110C
	movs r0, #8
	ldr r2, [r1, #0x44]
	adds r3, r2, #0
	tst r3, r0
	beq _0201A628
	lsls r0, r0, #7
	orrs r0, r2
	str r0, [r1, #0x44]
_0201A628:
	ldr r1, _0201A710 @ =0x021D110C
	movs r0, #8
	ldr r2, [r1, #0x4c]
	adds r3, r2, #0
	tst r3, r0
	beq _0201A70C
	lsls r0, r0, #7
	orrs r0, r2
	str r0, [r1, #0x4c]
	bx lr
_0201A63C:
	ldr r3, [r0, #0x48]
	movs r0, #1
	lsls r0, r0, #0xa
	adds r2, r3, #0
	movs r1, #0
	tst r2, r0
	beq _0201A64E
	lsls r0, r0, #1
	orrs r1, r0
_0201A64E:
	movs r0, #2
	lsls r0, r0, #0xa
	adds r2, r3, #0
	tst r2, r0
	beq _0201A65C
	lsrs r0, r0, #1
	orrs r1, r0
_0201A65C:
	ldr r2, _0201A710 @ =0x021D110C
	ldr r0, _0201A714 @ =0x0000F3FF
	ldr r3, [r2, #0x48]
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #0x48]
	ldr r3, [r2, #0x44]
	movs r1, #1
	lsls r1, r1, #0xa
	adds r2, r3, #0
	movs r0, #0
	tst r2, r1
	beq _0201A67A
	lsls r1, r1, #1
	orrs r0, r1
_0201A67A:
	movs r1, #2
	lsls r1, r1, #0xa
	adds r2, r3, #0
	tst r2, r1
	beq _0201A688
	lsrs r1, r1, #1
	orrs r0, r1
_0201A688:
	ldr r2, _0201A710 @ =0x021D110C
	ldr r1, _0201A714 @ =0x0000F3FF
	ldr r3, [r2, #0x44]
	ands r1, r3
	orrs r0, r1
	str r0, [r2, #0x44]
	ldr r3, [r2, #0x4c]
	movs r1, #1
	lsls r1, r1, #0xa
	adds r2, r3, #0
	movs r0, #0
	tst r2, r1
	beq _0201A6A6
	lsls r1, r1, #1
	orrs r0, r1
_0201A6A6:
	movs r1, #2
	lsls r1, r1, #0xa
	adds r2, r3, #0
	tst r2, r1
	beq _0201A6B4
	lsrs r1, r1, #1
	orrs r0, r1
_0201A6B4:
	ldr r2, _0201A710 @ =0x021D110C
	ldr r1, _0201A714 @ =0x0000F3FF
	ldr r3, [r2, #0x4c]
	ands r1, r3
	orrs r0, r1
	str r0, [r2, #0x4c]
	bx lr
_0201A6C2:
	movs r1, #2
	ldr r2, [r0, #0x48]
	lsls r1, r1, #8
	tst r1, r2
	beq _0201A6D2
	movs r1, #1
	orrs r1, r2
	str r1, [r0, #0x48]
_0201A6D2:
	ldr r1, _0201A710 @ =0x021D110C
	movs r0, #2
	ldr r2, [r1, #0x44]
	lsls r0, r0, #8
	tst r0, r2
	beq _0201A6E4
	movs r0, #1
	orrs r0, r2
	str r0, [r1, #0x44]
_0201A6E4:
	ldr r1, _0201A710 @ =0x021D110C
	movs r0, #2
	ldr r2, [r1, #0x4c]
	lsls r0, r0, #8
	tst r0, r2
	beq _0201A6F6
	movs r0, #1
	orrs r0, r2
	str r0, [r1, #0x4c]
_0201A6F6:
	ldr r1, _0201A710 @ =0x021D110C
	ldr r0, _0201A718 @ =0x0000FCFF
	ldr r2, [r1, #0x48]
	ands r2, r0
	str r2, [r1, #0x48]
	ldr r2, [r1, #0x44]
	ands r2, r0
	str r2, [r1, #0x44]
	ldr r2, [r1, #0x4c]
	ands r0, r2
	str r0, [r1, #0x4c]
_0201A70C:
	bx lr
	nop
_0201A710: .4byte 0x021D110C
_0201A714: .4byte 0x0000F3FF
_0201A718: .4byte 0x0000FCFF
	thumb_func_end FUN_0201A5E8

	thumb_func_start FUN_0201A71C
FUN_0201A71C: @ 0x0201A71C
	ldr r2, _0201A724 @ =0x021D110C
	str r0, [r2, #0x54]
	str r1, [r2, #0x58]
	bx lr
	.align 2, 0
_0201A724: .4byte 0x021D110C
	thumb_func_end FUN_0201A71C

	thumb_func_start FUN_0201A728
FUN_0201A728: @ 0x0201A728
	ldr r1, _0201A734 @ =0x021D116C
	ldrb r2, [r1, #0xc]
	orrs r0, r2
	strb r0, [r1, #0xc]
	bx lr
	nop
_0201A734: .4byte 0x021D116C
	thumb_func_end FUN_0201A728

	thumb_func_start FUN_0201A738
FUN_0201A738: @ 0x0201A738
	ldr r1, _0201A744 @ =0x021D116C
	mvns r0, r0
	ldrb r2, [r1, #0xc]
	ands r0, r2
	strb r0, [r1, #0xc]
	bx lr
	.align 2, 0
_0201A744: .4byte 0x021D116C
	thumb_func_end FUN_0201A738

	thumb_func_start FUN_0201A748
FUN_0201A748: @ 0x0201A748
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0201A76C @ =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	beq _0201A758
	bl FUN_0202551C
_0201A758:
	adds r0, r4, #0
	movs r1, #4
	bl FUN_0201AACC
	ldr r1, _0201A76C @ =0x021D110C
	str r0, [r1, #0x74]
	ldr r1, _0201A770 @ =0x2F93A1BC
	str r1, [r0]
	pop {r4, pc}
	nop
_0201A76C: .4byte 0x021D110C
_0201A770: .4byte 0x2F93A1BC
	thumb_func_end FUN_0201A748

	thumb_func_start FUN_0201A774
FUN_0201A774: @ 0x0201A774
	push {r3, lr}
	ldr r0, _0201A798 @ =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	bne _0201A782
	bl FUN_0202551C
_0201A782:
	ldr r0, _0201A798 @ =0x021D110C
	movs r2, #0
	ldr r1, [r0, #0x74]
	str r2, [r1]
	ldr r0, [r0, #0x74]
	bl FUN_0201AB0C
	ldr r0, _0201A798 @ =0x021D110C
	movs r1, #0
	str r1, [r0, #0x74]
	pop {r3, pc}
	.align 2, 0
_0201A798: .4byte 0x021D110C
	thumb_func_end FUN_0201A774

	thumb_func_start FUN_0201A79C
FUN_0201A79C: @ 0x0201A79C
	ldr r0, _0201A7B4 @ =0x021D110C
	ldr r0, [r0, #0x74]
	cmp r0, #0
	beq _0201A7B0
	ldr r1, [r0]
	ldr r0, _0201A7B8 @ =0x2F93A1BC
	cmp r1, r0
	bne _0201A7B0
	movs r0, #1
	bx lr
_0201A7B0:
	movs r0, #0
	bx lr
	.align 2, 0
_0201A7B4: .4byte 0x021D110C
_0201A7B8: .4byte 0x2F93A1BC
	thumb_func_end FUN_0201A79C

	thumb_func_start FUN_0201A7BC
FUN_0201A7BC: @ 0x0201A7BC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	str r0, [sp, #4]
	adds r0, #0x18
	adds r6, r2, #0
	str r0, [sp, #4]
	cmp r6, r0
	bhs _0201A7D4
	adds r6, r0, #0
_0201A7D4:
	cmp r3, #0
	beq _0201A7F2
	movs r0, #3
	tst r0, r3
	beq _0201A7E8
	movs r0, #3
_0201A7E0:
	adds r3, r3, #1
	adds r1, r3, #0
	tst r1, r0
	bne _0201A7E0
_0201A7E8:
	movs r0, #0
	adds r1, r3, #0
	movs r2, #4
	blx FUN_020D2CA0
_0201A7F2:
	ldr r1, [sp, #4]
	lsls r7, r6, #1
	lsls r2, r1, #1
	adds r1, r1, r2
	adds r1, r1, #1
	lsls r1, r1, #2
	adds r1, r7, r1
	movs r0, #0
	adds r1, r6, r1
	movs r2, #4
	blx FUN_020D2CA0
	ldr r1, _0201A8E4 @ =0x021D1584
	str r0, [r1]
	ldr r1, [sp, #4]
	adds r1, r1, #1
	lsls r1, r1, #2
	adds r1, r0, r1
	ldr r0, _0201A8E4 @ =0x021D1584
	str r1, [r0, #4]
	ldr r0, [sp, #4]
	lsls r0, r0, #2
	adds r2, r1, r0
	ldr r1, _0201A8E4 @ =0x021D1584
	str r2, [r1, #8]
	adds r1, r2, r0
	ldr r0, _0201A8E4 @ =0x021D1584
	str r1, [r0, #0xc]
	adds r1, r1, r7
	str r1, [r0, #0x10]
	strh r6, [r0, #0x14]
	strh r4, [r0, #0x16]
	ldr r0, [sp, #4]
	movs r7, #0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0201A8E4 @ =0x021D1584
	cmp r4, #0
	strh r1, [r0, #0x1a]
	strh r1, [r0, #0x18]
	bls _0201A894
	str r7, [sp]
_0201A846:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0201A850
	cmp r0, #2
	beq _0201A85C
_0201A850:
	ldr r1, [r5]
	movs r0, #0
	movs r2, #4
	blx FUN_020D2CA0
	b _0201A866
_0201A85C:
	ldr r1, [r5]
	movs r0, #2
	movs r2, #4
	blx FUN_020D2D0C
_0201A866:
	cmp r0, #0
	beq _0201A882
	ldr r1, [r5]
	movs r2, #0
	blx FUN_020B535C
	ldr r1, _0201A8E4 @ =0x021D1584
	ldr r2, [r1]
	ldr r1, [sp]
	str r0, [r2, r1]
	ldr r0, _0201A8E4 @ =0x021D1584
	ldr r0, [r0, #0x10]
	strb r7, [r0, r7]
	b _0201A886
_0201A882:
	bl FUN_0202551C
_0201A886:
	ldr r0, [sp]
	adds r7, r7, #1
	adds r0, r0, #4
	adds r5, #8
	str r0, [sp]
	cmp r7, r4
	blo _0201A846
_0201A894:
	ldr r0, [sp, #4]
	adds r1, r0, #1
	cmp r4, r1
	bhs _0201A8B4
	ldr r3, _0201A8E4 @ =0x021D1584
	lsls r2, r4, #2
	movs r0, #0
_0201A8A2:
	ldr r5, [r3]
	str r0, [r5, r2]
	ldrh r7, [r3, #0x1a]
	ldr r5, [r3, #0x10]
	adds r2, r2, #4
	strb r7, [r5, r4]
	adds r4, r4, #1
	cmp r4, r1
	blo _0201A8A2
_0201A8B4:
	cmp r4, r6
	bhs _0201A8C6
	ldr r0, _0201A8E4 @ =0x021D1584
_0201A8BA:
	ldrh r2, [r0, #0x1a]
	ldr r1, [r0, #0x10]
	strb r2, [r1, r4]
	adds r4, r4, #1
	cmp r4, r6
	blo _0201A8BA
_0201A8C6:
	movs r4, #0
	cmp r6, #0
	bls _0201A8DE
	ldr r0, _0201A8E4 @ =0x021D1584
	adds r3, r4, #0
	adds r2, r4, #0
_0201A8D2:
	ldr r1, [r0, #0xc]
	adds r4, r4, #1
	strh r2, [r1, r3]
	adds r3, r3, #2
	cmp r4, r6
	blo _0201A8D2
_0201A8DE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201A8E4: .4byte 0x021D1584
	thumb_func_end FUN_0201A7BC

	thumb_func_start FUN_0201A8E8
FUN_0201A8E8: @ 0x0201A8E8
	ldr r1, _0201A90C @ =0x021D1584
	ldrh r0, [r1, #0x16]
	ldrh r3, [r1, #0x18]
	cmp r0, r3
	bge _0201A906
	ldr r2, [r1]
	lsls r1, r0, #2
	adds r2, r2, r1
_0201A8F8:
	ldr r1, [r2]
	cmp r1, #0
	beq _0201A90A
	adds r0, r0, #1
	adds r2, r2, #4
	cmp r0, r3
	blt _0201A8F8
_0201A906:
	movs r0, #0
	mvns r0, r0
_0201A90A:
	bx lr
	.align 2, 0
_0201A90C: .4byte 0x021D1584
	thumb_func_end FUN_0201A8E8

	thumb_func_start FUN_0201A910
FUN_0201A910: @ 0x0201A910
	push {r3, lr}
	movs r3, #4
	bl FUN_0201A928
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0201A910

	thumb_func_start FUN_0201A91C
FUN_0201A91C: @ 0x0201A91C
	push {r3, lr}
	movs r3, #3
	mvns r3, r3
	bl FUN_0201A928
	pop {r3, pc}
	thumb_func_end FUN_0201A91C

	thumb_func_start FUN_0201A928
FUN_0201A928: @ 0x0201A928
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r5, r1, #0
	str r2, [sp]
	adds r7, r3, #0
	blx FUN_020D3A9C
	cmp r0, #0x12
	bne _0201A940
	bl FUN_0202551C
_0201A940:
	ldr r1, _0201A9C0 @ =0x021D1584
	ldr r0, [r1, #0x10]
	ldrh r3, [r1, #0x1a]
	ldrb r2, [r0, r5]
	cmp r3, r2
	bne _0201A9B6
	ldrb r0, [r0, r4]
	ldr r1, [r1]
	lsls r0, r0, #2
	ldr r6, [r1, r0]
	cmp r6, #0
	beq _0201A9B0
	ldr r1, [sp]
	adds r0, r6, #0
	adds r2, r7, #0
	blx FUN_020B53A0
	str r0, [sp, #4]
	cmp r0, #0
	beq _0201A9AA
	bl FUN_0201A8E8
	adds r7, r0, #0
	bmi _0201A9A4
	ldr r0, [sp, #4]
	ldr r1, [sp]
	movs r2, #0
	lsls r4, r7, #2
	blx FUN_020B535C
	ldr r1, _0201A9C0 @ =0x021D1584
	ldr r2, [r1]
	str r0, [r2, r4]
	ldr r0, [r1]
	ldr r0, [r0, r4]
	cmp r0, #0
	beq _0201A99E
	ldr r0, [r1, #4]
	str r6, [r0, r4]
	ldr r0, [sp, #4]
	ldr r2, [r1, #8]
	add sp, #8
	str r0, [r2, r4]
	ldr r0, [r1, #0x10]
	strb r7, [r0, r5]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0201A99E:
	bl FUN_0202551C
	b _0201A9BA
_0201A9A4:
	bl FUN_0202551C
	b _0201A9BA
_0201A9AA:
	bl FUN_0202551C
	b _0201A9BA
_0201A9B0:
	bl FUN_0202551C
	b _0201A9BA
_0201A9B6:
	bl FUN_0202551C
_0201A9BA:
	movs r0, #0
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201A9C0: .4byte 0x021D1584
	thumb_func_end FUN_0201A928

	thumb_func_start FUN_0201A9C4
FUN_0201A9C4: @ 0x0201A9C4
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020D3A9C
	cmp r0, #0x12
	bne _0201A9D4
	bl FUN_0202551C
_0201A9D4:
	ldr r0, _0201AA34 @ =0x021D1584
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r4]
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	cmp r0, #0
	beq _0201AA32
	blx FUN_020B5394
	ldr r1, _0201AA34 @ =0x021D1584
	ldr r0, [r1, #0x10]
	ldrb r0, [r0, r4]
	lsls r2, r0, #2
	ldr r0, [r1, #4]
	ldr r1, [r1, #8]
	ldr r0, [r0, r2]
	ldr r1, [r1, r2]
	cmp r0, #0
	beq _0201AA06
	cmp r1, #0
	beq _0201AA06
	blx FUN_020B5530
	b _0201AA0A
_0201AA06:
	bl FUN_0202551C
_0201AA0A:
	ldr r1, _0201AA34 @ =0x021D1584
	movs r0, #0
	ldr r2, [r1, #0x10]
	ldr r3, [r1]
	ldrb r2, [r2, r4]
	lsls r2, r2, #2
	str r0, [r3, r2]
	ldr r2, [r1, #0x10]
	ldr r3, [r1, #4]
	ldrb r2, [r2, r4]
	lsls r2, r2, #2
	str r0, [r3, r2]
	ldr r2, [r1, #0x10]
	ldr r3, [r1, #8]
	ldrb r2, [r2, r4]
	lsls r2, r2, #2
	str r0, [r3, r2]
	ldrh r2, [r1, #0x1a]
	ldr r0, [r1, #0x10]
	strb r2, [r0, r4]
_0201AA32:
	pop {r4, pc}
	.align 2, 0
_0201AA34: .4byte 0x021D1584
	thumb_func_end FUN_0201A9C4

	thumb_func_start FUN_0201AA38
FUN_0201AA38: @ 0x0201AA38
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	adds r6, r3, #0
	cmp r5, #0
	bne _0201AA4A
	bl FUN_0202551C
_0201AA4A:
	blx FUN_020D3A38
	adds r4, #0x10
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	blx FUN_020B53A0
	adds r4, r0, #0
	ldr r0, [sp]
	blx FUN_020D3A4C
	cmp r4, #0
	beq _0201AA78
	ldr r1, [r4, #0xc]
	movs r0, #0xff
	bics r1, r0
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	str r0, [r4, #0xc]
	adds r4, #0x10
_0201AA78:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201AA38

	thumb_func_start FUN_0201AA7C
FUN_0201AA7C: @ 0x0201AA7C
	push {r3, lr}
	bl FUN_02037D78
	cmp r0, #0
	beq _0201AA8A
	bl FUN_02096338
_0201AA8A:
	pop {r3, pc}
	thumb_func_end FUN_0201AA7C

	thumb_func_start FUN_0201AA8C
FUN_0201AA8C: @ 0x0201AA8C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0201AAC8 @ =0x021D1584
	movs r4, #0
	ldrh r2, [r0, #0x14]
	cmp r5, r2
	bhs _0201AAAE
	ldr r2, [r0]
	ldr r0, [r0, #0x10]
	adds r3, r5, #0
	ldrb r0, [r0, r5]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	movs r2, #4
	bl FUN_0201AA38
	adds r4, r0, #0
_0201AAAE:
	cmp r4, #0
	beq _0201AAC0
	ldr r0, _0201AAC8 @ =0x021D1584
	lsls r1, r5, #1
	ldr r2, [r0, #0xc]
	ldrh r0, [r2, r1]
	adds r0, r0, #1
	strh r0, [r2, r1]
	b _0201AAC4
_0201AAC0:
	bl FUN_0201AA7C
_0201AAC4:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201AAC8: .4byte 0x021D1584
	thumb_func_end FUN_0201AA8C

	thumb_func_start FUN_0201AACC
FUN_0201AACC: @ 0x0201AACC
	push {r3, r4, r5, lr}
	ldr r2, _0201AB08 @ =0x021D1584
	adds r5, r0, #0
	ldrh r0, [r2, #0x14]
	movs r4, #0
	cmp r5, r0
	bhs _0201AAEE
	ldr r0, [r2]
	ldr r2, [r2, #0x10]
	adds r3, r5, #0
	ldrb r2, [r2, r5]
	lsls r2, r2, #2
	ldr r0, [r0, r2]
	subs r2, r4, #4
	bl FUN_0201AA38
	adds r4, r0, #0
_0201AAEE:
	cmp r4, #0
	beq _0201AB00
	ldr r0, _0201AB08 @ =0x021D1584
	lsls r1, r5, #1
	ldr r2, [r0, #0xc]
	ldrh r0, [r2, r1]
	adds r0, r0, #1
	strh r0, [r2, r1]
	b _0201AB04
_0201AB00:
	bl FUN_0201AA7C
_0201AB04:
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201AB08: .4byte 0x021D1584
	thumb_func_end FUN_0201AACC

	thumb_func_start FUN_0201AB0C
FUN_0201AB0C: @ 0x0201AB0C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	subs r0, r6, #4
	ldr r0, [r0]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _0201AB7C @ =0x021D1584
	ldrh r1, [r0, #0x14]
	cmp r4, r1
	bhs _0201AB74
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r4]
	lsls r0, r0, #2
	ldr r7, [r1, r0]
	cmp r7, #0
	bne _0201AB32
	bl FUN_0202551C
_0201AB32:
	ldr r0, _0201AB7C @ =0x021D1584
	lsls r5, r4, #1
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r5]
	cmp r0, #0
	bne _0201AB44
	adds r0, r4, #0
	bl FUN_0201AC84
_0201AB44:
	ldr r0, _0201AB7C @ =0x021D1584
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r5]
	cmp r0, #0
	bne _0201AB52
	bl FUN_0202551C
_0201AB52:
	ldr r0, _0201AB7C @ =0x021D1584
	ldr r1, [r0, #0xc]
	ldrh r0, [r1, r5]
	subs r0, r0, #1
	strh r0, [r1, r5]
	blx FUN_020D3A38
	subs r6, #0x10
	adds r4, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	blx FUN_020B5530
	adds r0, r4, #0
	blx FUN_020D3A4C
	pop {r3, r4, r5, r6, r7, pc}
_0201AB74:
	bl FUN_0202551C
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201AB7C: .4byte 0x021D1584
	thumb_func_end FUN_0201AB0C

	thumb_func_start FUN_0201AB80
FUN_0201AB80: @ 0x0201AB80
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	blx FUN_020D3A9C
	cmp r0, #0x12
	bne _0201AB92
	bl FUN_0202551C
_0201AB92:
	ldr r0, _0201ABE8 @ =0x021D1584
	ldrh r1, [r0, #0x14]
	cmp r5, r1
	bhs _0201ABE2
	ldr r1, [r0]
	ldr r0, [r0, #0x10]
	ldrb r0, [r0, r5]
	lsls r0, r0, #2
	ldr r6, [r1, r0]
	cmp r6, #0
	bne _0201ABAC
	bl FUN_0202551C
_0201ABAC:
	subs r0, r4, #4
	ldr r0, [r0]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	beq _0201ABBC
	bl FUN_0202551C
_0201ABBC:
	subs r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	blx FUN_020B5530
	ldr r0, _0201ABE8 @ =0x021D1584
	lsls r4, r5, #1
	ldr r0, [r0, #0xc]
	ldrh r0, [r0, r4]
	cmp r0, #0
	bne _0201ABD6
	bl FUN_0202551C
_0201ABD6:
	ldr r0, _0201ABE8 @ =0x021D1584
	ldr r1, [r0, #0xc]
	ldrh r0, [r1, r4]
	subs r0, r0, #1
	strh r0, [r1, r4]
	pop {r4, r5, r6, pc}
_0201ABE2:
	bl FUN_0202551C
	pop {r4, r5, r6, pc}
	.align 2, 0
_0201ABE8: .4byte 0x021D1584
	thumb_func_end FUN_0201AB80

	thumb_func_start FUN_0201ABEC
FUN_0201ABEC: @ 0x0201ABEC
	push {r3, lr}
	ldr r1, _0201AC10 @ =0x021D1584
	ldrh r2, [r1, #0x14]
	cmp r0, r2
	bhs _0201AC06
	ldr r2, [r1]
	ldr r1, [r1, #0x10]
	ldrb r0, [r1, r0]
	lsls r0, r0, #2
	ldr r0, [r2, r0]
	blx FUN_020B556C
	pop {r3, pc}
_0201AC06:
	bl FUN_0202551C
	movs r0, #0
	pop {r3, pc}
	nop
_0201AC10: .4byte 0x021D1584
	thumb_func_end FUN_0201ABEC

	thumb_func_start FUN_0201AC14
FUN_0201AC14: @ 0x0201AC14
	push {r4, lr}
	ldr r4, _0201AC34 @ =0x021D1584
	ldrh r3, [r4, #0x14]
	cmp r1, r3
	bhs _0201AC2E
	ldr r3, [r4]
	ldr r4, [r4, #0x10]
	ldrb r1, [r4, r1]
	lsls r1, r1, #2
	ldr r1, [r3, r1]
	blx FUN_020B59A4
	pop {r4, pc}
_0201AC2E:
	bl FUN_0202551C
	pop {r4, pc}
	.align 2, 0
_0201AC34: .4byte 0x021D1584
	thumb_func_end FUN_0201AC14

	thumb_func_start FUN_0201AC38
FUN_0201AC38: @ 0x0201AC38
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	blx FUN_020D3A9C
	cmp r0, #0x12
	bne _0201AC4A
	bl FUN_0202551C
_0201AC4A:
	adds r0, r5, #0
	subs r0, #0x10
	blx FUN_020B55A4
	adds r4, #0x10
	cmp r0, r4
	blo _0201AC78
	subs r2, r5, #4
	ldr r0, _0201AC80 @ =0x021D1584
	ldr r2, [r2]
	ldr r1, [r0]
	lsls r2, r2, #0x18
	ldr r0, [r0, #0x10]
	lsrs r2, r2, #0x18
	ldrb r0, [r0, r2]
	subs r5, #0x10
	adds r2, r4, #0
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	adds r1, r5, #0
	blx FUN_020B53D0
	pop {r3, r4, r5, pc}
_0201AC78:
	bl FUN_0202551C
	pop {r3, r4, r5, pc}
	nop
_0201AC80: .4byte 0x021D1584
	thumb_func_end FUN_0201AC38

	thumb_func_start FUN_0201AC84
FUN_0201AC84: @ 0x0201AC84
	movs r0, #1
	bx lr
	thumb_func_end FUN_0201AC84

	thumb_func_start FUN_0201AC88
FUN_0201AC88: @ 0x0201AC88
	push {r3, r4, r5, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	adds r5, r0, #0
	bl FUN_0201AA8C
	movs r2, #0x5a
	movs r1, #0
	lsls r2, r2, #2
	adds r4, r0, #0
	blx FUN_020E5B44
	str r5, [r4]
	movs r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201AC88

	thumb_func_start FUN_0201ACAC
FUN_0201ACAC: @ 0x0201ACAC
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_0201ACAC

	thumb_func_start FUN_0201ACB0
FUN_0201ACB0: @ 0x0201ACB0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, [r4, #0xc]
	blx FUN_020CD9FC
	ldr r0, [r4, #8]
	blx FUN_020CDA64
	movs r2, #1
	lsls r2, r2, #0x1a
	ldr r1, [r2]
	ldr r0, _0201ACE4 @ =0xC7FFFFFF
	ands r1, r0
	str r1, [r2]
	ldr r1, [r2]
	asrs r0, r0, #3
	ands r0, r1
	str r0, [r2]
	bl FUN_02022C54
	bl FUN_02022CBC
	pop {r4, pc}
	nop
_0201ACE4: .4byte 0xC7FFFFFF
	thumb_func_end FUN_0201ACB0

	thumb_func_start FUN_0201ACE8
FUN_0201ACE8: @ 0x0201ACE8
	push {r3, lr}
	adds r2, r0, #0
	cmp r1, #0
	bne _0201AD00
	ldr r0, [r2]
	ldr r1, [r2, #4]
	ldr r2, [r2, #0xc]
	blx FUN_020CD9FC
	bl FUN_02022C54
	pop {r3, pc}
_0201AD00:
	ldr r0, [r2, #8]
	blx FUN_020CDA64
	bl FUN_02022CBC
	pop {r3, pc}
	thumb_func_end FUN_0201ACE8

	thumb_func_start FUN_0201AD0C
FUN_0201AD0C: @ 0x0201AD0C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	str r1, [sp, #4]
	str r3, [sp, #8]
	adds r4, r2, #0
	str r0, [sp]
	ldrb r0, [r4, #0x10]
	ldr r1, [sp, #8]
	ldr r6, [sp, #0x30]
	bl FUN_0201BA88
	adds r5, r0, #0
	ldr r0, [sp, #4]
	cmp r0, #7
	bls _0201AD2C
	b _0201B14C
_0201AD2C:
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201AD38: @ jump table
	.2byte _0201AD48 - _0201AD38 - 2 @ case 0
	.2byte _0201ADA0 - _0201AD38 - 2 @ case 1
	.2byte _0201ADF8 - _0201AD38 - 2 @ case 2
	.2byte _0201AE9A - _0201AD38 - 2 @ case 3
	.2byte _0201AF3C - _0201AD38 - 2 @ case 4
	.2byte _0201AF94 - _0201AD38 - 2 @ case 5
	.2byte _0201AFEC - _0201AD38 - 2 @ case 6
	.2byte _0201B0AC - _0201AD38 - 2 @ case 7
_0201AD48:
	movs r0, #1
	adds r1, r6, #0
	bl FUN_02022C60
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsls r6, r3, #0xd
	lsls r0, r0, #7
	lsls r3, r2, #2
	str r0, [sp, #0xc]
	ldr r2, _0201B090 @ =0x04000008
	lsls r7, r1, #8
	ldrh r1, [r2]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r1, r0
	ldr r0, [sp, #0xc]
	orrs r0, r1
	orrs r0, r7
	orrs r0, r3
	orrs r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	movs r0, #3
	bics r1, r0
	ldrb r0, [r4, #0x15]
	orrs r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AD96
	ldrh r1, [r2]
	movs r0, #0x40
	orrs r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AD96:
	ldrh r1, [r2]
	movs r0, #0x40
	bics r1, r0
	strh r1, [r2]
	b _0201B14C
_0201ADA0:
	movs r0, #2
	adds r1, r6, #0
	bl FUN_02022C60
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsls r6, r3, #0xd
	lsls r0, r0, #7
	lsls r3, r2, #2
	str r0, [sp, #0x10]
	ldr r2, _0201B094 @ =0x0400000A
	lsls r7, r1, #8
	ldrh r1, [r2]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r1, r0
	ldr r0, [sp, #0x10]
	orrs r0, r1
	orrs r0, r7
	orrs r0, r3
	orrs r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	movs r0, #3
	bics r1, r0
	ldrb r0, [r4, #0x15]
	orrs r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201ADEE
	ldrh r1, [r2]
	movs r0, #0x40
	orrs r0, r1
	strh r0, [r2]
	b _0201B14C
_0201ADEE:
	ldrh r1, [r2]
	movs r0, #0x40
	bics r1, r0
	strh r1, [r2]
	b _0201B14C
_0201ADF8:
	movs r0, #4
	adds r1, r6, #0
	bl FUN_02022C60
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201AE0E
	cmp r0, #1
	beq _0201AE30
	cmp r0, #2
	beq _0201AE52
_0201AE0E:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B098 @ =0x0400000C
	ldrb r2, [r4, #0x13]
	lsls r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsls r6, r2, #2
	ldrh r1, [r7]
	lsls r2, r0, #7
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201AE72
_0201AE30:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsls r3, r2, #2
	ldr r7, _0201B098 @ =0x0400000C
	lsls r2, r1, #8
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201AE72
_0201AE52:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B098 @ =0x0400000C
	ldrb r0, [r4, #0x16]
	lsls r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	lsls r2, r2, #2
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
_0201AE72:
	ldr r0, _0201B098 @ =0x0400000C
	movs r1, #3
	ldrh r2, [r0]
	bics r2, r1
	ldrb r1, [r4, #0x15]
	orrs r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201AE90
	ldrh r2, [r0]
	movs r1, #0x40
	orrs r1, r2
	strh r1, [r0]
	b _0201B14C
_0201AE90:
	ldrh r2, [r0]
	movs r1, #0x40
	bics r2, r1
	strh r2, [r0]
	b _0201B14C
_0201AE9A:
	movs r0, #8
	adds r1, r6, #0
	bl FUN_02022C60
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201AEB0
	cmp r0, #1
	beq _0201AED2
	cmp r0, #2
	beq _0201AEF4
_0201AEB0:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B09C @ =0x0400000E
	ldrb r2, [r4, #0x13]
	lsls r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsls r6, r2, #2
	ldrh r1, [r7]
	lsls r2, r0, #7
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201AF14
_0201AED2:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsls r3, r2, #2
	ldr r7, _0201B09C @ =0x0400000E
	lsls r2, r1, #8
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201AF14
_0201AEF4:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B09C @ =0x0400000E
	ldrb r0, [r4, #0x16]
	lsls r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	lsls r2, r2, #2
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
_0201AF14:
	ldr r0, _0201B09C @ =0x0400000E
	movs r1, #3
	ldrh r2, [r0]
	bics r2, r1
	ldrb r1, [r4, #0x15]
	orrs r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201AF32
	ldrh r2, [r0]
	movs r1, #0x40
	orrs r1, r2
	strh r1, [r0]
	b _0201B14C
_0201AF32:
	ldrh r2, [r0]
	movs r1, #0x40
	bics r2, r1
	strh r2, [r0]
	b _0201B14C
_0201AF3C:
	movs r0, #1
	adds r1, r6, #0
	bl FUN_02022CC8
	ldrb r3, [r4, #0x14]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	ldrb r2, [r4, #0x13]
	lsls r6, r3, #0xd
	lsls r0, r0, #7
	lsls r3, r2, #2
	str r0, [sp, #0x14]
	ldr r2, _0201B0A0 @ =0x04001008
	lsls r7, r1, #8
	ldrh r1, [r2]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r1, r0
	ldr r0, [sp, #0x14]
	orrs r0, r1
	orrs r0, r7
	orrs r0, r3
	orrs r0, r6
	strh r0, [r2]
	ldrh r1, [r2]
	movs r0, #3
	bics r1, r0
	ldrb r0, [r4, #0x15]
	orrs r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AF8A
	ldrh r1, [r2]
	movs r0, #0x40
	orrs r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AF8A:
	ldrh r1, [r2]
	movs r0, #0x40
	bics r1, r0
	strh r1, [r2]
	b _0201B14C
_0201AF94:
	movs r0, #2
	adds r1, r6, #0
	bl FUN_02022CC8
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x11]
	lsls r6, r2, #2
	ldrb r3, [r4, #0x14]
	lsls r0, r0, #7
	mov ip, r0
	ldr r2, _0201B0A4 @ =0x0400100A
	lsls r7, r1, #8
	ldrh r1, [r2]
	movs r0, #0x43
	lsls r3, r3, #0xd
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	mov r1, ip
	orrs r0, r1
	orrs r0, r7
	orrs r0, r6
	orrs r0, r3
	strh r0, [r2]
	ldrh r1, [r2]
	movs r0, #3
	bics r1, r0
	ldrb r0, [r4, #0x15]
	orrs r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x18]
	cmp r0, #0
	beq _0201AFE2
	ldrh r1, [r2]
	movs r0, #0x40
	orrs r0, r1
	strh r0, [r2]
	b _0201B14C
_0201AFE2:
	ldrh r1, [r2]
	movs r0, #0x40
	bics r1, r0
	strh r1, [r2]
	b _0201B14C
_0201AFEC:
	movs r0, #4
	adds r1, r6, #0
	bl FUN_02022CC8
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201B002
	cmp r0, #1
	beq _0201B024
	cmp r0, #2
	beq _0201B046
_0201B002:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B0A8 @ =0x0400100C
	ldrb r2, [r4, #0x13]
	lsls r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsls r6, r2, #2
	ldrh r1, [r7]
	lsls r2, r0, #7
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201B066
_0201B024:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsls r3, r2, #2
	ldr r7, _0201B0A8 @ =0x0400100C
	lsls r2, r1, #8
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201B066
_0201B046:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B0A8 @ =0x0400100C
	ldrb r0, [r4, #0x16]
	lsls r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	lsls r2, r2, #2
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
_0201B066:
	ldr r0, _0201B0A8 @ =0x0400100C
	movs r1, #3
	ldrh r2, [r0]
	bics r2, r1
	ldrb r1, [r4, #0x15]
	orrs r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201B084
	ldrh r2, [r0]
	movs r1, #0x40
	orrs r1, r2
	strh r1, [r0]
	b _0201B14C
_0201B084:
	ldrh r2, [r0]
	movs r1, #0x40
	bics r2, r1
	strh r2, [r0]
	b _0201B14C
	nop
_0201B090: .4byte 0x04000008
_0201B094: .4byte 0x0400000A
_0201B098: .4byte 0x0400000C
_0201B09C: .4byte 0x0400000E
_0201B0A0: .4byte 0x04001008
_0201B0A4: .4byte 0x0400100A
_0201B0A8: .4byte 0x0400100C
_0201B0AC:
	movs r0, #8
	adds r1, r6, #0
	bl FUN_02022CC8
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0201B0C2
	cmp r0, #1
	beq _0201B0E4
	cmp r0, #2
	beq _0201B106
_0201B0C2:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B1E0 @ =0x0400100E
	ldrb r2, [r4, #0x13]
	lsls r3, r1, #8
	ldrb r0, [r4, #0x11]
	lsls r6, r2, #2
	ldrh r1, [r7]
	lsls r2, r0, #7
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201B126
_0201B0E4:
	ldrb r2, [r4, #0x13]
	ldrb r1, [r4, #0x12]
	ldrb r0, [r4, #0x16]
	lsls r3, r2, #2
	ldr r7, _0201B1E0 @ =0x0400100E
	lsls r2, r1, #8
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
	b _0201B126
_0201B106:
	ldrb r1, [r4, #0x12]
	ldr r7, _0201B1E0 @ =0x0400100E
	ldrb r0, [r4, #0x16]
	lsls r3, r1, #8
	ldrb r2, [r4, #0x13]
	lsls r6, r0, #0xd
	ldrh r1, [r7]
	movs r0, #0x43
	lsls r2, r2, #2
	ands r0, r1
	lsls r1, r5, #0xe
	orrs r0, r1
	orrs r0, r2
	orrs r0, r3
	orrs r0, r6
	strh r0, [r7]
_0201B126:
	ldr r0, _0201B1E0 @ =0x0400100E
	movs r1, #3
	ldrh r2, [r0]
	bics r2, r1
	ldrb r1, [r4, #0x15]
	orrs r1, r2
	strh r1, [r0]
	ldr r1, [r4, #0x18]
	cmp r1, #0
	beq _0201B144
	ldrh r2, [r0]
	movs r1, #0x40
	orrs r1, r2
	strh r1, [r0]
	b _0201B14C
_0201B144:
	ldrh r2, [r0]
	movs r1, #0x40
	bics r2, r1
	strh r2, [r0]
_0201B14C:
	ldr r0, [sp, #4]
	movs r1, #0x2c
	adds r5, r0, #0
	ldr r0, [sp]
	muls r5, r1, r5
	adds r2, r0, r5
	movs r3, #0
	movs r0, #1
	strh r3, [r2, #0x20]
	lsls r0, r0, #0xc
	str r0, [r2, #0x24]
	str r0, [r2, #0x28]
	str r3, [r2, #0x2c]
	str r3, [r2, #0x30]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0201B194
	ldr r0, [sp]
	ldr r6, [sp]
	ldr r0, [r0]
	adds r6, #8
	bl FUN_0201AA8C
	str r0, [r6, r5]
	ldr r1, [r6, r5]
	ldr r2, [r4, #8]
	movs r0, #0
	blx FUN_020D4790
	ldr r0, [sp]
	ldr r2, [r4, #8]
	adds r1, r0, r5
	str r2, [r1, #0xc]
	ldr r0, [r4, #0xc]
	str r0, [r1, #0x10]
	b _0201B19A
_0201B194:
	str r3, [r2, #8]
	str r3, [r2, #0xc]
	str r3, [r2, #0x10]
_0201B19A:
	ldr r0, [sp]
	ldrb r1, [r4, #0x10]
	adds r0, r0, r5
	strb r1, [r0, #0x1d]
	ldr r1, [sp, #8]
	strb r1, [r0, #0x1c]
	ldrb r1, [r4, #0x11]
	strb r1, [r0, #0x1e]
	ldr r1, [sp, #8]
	cmp r1, #0
	bne _0201B1BC
	ldrb r1, [r4, #0x11]
	cmp r1, #0
	bne _0201B1BC
	movs r1, #0x20
	strb r1, [r0, #0x1f]
	b _0201B1C4
_0201B1BC:
	ldr r0, [sp]
	movs r1, #0x40
	adds r0, r0, r5
	strb r1, [r0, #0x1f]
_0201B1C4:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r4]
	movs r2, #0
	bl FUN_0201BC8C
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r3, [r4, #4]
	movs r2, #3
	bl FUN_0201BC8C
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201B1E0: .4byte 0x0400100E
	thumb_func_end FUN_0201AD0C

	thumb_func_start FUN_0201B1E4
FUN_0201B1E4: @ 0x0201B1E4
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #1
	str r4, [sp]
	bl FUN_0201AD0C
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_0201B1E4

	thumb_func_start FUN_0201B1F4
FUN_0201B1F4: @ 0x0201B1F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r4, r2, #0
	adds r6, r0, #0
	adds r7, r1, #0
	adds r5, r3, #0
	cmp r4, #0
	bne _0201B230
	adds r3, r6, #0
	movs r1, #0x2c
	adds r2, r7, #0
	muls r2, r1, r2
	adds r3, #0x1e
	adds r1, r6, r2
	strb r5, [r3, r2]
	mov ip, r1
	ldrb r1, [r1, #0x1c]
	cmp r1, #0
	bne _0201B228
	ldrb r1, [r3, r2]
	cmp r1, #0
	bne _0201B228
	movs r1, #0x20
	mov r2, ip
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B228:
	movs r1, #0x40
	adds r2, r6, r2
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B230:
	cmp r4, #3
	bne _0201B262
	movs r0, #0x2c
	muls r0, r7, r0
	str r0, [sp]
	adds r0, r6, r0
	strb r5, [r0, #0x1c]
	ldrb r0, [r0, #0x1d]
	adds r1, r5, #0
	bl FUN_0201BA88
	cmp r5, #0
	bne _0201B25A
	ldr r1, [sp]
	adds r2, r6, r1
	ldrb r1, [r2, #0x1e]
	cmp r1, #0
	bne _0201B25A
	movs r1, #0x20
	strb r1, [r2, #0x1f]
	b _0201B262
_0201B25A:
	ldr r2, [sp]
	movs r1, #0x40
	adds r2, r6, r2
	strb r1, [r2, #0x1f]
_0201B262:
	cmp r7, #7
	bls _0201B26A
	bl FUN_0201BA78
_0201B26A:
	adds r1, r7, r7
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201B276: @ jump table
	.2byte _0201B286 - _0201B276 - 2 @ case 0
	.2byte _0201B306 - _0201B276 - 2 @ case 1
	.2byte _0201B386 - _0201B276 - 2 @ case 2
	.2byte _0201B4F6 - _0201B276 - 2 @ case 3
	.2byte _0201B680 - _0201B276 - 2 @ case 4
	.2byte _0201B700 - _0201B276 - 2 @ case 5
	.2byte _0201B780 - _0201B276 - 2 @ case 6
	.2byte _0201B90C - _0201B276 - 2 @ case 7
_0201B286:
	ldr r1, _0201B59C @ =0x04000008
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0x1e]
	bne _0201B2A2
	ldrh r2, [r1, #0x1e]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r2, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r2
	strh r0, [r1, #0x1e]
	b _0201B2C8
_0201B2A2:
	cmp r4, #2
	bne _0201B2B6
	ldrh r2, [r1, #0x1e]
	movs r0, #0x3c
	bics r2, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r2
	strh r0, [r1, #0x1e]
	b _0201B2C8
_0201B2B6:
	cmp r4, #3
	bne _0201B2C8
	ldrh r3, [r1, #0x1e]
	ldr r2, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r2, r3
	lsrs r0, r0, #0x10
	orrs r0, r2
	strh r0, [r1, #0x1e]
_0201B2C8:
	add r0, sp, #4
	ldrh r3, [r0, #0x1e]
	add sp, #0x24
	lsls r0, r3, #0x12
	lsrs r4, r0, #0x1f
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	lsls r0, r3, #0x13
	lsrs r1, r0, #0x1b
	movs r0, #0x2c
	muls r0, r7, r0
	adds r0, r6, r0
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x1e
	lsls r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsls r2, r1, #8
	movs r6, #0x43
	lsls r1, r0, #7
	ldr r0, _0201B59C @ =0x04000008
	lsls r5, r5, #0xe
	ldrh r7, [r0]
	lsls r4, r4, #0xd
	ands r6, r7
	orrs r5, r6
	orrs r1, r5
	orrs r1, r2
	orrs r1, r3
	orrs r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B306:
	ldr r1, _0201B5A8 @ =0x0400000A
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0x1c]
	bne _0201B322
	ldrh r2, [r1, #0x1c]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r2, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r2
	strh r0, [r1, #0x1c]
	b _0201B348
_0201B322:
	cmp r4, #2
	bne _0201B336
	ldrh r2, [r1, #0x1c]
	movs r0, #0x3c
	bics r2, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r2
	strh r0, [r1, #0x1c]
	b _0201B348
_0201B336:
	cmp r4, #3
	bne _0201B348
	ldrh r3, [r1, #0x1c]
	ldr r2, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r2, r3
	lsrs r0, r0, #0x10
	orrs r0, r2
	strh r0, [r1, #0x1c]
_0201B348:
	add r0, sp, #4
	ldrh r3, [r0, #0x1c]
	add sp, #0x24
	lsls r0, r3, #0x12
	lsrs r4, r0, #0x1f
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	lsls r0, r3, #0x13
	lsrs r1, r0, #0x1b
	movs r0, #0x2c
	muls r0, r7, r0
	adds r0, r6, r0
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x1e
	lsls r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsls r2, r1, #8
	movs r6, #0x43
	lsls r1, r0, #7
	ldr r0, _0201B5A8 @ =0x0400000A
	lsls r5, r5, #0xe
	ldrh r7, [r0]
	lsls r4, r4, #0xd
	ands r6, r7
	orrs r5, r6
	orrs r1, r5
	orrs r1, r2
	orrs r1, r3
	orrs r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B386:
	movs r1, #0x2c
	muls r1, r7, r1
	adds r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B39A
	cmp r2, #1
	beq _0201B40E
	cmp r2, #2
	beq _0201B482
_0201B39A:
	ldr r2, _0201B5AC @ =0x0400000C
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0x1a]
	bne _0201B3B6
	ldrh r3, [r2, #0x1a]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r3, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r3
	strh r0, [r2, #0x1a]
	b _0201B3DC
_0201B3B6:
	cmp r4, #2
	bne _0201B3CA
	ldrh r3, [r2, #0x1a]
	movs r0, #0x3c
	bics r3, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r3
	strh r0, [r2, #0x1a]
	b _0201B3DC
_0201B3CA:
	cmp r4, #3
	bne _0201B3DC
	ldrh r4, [r2, #0x1a]
	ldr r3, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r3, r4
	lsrs r0, r0, #0x10
	orrs r0, r3
	strh r0, [r2, #0x1a]
_0201B3DC:
	add r0, sp, #4
	ldrh r3, [r0, #0x1a]
	adds r1, r6, r1
	ldr r6, _0201B5AC @ =0x0400000C
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsls r0, r3, #0x13
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1b
	lsls r1, r0, #8
	lsls r0, r4, #7
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #2
	orrs r0, r1
	orrs r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B40E:
	ldr r1, _0201B5AC @ =0x0400000C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x18]
	bne _0201B42A
	ldrh r1, [r2, #0x18]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #0x18]
	b _0201B450
_0201B42A:
	cmp r4, #2
	bne _0201B43E
	ldrh r1, [r2, #0x18]
	movs r0, #0x3c
	bics r1, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #0x18]
	b _0201B450
_0201B43E:
	cmp r4, #3
	bne _0201B450
	ldrh r3, [r2, #0x18]
	ldr r1, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #0x18]
_0201B450:
	add r0, sp, #4
	ldrh r3, [r0, #0x18]
	ldr r6, _0201B5AC @ =0x0400000C
	add sp, #0x24
	lsls r1, r3, #0x13
	lsls r0, r3, #0x1a
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1c
	lsls r1, r0, #2
	lsls r0, r4, #8
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B482:
	ldr r1, _0201B5AC @ =0x0400000C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x16]
	bne _0201B49E
	ldrh r1, [r2, #0x16]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #0x16]
	b _0201B4C4
_0201B49E:
	cmp r4, #2
	bne _0201B4B2
	ldrh r1, [r2, #0x16]
	movs r0, #0x38
	bics r1, r0
	lsls r0, r5, #0x1d
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #0x16]
	b _0201B4C4
_0201B4B2:
	cmp r4, #3
	bne _0201B4C4
	ldrh r3, [r2, #0x16]
	ldr r1, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #0x16]
_0201B4C4:
	add r0, sp, #4
	ldrh r3, [r0, #0x16]
	ldr r6, _0201B5AC @ =0x0400000C
	add sp, #0x24
	lsls r1, r3, #0x13
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r0, r3, #0x1a
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsls r1, r4, #8
	lsrs r0, r0, #0x1d
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	lsls r0, r0, #2
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B4F6:
	movs r1, #0x2c
	muls r1, r7, r1
	adds r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B50C
	cmp r2, #1
	beq _0201B580
	cmp r2, #2
	bne _0201B50C
	b _0201B60C
_0201B50C:
	ldr r2, _0201B5B0 @ =0x0400000E
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0x14]
	bne _0201B528
	ldrh r3, [r2, #0x14]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r3, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r3
	strh r0, [r2, #0x14]
	b _0201B54E
_0201B528:
	cmp r4, #2
	bne _0201B53C
	ldrh r3, [r2, #0x14]
	movs r0, #0x3c
	bics r3, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r3
	strh r0, [r2, #0x14]
	b _0201B54E
_0201B53C:
	cmp r4, #3
	bne _0201B54E
	ldrh r4, [r2, #0x14]
	ldr r3, _0201B5A4 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r3, r4
	lsrs r0, r0, #0x10
	orrs r0, r3
	strh r0, [r2, #0x14]
_0201B54E:
	add r0, sp, #4
	ldrh r3, [r0, #0x14]
	adds r1, r6, r1
	ldr r6, _0201B5B0 @ =0x0400000E
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsls r0, r3, #0x13
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1b
	lsls r1, r0, #8
	lsls r0, r4, #7
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #2
	orrs r0, r1
	orrs r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B580:
	ldr r1, _0201B5B0 @ =0x0400000E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x12]
	bne _0201B5B4
	ldrh r1, [r2, #0x12]
	ldr r0, _0201B5A0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #0x12]
	b _0201B5DA
	.align 2, 0
_0201B59C: .4byte 0x04000008
_0201B5A0: .4byte 0xFFFFE0FF
_0201B5A4: .4byte 0xFFFF3FFF
_0201B5A8: .4byte 0x0400000A
_0201B5AC: .4byte 0x0400000C
_0201B5B0: .4byte 0x0400000E
_0201B5B4:
	cmp r4, #2
	bne _0201B5C8
	ldrh r1, [r2, #0x12]
	movs r0, #0x3c
	bics r1, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #0x12]
	b _0201B5DA
_0201B5C8:
	cmp r4, #3
	bne _0201B5DA
	ldrh r3, [r2, #0x12]
	ldr r1, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #0x12]
_0201B5DA:
	add r0, sp, #4
	ldrh r3, [r0, #0x12]
	ldr r6, _0201B8CC @ =0x0400000E
	add sp, #0x24
	lsls r1, r3, #0x13
	lsls r0, r3, #0x1a
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1c
	lsls r1, r0, #2
	lsls r0, r4, #8
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B60C:
	ldr r1, _0201B8CC @ =0x0400000E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #0x10]
	bne _0201B628
	ldrh r1, [r2, #0x10]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #0x10]
	b _0201B64E
_0201B628:
	cmp r4, #2
	bne _0201B63C
	ldrh r1, [r2, #0x10]
	movs r0, #0x38
	bics r1, r0
	lsls r0, r5, #0x1d
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #0x10]
	b _0201B64E
_0201B63C:
	cmp r4, #3
	bne _0201B64E
	ldrh r3, [r2, #0x10]
	ldr r1, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #0x10]
_0201B64E:
	add r0, sp, #4
	ldrh r3, [r0, #0x10]
	ldr r6, _0201B8CC @ =0x0400000E
	add sp, #0x24
	lsls r1, r3, #0x13
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r0, r3, #0x1a
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsls r1, r4, #8
	lsrs r0, r0, #0x1d
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	lsls r0, r0, #2
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B680:
	ldr r1, _0201B8D4 @ =0x04001008
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0xe]
	bne _0201B69C
	ldrh r2, [r1, #0xe]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r2, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r2
	strh r0, [r1, #0xe]
	b _0201B6C2
_0201B69C:
	cmp r4, #2
	bne _0201B6B0
	ldrh r2, [r1, #0xe]
	movs r0, #0x3c
	bics r2, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r2
	strh r0, [r1, #0xe]
	b _0201B6C2
_0201B6B0:
	cmp r4, #3
	bne _0201B6C2
	ldrh r3, [r1, #0xe]
	ldr r2, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r2, r3
	lsrs r0, r0, #0x10
	orrs r0, r2
	strh r0, [r1, #0xe]
_0201B6C2:
	add r0, sp, #4
	ldrh r3, [r0, #0xe]
	add sp, #0x24
	lsls r0, r3, #0x12
	lsrs r4, r0, #0x1f
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	lsls r0, r3, #0x13
	lsrs r1, r0, #0x1b
	movs r0, #0x2c
	muls r0, r7, r0
	adds r0, r6, r0
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x1e
	lsls r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsls r2, r1, #8
	movs r6, #0x43
	lsls r1, r0, #7
	ldr r0, _0201B8D4 @ =0x04001008
	lsls r5, r5, #0xe
	ldrh r7, [r0]
	lsls r4, r4, #0xd
	ands r6, r7
	orrs r5, r6
	orrs r1, r5
	orrs r1, r2
	orrs r1, r3
	orrs r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B700:
	ldr r1, _0201B8D8 @ =0x0400100A
	cmp r4, #1
	ldrh r2, [r1]
	add r1, sp, #4
	strh r2, [r1, #0xc]
	bne _0201B71C
	ldrh r2, [r1, #0xc]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r2, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r2
	strh r0, [r1, #0xc]
	b _0201B742
_0201B71C:
	cmp r4, #2
	bne _0201B730
	ldrh r2, [r1, #0xc]
	movs r0, #0x3c
	bics r2, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r2
	strh r0, [r1, #0xc]
	b _0201B742
_0201B730:
	cmp r4, #3
	bne _0201B742
	ldrh r3, [r1, #0xc]
	ldr r2, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r2, r3
	lsrs r0, r0, #0x10
	orrs r0, r2
	strh r0, [r1, #0xc]
_0201B742:
	add r0, sp, #4
	ldrh r3, [r0, #0xc]
	add sp, #0x24
	lsls r0, r3, #0x12
	lsrs r4, r0, #0x1f
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	lsls r0, r3, #0x13
	lsrs r1, r0, #0x1b
	movs r0, #0x2c
	muls r0, r7, r0
	adds r0, r6, r0
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x1e
	lsls r3, r2, #2
	ldrb r0, [r0, #0x1e]
	lsls r2, r1, #8
	movs r6, #0x43
	lsls r1, r0, #7
	ldr r0, _0201B8D8 @ =0x0400100A
	lsls r5, r5, #0xe
	ldrh r7, [r0]
	lsls r4, r4, #0xd
	ands r6, r7
	orrs r5, r6
	orrs r1, r5
	orrs r1, r2
	orrs r1, r3
	orrs r1, r4
	strh r1, [r0]
	pop {r4, r5, r6, r7, pc}
_0201B780:
	movs r1, #0x2c
	muls r1, r7, r1
	adds r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B794
	cmp r2, #1
	beq _0201B808
	cmp r2, #2
	beq _0201B87C
_0201B794:
	ldr r2, _0201B8DC @ =0x0400100C
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #0xa]
	bne _0201B7B0
	ldrh r3, [r2, #0xa]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r3, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r3
	strh r0, [r2, #0xa]
	b _0201B7D6
_0201B7B0:
	cmp r4, #2
	bne _0201B7C4
	ldrh r3, [r2, #0xa]
	movs r0, #0x3c
	bics r3, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r3
	strh r0, [r2, #0xa]
	b _0201B7D6
_0201B7C4:
	cmp r4, #3
	bne _0201B7D6
	ldrh r4, [r2, #0xa]
	ldr r3, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r3, r4
	lsrs r0, r0, #0x10
	orrs r0, r3
	strh r0, [r2, #0xa]
_0201B7D6:
	add r0, sp, #4
	ldrh r3, [r0, #0xa]
	adds r1, r6, r1
	ldr r6, _0201B8DC @ =0x0400100C
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsls r0, r3, #0x13
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1b
	lsls r1, r0, #8
	lsls r0, r4, #7
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #2
	orrs r0, r1
	orrs r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B808:
	ldr r1, _0201B8DC @ =0x0400100C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #8]
	bne _0201B824
	ldrh r1, [r2, #8]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #8]
	b _0201B84A
_0201B824:
	cmp r4, #2
	bne _0201B838
	ldrh r1, [r2, #8]
	movs r0, #0x3c
	bics r1, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #8]
	b _0201B84A
_0201B838:
	cmp r4, #3
	bne _0201B84A
	ldrh r3, [r2, #8]
	ldr r1, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #8]
_0201B84A:
	add r0, sp, #4
	ldrh r3, [r0, #8]
	ldr r6, _0201B8DC @ =0x0400100C
	add sp, #0x24
	lsls r1, r3, #0x13
	lsls r0, r3, #0x1a
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1c
	lsls r1, r0, #2
	lsls r0, r4, #8
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B87C:
	ldr r1, _0201B8DC @ =0x0400100C
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #6]
	bne _0201B898
	ldrh r1, [r2, #6]
	ldr r0, _0201B8D0 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #6]
	b _0201B8BE
_0201B898:
	cmp r4, #2
	bne _0201B8AC
	ldrh r1, [r2, #6]
	movs r0, #0x38
	bics r1, r0
	lsls r0, r5, #0x1d
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #6]
	b _0201B8BE
_0201B8AC:
	cmp r4, #3
	bne _0201B8BE
	ldrh r3, [r2, #6]
	ldr r1, _0201B8C8 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #6]
_0201B8BE:
	add r0, sp, #4
	ldrh r3, [r0, #6]
	ldr r6, _0201B8DC @ =0x0400100C
	b _0201B8E0
	nop
_0201B8C8: .4byte 0xFFFF3FFF
_0201B8CC: .4byte 0x0400000E
_0201B8D0: .4byte 0xFFFFE0FF
_0201B8D4: .4byte 0x04001008
_0201B8D8: .4byte 0x0400100A
_0201B8DC: .4byte 0x0400100C
_0201B8E0:
	add sp, #0x24
	lsls r1, r3, #0x13
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r0, r3, #0x1a
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsls r1, r4, #8
	lsrs r0, r0, #0x1d
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	lsls r0, r0, #2
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B90C:
	movs r1, #0x2c
	muls r1, r7, r1
	adds r2, r6, r1
	ldrb r2, [r2, #0x1c]
	cmp r2, #0
	beq _0201B920
	cmp r2, #1
	beq _0201B994
	cmp r2, #2
	beq _0201BA08
_0201B920:
	ldr r2, _0201BA7C @ =0x0400100E
	cmp r4, #1
	ldrh r3, [r2]
	add r2, sp, #4
	strh r3, [r2, #4]
	bne _0201B93C
	ldrh r3, [r2, #4]
	ldr r0, _0201BA80 @ =0xFFFFE0FF
	ands r3, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r3
	strh r0, [r2, #4]
	b _0201B962
_0201B93C:
	cmp r4, #2
	bne _0201B950
	ldrh r3, [r2, #4]
	movs r0, #0x3c
	bics r3, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r3
	strh r0, [r2, #4]
	b _0201B962
_0201B950:
	cmp r4, #3
	bne _0201B962
	ldrh r4, [r2, #4]
	ldr r3, _0201BA84 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r3, r4
	lsrs r0, r0, #0x10
	orrs r0, r3
	strh r0, [r2, #4]
_0201B962:
	add r0, sp, #4
	ldrh r3, [r0, #4]
	adds r1, r6, r1
	ldr r6, _0201BA7C @ =0x0400100E
	lsls r0, r3, #0x1a
	lsrs r2, r0, #0x1c
	ldrb r4, [r1, #0x1e]
	lsls r0, r3, #0x13
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1b
	lsls r1, r0, #8
	lsls r0, r4, #7
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #2
	orrs r0, r1
	orrs r0, r2
	add sp, #0x24
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201B994:
	ldr r1, _0201BA7C @ =0x0400100E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2, #2]
	bne _0201B9B0
	ldrh r1, [r2, #2]
	ldr r0, _0201BA80 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2, #2]
	b _0201B9D6
_0201B9B0:
	cmp r4, #2
	bne _0201B9C4
	ldrh r1, [r2, #2]
	movs r0, #0x3c
	bics r1, r0
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2, #2]
	b _0201B9D6
_0201B9C4:
	cmp r4, #3
	bne _0201B9D6
	ldrh r3, [r2, #2]
	ldr r1, _0201BA84 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2, #2]
_0201B9D6:
	add r0, sp, #4
	ldrh r3, [r0, #2]
	ldr r6, _0201BA7C @ =0x0400100E
	add sp, #0x24
	lsls r1, r3, #0x13
	lsls r0, r3, #0x1a
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsrs r0, r0, #0x1c
	lsls r1, r0, #2
	lsls r0, r4, #8
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	pop {r4, r5, r6, r7, pc}
_0201BA08:
	ldr r1, _0201BA7C @ =0x0400100E
	add r2, sp, #4
	ldrh r1, [r1]
	cmp r4, #1
	strh r1, [r2]
	bne _0201BA24
	ldrh r1, [r2]
	ldr r0, _0201BA80 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x13
	orrs r0, r1
	strh r0, [r2]
	b _0201BA4A
_0201BA24:
	cmp r4, #2
	bne _0201BA38
	ldrh r1, [r2]
	movs r0, #0x38
	bics r1, r0
	lsls r0, r5, #0x1d
	lsrs r0, r0, #0x1a
	orrs r0, r1
	strh r0, [r2]
	b _0201BA4A
_0201BA38:
	cmp r4, #3
	bne _0201BA4A
	ldrh r3, [r2]
	ldr r1, _0201BA84 @ =0xFFFF3FFF
	lsls r0, r0, #0x1e
	ands r1, r3
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r2]
_0201BA4A:
	add r0, sp, #4
	ldrh r3, [r0]
	ldr r6, _0201BA7C @ =0x0400100E
	lsls r1, r3, #0x13
	lsrs r4, r1, #0x1b
	lsls r1, r3, #0x12
	lsrs r2, r1, #0x1f
	lsls r0, r3, #0x1a
	lsls r1, r3, #0x10
	lsrs r3, r1, #0x1e
	lsls r1, r4, #8
	lsrs r0, r0, #0x1d
	ldrh r5, [r6]
	movs r4, #0x43
	lsls r3, r3, #0xe
	ands r4, r5
	lsls r0, r0, #2
	orrs r3, r4
	orrs r0, r3
	lsls r2, r2, #0xd
	orrs r0, r1
	orrs r0, r2
	strh r0, [r6]
	thumb_func_end FUN_0201B1F4

	thumb_func_start FUN_0201BA78
FUN_0201BA78: @ 0x0201BA78
	add sp, #0x24
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201BA7C: .4byte 0x0400100E
_0201BA80: .4byte 0xFFFFE0FF
_0201BA84: .4byte 0xFFFF3FFF
	thumb_func_end FUN_0201BA78

	thumb_func_start FUN_0201BA88
FUN_0201BA88: @ 0x0201BA88
	cmp r1, #0
	beq _0201BA96
	cmp r1, #1
	beq _0201BAB6
	cmp r1, #2
	beq _0201BAD6
	b _0201BAF6
_0201BA96:
	cmp r0, #1
	bne _0201BA9E
	movs r0, #0
	bx lr
_0201BA9E:
	cmp r0, #2
	bne _0201BAA6
	movs r0, #2
	bx lr
_0201BAA6:
	cmp r0, #3
	bne _0201BAAE
	movs r0, #1
	bx lr
_0201BAAE:
	cmp r0, #4
	bne _0201BAF6
	movs r0, #3
	bx lr
_0201BAB6:
	cmp r0, #0
	bne _0201BABE
	movs r0, #0
	bx lr
_0201BABE:
	cmp r0, #1
	bne _0201BAC6
	movs r0, #1
	bx lr
_0201BAC6:
	cmp r0, #4
	bne _0201BACE
	movs r0, #2
	bx lr
_0201BACE:
	cmp r0, #5
	bne _0201BAF6
	movs r0, #3
	bx lr
_0201BAD6:
	cmp r0, #0
	bne _0201BADE
	movs r0, #0
	bx lr
_0201BADE:
	cmp r0, #1
	bne _0201BAE6
	movs r0, #1
	bx lr
_0201BAE6:
	cmp r0, #4
	bne _0201BAEE
	movs r0, #2
	bx lr
_0201BAEE:
	cmp r0, #5
	bne _0201BAF6
	movs r0, #3
	bx lr
_0201BAF6:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201BA88

	thumb_func_start FUN_0201BAFC
FUN_0201BAFC: @ 0x0201BAFC
	cmp r0, #5
	bhi _0201BB4A
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201BB0C: @ jump table
	.2byte _0201BB18 - _0201BB0C - 2 @ case 0
	.2byte _0201BB20 - _0201BB0C - 2 @ case 1
	.2byte _0201BB28 - _0201BB0C - 2 @ case 2
	.2byte _0201BB32 - _0201BB0C - 2 @ case 3
	.2byte _0201BB3C - _0201BB0C - 2 @ case 4
	.2byte _0201BB44 - _0201BB0C - 2 @ case 5
_0201BB18:
	movs r0, #0x10
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB20:
	movs r0, #0x20
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB28:
	movs r0, #0x20
	strb r0, [r1]
	movs r0, #0x40
	strb r0, [r2]
	bx lr
_0201BB32:
	movs r0, #0x40
	strb r0, [r1]
	movs r0, #0x20
	strb r0, [r2]
	bx lr
_0201BB3C:
	movs r0, #0x40
	strb r0, [r1]
	strb r0, [r2]
	bx lr
_0201BB44:
	movs r0, #0x80
	strb r0, [r1]
	strb r0, [r2]
_0201BB4A:
	bx lr
	thumb_func_end FUN_0201BAFC

	thumb_func_start FUN_0201BB4C
FUN_0201BB4C: @ 0x0201BB4C
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r2, #0x2c
	adds r5, r1, #0
	muls r5, r2, r5
	adds r4, #8
	ldr r0, [r4, r5]
	cmp r0, #0
	beq _0201BB66
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, r5]
_0201BB66:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201BB4C

	thumb_func_start FUN_0201BB68
FUN_0201BB68: @ 0x0201BB68
	cmp r0, #7
	bhi _0201BC06
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201BB78: @ jump table
	.2byte _0201BB88 - _0201BB78 - 2 @ case 0
	.2byte _0201BB98 - _0201BB78 - 2 @ case 1
	.2byte _0201BBA8 - _0201BB78 - 2 @ case 2
	.2byte _0201BBB8 - _0201BB78 - 2 @ case 3
	.2byte _0201BBC8 - _0201BB78 - 2 @ case 4
	.2byte _0201BBD8 - _0201BB78 - 2 @ case 5
	.2byte _0201BBE8 - _0201BB78 - 2 @ case 6
	.2byte _0201BBF8 - _0201BB78 - 2 @ case 7
_0201BB88:
	ldr r2, _0201BC08 @ =0x04000008
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BB98:
	ldr r2, _0201BC0C @ =0x0400000A
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBA8:
	ldr r2, _0201BC10 @ =0x0400000C
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBB8:
	ldr r2, _0201BC14 @ =0x0400000E
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBC8:
	ldr r2, _0201BC18 @ =0x04001008
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBD8:
	ldr r2, _0201BC1C @ =0x0400100A
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBE8:
	ldr r2, _0201BC20 @ =0x0400100C
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
_0201BBF8:
	ldr r2, _0201BC24 @ =0x0400100E
	movs r0, #3
	ldrh r3, [r2]
	bics r3, r0
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
_0201BC06:
	bx lr
	.align 2, 0
_0201BC08: .4byte 0x04000008
_0201BC0C: .4byte 0x0400000A
_0201BC10: .4byte 0x0400000C
_0201BC14: .4byte 0x0400000E
_0201BC18: .4byte 0x04001008
_0201BC1C: .4byte 0x0400100A
_0201BC20: .4byte 0x0400100C
_0201BC24: .4byte 0x0400100E
	thumb_func_end FUN_0201BB68

	thumb_func_start FUN_0201BC28
FUN_0201BC28: @ 0x0201BC28
	push {r3, lr}
	cmp r0, #7
	bhi _0201BC88
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201BC3A: @ jump table
	.2byte _0201BC4A - _0201BC3A - 2 @ case 0
	.2byte _0201BC52 - _0201BC3A - 2 @ case 1
	.2byte _0201BC5A - _0201BC3A - 2 @ case 2
	.2byte _0201BC62 - _0201BC3A - 2 @ case 3
	.2byte _0201BC6A - _0201BC3A - 2 @ case 4
	.2byte _0201BC72 - _0201BC3A - 2 @ case 5
	.2byte _0201BC7A - _0201BC3A - 2 @ case 6
	.2byte _0201BC82 - _0201BC3A - 2 @ case 7
_0201BC4A:
	movs r0, #1
	bl FUN_02022C60
	pop {r3, pc}
_0201BC52:
	movs r0, #2
	bl FUN_02022C60
	pop {r3, pc}
_0201BC5A:
	movs r0, #4
	bl FUN_02022C60
	pop {r3, pc}
_0201BC62:
	movs r0, #8
	bl FUN_02022C60
	pop {r3, pc}
_0201BC6A:
	movs r0, #1
	bl FUN_02022CC8
	pop {r3, pc}
_0201BC72:
	movs r0, #2
	bl FUN_02022CC8
	pop {r3, pc}
_0201BC7A:
	movs r0, #4
	bl FUN_02022CC8
	pop {r3, pc}
_0201BC82:
	movs r0, #8
	bl FUN_02022CC8
_0201BC88:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0201BC28

	thumb_func_start FUN_0201BC8C
FUN_0201BC8C: @ 0x0201BC8C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	movs r0, #0x2c
	adds r6, r5, #0
	muls r6, r0, r6
	adds r0, r4, #0
	adds r0, #8
	adds r1, r2, #0
	adds r2, r3, #0
	adds r0, r0, r6
	bl FUN_0201BE38
	adds r0, r4, r6
	ldr r1, [r0, #0x14]
	ldr r0, [r0, #0x18]
	cmp r5, #7
	bls _0201BCB2
	b _0201BDC8
_0201BCB2:
	adds r2, r5, r5
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_0201BCBE: @ jump table
	.2byte _0201BCCE - _0201BCBE - 2 @ case 0
	.2byte _0201BCE4 - _0201BCBE - 2 @ case 1
	.2byte _0201BCFA - _0201BCBE - 2 @ case 2
	.2byte _0201BD24 - _0201BCBE - 2 @ case 3
	.2byte _0201BD4E - _0201BCBE - 2 @ case 4
	.2byte _0201BD64 - _0201BCBE - 2 @ case 5
	.2byte _0201BD7A - _0201BCBE - 2 @ case 6
	.2byte _0201BDA2 - _0201BCBE - 2 @ case 7
_0201BCCE:
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDD0 @ =0x04000010
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BCE4:
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDD4 @ =0x04000014
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BCFA:
	adds r2, r4, #0
	adds r2, #0x74
	ldrb r2, [r2]
	cmp r2, #0
	bne _0201BD1A
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDD8 @ =0x04000018
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD1A:
	adds r0, r4, #0
	movs r1, #2
	bl FUN_0201BF18
	pop {r4, r5, r6, pc}
_0201BD24:
	adds r2, r4, #0
	adds r2, #0xa0
	ldrb r2, [r2]
	cmp r2, #0
	bne _0201BD44
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDDC @ =0x0400001C
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD44:
	adds r0, r4, #0
	movs r1, #3
	bl FUN_0201BF18
	pop {r4, r5, r6, pc}
_0201BD4E:
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDE0 @ =0x04001010
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD64:
	ldr r2, _0201BDCC @ =0x000001FF
	adds r3, r1, #0
	lsls r1, r0, #0x10
	lsls r0, r2, #0x10
	ands r3, r2
	ands r0, r1
	adds r1, r3, #0
	orrs r1, r0
	ldr r0, _0201BDE4 @ =0x04001014
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD7A:
	movs r2, #0x49
	lsls r2, r2, #2
	ldrb r3, [r4, r2]
	cmp r3, #0
	bne _0201BD98
	adds r2, #0xdb
	ands r2, r1
	lsls r1, r0, #0x10
	ldr r0, _0201BDE8 @ =0x01FF0000
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201BDEC @ =0x04001018
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BD98:
	adds r0, r4, #0
	movs r1, #6
	bl FUN_0201BF18
	pop {r4, r5, r6, pc}
_0201BDA2:
	movs r2, #0x15
	lsls r2, r2, #4
	ldrb r3, [r4, r2]
	cmp r3, #0
	bne _0201BDC0
	adds r2, #0xaf
	ands r2, r1
	lsls r1, r0, #0x10
	ldr r0, _0201BDE8 @ =0x01FF0000
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201BDF0 @ =0x0400101C
	str r1, [r0]
	pop {r4, r5, r6, pc}
_0201BDC0:
	adds r0, r4, #0
	movs r1, #7
	bl FUN_0201BF18
_0201BDC8:
	pop {r4, r5, r6, pc}
	nop
_0201BDCC: .4byte 0x000001FF
_0201BDD0: .4byte 0x04000010
_0201BDD4: .4byte 0x04000014
_0201BDD8: .4byte 0x04000018
_0201BDDC: .4byte 0x0400001C
_0201BDE0: .4byte 0x04001010
_0201BDE4: .4byte 0x04001014
_0201BDE8: .4byte 0x01FF0000
_0201BDEC: .4byte 0x04001018
_0201BDF0: .4byte 0x0400101C
	thumb_func_end FUN_0201BC8C

	thumb_func_start FUN_0201BDF4
FUN_0201BDF4: @ 0x0201BDF4
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201BDF4

	thumb_func_start FUN_0201BE00
FUN_0201BE00: @ 0x0201BE00
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #0x18]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201BE00

	thumb_func_start FUN_0201BE0C
FUN_0201BE0C: @ 0x0201BE0C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	movs r0, #0x2c
	adds r1, #8
	muls r0, r4, r0
	adds r0, r1, r0
	adds r1, r2, #0
	adds r2, r3, #0
	bl FUN_0201BE38
	ldr r0, [sp, #0x18]
	ldr r2, [sp, #0x10]
	str r0, [sp]
	ldr r3, [sp, #0x14]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0201BE7C
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201BE0C

	thumb_func_start FUN_0201BE38
FUN_0201BE38: @ 0x0201BE38
	cmp r1, #5
	bhi _0201BE7A
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201BE48: @ jump table
	.2byte _0201BE54 - _0201BE48 - 2 @ case 0
	.2byte _0201BE58 - _0201BE48 - 2 @ case 1
	.2byte _0201BE60 - _0201BE48 - 2 @ case 2
	.2byte _0201BE68 - _0201BE48 - 2 @ case 3
	.2byte _0201BE6C - _0201BE48 - 2 @ case 4
	.2byte _0201BE74 - _0201BE48 - 2 @ case 5
_0201BE54:
	str r2, [r0, #0xc]
	bx lr
_0201BE58:
	ldr r1, [r0, #0xc]
	adds r1, r1, r2
	str r1, [r0, #0xc]
	bx lr
_0201BE60:
	ldr r1, [r0, #0xc]
	subs r1, r1, r2
	str r1, [r0, #0xc]
	bx lr
_0201BE68:
	str r2, [r0, #0x10]
	bx lr
_0201BE6C:
	ldr r1, [r0, #0x10]
	adds r1, r1, r2
	str r1, [r0, #0x10]
	bx lr
_0201BE74:
	ldr r1, [r0, #0x10]
	subs r1, r1, r2
	str r1, [r0, #0x10]
_0201BE7A:
	bx lr
	thumb_func_end FUN_0201BE38

	thumb_func_start FUN_0201BE7C
FUN_0201BE7C: @ 0x0201BE7C
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r4, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	ldr r3, [sp, #0x18]
	cmp r4, #7
	bhi _0201BF04
	adds r5, r4, r4
	add r5, pc
	ldrh r5, [r5, #6]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	add pc, r5
_0201BE98: @ jump table
	.2byte _0201BF04 - _0201BE98 - 2 @ case 0
	.2byte _0201BF04 - _0201BE98 - 2 @ case 1
	.2byte _0201BEA8 - _0201BE98 - 2 @ case 2
	.2byte _0201BEC0 - _0201BE98 - 2 @ case 3
	.2byte _0201BF04 - _0201BE98 - 2 @ case 4
	.2byte _0201BF04 - _0201BE98 - 2 @ case 5
	.2byte _0201BED8 - _0201BE98 - 2 @ case 6
	.2byte _0201BEF0 - _0201BE98 - 2 @ case 7
_0201BEA8:
	movs r5, #0x2c
	muls r5, r4, r5
	adds r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF08 @ =0x04000020
	blx FUN_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BEC0:
	movs r5, #0x2c
	muls r5, r4, r5
	adds r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF0C @ =0x04000030
	blx FUN_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BED8:
	movs r5, #0x2c
	muls r5, r4, r5
	adds r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF10 @ =0x04001020
	blx FUN_020CF0AC
	add sp, #8
	pop {r3, r4, r5, pc}
_0201BEF0:
	movs r5, #0x2c
	muls r5, r4, r5
	adds r4, r0, r5
	ldr r0, [r4, #0x14]
	str r0, [sp]
	ldr r0, [r4, #0x18]
	str r0, [sp, #4]
	ldr r0, _0201BF14 @ =0x04001030
	blx FUN_020CF0AC
_0201BF04:
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201BF08: .4byte 0x04000020
_0201BF0C: .4byte 0x04000030
_0201BF10: .4byte 0x04001020
_0201BF14: .4byte 0x04001030
	thumb_func_end FUN_0201BE7C

	thumb_func_start FUN_0201BF18
FUN_0201BF18: @ 0x0201BF18
	push {r4, r5, lr}
	sub sp, #0x14
	movs r2, #1
	lsls r2, r2, #0xc
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0
	add r0, sp, #4
	adds r3, r2, #0
	str r1, [sp]
	bl FUN_0201FECC
	movs r3, #0
	adds r0, r5, #0
	adds r1, r4, #0
	add r2, sp, #4
	str r3, [sp]
	bl FUN_0201BE7C
	add sp, #0x14
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201BF18

	thumb_func_start FUN_0201BF44
FUN_0201BF44: @ 0x0201BF44
	push {r3, r4, r5, lr}
	cmp r2, #0
	bne _0201BF50
	blx FUN_020D4BE8
	pop {r3, r4, r5, pc}
_0201BF50:
	movs r4, #3
	adds r3, r0, #0
	tst r3, r4
	bne _0201BF76
	adds r3, r1, #0
	tst r3, r4
	bne _0201BF76
	lsls r3, r2, #0x10
	lsrs r3, r3, #0x10
	lsrs r4, r3, #0x1f
	lsls r5, r3, #0x1e
	subs r5, r5, r4
	movs r3, #0x1e
	rors r5, r3
	adds r3, r4, r5
	bne _0201BF76
	blx FUN_020D4808
	pop {r3, r4, r5, pc}
_0201BF76:
	blx FUN_020D47B8
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201BF44

	thumb_func_start FUN_0201BF7C
FUN_0201BF7C: @ 0x0201BF7C
	push {r3, lr}
	movs r2, #0x2c
	muls r2, r1, r2
	adds r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_0201BF94
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0201BF7C

	thumb_func_start FUN_0201BF94
FUN_0201BF94: @ 0x0201BF94
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	str r3, [sp]
	cmp r3, #0
	bne _0201C002
	movs r0, #0x2c
	adds r7, r4, #0
	muls r7, r0, r7
	adds r0, r5, r7
	ldr r0, [r0, #8]
	str r0, [sp, #4]
	cmp r0, #0
	beq _0201BFD2
	ldr r1, [sp, #4]
	adds r0, r6, #0
	adds r2, r3, #0
	bl FUN_0201BF44
	adds r3, r5, r7
	ldr r2, [r3, #0x10]
	ldr r1, [sp, #4]
	ldr r3, [r3, #0xc]
	adds r0, r4, #0
	lsls r2, r2, #1
	bl FUN_0201C014
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201BFD2:
	ldr r0, [r6]
	lsrs r7, r0, #8
	ldr r0, [r5]
	adds r1, r7, #0
	bl FUN_0201AACC
	adds r5, r0, #0
	ldr r2, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_0201BF44
	ldr r2, [sp, #0x20]
	adds r0, r4, #0
	adds r1, r5, #0
	lsls r2, r2, #1
	adds r3, r7, #0
	bl FUN_0201C014
	adds r0, r5, #0
	bl FUN_0201AB0C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
_0201C002:
	ldr r2, [sp, #0x20]
	adds r0, r4, #0
	adds r1, r6, #0
	lsls r2, r2, #1
	bl FUN_0201C014
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201BF94

	thumb_func_start FUN_0201C014
FUN_0201C014: @ 0x0201C014
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r6, r3, #0
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	adds r5, r2, #0
	blx FUN_020D2894
	cmp r7, #7
	bhi _0201C0A4
	adds r0, r7, r7
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201C036: @ jump table
	.2byte _0201C046 - _0201C036 - 2 @ case 0
	.2byte _0201C052 - _0201C036 - 2 @ case 1
	.2byte _0201C05E - _0201C036 - 2 @ case 2
	.2byte _0201C06A - _0201C036 - 2 @ case 3
	.2byte _0201C076 - _0201C036 - 2 @ case 4
	.2byte _0201C082 - _0201C036 - 2 @ case 5
	.2byte _0201C08E - _0201C036 - 2 @ case 6
	.2byte _0201C09A - _0201C036 - 2 @ case 7
_0201C046:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020CFF24
	pop {r3, r4, r5, r6, r7, pc}
_0201C052:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020CFFE4
	pop {r3, r4, r5, r6, r7, pc}
_0201C05E:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D00A4
	pop {r3, r4, r5, r6, r7, pc}
_0201C06A:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0164
	pop {r3, r4, r5, r6, r7, pc}
_0201C076:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020CFF84
	pop {r3, r4, r5, r6, r7, pc}
_0201C082:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0044
	pop {r3, r4, r5, r6, r7, pc}
_0201C08E:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0104
	pop {r3, r4, r5, r6, r7, pc}
_0201C09A:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D01C4
_0201C0A4:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C014

	thumb_func_start FUN_0201C0A8
FUN_0201C0A8: @ 0x0201C0A8
	push {r4, lr}
	adds r4, r0, #0
	adds r0, r2, #0
	movs r2, #0x2c
	muls r2, r1, r2
	adds r1, r4, r2
	ldr r1, [r1, #8]
	adds r2, r3, #0
	bl FUN_0201BF44
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201C0A8

	thumb_func_start FUN_0201C0C0
FUN_0201C0C0: @ 0x0201C0C0
	push {r3, r4, lr}
	sub sp, #4
	movs r4, #0x2c
	muls r4, r1, r4
	adds r4, r0, r4
	ldrb r4, [r4, #0x1e]
	cmp r4, #0
	bne _0201C0DE
	ldr r4, [sp, #0x10]
	lsls r4, r4, #5
	str r4, [sp]
	bl FUN_0201C0EC
	add sp, #4
	pop {r3, r4, pc}
_0201C0DE:
	ldr r4, [sp, #0x10]
	lsls r4, r4, #6
	str r4, [sp]
	bl FUN_0201C0EC
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_0201C0C0

	thumb_func_start FUN_0201C0EC
FUN_0201C0EC: @ 0x0201C0EC
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r5, r2, #0
	str r3, [sp]
	cmp r3, #0
	bne _0201C124
	ldr r1, [r5]
	ldr r0, [r0]
	lsrs r4, r1, #8
	adds r1, r4, #0
	bl FUN_0201AACC
	adds r6, r0, #0
	ldr r2, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201BF44
	ldr r2, [sp, #0x18]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r3, r4, #0
	bl FUN_0201C130
	adds r0, r6, #0
	bl FUN_0201AB0C
	pop {r3, r4, r5, r6, r7, pc}
_0201C124:
	ldr r2, [sp, #0x18]
	adds r0, r7, #0
	adds r1, r5, #0
	bl FUN_0201C130
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201C0EC

	thumb_func_start FUN_0201C130
FUN_0201C130: @ 0x0201C130
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r6, r3, #0
	adds r7, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	adds r5, r2, #0
	blx FUN_020D2894
	cmp r7, #7
	bhi _0201C1C0
	adds r0, r7, r7
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201C152: @ jump table
	.2byte _0201C162 - _0201C152 - 2 @ case 0
	.2byte _0201C16E - _0201C152 - 2 @ case 1
	.2byte _0201C17A - _0201C152 - 2 @ case 2
	.2byte _0201C186 - _0201C152 - 2 @ case 3
	.2byte _0201C192 - _0201C152 - 2 @ case 4
	.2byte _0201C19E - _0201C152 - 2 @ case 5
	.2byte _0201C1AA - _0201C152 - 2 @ case 6
	.2byte _0201C1B6 - _0201C152 - 2 @ case 7
_0201C162:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0224
	pop {r3, r4, r5, r6, r7, pc}
_0201C16E:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D02E4
	pop {r3, r4, r5, r6, r7, pc}
_0201C17A:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D03A4
	pop {r3, r4, r5, r6, r7, pc}
_0201C186:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0464
	pop {r3, r4, r5, r6, r7, pc}
_0201C192:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0284
	pop {r3, r4, r5, r6, r7, pc}
_0201C19E:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0344
	pop {r3, r4, r5, r6, r7, pc}
_0201C1AA:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D0404
	pop {r3, r4, r5, r6, r7, pc}
_0201C1B6:
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	blx FUN_020D04C4
_0201C1C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C130

	thumb_func_start FUN_0201C1C4
FUN_0201C1C4: @ 0x0201C1C4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r3, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_0201AACC
	adds r4, r0, #0
	movs r1, #0
	adds r2, r5, #0
	blx FUN_020E5B44
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	adds r3, r5, #0
	bl FUN_0201C130
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_0201AB80
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201C1C4

	thumb_func_start FUN_0201C1F4
FUN_0201C1F4: @ 0x0201C1F4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r1, #0
	adds r4, r0, #0
	movs r1, #0x2c
	adds r6, r7, #0
	adds r4, #0x1f
	muls r6, r1, r6
	ldrb r1, [r4, r6]
	ldr r0, [r0]
	adds r5, r2, #0
	muls r1, r3, r1
	str r1, [sp]
	bl FUN_0201AACC
	str r0, [sp, #4]
	ldrb r0, [r4, r6]
	cmp r0, #0x20
	bne _0201C22E
	lsls r2, r5, #0xc
	lsls r1, r5, #8
	lsls r0, r5, #4
	orrs r1, r2
	orrs r0, r1
	adds r1, r5, #0
	orrs r1, r0
	lsls r0, r1, #0x10
	adds r5, r1, #0
	b _0201C238
_0201C22E:
	lsls r2, r5, #0x18
	lsls r1, r5, #0x10
	lsls r0, r5, #8
	orrs r1, r2
	orrs r0, r1
_0201C238:
	orrs r5, r0
	ldr r1, [sp, #4]
	ldr r2, [sp]
	adds r0, r5, #0
	blx FUN_020D4858
	lsls r0, r7, #0x18
	ldrb r2, [r4, r6]
	ldr r3, [sp, #0x20]
	ldr r1, [sp, #4]
	muls r2, r3, r2
	ldr r3, [sp]
	lsrs r0, r0, #0x18
	bl FUN_0201C130
	ldr r0, [sp, #4]
	bl FUN_0201AB0C
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201C1F4

	thumb_func_start FUN_0201C260
FUN_0201C260: @ 0x0201C260
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r7, r3, #0
	blx FUN_020D2894
	cmp r6, #4
	bhs _0201C282
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	blx FUN_020CFC6C
	pop {r3, r4, r5, r6, r7, pc}
_0201C282:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	blx FUN_020CFCC0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C260

	thumb_func_start FUN_0201C290
FUN_0201C290: @ 0x0201C290
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r3, #0
	adds r7, r2, #0
	str r3, [sp]
	bl FUN_0201AACC
	adds r4, r0, #0
	movs r1, #0
	adds r2, r5, #0
	blx FUN_020E5B44
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020D2894
	cmp r6, #4
	bhs _0201C2C2
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	blx FUN_020CFC6C
	b _0201C2CC
_0201C2C2:
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r5, #0
	blx FUN_020CFCC0
_0201C2CC:
	ldr r0, [sp]
	adds r1, r4, #0
	bl FUN_0201AB80
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C290

	thumb_func_start FUN_0201C2D8
FUN_0201C2D8: @ 0x0201C2D8
	push {r0, r1, r2, r3}
	push {r3, lr}
	add r1, sp, #0xc
	movs r2, #2
	movs r3, #0
	bl FUN_0201C260
	pop {r3}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
	thumb_func_end FUN_0201C2D8

	thumb_func_start FUN_0201C2F0
FUN_0201C2F0: @ 0x0201C2F0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r3, #0
	cmp r2, #5
	bhi _0201C3E2
	adds r1, r2, r2
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201C308: @ jump table
	.2byte _0201C314 - _0201C308 - 2 @ case 0
	.2byte _0201C32E - _0201C308 - 2 @ case 1
	.2byte _0201C348 - _0201C308 - 2 @ case 2
	.2byte _0201C362 - _0201C308 - 2 @ case 3
	.2byte _0201C388 - _0201C308 - 2 @ case 4
	.2byte _0201C3CA - _0201C308 - 2 @ case 5
_0201C314:
	cmp r4, #0x10
	blo _0201C31C
	bl FUN_0202551C
_0201C31C:
	cmp r5, #0x10
	blo _0201C324
	bl FUN_0202551C
_0201C324:
	lsls r0, r5, #4
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C32E:
	cmp r4, #0x20
	blo _0201C336
	bl FUN_0202551C
_0201C336:
	cmp r5, #0x20
	blo _0201C33E
	bl FUN_0202551C
_0201C33E:
	lsls r0, r5, #5
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C348:
	cmp r4, #0x20
	blo _0201C350
	bl FUN_0202551C
_0201C350:
	cmp r5, #0x40
	blo _0201C358
	bl FUN_0202551C
_0201C358:
	lsls r0, r5, #5
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C362:
	cmp r4, #0x40
	blo _0201C36A
	bl FUN_0202551C
_0201C36A:
	cmp r5, #0x20
	blo _0201C372
	bl FUN_0202551C
_0201C372:
	movs r0, #0x1f
	adds r1, r4, #0
	ands r1, r0
	movs r0, #0x1f
	bics r4, r0
	adds r0, r5, r4
	lsls r0, r0, #5
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C388:
	cmp r4, #0x40
	blo _0201C390
	bl FUN_0202551C
_0201C390:
	cmp r5, #0x40
	blo _0201C398
	bl FUN_0202551C
_0201C398:
	cmp r6, #0
	bne _0201C3C0
	asrs r0, r5, #5
	asrs r1, r4, #5
	lsls r0, r0, #1
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1a
	lsrs r2, r0, #0x10
	movs r0, #0x1f
	adds r1, r4, #0
	ands r1, r0
	lsls r0, r5, #0x1b
	lsrs r0, r0, #0x16
	adds r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C3C0:
	lsls r0, r5, #6
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6, pc}
_0201C3CA:
	cmp r4, #0x80
	blo _0201C3D2
	bl FUN_0202551C
_0201C3D2:
	cmp r5, #0x80
	blo _0201C3DA
	bl FUN_0202551C
_0201C3DA:
	lsls r0, r5, #7
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
_0201C3E2:
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201C2F0

	thumb_func_start FUN_0201C3E4
FUN_0201C3E4: @ 0x0201C3E4
	push {r3, r4, r5, r6, r7}
	sub sp, #4
	str r3, [sp]
	adds r6, r2, #0
	ldr r5, [sp]
	adds r4, r6, #0
	subs r4, #0x20
	subs r5, #0x20
	movs r2, #0
	lsls r4, r4, #0x10
	lsls r5, r5, #0x10
	adds r3, r2, #0
	asrs r4, r4, #0x10
	asrs r7, r5, #0x10
	lsrs r5, r0, #5
	beq _0201C40A
	adds r2, r2, #1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
_0201C40A:
	lsrs r5, r1, #5
	beq _0201C414
	adds r2, r2, #2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
_0201C414:
	cmp r2, #3
	bhi _0201C4BC
	adds r2, r2, r2
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_0201C424: @ jump table
	.2byte _0201C42C - _0201C424 - 2 @ case 0
	.2byte _0201C44A - _0201C424 - 2 @ case 1
	.2byte _0201C470 - _0201C424 - 2 @ case 2
	.2byte _0201C49C - _0201C424 - 2 @ case 3
_0201C42C:
	cmp r4, #0
	blt _0201C43C
	lsls r1, r1, #5
	adds r0, r0, r1
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0201C4BC
_0201C43C:
	adds r2, r1, #0
	muls r2, r6, r2
	adds r0, r0, r2
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0201C4BC
_0201C44A:
	cmp r7, #0
	blt _0201C454
	movs r2, #1
	lsls r2, r2, #0xa
	b _0201C458
_0201C454:
	ldr r2, [sp]
	lsls r2, r2, #5
_0201C458:
	adds r2, r3, r2
	lsls r2, r2, #0x10
	lsrs r3, r2, #0x10
	movs r2, #0x1f
	ands r2, r0
	adds r0, r1, #0
	muls r0, r4, r0
	adds r0, r2, r0
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0201C4BC
_0201C470:
	lsls r2, r6, #5
	adds r2, r3, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	cmp r4, #0
	blt _0201C48A
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x16
	adds r0, r0, r1
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0201C4BC
_0201C48A:
	movs r3, #0x1f
	ands r1, r3
	adds r3, r1, #0
	muls r3, r6, r3
	adds r0, r0, r3
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0201C4BC
_0201C49C:
	adds r2, r6, r7
	lsls r2, r2, #5
	adds r2, r3, r2
	adds r5, r0, #0
	movs r3, #0x1f
	adds r0, r1, #0
	ands r0, r3
	adds r1, r0, #0
	lsls r2, r2, #0x10
	ands r5, r3
	muls r1, r4, r1
	lsrs r2, r2, #0x10
	adds r0, r5, r1
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_0201C4BC:
	adds r0, r3, #0
	add sp, #4
	pop {r3, r4, r5, r6, r7}
	bx lr
	thumb_func_end FUN_0201C3E4

	thumb_func_start FUN_0201C4C4
FUN_0201C4C4: @ 0x0201C4C4
	push {r3, r4, r5, r6, lr}
	sub sp, #0x1c
	add r6, sp, #0x20
	ldrb r5, [r6, #0x14]
	str r5, [sp]
	ldrb r4, [r6, #0x18]
	str r4, [sp, #4]
	str r2, [sp, #8]
	movs r2, #0
	str r2, [sp, #0xc]
	str r2, [sp, #0x10]
	str r5, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r2, r3, #0
	ldrb r3, [r6, #0x10]
	bl FUN_0201C4EC
	add sp, #0x1c
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0201C4C4

	thumb_func_start FUN_0201C4EC
FUN_0201C4EC: @ 0x0201C4EC
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r2, #0
	adds r2, r3, #0
	movs r3, #0x2c
	adds r5, r1, #0
	muls r5, r3, r5
	adds r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #0x18
	cmp r1, #1
	beq _0201C536
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	movs r1, #0
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	adds r1, r4, #0
	bl FUN_0201C5E4
	add sp, #0x1c
	pop {r4, r5, pc}
_0201C536:
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	movs r1, #0
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	adds r1, r4, #0
	bl FUN_0201C75C
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end FUN_0201C4EC

	thumb_func_start FUN_0201C568
FUN_0201C568: @ 0x0201C568
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r2, #0
	adds r2, r3, #0
	movs r3, #0x2c
	adds r5, r1, #0
	muls r5, r3, r5
	adds r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #0x18
	cmp r1, #1
	beq _0201C5B2
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	movs r1, #1
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	adds r1, r4, #0
	bl FUN_0201C5E4
	add sp, #0x1c
	pop {r4, r5, pc}
_0201C5B2:
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	add r1, sp, #0x38
	ldrb r1, [r1]
	str r1, [sp, #0xc]
	add r1, sp, #0x3c
	ldrb r1, [r1]
	str r1, [sp, #0x10]
	add r1, sp, #0x40
	ldrb r1, [r1]
	str r1, [sp, #0x14]
	movs r1, #1
	str r1, [sp, #0x18]
	ldrb r3, [r3, #0x10]
	adds r1, r4, #0
	bl FUN_0201C75C
	add sp, #0x1c
	pop {r4, r5, pc}
	thumb_func_end FUN_0201C568

	thumb_func_start FUN_0201C5E4
FUN_0201C5E4: @ 0x0201C5E4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	str r1, [sp]
	str r2, [sp, #4]
	adds r7, r0, #0
	ldr r0, [sp, #0x58]
	adds r6, r3, #0
	str r0, [sp, #0x58]
	ldr r0, [sp, #0x5c]
	ldr r4, [sp, #0x68]
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x6c]
	str r0, [sp, #0x6c]
	ldr r0, [r7]
	str r0, [sp, #0x2c]
	cmp r0, #0
	bne _0201C608
	b _0201C756
_0201C608:
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x40
	adds r1, #1
	add r2, sp, #0x40
	bl FUN_0201BAFC
	add r0, sp, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201C6B8
	movs r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C652
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x1c]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x18]
	lsls r1, r0, #1
	ldr r0, [sp, #0x5c]
	adds r0, r0, r1
	str r0, [sp, #0x14]
_0201C638:
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x28]
	adds r0, r1, r0
	add r1, sp, #0x40
	ldrb r1, [r1]
	cmp r0, r1
	bge _0201C652
	ldr r2, [sp, #0x1c]
	ldr r1, [sp, #0x28]
	adds r2, r2, r1
	ldr r1, [sp, #0x6c]
	cmp r2, r1
	blt _0201C654
_0201C652:
	b _0201C756
_0201C654:
	movs r5, #0
	cmp r6, #0
	bls _0201C6A4
	adds r1, r4, #0
	muls r1, r2, r1
	lsls r2, r1, #1
	ldr r1, [sp, #0x14]
	lsls r0, r0, #0x18
	adds r1, r1, r2
	lsrs r0, r0, #0x18
	str r1, [sp, #0x10]
	str r0, [sp, #0x30]
_0201C66C:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	adds r0, r0, r5
	cmp r0, r1
	bge _0201C6A4
	ldr r1, [sp, #0x18]
	adds r1, r1, r5
	cmp r1, r4
	bge _0201C6A4
	ldrb r2, [r7, #0x15]
	lsls r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x30]
	lsrs r0, r0, #0x18
	bl FUN_0201C2F0
	ldr r1, [sp, #0x10]
	lsls r2, r5, #1
	ldrh r1, [r1, r2]
	lsls r2, r0, #1
	ldr r0, [sp, #0x2c]
	strh r1, [r0, r2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r6
	blo _0201C66C
_0201C6A4:
	ldr r0, [sp, #0x28]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C638
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
_0201C6B8:
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C756
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x24]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x20]
_0201C6CC:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	adds r1, r1, r0
	add r0, sp, #0x40
	ldrb r0, [r0]
	cmp r1, r0
	bge _0201C756
	ldr r2, [sp, #0x24]
	ldr r0, [sp, #8]
	adds r0, r2, r0
	ldr r2, [sp, #0x6c]
	cmp r0, r2
	bge _0201C756
	movs r5, #0
	cmp r6, #0
	bls _0201C746
	lsls r1, r1, #0x18
	lsls r0, r0, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	str r1, [sp, #0x34]
	str r0, [sp, #0x3c]
_0201C6F8:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	adds r0, r0, r5
	cmp r0, r1
	bge _0201C746
	ldr r1, [sp, #0x20]
	adds r1, r1, r5
	str r1, [sp, #0xc]
	cmp r1, r4
	bge _0201C746
	ldrb r2, [r7, #0x15]
	lsls r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x34]
	lsrs r0, r0, #0x18
	bl FUN_0201C2F0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x3c]
	lsls r0, r0, #0x18
	ldr r3, [sp, #0x6c]
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	bl FUN_0201C3E4
	lsls r1, r0, #1
	ldr r0, [sp, #0x5c]
	ldrh r0, [r0, r1]
	ldr r1, [sp, #0x38]
	lsls r2, r1, #1
	ldr r1, [sp, #0x2c]
	strh r0, [r1, r2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r6
	blo _0201C6F8
_0201C746:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C6CC
_0201C756:
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C5E4

	thumb_func_start FUN_0201C75C
FUN_0201C75C: @ 0x0201C75C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x44
	str r1, [sp]
	str r2, [sp, #4]
	adds r7, r0, #0
	ldr r0, [sp, #0x58]
	adds r6, r3, #0
	str r0, [sp, #0x58]
	ldr r0, [sp, #0x5c]
	ldr r4, [sp, #0x68]
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x6c]
	str r0, [sp, #0x6c]
	ldr r0, [r7]
	str r0, [sp, #0x2c]
	cmp r0, #0
	bne _0201C780
	b _0201C8C0
_0201C780:
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x40
	adds r1, #1
	add r2, sp, #0x40
	bl FUN_0201BAFC
	add r0, sp, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201C826
	movs r0, #0
	str r0, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C7BC
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x1c]
	ldrb r0, [r1, #0x18]
	ldr r1, [sp, #0x5c]
	str r0, [sp, #0x18]
	adds r0, r1, r0
	str r0, [sp, #0x14]
_0201C7AE:
	ldr r1, [sp, #4]
	ldr r0, [sp, #0x28]
	adds r0, r1, r0
	add r1, sp, #0x40
	ldrb r1, [r1]
	cmp r0, r1
	blt _0201C7BE
_0201C7BC:
	b _0201C8C0
_0201C7BE:
	ldr r2, [sp, #0x1c]
	ldr r1, [sp, #0x28]
	adds r2, r2, r1
	ldr r1, [sp, #0x6c]
	cmp r2, r1
	bge _0201C8C0
	movs r5, #0
	cmp r6, #0
	bls _0201C812
	ldr r1, [sp, #0x14]
	muls r2, r4, r2
	lsls r0, r0, #0x18
	adds r1, r1, r2
	lsrs r0, r0, #0x18
	str r1, [sp, #0x10]
	str r0, [sp, #0x30]
_0201C7DE:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	adds r0, r0, r5
	cmp r0, r1
	bge _0201C812
	ldr r1, [sp, #0x18]
	adds r1, r1, r5
	cmp r1, r4
	bge _0201C812
	ldrb r2, [r7, #0x15]
	lsls r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x30]
	lsrs r0, r0, #0x18
	bl FUN_0201C2F0
	ldr r1, [sp, #0x10]
	ldrb r2, [r1, r5]
	ldr r1, [sp, #0x2c]
	strb r2, [r1, r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r6
	blo _0201C7DE
_0201C812:
	ldr r0, [sp, #0x28]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #0x28]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C7AE
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
_0201C826:
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r0, #0
	bls _0201C8C0
	add r1, sp, #0x48
	ldrb r0, [r1, #0x1c]
	str r0, [sp, #0x24]
	ldrb r0, [r1, #0x18]
	str r0, [sp, #0x20]
_0201C83A:
	ldr r1, [sp, #4]
	ldr r0, [sp, #8]
	adds r1, r1, r0
	add r0, sp, #0x40
	ldrb r0, [r0]
	cmp r1, r0
	bge _0201C8C0
	ldr r2, [sp, #0x24]
	ldr r0, [sp, #8]
	adds r0, r2, r0
	ldr r2, [sp, #0x6c]
	cmp r0, r2
	bge _0201C8C0
	movs r5, #0
	cmp r6, #0
	bls _0201C8B0
	lsls r1, r1, #0x18
	lsls r0, r0, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r0, #0x18
	str r1, [sp, #0x34]
	str r0, [sp, #0x3c]
_0201C866:
	add r1, sp, #0x40
	ldr r0, [sp]
	ldrb r1, [r1, #1]
	adds r0, r0, r5
	cmp r0, r1
	bge _0201C8B0
	ldr r1, [sp, #0x20]
	adds r1, r1, r5
	str r1, [sp, #0xc]
	cmp r1, r4
	bge _0201C8B0
	ldrb r2, [r7, #0x15]
	lsls r0, r0, #0x18
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #0x34]
	lsrs r0, r0, #0x18
	bl FUN_0201C2F0
	str r0, [sp, #0x38]
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x3c]
	lsls r0, r0, #0x18
	ldr r3, [sp, #0x6c]
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	bl FUN_0201C3E4
	ldr r1, [sp, #0x5c]
	ldrb r2, [r1, r0]
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x38]
	strb r2, [r1, r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r6
	blo _0201C866
_0201C8B0:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	str r1, [sp, #8]
	ldr r0, [sp, #0x58]
	cmp r1, r0
	blo _0201C83A
_0201C8C0:
	add sp, #0x44
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201C75C

	thumb_func_start FUN_0201C8C4
FUN_0201C8C4: @ 0x0201C8C4
	push {r4, r5, lr}
	sub sp, #0xc
	adds r4, r2, #0
	adds r2, r3, #0
	movs r3, #0x2c
	adds r5, r1, #0
	muls r5, r3, r5
	adds r1, r0, r5
	ldrb r1, [r1, #0x1c]
	add r3, sp, #8
	cmp r1, #1
	beq _0201C8F8
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldrb r1, [r3, #0x18]
	str r1, [sp, #4]
	ldrb r1, [r3, #0x1c]
	str r1, [sp, #8]
	ldrb r3, [r3, #0x10]
	adds r1, r4, #0
	bl FUN_0201C914
	add sp, #0xc
	pop {r4, r5, pc}
_0201C8F8:
	ldrb r1, [r3, #0x14]
	adds r0, #8
	adds r0, r0, r5
	str r1, [sp]
	ldrb r1, [r3, #0x18]
	str r1, [sp, #4]
	lsls r1, r4, #0x18
	ldrb r3, [r3, #0x10]
	lsrs r1, r1, #0x18
	bl FUN_0201C9D4
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201C8C4

	thumb_func_start FUN_0201C914
FUN_0201C914: @ 0x0201C914
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r1, [sp]
	str r2, [sp, #4]
	str r3, [sp, #8]
	adds r7, r0, #0
	ldr r4, [r7]
	ldr r6, [sp, #0x40]
	cmp r4, #0
	beq _0201C9CA
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x1c
	adds r1, #1
	add r2, sp, #0x1c
	bl FUN_0201BAFC
	add r0, sp, #0x28
	ldrb r2, [r0, #0x14]
	ldr r1, [sp, #8]
	adds r1, r1, r2
	ldr r2, [sp, #8]
	str r1, [sp, #0xc]
	cmp r2, r1
	bge _0201C9CA
	ldr r2, _0201C9D0 @ =0x00000FFF
	ldr r1, [sp]
	ands r1, r2
	lsls r2, r6, #0xc
	str r1, [sp, #0x14]
	adds r1, r2, r1
	ldrb r2, [r0, #0x10]
	ldr r0, [sp, #4]
	adds r0, r0, r2
	str r0, [sp, #0x10]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
_0201C95E:
	add r0, sp, #0x1c
	ldrb r1, [r0]
	ldr r0, [sp, #8]
	cmp r0, r1
	bhs _0201C9CA
	ldr r5, [sp, #4]
	ldr r0, [sp, #0x10]
	adds r1, r5, #0
	cmp r1, r0
	bge _0201C9BA
_0201C972:
	add r0, sp, #0x1c
	ldrb r0, [r0, #1]
	cmp r5, r0
	bhs _0201C9BA
	ldrb r2, [r7, #0x15]
	ldrb r3, [r7, #0x14]
	ldr r1, [sp, #8]
	adds r0, r5, #0
	bl FUN_0201C2F0
	cmp r6, #0x11
	bne _0201C992
	lsls r1, r0, #1
	ldr r0, [sp]
	strh r0, [r4, r1]
	b _0201C9AE
_0201C992:
	cmp r6, #0x10
	bne _0201C9A8
	lsls r0, r0, #1
	ldrh r2, [r4, r0]
	movs r1, #0xf
	lsls r1, r1, #0xc
	ands r2, r1
	ldr r1, [sp, #0x14]
	adds r1, r1, r2
	strh r1, [r4, r0]
	b _0201C9AE
_0201C9A8:
	lsls r1, r0, #1
	ldr r0, [sp, #0x18]
	strh r0, [r4, r1]
_0201C9AE:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #0x10]
	cmp r5, r0
	blt _0201C972
_0201C9BA:
	ldr r0, [sp, #8]
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, [sp, #0xc]
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201C95E
_0201C9CA:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201C9D0: .4byte 0x00000FFF
	thumb_func_end FUN_0201C914

	thumb_func_start FUN_0201C9D4
FUN_0201C9D4: @ 0x0201C9D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp]
	adds r7, r0, #0
	str r2, [sp, #4]
	ldr r0, [r7]
	adds r5, r3, #0
	str r0, [sp, #0xc]
	cmp r0, #0
	beq _0201CA46
	ldrb r0, [r7, #0x15]
	add r1, sp, #0x10
	adds r1, #1
	add r2, sp, #0x10
	bl FUN_0201BAFC
	add r1, sp, #0x18
	ldrb r0, [r1, #0x14]
	adds r0, r5, r0
	str r0, [sp, #8]
	cmp r5, r0
	bge _0201CA46
	ldrb r1, [r1, #0x10]
	ldr r0, [sp, #4]
	adds r6, r0, r1
_0201CA06:
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r5, r0
	bhs _0201CA46
	ldr r4, [sp, #4]
	adds r0, r4, #0
	cmp r0, r6
	bge _0201CA3A
_0201CA16:
	add r0, sp, #0x10
	ldrb r0, [r0, #1]
	cmp r4, r0
	bhs _0201CA3A
	ldrb r2, [r7, #0x15]
	ldrb r3, [r7, #0x14]
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_0201C2F0
	ldr r2, [sp]
	ldr r1, [sp, #0xc]
	strb r2, [r1, r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blt _0201CA16
_0201CA3A:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blt _0201CA06
_0201CA46:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201C9D4

	thumb_func_start FUN_0201CA4C
FUN_0201CA4C: @ 0x0201CA4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	movs r0, #0x2c
	adds r7, r1, #0
	muls r7, r0, r7
	str r2, [sp]
	adds r0, r5, r7
	ldr r4, [r0, #8]
	adds r6, r3, #0
	cmp r4, #0
	beq _0201CAD8
	ldrb r0, [r0, #0x1d]
	add r1, sp, #0x10
	adds r1, #1
	add r2, sp, #0x10
	bl FUN_0201BAFC
	add r0, sp, #0x18
	ldrb r1, [r0, #0x14]
	adds r1, r6, r1
	str r1, [sp, #4]
	cmp r6, r1
	bge _0201CAD8
	ldrb r1, [r0, #0x18]
	adds r7, r5, r7
	lsls r1, r1, #0xc
	str r1, [sp, #0xc]
	ldrb r1, [r0, #0x10]
	ldr r0, [sp]
	adds r0, r0, r1
	str r0, [sp, #8]
_0201CA8C:
	add r0, sp, #0x10
	ldrb r0, [r0]
	cmp r6, r0
	bhs _0201CAD8
	ldr r5, [sp]
	ldr r0, [sp, #8]
	adds r1, r5, #0
	cmp r1, r0
	bge _0201CACC
_0201CA9E:
	add r0, sp, #0x10
	ldrb r0, [r0, #1]
	cmp r5, r0
	bhs _0201CACC
	ldrb r2, [r7, #0x1d]
	ldrb r3, [r7, #0x1c]
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_0201C2F0
	lsls r0, r0, #1
	ldrh r2, [r4, r0]
	ldr r1, _0201CADC @ =0x00000FFF
	ands r2, r1
	ldr r1, [sp, #0xc]
	orrs r1, r2
	strh r1, [r4, r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, [sp, #8]
	cmp r5, r0
	blt _0201CA9E
_0201CACC:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #4]
	cmp r6, r0
	blt _0201CA8C
_0201CAD8:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201CADC: .4byte 0x00000FFF
	thumb_func_end FUN_0201CA4C

	thumb_func_start FUN_0201CAE0
FUN_0201CAE0: @ 0x0201CAE0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #0x2c
	muls r0, r4, r0
	adds r2, r5, r0
	ldr r1, [r2, #8]
	cmp r1, #0
	beq _0201CB02
	ldr r2, [r2, #0xc]
	movs r0, #0
	blx FUN_020D4790
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0201BF7C
_0201CB02:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201CAE0

	thumb_func_start FUN_0201CB04
FUN_0201CB04: @ 0x0201CB04
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #0x2c
	muls r0, r4, r0
	adds r3, r5, r0
	ldr r1, [r3, #8]
	cmp r1, #0
	beq _0201CB26
	adds r0, r2, #0
	ldr r2, [r3, #0xc]
	blx FUN_020D4790
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0201BF7C
_0201CB26:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201CB04

	thumb_func_start FUN_0201CB28
FUN_0201CB28: @ 0x0201CB28
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #0x2c
	muls r0, r4, r0
	adds r3, r5, r0
	ldr r1, [r3, #8]
	cmp r1, #0
	beq _0201CB4A
	adds r0, r2, #0
	ldr r2, [r3, #0xc]
	blx FUN_020D4790
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0201EFBC
_0201CB4A:
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201CB28

	thumb_func_start FUN_0201CB4C
FUN_0201CB4C: @ 0x0201CB4C
	push {r3, lr}
	cmp r0, #7
	bhi _0201CB9E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201CB5E: @ jump table
	.2byte _0201CB6E - _0201CB5E - 2 @ case 0
	.2byte _0201CB74 - _0201CB5E - 2 @ case 1
	.2byte _0201CB7A - _0201CB5E - 2 @ case 2
	.2byte _0201CB80 - _0201CB5E - 2 @ case 3
	.2byte _0201CB86 - _0201CB5E - 2 @ case 4
	.2byte _0201CB8C - _0201CB5E - 2 @ case 5
	.2byte _0201CB92 - _0201CB5E - 2 @ case 6
	.2byte _0201CB98 - _0201CB5E - 2 @ case 7
_0201CB6E:
	blx FUN_020CEED4
	pop {r3, pc}
_0201CB74:
	blx FUN_020CEF28
	pop {r3, pc}
_0201CB7A:
	blx FUN_020CEF7C
	pop {r3, pc}
_0201CB80:
	blx FUN_020CF00C
	pop {r3, pc}
_0201CB86:
	blx FUN_020CEF08
	pop {r3, pc}
_0201CB8C:
	blx FUN_020CEF5C
	pop {r3, pc}
_0201CB92:
	blx FUN_020CEFCC
	pop {r3, pc}
_0201CB98:
	blx FUN_020CF064
	pop {r3, pc}
_0201CB9E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0201CB4C

	thumb_func_start FUN_0201CBA4
FUN_0201CBA4: @ 0x0201CBA4
	push {r4, r5, r6, r7}
	lsls r3, r3, #0x1c
	lsrs r3, r3, #0x18
	movs r4, #0
	cmp r1, #0
	bls _0201CBDE
	movs r5, #0xf
	adds r6, r5, #0
_0201CBB4:
	ldrb r7, [r0, r4]
	ands r7, r6
	strb r7, [r2]
	ldrb r7, [r2]
	cmp r7, #0
	beq _0201CBC4
	adds r7, r7, r3
	strb r7, [r2]
_0201CBC4:
	ldrb r7, [r0, r4]
	asrs r7, r7, #4
	ands r7, r5
	strb r7, [r2, #1]
	ldrb r7, [r2, #1]
	cmp r7, #0
	beq _0201CBD6
	adds r7, r7, r3
	strb r7, [r2, #1]
_0201CBD6:
	adds r4, r4, #1
	adds r2, r2, #2
	cmp r4, r1
	blo _0201CBB4
_0201CBDE:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201CBA4

	thumb_func_start FUN_0201CBE4
FUN_0201CBE4: @ 0x0201CBE4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r6, r0, #0
	adds r0, r3, #0
	lsls r1, r5, #1
	adds r7, r2, #0
	bl FUN_0201AA8C
	adds r4, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl FUN_0201CBA4
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201CBE4

	thumb_func_start FUN_0201CC08
FUN_0201CC08: @ 0x0201CC08
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #8]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201CC08

	thumb_func_start FUN_0201CC14
FUN_0201CC14: @ 0x0201CC14
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldr r0, [r0, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201CC14

	thumb_func_start FUN_0201CC20
FUN_0201CC20: @ 0x0201CC20
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldrb r0, [r0, #0x1e]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201CC20

	thumb_func_start FUN_0201CC2C
FUN_0201CC2C: @ 0x0201CC2C
	sub sp, #0x20
	cmp r1, #7
	bls _0201CC34
	b _0201CDE0
_0201CC34:
	adds r2, r1, r1
	add r2, pc
	ldrh r2, [r2, #6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	add pc, r2
_0201CC40: @ jump table
	.2byte _0201CC50 - _0201CC40 - 2 @ case 0
	.2byte _0201CC64 - _0201CC40 - 2 @ case 1
	.2byte _0201CC78 - _0201CC40 - 2 @ case 2
	.2byte _0201CCC8 - _0201CC40 - 2 @ case 3
	.2byte _0201CD18 - _0201CC40 - 2 @ case 4
	.2byte _0201CD2C - _0201CC40 - 2 @ case 5
	.2byte _0201CD40 - _0201CC40 - 2 @ case 6
	.2byte _0201CD90 - _0201CC40 - 2 @ case 7
_0201CC50:
	ldr r0, _0201CDE8 @ =0x04000008
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1e]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CC64:
	ldr r0, _0201CDEC @ =0x0400000A
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1c]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CC78:
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CC8C
	cmp r0, #1
	beq _0201CCA0
	cmp r0, #2
	beq _0201CCB4
_0201CC8C:
	ldr r0, _0201CDF0 @ =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x1a]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CCA0:
	ldr r0, _0201CDF0 @ =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x18]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CCB4:
	ldr r0, _0201CDF0 @ =0x0400000C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x16]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CCC8:
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CCDC
	cmp r0, #1
	beq _0201CCF0
	cmp r0, #2
	beq _0201CD04
_0201CCDC:
	ldr r0, _0201CDF4 @ =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x14]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CCF0:
	ldr r0, _0201CDF4 @ =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x12]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD04:
	ldr r0, _0201CDF4 @ =0x0400000E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0x10]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD18:
	ldr r0, _0201CDF8 @ =0x04001008
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xe]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD2C:
	ldr r0, _0201CDFC @ =0x0400100A
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xc]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD40:
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CD54
	cmp r0, #1
	beq _0201CD68
	cmp r0, #2
	beq _0201CD7C
_0201CD54:
	ldr r0, _0201CE00 @ =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #0xa]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD68:
	ldr r0, _0201CE00 @ =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #8]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD7C:
	ldr r0, _0201CE00 @ =0x0400100C
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #6]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CD90:
	movs r2, #0x2c
	muls r2, r1, r2
	adds r0, r0, r2
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _0201CDA4
	cmp r0, #1
	beq _0201CDB8
	cmp r0, #2
	beq _0201CDCC
_0201CDA4:
	ldr r0, _0201CE04 @ =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #4]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CDB8:
	ldr r0, _0201CE04 @ =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0, #2]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CDCC:
	ldr r0, _0201CE04 @ =0x0400100E
	ldrh r1, [r0]
	add r0, sp, #0
	add sp, #0x20
	strh r1, [r0]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
_0201CDE0:
	movs r0, #0
	add sp, #0x20
	bx lr
	nop
_0201CDE8: .4byte 0x04000008
_0201CDEC: .4byte 0x0400000A
_0201CDF0: .4byte 0x0400000C
_0201CDF4: .4byte 0x0400000E
_0201CDF8: .4byte 0x04001008
_0201CDFC: .4byte 0x0400100A
_0201CE00: .4byte 0x0400100C
_0201CE04: .4byte 0x0400100E
	thumb_func_end FUN_0201CC2C

	thumb_func_start FUN_0201CE08
FUN_0201CE08: @ 0x0201CE08
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x68
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	add r2, sp, #0x70
	str r0, [sp]
	ldrh r0, [r2, #0x10]
	str r1, [sp, #4]
	ldrh r2, [r2, #0x18]
	str r0, [sp, #0x10]
	adds r0, r1, #0
	ldrh r1, [r0, #4]
	ldr r0, [sp, #0x10]
	subs r3, r1, r0
	cmp r3, r2
	bge _0201CE30
	ldr r0, [sp, #8]
	adds r0, r0, r3
	str r0, [sp, #0x50]
	b _0201CE36
_0201CE30:
	ldr r0, [sp, #8]
	adds r0, r2, r0
	str r0, [sp, #0x50]
_0201CE36:
	ldr r2, [sp, #4]
	add r3, sp, #0x70
	ldrh r0, [r3, #0x14]
	ldrh r2, [r2, #6]
	ldrh r3, [r3, #0x1c]
	subs r4, r2, r0
	cmp r4, r3
	bge _0201CE4E
	ldr r2, [sp, #0xc]
	adds r2, r2, r4
	str r2, [sp, #0x4c]
	b _0201CE54
_0201CE4E:
	ldr r2, [sp, #0xc]
	adds r2, r3, r2
	str r2, [sp, #0x4c]
_0201CE54:
	ldr r2, [sp]
	movs r3, #7
	ldrh r4, [r2, #4]
	adds r2, r4, #0
	ands r2, r3
	adds r2, r4, r2
	asrs r2, r2, #3
	str r2, [sp, #0x48]
	adds r2, r1, #0
	ands r2, r3
	adds r1, r1, r2
	asrs r1, r1, #3
	str r1, [sp, #0x44]
	add r1, sp, #0x70
	ldrh r1, [r1, #0x20]
	ldr r2, _0201D040 @ =0x0000FFFF
	str r1, [sp, #0x38]
	cmp r1, r2
	bne _0201CF5C
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bge _0201CE86
	cmp r2, r1
	blt _0201CE88
_0201CE86:
	b _0201D03A
_0201CE88:
	adds r1, r2, #0
	lsls r1, r1, #2
	lsls r0, r0, #2
	str r1, [sp, #0x28]
	str r0, [sp, #0x24]
_0201CE92:
	ldr r3, [sp, #8]
	ldr r0, [sp, #0x50]
	adds r1, r3, #0
	ldr r4, [sp, #0x10]
	cmp r1, r0
	bge _0201CF3E
	cmp r1, r0
	bge _0201CF3E
	adds r0, r3, #0
	lsls r5, r0, #2
	adds r0, r4, #0
	lsls r6, r0, #2
	ldr r0, _0201D044 @ =0x00003FE0
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x48]
	ands r1, r0
	muls r2, r1, r2
	str r2, [sp, #0x20]
	ldr r2, [sp, #0x28]
	movs r1, #0x1c
	ands r2, r1
	str r2, [sp, #0x1c]
	ldr r2, [sp, #0x24]
	ands r0, r2
	ldr r2, [sp, #0x44]
	muls r2, r0, r2
	ldr r0, [sp, #0x24]
	str r2, [sp, #0x18]
	ands r0, r1
	str r0, [sp, #0x14]
_0201CECE:
	ldr r0, [sp, #4]
	asrs r2, r4, #1
	movs r1, #3
	ldr r0, [r0]
	ands r1, r2
	adds r1, r0, r1
	ldr r0, _0201D044 @ =0x00003FE0
	ands r0, r6
	adds r1, r1, r0
	ldr r0, [sp, #0x18]
	adds r6, r6, #4
	adds r0, r1, r0
	str r0, [sp, #0x64]
	lsls r0, r4, #0x1f
	lsrs r2, r0, #0x1d
	ldr r0, [sp]
	asrs r1, r3, #1
	ldr r7, [r0]
	movs r0, #3
	ands r0, r1
	ldr r1, _0201D044 @ =0x00003FE0
	adds r4, r4, #1
	ands r1, r5
	str r1, [sp, #0x54]
	adds r1, r7, r0
	ldr r0, [sp, #0x54]
	adds r5, r5, #4
	adds r1, r0, r1
	ldr r0, [sp, #0x20]
	adds r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r1, [r0, r1]
	lsls r0, r3, #0x1f
	lsrs r0, r0, #0x1d
	asrs r1, r0
	movs r0, #0xf
	ands r0, r1
	adds r7, r0, #0
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #0x64]
	lsls r7, r2
	ldrb r0, [r0, r1]
	adds r3, r3, #1
	str r0, [sp, #0x58]
	movs r0, #0xf0
	asrs r0, r2
	ldr r1, [sp, #0x58]
	adds r2, r7, #0
	ands r0, r1
	orrs r2, r0
	ldr r1, [sp, #0x14]
	ldr r0, [sp, #0x64]
	strb r2, [r0, r1]
	ldr r0, [sp, #0x50]
	cmp r3, r0
	blt _0201CECE
_0201CF3E:
	ldr r0, [sp, #0x28]
	adds r0, r0, #4
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	adds r0, r0, #4
	str r0, [sp, #0x24]
	ldr r0, [sp, #0x4c]
	cmp r1, r0
	blt _0201CE92
	add sp, #0x68
	pop {r3, r4, r5, r6, r7, pc}
_0201CF5C:
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bge _0201D03A
	cmp r2, r1
	bge _0201D03A
	adds r1, r2, #0
	lsls r1, r1, #2
	lsls r0, r0, #2
	str r1, [sp, #0x40]
	str r0, [sp, #0x3c]
_0201CF72:
	ldr r3, [sp, #8]
	ldr r0, [sp, #0x50]
	adds r1, r3, #0
	ldr r4, [sp, #0x10]
	cmp r1, r0
	bge _0201D020
	cmp r1, r0
	bge _0201D020
	adds r0, r3, #0
	lsls r1, r0, #2
	adds r0, r4, #0
	lsls r2, r0, #2
	ldr r0, _0201D044 @ =0x00003FE0
	ldr r5, [sp, #0x40]
	ldr r6, [sp, #0x48]
	ands r5, r0
	muls r6, r5, r6
	str r6, [sp, #0x34]
	ldr r6, [sp, #0x40]
	movs r5, #0x1c
	ands r6, r5
	str r6, [sp, #0x30]
	ldr r6, [sp, #0x3c]
	ands r0, r6
	ldr r6, [sp, #0x44]
	muls r6, r0, r6
	ldr r0, [sp, #0x3c]
	str r6, [sp, #0x2c]
	ands r0, r5
	str r0, [sp, #0x60]
_0201CFAE:
	ldr r0, [sp, #4]
	asrs r6, r4, #1
	movs r5, #3
	ands r5, r6
	ldr r0, [r0]
	asrs r6, r3, #1
	adds r5, r0, r5
	ldr r0, _0201D044 @ =0x00003FE0
	ands r0, r2
	adds r5, r5, r0
	ldr r0, [sp, #0x2c]
	adds r5, r5, r0
	ldr r0, [sp]
	ldr r7, [r0]
	movs r0, #3
	ands r0, r6
	ldr r6, _0201D044 @ =0x00003FE0
	ands r6, r1
	str r6, [sp, #0x5c]
	adds r6, r7, r0
	ldr r0, [sp, #0x5c]
	adds r6, r0, r6
	ldr r0, [sp, #0x34]
	adds r6, r0, r6
	ldr r0, [sp, #0x30]
	ldrb r6, [r0, r6]
	lsls r0, r3, #0x1f
	lsrs r0, r0, #0x1d
	asrs r6, r0
	movs r0, #0xf
	ands r0, r6
	ldr r6, [sp, #0x38]
	cmp r0, r6
	beq _0201D012
	lsls r6, r4, #0x1f
	lsrs r7, r6, #0x1d
	lsls r0, r7
	mov lr, r0
	ldr r0, [sp, #0x60]
	ldrb r0, [r5, r0]
	mov ip, r0
	movs r0, #0xf0
	adds r6, r0, #0
	asrs r6, r7
	mov r0, ip
	ands r0, r6
	mov r6, lr
	orrs r6, r0
	ldr r0, [sp, #0x60]
	strb r6, [r5, r0]
_0201D012:
	ldr r0, [sp, #0x50]
	adds r3, r3, #1
	adds r1, r1, #4
	adds r2, r2, #4
	adds r4, r4, #1
	cmp r3, r0
	blt _0201CFAE
_0201D020:
	ldr r0, [sp, #0x40]
	adds r0, r0, #4
	str r0, [sp, #0x40]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x3c]
	ldr r1, [sp, #0xc]
	adds r0, r0, #4
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x4c]
	cmp r1, r0
	blt _0201CF72
_0201D03A:
	add sp, #0x68
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201D040: .4byte 0x0000FFFF
_0201D044: .4byte 0x00003FE0
	thumb_func_end FUN_0201CE08

	thumb_func_start FUN_0201D048
FUN_0201D048: @ 0x0201D048
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x50
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	add r2, sp, #0x58
	str r0, [sp]
	ldrh r0, [r2, #0x10]
	str r1, [sp, #4]
	ldrh r2, [r2, #0x18]
	str r0, [sp, #0x10]
	adds r0, r1, #0
	ldrh r1, [r0, #4]
	ldr r0, [sp, #0x10]
	subs r3, r1, r0
	cmp r3, r2
	bge _0201D06E
	ldr r0, [sp, #8]
	adds r0, r0, r3
	b _0201D072
_0201D06E:
	ldr r0, [sp, #8]
	adds r0, r2, r0
_0201D072:
	ldr r2, [sp, #4]
	add r3, sp, #0x58
	mov ip, r0
	ldrh r0, [r3, #0x14]
	ldrh r2, [r2, #6]
	ldrh r3, [r3, #0x1c]
	subs r4, r2, r0
	cmp r4, r3
	bge _0201D08A
	ldr r2, [sp, #0xc]
	adds r2, r2, r4
	b _0201D08E
_0201D08A:
	ldr r2, [sp, #0xc]
	adds r2, r3, r2
_0201D08E:
	mov lr, r2
	ldr r2, [sp]
	movs r3, #7
	ldrh r4, [r2, #4]
	adds r2, r4, #0
	ands r2, r3
	adds r2, r4, r2
	asrs r2, r2, #3
	str r2, [sp, #0x4c]
	adds r2, r1, #0
	ands r2, r3
	adds r1, r1, r2
	asrs r1, r1, #3
	str r1, [sp, #0x48]
	add r1, sp, #0x58
	ldrh r1, [r1, #0x20]
	ldr r2, _0201D228 @ =0x0000FFFF
	str r1, [sp, #0x3c]
	cmp r1, r2
	bne _0201D16E
	ldr r2, [sp, #0xc]
	mov r1, lr
	cmp r2, r1
	bge _0201D0C4
	mov r1, lr
	cmp r2, r1
	blt _0201D0C6
_0201D0C4:
	b _0201D224
_0201D0C6:
	adds r1, r2, #0
	lsls r1, r1, #3
	lsls r0, r0, #3
	str r1, [sp, #0x28]
	str r0, [sp, #0x24]
_0201D0D0:
	ldr r1, [sp, #8]
	mov r0, ip
	adds r2, r1, #0
	ldr r7, [sp, #0x10]
	cmp r2, r0
	bge _0201D150
	mov r0, ip
	cmp r2, r0
	bge _0201D150
	adds r0, r1, #0
	lsls r2, r0, #3
	adds r0, r7, #0
	lsls r3, r0, #3
	ldr r6, _0201D22C @ =0x00007FC0
	ldr r0, [sp, #0x28]
	ldr r4, [sp, #0x4c]
	ands r0, r6
	muls r4, r0, r4
	str r4, [sp, #0x20]
	ldr r0, [sp, #0x28]
	movs r5, #0x38
	ands r0, r5
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x24]
	ldr r4, [sp, #0x48]
	ands r0, r6
	muls r4, r0, r4
	ldr r0, [sp, #0x24]
	str r4, [sp, #0x18]
	ands r0, r5
	str r0, [sp, #0x14]
_0201D10E:
	ldr r0, [sp]
	adds r5, r1, #0
	movs r4, #7
	ands r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C @ =0x00007FC0
	adds r0, r0, r5
	ands r4, r2
	adds r4, r4, r0
	ldr r0, [sp, #0x20]
	adds r5, r7, #0
	adds r4, r0, r4
	ldr r0, [sp, #0x1c]
	adds r1, r1, #1
	ldrb r6, [r0, r4]
	ldr r0, [sp, #4]
	movs r4, #7
	ands r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C @ =0x00007FC0
	adds r0, r0, r5
	ands r4, r3
	adds r4, r4, r0
	ldr r0, [sp, #0x18]
	adds r2, #8
	adds r4, r0, r4
	ldr r0, [sp, #0x14]
	adds r3, #8
	strb r6, [r0, r4]
	mov r0, ip
	adds r7, r7, #1
	cmp r1, r0
	blt _0201D10E
_0201D150:
	ldr r0, [sp, #0x28]
	adds r0, #8
	str r0, [sp, #0x28]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0xc]
	adds r0, #8
	str r0, [sp, #0x24]
	mov r0, lr
	cmp r1, r0
	blt _0201D0D0
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
_0201D16E:
	ldr r2, [sp, #0xc]
	mov r1, lr
	cmp r2, r1
	bge _0201D224
	mov r1, lr
	cmp r2, r1
	bge _0201D224
	adds r1, r2, #0
	lsls r1, r1, #3
	lsls r0, r0, #3
	str r1, [sp, #0x44]
	str r0, [sp, #0x40]
_0201D186:
	ldr r2, [sp, #8]
	mov r0, ip
	adds r1, r2, #0
	ldr r3, [sp, #0x10]
	cmp r1, r0
	bge _0201D20A
	mov r0, ip
	cmp r1, r0
	bge _0201D20A
	adds r0, r2, #0
	lsls r6, r0, #3
	adds r0, r3, #0
	lsls r1, r0, #3
	ldr r7, _0201D22C @ =0x00007FC0
	ldr r0, [sp, #0x44]
	ldr r4, [sp, #0x4c]
	ands r0, r7
	muls r4, r0, r4
	str r4, [sp, #0x38]
	ldr r0, [sp, #0x44]
	movs r5, #0x38
	ands r0, r5
	str r0, [sp, #0x34]
	ldr r0, [sp, #0x40]
	ldr r4, [sp, #0x48]
	ands r0, r7
	muls r4, r0, r4
	ldr r0, [sp, #0x40]
	str r4, [sp, #0x30]
	ands r0, r5
	str r0, [sp, #0x2c]
_0201D1C4:
	ldr r0, [sp, #4]
	movs r4, #7
	ldr r0, [r0]
	ands r4, r3
	adds r0, r0, r4
	ldr r4, _0201D22C @ =0x00007FC0
	adds r5, r2, #0
	ands r4, r1
	adds r4, r0, r4
	ldr r0, [sp, #0x30]
	adds r7, r4, r0
	ldr r0, [sp]
	movs r4, #7
	ands r5, r4
	ldr r0, [r0]
	ldr r4, _0201D22C @ =0x00007FC0
	adds r0, r0, r5
	ands r4, r6
	adds r4, r4, r0
	ldr r0, [sp, #0x38]
	adds r4, r0, r4
	ldr r0, [sp, #0x34]
	ldrb r0, [r0, r4]
	ldr r4, [sp, #0x3c]
	cmp r0, r4
	beq _0201D1FC
	ldr r4, [sp, #0x2c]
	strb r0, [r7, r4]
_0201D1FC:
	adds r2, r2, #1
	mov r0, ip
	adds r6, #8
	adds r1, #8
	adds r3, r3, #1
	cmp r2, r0
	blt _0201D1C4
_0201D20A:
	ldr r0, [sp, #0x44]
	adds r0, #8
	str r0, [sp, #0x44]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x40]
	ldr r1, [sp, #0xc]
	adds r0, #8
	str r0, [sp, #0x40]
	mov r0, lr
	cmp r1, r0
	blt _0201D186
_0201D224:
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201D228: .4byte 0x0000FFFF
_0201D22C: .4byte 0x00007FC0
	thumb_func_end FUN_0201D048

	thumb_func_start FUN_0201D230
FUN_0201D230: @ 0x0201D230
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #4]
	adds r6, r0, r3
	ldr r0, [sp]
	ldrh r0, [r0, #4]
	cmp r6, r0
	ble _0201D24C
	adds r6, r0, #0
_0201D24C:
	add r1, sp, #0x18
	ldrh r2, [r1, #0x10]
	ldr r1, [sp, #8]
	adds r1, r1, r2
	mov ip, r1
	ldr r1, [sp]
	ldrh r2, [r1, #6]
	mov r1, ip
	cmp r1, r2
	ble _0201D262
	mov ip, r2
_0201D262:
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	mov lr, r0
	ldr r1, [sp, #8]
	mov r0, ip
	cmp r1, r0
	bge _0201D2EC
	adds r0, r1, #0
	lsls r0, r0, #2
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x2c]
	lsls r0, r0, #4
	str r0, [sp, #0x10]
_0201D280:
	ldr r1, [sp, #4]
	adds r0, r1, #0
	cmp r0, r6
	bge _0201D2DA
	lsls r5, r0, #2
	ldr r2, _0201D2F0 @ =0x00003FE0
	ldr r0, [sp, #0xc]
	ands r0, r2
	adds r7, r0, #0
	mov r2, lr
	muls r7, r2, r7
	ldr r0, [sp, #0xc]
	movs r2, #0x1c
	ands r2, r0
_0201D29C:
	ldr r0, [sp]
	asrs r3, r1, #1
	ldr r4, [r0]
	movs r0, #3
	ands r0, r3
	ldr r3, _0201D2F0 @ =0x00003FE0
	adds r0, r4, r0
	ands r3, r5
	adds r0, r0, r3
	adds r0, r0, r7
	movs r3, #1
	tst r3, r1
	ldrb r4, [r0, r2]
	beq _0201D2C4
	movs r3, #0xf
	ands r3, r4
	strb r3, [r0, r2]
	ldrb r4, [r0, r2]
	ldr r3, [sp, #0x10]
	b _0201D2CE
_0201D2C4:
	movs r3, #0xf0
	ands r3, r4
	strb r3, [r0, r2]
	ldrb r4, [r0, r2]
	ldr r3, [sp, #0x2c]
_0201D2CE:
	orrs r3, r4
	adds r1, r1, #1
	strb r3, [r0, r2]
	adds r5, r5, #4
	cmp r1, r6
	blt _0201D29C
_0201D2DA:
	ldr r0, [sp, #0xc]
	adds r0, r0, #4
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	adds r1, r0, #1
	mov r0, ip
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201D280
_0201D2EC:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201D2F0: .4byte 0x00003FE0
	thumb_func_end FUN_0201D230

	thumb_func_start FUN_0201D2F4
FUN_0201D2F4: @ 0x0201D2F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x2c]
	ldr r0, [sp, #4]
	adds r5, r0, r3
	ldr r0, [sp]
	ldrh r0, [r0, #4]
	cmp r5, r0
	ble _0201D310
	adds r5, r0, #0
_0201D310:
	add r1, sp, #0x18
	ldrh r2, [r1, #0x10]
	ldr r1, [sp, #8]
	adds r1, r1, r2
	mov lr, r1
	ldr r1, [sp]
	ldrh r2, [r1, #6]
	mov r1, lr
	cmp r1, r2
	ble _0201D326
	mov lr, r2
_0201D326:
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x10]
	ldr r1, [sp, #8]
	mov r0, lr
	cmp r1, r0
	bge _0201D392
	adds r0, r1, #0
	lsls r0, r0, #3
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	lsls r0, r0, #3
	mov ip, r0
_0201D344:
	ldr r2, [sp, #4]
	adds r0, r2, #0
	cmp r0, r5
	bge _0201D380
	ldr r1, [sp, #0xc]
	ldr r0, _0201D398 @ =0x00007FC0
	mov r3, ip
	ands r0, r1
	adds r7, r0, #0
	ldr r1, [sp, #0x10]
	movs r0, #0x38
	muls r7, r1, r7
	ldr r1, [sp, #0xc]
	adds r6, r1, #0
	ands r6, r0
_0201D362:
	ldr r0, [sp]
	ldr r4, _0201D398 @ =0x00007FC0
	ldr r1, [r0]
	movs r0, #7
	ands r0, r2
	ands r4, r3
	adds r0, r1, r0
	adds r0, r4, r0
	adds r1, r7, r0
	ldr r0, [sp, #0x2c]
	adds r2, r2, #1
	strb r0, [r6, r1]
	adds r3, #8
	cmp r2, r5
	blt _0201D362
_0201D380:
	ldr r0, [sp, #0xc]
	adds r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp, #8]
	adds r1, r0, #1
	mov r0, lr
	str r1, [sp, #8]
	cmp r1, r0
	blt _0201D344
_0201D392:
	add sp, #0x14
	pop {r4, r5, r6, r7, pc}
	nop
_0201D398: .4byte 0x00007FC0
	thumb_func_end FUN_0201D2F4

	thumb_func_start FUN_0201D39C
FUN_0201D39C: @ 0x0201D39C
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	lsls r1, r5, #4
	bl FUN_0201AA8C
	adds r6, r0, #0
	movs r4, #0
	cmp r5, #0
	ble _0201D3C0
_0201D3AE:
	lsls r0, r4, #4
	adds r0, r6, r0
	bl FUN_0201D3C4
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r5
	blt _0201D3AE
_0201D3C0:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201D39C

	thumb_func_start FUN_0201D3C4
FUN_0201D3C4: @ 0x0201D3C4
	movs r3, #0
	str r3, [r0]
	movs r1, #0xff
	strb r1, [r0, #4]
	strb r3, [r0, #5]
	strb r3, [r0, #6]
	strb r3, [r0, #7]
	strb r3, [r0, #8]
	strb r3, [r0, #9]
	ldrh r2, [r0, #0xa]
	ldr r1, _0201D3EC @ =0xFFFF8000
	ands r2, r1
	strh r2, [r0, #0xa]
	str r3, [r0, #0xc]
	ldrh r2, [r0, #0xa]
	subs r1, r1, #1
	ands r1, r2
	strh r1, [r0, #0xa]
	bx lr
	nop
_0201D3EC: .4byte 0xFFFF8000
	thumb_func_end FUN_0201D3C4

	thumb_func_start FUN_0201D3F0
FUN_0201D3F0: @ 0x0201D3F0
	ldr r1, [r0]
	cmp r1, #0
	beq _0201D402
	ldrb r1, [r0, #4]
	cmp r1, #0xff
	beq _0201D402
	ldr r0, [r0, #0xc]
	cmp r0, #0
	bne _0201D406
_0201D402:
	movs r0, #0
	bx lr
_0201D406:
	movs r0, #1
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201D3F0

	thumb_func_start FUN_0201D40C
FUN_0201D40C: @ 0x0201D40C
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r5, r0, #0
	movs r0, #0x2c
	adds r7, r6, #0
	muls r7, r0, r7
	adds r4, r1, #0
	str r3, [sp]
	adds r1, r5, r7
	ldr r0, [r1, #8]
	cmp r0, #0
	beq _0201D488
	add r3, sp, #8
	ldrb r2, [r1, #0x1f]
	ldrb r1, [r3, #0x14]
	ldrb r3, [r3, #0x18]
	ldr r0, [r5]
	muls r3, r1, r3
	adds r1, r2, #0
	muls r1, r3, r1
	bl FUN_0201AA8C
	adds r1, r0, #0
	beq _0201D488
	str r5, [r4]
	strb r6, [r4, #4]
	ldr r0, [sp]
	add r3, sp, #8
	strb r0, [r4, #5]
	ldrb r0, [r3, #0x10]
	ldr r2, _0201D48C @ =0xFFFF8000
	strb r0, [r4, #6]
	ldrb r0, [r3, #0x14]
	strb r0, [r4, #7]
	ldrb r0, [r3, #0x18]
	strb r0, [r4, #8]
	ldrb r0, [r3, #0x1c]
	strb r0, [r4, #9]
	ldrh r0, [r4, #0xa]
	ldrh r3, [r3, #0x20]
	ands r0, r2
	lsrs r2, r2, #0x11
	ands r2, r3
	orrs r0, r2
	strh r0, [r4, #0xa]
	str r1, [r4, #0xc]
	adds r0, r5, r7
	ldrb r0, [r0, #0x1e]
	cmp r0, #0
	bne _0201D474
	movs r2, #0
	b _0201D476
_0201D474:
	movs r2, #1
_0201D476:
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D490 @ =0xFFFF7FFF
	ands r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r4, #0xa]
_0201D488:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201D48C: .4byte 0xFFFF8000
_0201D490: .4byte 0xFFFF7FFF
	thumb_func_end FUN_0201D40C

	thumb_func_start FUN_0201D494
FUN_0201D494: @ 0x0201D494
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	str r3, [sp]
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	adds r6, r2, #0
	str r0, [sp, #0x24]
	ldr r0, [sp]
	adds r4, r1, #0
	muls r0, r6, r0
	lsls r0, r0, #5
	str r0, [sp, #4]
	ldr r0, [r5]
	ldr r1, [sp, #4]
	bl FUN_0201AA8C
	ldr r1, [sp, #0x24]
	adds r7, r0, #0
	lsls r2, r1, #4
	orrs r1, r2
	lsls r1, r1, #0x18
	ldr r2, [sp, #4]
	lsrs r1, r1, #0x18
	blx FUN_020E5B44
	cmp r7, #0
	beq _0201D4F0
	str r5, [r4]
	strb r6, [r4, #7]
	ldr r0, [sp]
	strb r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D4F4 @ =0xFFFF8000
	adds r3, r1, #0
	add r1, sp, #0x10
	ldrh r2, [r1, #0x10]
	lsrs r1, r0, #0x11
	ands r3, r0
	ands r1, r2
	orrs r1, r3
	strh r1, [r4, #0xa]
	str r7, [r4, #0xc]
	ldrh r1, [r4, #0xa]
	subs r0, r0, #1
	ands r0, r1
	strh r0, [r4, #0xa]
_0201D4F0:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201D4F4: .4byte 0xFFFF8000
	thumb_func_end FUN_0201D494

	thumb_func_start FUN_0201D4F8
FUN_0201D4F8: @ 0x0201D4F8
	push {lr}
	sub sp, #0x14
	adds r3, r2, #0
	ldrb r2, [r3, #2]
	str r2, [sp]
	ldrb r2, [r3, #3]
	str r2, [sp, #4]
	ldrb r2, [r3, #4]
	str r2, [sp, #8]
	ldrb r2, [r3, #5]
	str r2, [sp, #0xc]
	ldrh r2, [r3, #6]
	str r2, [sp, #0x10]
	ldrb r2, [r3]
	ldrb r3, [r3, #1]
	bl FUN_0201D40C
	add sp, #0x14
	pop {pc}
	.align 2, 0
	thumb_func_end FUN_0201D4F8

	thumb_func_start FUN_0201D520
FUN_0201D520: @ 0x0201D520
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0xc]
	bl FUN_0201AB0C
	movs r2, #0
	str r2, [r4]
	movs r0, #0xff
	strb r0, [r4, #4]
	strb r2, [r4, #5]
	strb r2, [r4, #6]
	strb r2, [r4, #7]
	strb r2, [r4, #8]
	strb r2, [r4, #9]
	ldrh r1, [r4, #0xa]
	ldr r0, _0201D548 @ =0xFFFF8000
	ands r0, r1
	strh r0, [r4, #0xa]
	str r2, [r4, #0xc]
	pop {r4, pc}
	.align 2, 0
_0201D548: .4byte 0xFFFF8000
	thumb_func_end FUN_0201D520

	thumb_func_start FUN_0201D54C
FUN_0201D54C: @ 0x0201D54C
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	movs r4, #0
	cmp r6, #0
	ble _0201D570
_0201D558:
	lsls r0, r4, #4
	adds r0, r5, r0
	ldr r0, [r0, #0xc]
	cmp r0, #0
	beq _0201D566
	bl FUN_0201AB0C
_0201D566:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r6
	blt _0201D558
_0201D570:
	adds r0, r5, #0
	bl FUN_0201AB0C
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0201D54C

	thumb_func_start FUN_0201D578
FUN_0201D578: @ 0x0201D578
	push {r4, lr}
	adds r4, r0, #0
	bne _0201D582
	bl FUN_0202551C
_0201D582:
	ldr r0, [r4]
	cmp r0, #0
	bne _0201D58C
	bl FUN_0202551C
_0201D58C:
	ldrb r0, [r4, #4]
	cmp r0, #8
	blo _0201D596
	bl FUN_0202551C
_0201D596:
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	ldr r2, [r4]
	muls r0, r1, r0
	adds r0, r2, r0
	ldrb r0, [r0, #0x1c]
	cmp r0, #3
	blo _0201D5AA
	bl FUN_0202551C
_0201D5AA:
	ldrb r2, [r4, #4]
	movs r1, #0x2c
	ldr r3, [r4]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	adds r0, r4, #0
	lsls r2, r1, #2
	ldr r1, _0201D5C4 @ =_020F62FC
	ldr r1, [r1, r2]
	blx r1
	pop {r4, pc}
	nop
_0201D5C4: .4byte _020F62FC
	thumb_func_end FUN_0201D578

	thumb_func_start FUN_0201D5C8
FUN_0201D5C8: @ 0x0201D5C8
	push {r4, lr}
	adds r4, r0, #0
	bne _0201D5D2
	bl FUN_0202551C
_0201D5D2:
	ldr r0, [r4]
	cmp r0, #0
	bne _0201D5DC
	bl FUN_0202551C
_0201D5DC:
	ldrb r0, [r4, #4]
	cmp r0, #8
	blo _0201D5E6
	bl FUN_0202551C
_0201D5E6:
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	ldr r2, [r4]
	muls r0, r1, r0
	adds r0, r2, r0
	ldrb r0, [r0, #0x1c]
	cmp r0, #3
	blo _0201D5FA
	bl FUN_0202551C
_0201D5FA:
	ldrb r2, [r4, #4]
	movs r1, #0x2c
	ldr r3, [r4]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	adds r0, r4, #0
	lsls r2, r1, #2
	ldr r1, _0201D614 @ =_020F62F0
	ldr r1, [r1, r2]
	blx r1
	pop {r4, pc}
	nop
_0201D614: .4byte _020F62F0
	thumb_func_end FUN_0201D5C8

	thumb_func_start FUN_0201D618
FUN_0201D618: @ 0x0201D618
	push {r3, lr}
	ldrb r2, [r0, #4]
	movs r1, #0x2c
	ldr r3, [r0]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsls r2, r1, #2
	ldr r1, _0201D630 @ =_020F62CC
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D630: .4byte _020F62CC
	thumb_func_end FUN_0201D618

	thumb_func_start FUN_0201D634
FUN_0201D634: @ 0x0201D634
	push {r3, lr}
	ldrb r2, [r0, #4]
	movs r1, #0x2c
	ldr r3, [r0]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsls r2, r1, #2
	ldr r1, _0201D64C @ =_020F6308
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D64C: .4byte _020F6308
	thumb_func_end FUN_0201D634

	thumb_func_start FUN_0201D650
FUN_0201D650: @ 0x0201D650
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	ldrb r1, [r6, #4]
	movs r0, #0x2c
	ldr r2, [r6]
	muls r0, r1, r0
	adds r0, r2, r0
	ldr r0, [r0, #8]
	str r0, [sp]
	cmp r0, #0
	beq _0201D6CA
	ldrh r0, [r6, #0xa]
	ldrb r1, [r6, #5]
	lsls r0, r0, #0x11
	lsrs r5, r0, #0x11
	ldrb r0, [r6, #7]
	adds r7, r1, r0
	ldrb r0, [r6, #6]
	ldrb r1, [r6, #8]
	str r0, [sp, #8]
	adds r0, r0, r1
	ldr r1, [sp, #8]
	str r0, [sp, #4]
	cmp r1, r0
	bhs _0201D6CA
_0201D684:
	ldrb r4, [r6, #5]
	cmp r4, r7
	bhs _0201D6BE
	ldr r0, [sp, #8]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
_0201D692:
	ldrb r2, [r6, #4]
	movs r1, #0x2c
	ldr r0, [r6]
	muls r1, r2, r1
	adds r3, r0, r1
	ldrb r2, [r3, #0x1d]
	lsls r0, r4, #0x18
	ldrb r3, [r3, #0x1c]
	ldr r1, [sp, #0xc]
	lsrs r0, r0, #0x18
	bl FUN_0201C2F0
	ldrb r1, [r6, #9]
	lsls r2, r0, #1
	ldr r0, [sp]
	lsls r1, r1, #0xc
	orrs r1, r5
	adds r4, r4, #1
	strh r1, [r0, r2]
	adds r5, r5, #1
	cmp r4, r7
	blo _0201D692
_0201D6BE:
	ldr r0, [sp, #8]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _0201D684
_0201D6CA:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201D650

	thumb_func_start FUN_0201D6D0
FUN_0201D6D0: @ 0x0201D6D0
	push {r4, r5, r6, r7}
	ldrb r3, [r0, #4]
	movs r1, #0x2c
	adds r2, r3, #0
	muls r2, r1, r2
	ldr r1, [r0]
	adds r1, r1, r2
	ldr r3, [r1, #8]
	cmp r3, #0
	beq _0201D724
	ldrb r2, [r1, #0x1d]
	ldr r1, _0201D728 @ =_020F62C4
	ldrb r6, [r1, r2]
	ldrb r1, [r0, #6]
	adds r2, r1, #0
	muls r2, r6, r2
	adds r2, r3, r2
	ldrb r1, [r0, #5]
	movs r3, #0
	adds r4, r2, r1
	ldrh r1, [r0, #0xa]
	lsls r1, r1, #0x11
	lsrs r5, r1, #0x11
	ldrb r1, [r0, #8]
	cmp r1, #0
	ble _0201D724
	adds r1, r3, #0
_0201D706:
	ldrb r7, [r0, #7]
	adds r2, r1, #0
	cmp r7, #0
	ble _0201D71A
_0201D70E:
	strb r5, [r4, r2]
	ldrb r7, [r0, #7]
	adds r2, r2, #1
	adds r5, r5, #1
	cmp r2, r7
	blt _0201D70E
_0201D71A:
	ldrb r2, [r0, #8]
	adds r3, r3, #1
	adds r4, r4, r6
	cmp r3, r2
	blt _0201D706
_0201D724:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
_0201D728: .4byte _020F62C4
	thumb_func_end FUN_0201D6D0

	thumb_func_start FUN_0201D72C
FUN_0201D72C: @ 0x0201D72C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldrb r1, [r5, #4]
	movs r0, #0x2c
	ldr r2, [r5]
	muls r0, r1, r0
	adds r0, r2, r0
	ldr r0, [r0, #8]
	str r0, [sp]
	cmp r0, #0
	beq _0201D798
	ldrb r1, [r5, #5]
	ldrb r0, [r5, #7]
	adds r6, r1, r0
	ldrb r0, [r5, #6]
	ldrb r1, [r5, #8]
	str r0, [sp, #8]
	adds r0, r0, r1
	ldr r1, [sp, #8]
	str r0, [sp, #4]
	cmp r1, r0
	bhs _0201D798
_0201D75A:
	ldrb r4, [r5, #5]
	cmp r4, r6
	bhs _0201D78C
	ldr r0, [sp, #8]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_0201D766:
	ldrb r2, [r5, #4]
	movs r1, #0x2c
	ldr r0, [r5]
	muls r1, r2, r1
	adds r3, r0, r1
	ldrb r2, [r3, #0x1d]
	lsls r0, r4, #0x18
	ldrb r3, [r3, #0x1c]
	lsrs r0, r0, #0x18
	adds r1, r7, #0
	bl FUN_0201C2F0
	lsls r2, r0, #1
	ldr r0, [sp]
	movs r1, #0
	adds r4, r4, #1
	strh r1, [r0, r2]
	cmp r4, r6
	blo _0201D766
_0201D78C:
	ldr r0, [sp, #8]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #8]
	cmp r1, r0
	blo _0201D75A
_0201D798:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201D72C

	thumb_func_start FUN_0201D79C
FUN_0201D79C: @ 0x0201D79C
	push {r4, r5, r6, r7}
	ldrb r3, [r0, #4]
	movs r1, #0x2c
	adds r2, r3, #0
	muls r2, r1, r2
	ldr r1, [r0]
	adds r1, r1, r2
	ldr r3, [r1, #8]
	cmp r3, #0
	beq _0201D7EA
	ldrb r2, [r1, #0x1d]
	ldr r1, _0201D7F0 @ =_020F62C4
	movs r4, #0
	ldrb r6, [r1, r2]
	ldrb r1, [r0, #6]
	adds r2, r1, #0
	muls r2, r6, r2
	ldrb r1, [r0, #5]
	adds r2, r3, r2
	adds r5, r2, r1
	ldrb r1, [r0, #8]
	cmp r1, #0
	ble _0201D7EA
	adds r1, r4, #0
	adds r2, r4, #0
_0201D7CE:
	ldrb r7, [r0, #7]
	adds r3, r2, #0
	cmp r7, #0
	ble _0201D7E0
_0201D7D6:
	strb r1, [r5, r3]
	ldrb r7, [r0, #7]
	adds r3, r3, #1
	cmp r3, r7
	blt _0201D7D6
_0201D7E0:
	ldrb r3, [r0, #8]
	adds r4, r4, #1
	adds r5, r5, r6
	cmp r4, r3
	blt _0201D7CE
_0201D7EA:
	pop {r4, r5, r6, r7}
	bx lr
	nop
_0201D7F0: .4byte _020F62C4
	thumb_func_end FUN_0201D79C

	thumb_func_start FUN_0201D7F4
FUN_0201D7F4: @ 0x0201D7F4
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	bl FUN_0201D650
	adds r0, r4, #0
	bl FUN_0201D8A0
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, [r4]
	adds r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	thumb_func_end FUN_0201D7F4

	thumb_func_start FUN_0201D820
FUN_0201D820: @ 0x0201D820
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201D650
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl FUN_0201EFBC
	adds r0, r4, #0
	bl FUN_0201D8A0
	pop {r4, pc}
	thumb_func_end FUN_0201D820

	thumb_func_start FUN_0201D838
FUN_0201D838: @ 0x0201D838
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bl FUN_0201D6D0
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, [r4]
	adds r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_0201BF94
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x11
	str r0, [sp]
	ldrb r5, [r4, #7]
	ldrb r3, [r4, #8]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	muls r3, r5, r3
	ldr r2, [r4, #0xc]
	lsls r3, r3, #6
	bl FUN_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201D838

	thumb_func_start FUN_0201D874
FUN_0201D874: @ 0x0201D874
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	bl FUN_0201D6D0
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl FUN_0201EFBC
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x11
	str r0, [sp]
	ldrb r5, [r4, #7]
	ldrb r3, [r4, #8]
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	muls r3, r5, r3
	ldr r2, [r4, #0xc]
	lsls r3, r3, #6
	bl FUN_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201D874

	thumb_func_start FUN_0201D8A0
FUN_0201D8A0: @ 0x0201D8A0
	push {r3, r4, r5, lr}
	adds r3, r0, #0
	ldrh r2, [r3, #0xa]
	ldrb r1, [r3, #4]
	movs r4, #0x2c
	lsls r2, r2, #0x11
	ldr r0, [r3]
	lsrs r2, r2, #0x11
	str r2, [sp]
	muls r4, r1, r4
	adds r4, r0, r4
	ldr r2, [r3, #0xc]
	ldrb r5, [r3, #7]
	ldrb r3, [r3, #8]
	ldrb r4, [r4, #0x1f]
	muls r3, r5, r3
	muls r3, r4, r3
	bl FUN_0201C0C0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201D8A0

	thumb_func_start FUN_0201D8C8
FUN_0201D8C8: @ 0x0201D8C8
	push {r3, lr}
	ldrb r2, [r0, #4]
	movs r1, #0x2c
	ldr r3, [r0]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsls r2, r1, #2
	ldr r1, _0201D8E0 @ =_020F62E4
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D8E0: .4byte _020F62E4
	thumb_func_end FUN_0201D8C8

	thumb_func_start FUN_0201D8E4
FUN_0201D8E4: @ 0x0201D8E4
	push {r3, lr}
	ldrb r2, [r0, #4]
	movs r1, #0x2c
	ldr r3, [r0]
	muls r1, r2, r1
	adds r1, r3, r1
	ldrb r1, [r1, #0x1c]
	lsls r2, r1, #2
	ldr r1, _0201D8FC @ =_020F62D8
	ldr r1, [r1, r2]
	blx r1
	pop {r3, pc}
	.align 2, 0
_0201D8FC: .4byte _020F62D8
	thumb_func_end FUN_0201D8E4

	thumb_func_start FUN_0201D900
FUN_0201D900: @ 0x0201D900
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	bl FUN_0201D72C
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, [r4]
	adds r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201D900

	thumb_func_start FUN_0201D928
FUN_0201D928: @ 0x0201D928
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201D72C
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl FUN_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201D928

	thumb_func_start FUN_0201D93C
FUN_0201D93C: @ 0x0201D93C
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	bl FUN_0201D79C
	ldrb r1, [r4, #4]
	movs r0, #0x2c
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, [r4]
	adds r3, r0, r2
	ldr r2, [r3, #0x10]
	str r2, [sp]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	bl FUN_0201BF94
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201D93C

	thumb_func_start FUN_0201D964
FUN_0201D964: @ 0x0201D964
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201D79C
	ldrb r1, [r4, #4]
	ldr r0, [r4]
	bl FUN_0201EFBC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201D964

	thumb_func_start FUN_0201D978
FUN_0201D978: @ 0x0201D978
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #4]
	movs r0, #0x2c
	ldr r3, [r4]
	muls r0, r2, r0
	adds r0, r3, r0
	ldrb r2, [r0, #0x1f]
	cmp r2, #0x20
	bne _0201D994
	lsls r0, r1, #4
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0201D994:
	lsls r3, r1, #0x18
	lsls r0, r1, #0x10
	orrs r0, r3
	lsls r5, r1, #8
	orrs r0, r5
	orrs r0, r1
	ldr r1, [r4, #0xc]
	ldrb r3, [r4, #8]
	ldrb r4, [r4, #7]
	muls r2, r4, r2
	muls r2, r3, r2
	blx FUN_020D4858
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201D978

	thumb_func_start FUN_0201D9B0
FUN_0201D9B0: @ 0x0201D9B0
	push {r4, lr}
	adds r2, r0, #0
	lsls r0, r1, #4
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r4, #0x18
	lsls r0, r4, #0x10
	orrs r0, r1
	lsls r3, r4, #8
	orrs r0, r3
	ldr r1, [r2, #0xc]
	ldrb r3, [r2, #8]
	ldrb r2, [r2, #7]
	orrs r0, r4
	lsls r2, r2, #5
	muls r2, r3, r2
	blx FUN_020D4858
	pop {r4, pc}
	thumb_func_end FUN_0201D9B0

	thumb_func_start FUN_0201D9D8
FUN_0201D9D8: @ 0x0201D9D8
	push {r4, r5, lr}
	sub sp, #0x1c
	add r4, sp, #0x18
	ldrh r5, [r4, #0x10]
	str r5, [sp]
	ldrh r5, [r4, #0x14]
	str r5, [sp, #4]
	ldrh r5, [r4, #0x18]
	str r5, [sp, #8]
	ldrh r5, [r4, #0x1c]
	str r5, [sp, #0xc]
	ldrh r5, [r4, #0x20]
	str r5, [sp, #0x10]
	ldrh r4, [r4, #0x24]
	str r4, [sp, #0x14]
	movs r4, #0
	str r4, [sp, #0x18]
	bl FUN_0201DA04
	add sp, #0x1c
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201D9D8

	thumb_func_start FUN_0201DA04
FUN_0201DA04: @ 0x0201DA04
	push {r4, r5, lr}
	sub sp, #0x24
	str r1, [sp, #0x1c]
	add r4, sp, #0x20
	ldrh r5, [r4, #0x10]
	add r1, sp, #0x14
	strh r5, [r1, #0xc]
	ldrh r5, [r4, #0x14]
	strh r5, [r1, #0xe]
	ldr r5, [r0, #0xc]
	str r5, [sp, #0x14]
	ldrb r5, [r0, #7]
	lsls r5, r5, #3
	strh r5, [r1, #4]
	ldrb r5, [r0, #8]
	lsls r5, r5, #3
	strh r5, [r1, #6]
	ldrb r5, [r0, #4]
	ldr r1, [r0]
	movs r0, #0x2c
	muls r0, r5, r0
	adds r0, r1, r0
	ldrb r0, [r0, #0x1e]
	add r1, sp, #0x14
	cmp r0, #0
	ldrh r0, [r4, #0x18]
	bne _0201DA56
	str r0, [sp]
	ldrh r0, [r4, #0x1c]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	ldrh r0, [r4, #0x24]
	str r0, [sp, #0xc]
	ldrh r0, [r4, #0x28]
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl FUN_0201CE08
	add sp, #0x24
	pop {r4, r5, pc}
_0201DA56:
	str r0, [sp]
	ldrh r0, [r4, #0x1c]
	str r0, [sp, #4]
	ldrh r0, [r4, #0x20]
	str r0, [sp, #8]
	ldrh r0, [r4, #0x24]
	str r0, [sp, #0xc]
	ldrh r0, [r4, #0x28]
	str r0, [sp, #0x10]
	add r0, sp, #0x1c
	bl FUN_0201D048
	add sp, #0x24
	pop {r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201DA04

	thumb_func_start FUN_0201DA74
FUN_0201DA74: @ 0x0201DA74
	push {r3, r4, r5, lr}
	sub sp, #0x10
	adds r5, r1, #0
	ldr r1, [r0, #0xc]
	adds r4, r2, #0
	str r1, [sp, #8]
	ldrb r1, [r0, #7]
	adds r2, r3, #0
	lsls r3, r1, #3
	add r1, sp, #8
	strh r3, [r1, #4]
	ldrb r3, [r0, #8]
	lsls r3, r3, #3
	strh r3, [r1, #6]
	ldrb r3, [r0, #4]
	ldr r1, [r0]
	movs r0, #0x2c
	muls r0, r3, r0
	adds r0, r1, r0
	ldrb r0, [r0, #0x1e]
	add r3, sp, #0x10
	cmp r0, #0
	bne _0201DAB6
	ldrh r0, [r3, #0x14]
	adds r1, r4, #0
	str r0, [sp]
	str r5, [sp, #4]
	ldrh r3, [r3, #0x10]
	add r0, sp, #8
	bl FUN_0201D230
	add sp, #0x10
	pop {r3, r4, r5, pc}
_0201DAB6:
	ldrh r0, [r3, #0x14]
	adds r1, r4, #0
	str r0, [sp]
	str r5, [sp, #4]
	ldrh r3, [r3, #0x10]
	add r0, sp, #8
	bl FUN_0201D2F4
	add sp, #0x10
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201DA74

	thumb_func_start FUN_0201DACC
FUN_0201DACC: @ 0x0201DACC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1fc
	sub sp, #0x118
	adds r5, r0, #0
	ldr r0, [sp, #0x330]
	str r1, [sp]
	str r0, [sp, #0x330]
	add r1, sp, #0x318
	ldrh r1, [r1, #0x10]
	ldr r0, [r5, #0xc]
	str r1, [sp, #0x5c]
	ldrb r1, [r5, #7]
	str r0, [sp, #0x278]
	ldrb r0, [r5, #8]
	lsls r1, r1, #0x13
	lsrs r4, r1, #0x10
	ldr r1, [sp, #0x5c]
	lsls r0, r0, #0x13
	subs r1, r4, r1
	lsrs r0, r0, #0x10
	str r4, [sp, #0x58]
	str r1, [sp, #8]
	cmp r1, r2
	blt _0201DAFE
	str r2, [sp, #8]
_0201DAFE:
	add r1, sp, #0x318
	ldrh r1, [r1, #0x14]
	subs r0, r0, r1
	str r1, [sp, #0x48]
	str r0, [sp, #4]
	cmp r0, r3
	blt _0201DB0E
	str r3, [sp, #4]
_0201DB0E:
	ldr r0, [sp, #8]
	movs r4, #0
	cmp r0, #8
	ble _0201DB1E
	movs r0, #1
	orrs r0, r4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0201DB1E:
	ldr r0, [sp, #4]
	cmp r0, #8
	ble _0201DB2C
	movs r0, #2
	orrs r0, r4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0201DB2C:
	ldrh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1f
	beq _0201DB38
	bl FUN_0201E4AC
_0201DB38:
	cmp r4, #3
	bls _0201DB40
	bl FUN_0201EC3C
_0201DB40:
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201DB4C: @ jump table
	.2byte _0201DB54 - _0201DB4C - 2 @ case 0
	.2byte _0201DC56 - _0201DB4C - 2 @ case 1
	.2byte _0201DE66 - _0201DB4C - 2 @ case 2
	.2byte _0201E086 - _0201DB4C - 2 @ case 3
_0201DB54:
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x70]
	movs r0, #0
	str r0, [sp, #0x274]
	ldr r0, [sp, #4]
	cmp r0, #0
	bgt _0201DB6A
	bl FUN_0201EC3C
_0201DB6A:
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x6c]
_0201DB76:
	ldr r0, [sp]
	ldr r1, [sp, #0x70]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x26c]
	ldr r0, [sp, #0x274]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x270]
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	ble _0201DC2A
	ble _0201DC2A
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x6c]
	lsls r5, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x68]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	ldr r5, [sp, #0x6c]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0x64]
	str r0, [sp, #0x60]
_0201DBC8:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201DEE8 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0x68]
	str r5, [sp, #0x27c]
	adds r0, r5, r0
	ldr r5, [sp, #0x26c]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201DC1C
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x280]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x284]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x284]
	ands r6, r5
	ldr r5, [sp, #0x280]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x270]
	cmp r0, #0
	beq _0201DC1C
	ldr r6, [sp, #0x27c]
	ldr r0, [sp, #0x64]
	adds r6, r6, r0
	ldr r0, [sp, #0x60]
	strb r5, [r0, r6]
_0201DC1C:
	ldr r0, [sp, #8]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201DBC8
_0201DC2A:
	ldr r0, [sp, #0x270]
	cmp r0, #0
	beq _0201DC38
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201DC3E
_0201DC38:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201DC3E:
	ldr r0, [sp]
	adds r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x274]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x274]
	cmp r1, r0
	blt _0201DB76
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201DC56:
	ldr r0, [sp]
	str r0, [sp, #0x25c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x264]
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x54]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x84]
	movs r0, #0
	str r0, [sp, #0x268]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201DD52
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x80]
_0201DC82:
	ldr r0, [sp, #0x25c]
	ldr r1, [sp, #0x84]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x258]
	ldr r0, [sp, #0x268]
	ldr r6, [sp, #0x80]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x260]
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x264]
	movs r1, #0
	lsls r5, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x264]
	str r6, [sp, #0x7c]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	ldr r5, [sp, #0x80]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0x78]
	str r0, [sp, #0x74]
_0201DCCC:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201DEE8 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0x7c]
	str r5, [sp, #0x288]
	adds r0, r5, r0
	ldr r5, [sp, #0x258]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201DD20
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x28c]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x290]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x290]
	ands r6, r5
	ldr r5, [sp, #0x28c]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x260]
	cmp r0, #0
	beq _0201DD20
	ldr r6, [sp, #0x288]
	ldr r0, [sp, #0x78]
	adds r6, r6, r0
	ldr r0, [sp, #0x74]
	strb r5, [r0, r6]
_0201DD20:
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, #8
	blt _0201DCCC
	ldr r0, [sp, #0x260]
	cmp r0, #0
	beq _0201DD3A
	ldr r0, [sp, #0x264]
	adds r0, r0, #2
	str r0, [sp, #0x264]
	b _0201DD40
_0201DD3A:
	ldr r0, [sp, #0x264]
	adds r0, r0, #1
	str r0, [sp, #0x264]
_0201DD40:
	ldr r0, [sp, #0x25c]
	adds r0, r0, #4
	str r0, [sp, #0x25c]
	ldr r0, [sp, #0x268]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x268]
	cmp r1, r0
	blt _0201DC82
_0201DD52:
	ldr r0, [sp]
	adds r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0x54]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x98]
	movs r0, #0
	str r0, [sp, #0x254]
	ldr r0, [sp, #4]
	cmp r0, #0
	bgt _0201DD6E
	bl FUN_0201EC3C
_0201DD6E:
	ldr r0, [sp, #0x5c]
	movs r1, #7
	adds r0, #8
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x58]
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x94]
_0201DD80:
	ldr r0, [sp]
	ldr r1, [sp, #0x98]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x24c]
	ldr r0, [sp, #0x254]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x250]
	ldr r0, [sp, #8]
	movs r1, #0
	str r0, [sp, #0x294]
	subs r0, #8
	str r0, [sp, #0x294]
	cmp r0, #0
	ble _0201DE3A
	ble _0201DE3A
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x94]
	lsls r5, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0x90]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	ldr r5, [sp, #0x94]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0x8c]
	str r0, [sp, #0x88]
_0201DDD8:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201DEE8 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0x90]
	str r5, [sp, #0x298]
	adds r0, r5, r0
	ldr r5, [sp, #0x24c]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201DE2C
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x29c]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2a0]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2a0]
	ands r6, r5
	ldr r5, [sp, #0x29c]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x250]
	cmp r0, #0
	beq _0201DE2C
	ldr r6, [sp, #0x298]
	ldr r0, [sp, #0x8c]
	adds r6, r6, r0
	ldr r0, [sp, #0x88]
	strb r5, [r0, r6]
_0201DE2C:
	ldr r0, [sp, #0x294]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201DDD8
_0201DE3A:
	ldr r0, [sp, #0x250]
	cmp r0, #0
	beq _0201DE48
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201DE4E
_0201DE48:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201DE4E:
	ldr r0, [sp]
	adds r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x254]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x254]
	cmp r1, r0
	blt _0201DD80
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201DE66:
	ldr r0, [sp]
	movs r1, #7
	str r0, [sp, #0x23c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x244]
	movs r0, #0
	str r0, [sp, #0x248]
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xa8]
	ldr r0, [sp, #0x58]
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x40]
_0201DE86:
	ldr r0, [sp, #0x23c]
	ldr r1, [sp, #0xa8]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x238]
	ldr r0, [sp, #0x248]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x240]
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	ble _0201DF42
	ble _0201DF42
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x244]
	ldr r6, [sp, #0x40]
	lsls r5, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x244]
	str r6, [sp, #0xa4]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201DEE8 @ =0x00003FE0
	ldr r5, [sp, #0x40]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0xa0]
	str r0, [sp, #0x9c]
_0201DED8:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201DEE8 @ =0x00003FE0
	b _0201DEEC
	nop
_0201DEE8: .4byte 0x00003FE0
_0201DEEC:
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xa4]
	str r5, [sp, #0x2a4]
	adds r0, r5, r0
	ldr r5, [sp, #0x238]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201DF34
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2a8]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2ac]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2ac]
	ands r6, r5
	ldr r5, [sp, #0x2a8]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x240]
	cmp r0, #0
	beq _0201DF34
	ldr r6, [sp, #0x2a4]
	ldr r0, [sp, #0xa0]
	adds r6, r6, r0
	ldr r0, [sp, #0x9c]
	strb r5, [r0, r6]
_0201DF34:
	ldr r0, [sp, #8]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201DED8
_0201DF42:
	ldr r0, [sp, #0x240]
	cmp r0, #0
	beq _0201DF50
	ldr r0, [sp, #0x244]
	adds r0, r0, #2
	str r0, [sp, #0x244]
	b _0201DF56
_0201DF50:
	ldr r0, [sp, #0x244]
	adds r0, r0, #1
	str r0, [sp, #0x244]
_0201DF56:
	ldr r0, [sp, #0x23c]
	adds r0, r0, #4
	str r0, [sp, #0x23c]
	ldr r0, [sp, #0x248]
	adds r0, r0, #1
	str r0, [sp, #0x248]
	cmp r0, #8
	blt _0201DE86
	ldr r0, [sp]
	movs r2, #0
	adds r0, #0x40
	str r0, [sp]
	ldr r0, [sp, #0x48]
	movs r1, #1
	adds r0, #8
	str r0, [sp, #0x48]
_0201DF76:
	ldr r0, [sp, #0x330]
	asrs r0, r2
	tst r0, r1
	beq _0201DF84
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201DF84:
	adds r2, r2, #1
	cmp r2, #8
	blt _0201DF76
	ldr r0, [sp, #0x330]
	asrs r0, r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xb8]
	movs r0, #0
	str r0, [sp, #0x20]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	bgt _0201DFA4
	bl FUN_0201EC3C
_0201DFA4:
	ldr r0, [sp]
	ldr r1, [sp, #0xb8]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x230]
	ldr r0, [sp, #0x20]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x234]
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	ble _0201E058
	ble _0201E058
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x40]
	lsls r5, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0xb4]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	ldr r5, [sp, #0x40]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0xb0]
	str r0, [sp, #0xac]
_0201DFF6:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201E308 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xb4]
	str r5, [sp, #0x2b0]
	adds r0, r5, r0
	ldr r5, [sp, #0x230]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201E04A
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2b4]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2b8]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2b8]
	ands r6, r5
	ldr r5, [sp, #0x2b4]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x234]
	cmp r0, #0
	beq _0201E04A
	ldr r6, [sp, #0x2b0]
	ldr r0, [sp, #0xb0]
	adds r6, r6, r0
	ldr r0, [sp, #0xac]
	strb r5, [r0, r6]
_0201E04A:
	ldr r0, [sp, #8]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201DFF6
_0201E058:
	ldr r0, [sp, #0x234]
	cmp r0, #0
	beq _0201E066
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E06C
_0201E066:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E06C:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	adds r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x20]
	subs r1, #8
	adds r0, r0, #1
	str r0, [sp, #0x20]
	cmp r0, r1
	blt _0201DFA4
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
_0201E086:
	ldr r0, [sp]
	str r0, [sp, #0x220]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x228]
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0
	str r0, [sp, #0x22c]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x3c]
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x38]
_0201E0AA:
	ldr r0, [sp, #0x220]
	ldr r1, [sp, #0x3c]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x21c]
	ldr r0, [sp, #0x22c]
	ldr r6, [sp, #0x38]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x224]
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x228]
	movs r1, #0
	lsls r5, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x228]
	str r6, [sp, #0xc4]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	ldr r5, [sp, #0x38]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	str r3, [sp, #0x34]
	adds r4, r1, #0
	str r5, [sp, #0xc0]
	str r0, [sp, #0xbc]
_0201E0F6:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201E308 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xc4]
	str r5, [sp, #0x2bc]
	adds r0, r5, r0
	ldr r5, [sp, #0x21c]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201E14A
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2c0]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2c4]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2c4]
	ands r6, r5
	ldr r5, [sp, #0x2c0]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x224]
	cmp r0, #0
	beq _0201E14A
	ldr r6, [sp, #0x2bc]
	ldr r0, [sp, #0xc0]
	adds r6, r6, r0
	ldr r0, [sp, #0xbc]
	strb r5, [r0, r6]
_0201E14A:
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, #8
	blt _0201E0F6
	ldr r0, [sp, #0x224]
	cmp r0, #0
	beq _0201E164
	ldr r0, [sp, #0x228]
	adds r0, r0, #2
	str r0, [sp, #0x228]
	b _0201E16A
_0201E164:
	ldr r0, [sp, #0x228]
	adds r0, r0, #1
	str r0, [sp, #0x228]
_0201E16A:
	ldr r0, [sp, #0x220]
	adds r0, r0, #4
	str r0, [sp, #0x220]
	ldr r0, [sp, #0x22c]
	adds r0, r0, #1
	str r0, [sp, #0x22c]
	cmp r0, #8
	blt _0201E0AA
	ldr r0, [sp]
	str r0, [sp, #0x20c]
	adds r0, #0x20
	str r0, [sp, #0x20c]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x214]
	movs r0, #0
	str r0, [sp, #0x218]
	ldr r0, [sp, #0x5c]
	str r0, [sp, #0xd4]
	adds r0, #8
	str r0, [sp, #0xd4]
_0201E192:
	ldr r0, [sp, #0x20c]
	ldr r1, [sp, #0x3c]
	ldr r0, [r0]
	ldr r2, [sp, #0xd4]
	str r0, [sp, #0x208]
	ldr r0, [sp, #0x218]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x210]
	ldr r0, [sp, #8]
	movs r1, #0
	str r0, [sp, #0x2c8]
	subs r0, #8
	str r0, [sp, #0x2c8]
	cmp r0, #0
	ble _0201E24C
	ble _0201E24C
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x214]
	ldr r6, [sp, #0x38]
	lsls r5, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x214]
	str r6, [sp, #0xd0]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	ldr r5, [sp, #0x38]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0xcc]
	str r0, [sp, #0xc8]
_0201E1EA:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201E308 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xd0]
	str r5, [sp, #0x2cc]
	adds r0, r5, r0
	ldr r5, [sp, #0x208]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201E23E
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2d0]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2d4]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2d4]
	ands r6, r5
	ldr r5, [sp, #0x2d0]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x210]
	cmp r0, #0
	beq _0201E23E
	ldr r6, [sp, #0x2cc]
	ldr r0, [sp, #0xcc]
	adds r6, r6, r0
	ldr r0, [sp, #0xc8]
	strb r5, [r0, r6]
_0201E23E:
	ldr r0, [sp, #0x2c8]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201E1EA
_0201E24C:
	ldr r0, [sp, #0x210]
	cmp r0, #0
	beq _0201E25A
	ldr r0, [sp, #0x214]
	adds r0, r0, #2
	str r0, [sp, #0x214]
	b _0201E260
_0201E25A:
	ldr r0, [sp, #0x214]
	adds r0, r0, #1
	str r0, [sp, #0x214]
_0201E260:
	ldr r0, [sp, #0x20c]
	adds r0, r0, #4
	str r0, [sp, #0x20c]
	ldr r0, [sp, #0x218]
	adds r0, r0, #1
	str r0, [sp, #0x218]
	cmp r0, #8
	blt _0201E192
	ldr r0, [sp]
	movs r2, #0
	str r0, [sp, #0x1fc]
	adds r0, #0x40
	str r0, [sp, #0x1fc]
	ldr r0, [sp, #0x48]
	movs r1, #1
	adds r0, #8
	str r0, [sp, #0x48]
	str r0, [sp, #0x204]
_0201E284:
	ldr r0, [sp, #0x330]
	asrs r0, r2
	tst r0, r1
	beq _0201E292
	ldr r0, [sp, #0x204]
	adds r0, r0, #1
	str r0, [sp, #0x204]
_0201E292:
	adds r2, r2, #1
	cmp r2, #8
	blt _0201E284
	ldr r0, [sp, #0x330]
	asrs r0, r0, #8
	str r0, [sp, #0x50]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xe4]
	movs r0, #0
	str r0, [sp, #0x1c]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	ble _0201E388
_0201E2B0:
	ldr r0, [sp, #0x1fc]
	ldr r1, [sp, #0xe4]
	ldr r0, [r0]
	ldr r6, [sp, #0x38]
	str r0, [sp, #0x1f8]
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0x5c]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x200]
	ldr r0, [sp, #0x204]
	movs r1, #0
	lsls r5, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x204]
	str r6, [sp, #0xe0]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201E308 @ =0x00003FE0
	ldr r5, [sp, #0x38]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	ldr r3, [sp, #0x34]
	adds r4, r1, #0
	str r5, [sp, #0xdc]
	str r0, [sp, #0xd8]
_0201E2F8:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201E308 @ =0x00003FE0
	b _0201E30C
	nop
_0201E308: .4byte 0x00003FE0
_0201E30C:
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xe0]
	str r5, [sp, #0x2d8]
	adds r0, r5, r0
	ldr r5, [sp, #0x1f8]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201E354
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2dc]
	ldrb r5, [r0, r7]
	str r5, [sp, #0x2e0]
	movs r5, #0xf0
	asrs r5, r6
	ldr r6, [sp, #0x2e0]
	ands r6, r5
	ldr r5, [sp, #0x2dc]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x200]
	cmp r0, #0
	beq _0201E354
	ldr r6, [sp, #0x2d8]
	ldr r0, [sp, #0xdc]
	adds r6, r6, r0
	ldr r0, [sp, #0xd8]
	strb r5, [r0, r6]
_0201E354:
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, #8
	blt _0201E2F8
	ldr r0, [sp, #0x200]
	cmp r0, #0
	beq _0201E36E
	ldr r0, [sp, #0x204]
	adds r0, r0, #2
	str r0, [sp, #0x204]
	b _0201E374
_0201E36E:
	ldr r0, [sp, #0x204]
	adds r0, r0, #1
	str r0, [sp, #0x204]
_0201E374:
	ldr r0, [sp, #0x1fc]
	ldr r1, [sp, #4]
	adds r0, r0, #4
	str r0, [sp, #0x1fc]
	ldr r0, [sp, #0x1c]
	subs r1, #8
	adds r0, r0, #1
	str r0, [sp, #0x1c]
	cmp r0, r1
	blt _0201E2B0
_0201E388:
	ldr r0, [sp]
	movs r2, #0
	adds r0, #0x60
	str r0, [sp]
	movs r1, #1
_0201E392:
	ldr r0, [sp, #0x330]
	asrs r0, r2
	tst r0, r1
	beq _0201E3A0
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E3A0:
	adds r2, r2, #1
	cmp r2, #8
	blt _0201E392
	ldr r0, [sp, #0x50]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xf4]
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	bgt _0201E3BE
	bl FUN_0201EC3C
_0201E3BE:
	ldr r0, [sp, #0x5c]
	adds r0, #8
	str r0, [sp, #0x5c]
_0201E3C4:
	ldr r0, [sp]
	ldr r1, [sp, #0xf4]
	ldr r0, [r0]
	ldr r2, [sp, #0x5c]
	str r0, [sp, #0x1f0]
	ldr r0, [sp, #0x18]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x1f4]
	ldr r0, [sp, #8]
	movs r1, #0
	str r0, [sp, #0x2e4]
	subs r0, #8
	str r0, [sp, #0x2e4]
	cmp r0, #0
	ble _0201E47E
	ble _0201E47E
	adds r0, r2, #0
	lsls r3, r0, #2
	ldr r0, [sp, #0x48]
	ldr r6, [sp, #0x38]
	lsls r5, r0, #2
	ldr r0, _0201E6F0 @ =0x00003FE0
	adds r7, r5, #0
	ands r0, r5
	muls r6, r0, r6
	movs r0, #0x1c
	ands r7, r0
	ldr r0, [sp, #0x48]
	str r6, [sp, #0xf0]
	adds r0, r0, #1
	lsls r6, r0, #2
	ldr r0, _0201E6F0 @ =0x00003FE0
	ldr r5, [sp, #0x38]
	ands r0, r6
	muls r5, r0, r5
	movs r0, #0x1c
	ands r0, r6
	adds r4, r1, #0
	str r5, [sp, #0xec]
	str r0, [sp, #0xe8]
_0201E41C:
	asrs r5, r2, #1
	movs r0, #3
	ands r5, r0
	ldr r0, [sp, #0x278]
	adds r0, r0, r5
	ldr r5, _0201E6F0 @ =0x00003FE0
	ands r5, r3
	adds r5, r0, r5
	ldr r0, [sp, #0xf0]
	str r5, [sp, #0x2e8]
	adds r0, r5, r0
	ldr r5, [sp, #0x1f0]
	adds r6, r5, #0
	lsrs r6, r4
	movs r5, #0xf
	ands r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	beq _0201E470
	lsls r6, r2, #0x1f
	lsrs r6, r6, #0x1d
	lsls r5, r6
	str r5, [sp, #0x2ec]
	ldrb r5, [r0, r7]
	mov ip, r5
	movs r5, #0xf0
	asrs r5, r6
	mov r6, ip
	ands r6, r5
	ldr r5, [sp, #0x2ec]
	orrs r5, r6
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	strb r5, [r0, r7]
	ldr r0, [sp, #0x1f4]
	cmp r0, #0
	beq _0201E470
	ldr r6, [sp, #0x2e8]
	ldr r0, [sp, #0xec]
	adds r6, r6, r0
	ldr r0, [sp, #0xe8]
	strb r5, [r0, r6]
_0201E470:
	ldr r0, [sp, #0x2e4]
	adds r1, r1, #1
	adds r4, r4, #4
	adds r3, r3, #4
	adds r2, r2, #1
	cmp r1, r0
	blt _0201E41C
_0201E47E:
	ldr r0, [sp, #0x1f4]
	cmp r0, #0
	beq _0201E48C
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E492
_0201E48C:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E492:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	adds r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0x18]
	subs r1, #8
	adds r0, r0, #1
	str r0, [sp, #0x18]
	cmp r0, r1
	blt _0201E3C4
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201DACC

	thumb_func_start FUN_0201E4AC
FUN_0201E4AC: @ 0x0201E4AC
	lsls r1, r2, #2
	muls r1, r3, r1
	ldr r3, [r5]
	ldrb r2, [r5, #9]
	ldr r0, [sp]
	ldr r3, [r3]
	lsls r1, r1, #3
	bl FUN_0201CBE4
	str r0, [sp, #0x1ec]
	cmp r4, #3
	bhi _0201E59E
	adds r0, r4, r4
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201E4D0: @ jump table
	.2byte _0201E4D8 - _0201E4D0 - 2 @ case 0
	.2byte _0201E5A0 - _0201E4D0 - 2 @ case 1
	.2byte _0201E74C - _0201E4D0 - 2 @ case 2
	.2byte _0201E8F0 - _0201E4D0 - 2 @ case 3
_0201E4D8:
	ldr r0, [sp, #0x330]
	ldr r7, [sp, #0x1ec]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10c]
	movs r0, #0
	str r0, [sp, #0x1e8]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E59E
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x108]
_0201E4F8:
	ldr r1, [sp, #0x10c]
	ldr r0, [sp, #0x1e8]
	movs r4, #0
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x310]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E57C
	ble _0201E57C
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x108]
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x100]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x104]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	ldr r2, [sp, #0x108]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0xfc]
	str r0, [sp, #0xf8]
_0201E544:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201E6F4 @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x104]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201E570
	ldr r0, [sp, #0x100]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x310]
	cmp r0, #0
	beq _0201E570
	ldr r0, [sp, #0xfc]
	adds r2, r3, r0
	ldr r0, [sp, #0xf8]
	strb r1, [r0, r2]
_0201E570:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r0
	blt _0201E544
_0201E57C:
	ldr r0, [sp, #0x310]
	cmp r0, #0
	beq _0201E58A
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E590
_0201E58A:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E590:
	ldr r0, [sp, #0x1e8]
	adds r7, #8
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1e8]
	cmp r1, r0
	blt _0201E4F8
_0201E59E:
	b _0201EC36
_0201E5A0:
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	str r0, [sp, #0x1e0]
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x4c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x124]
	movs r0, #0
	str r0, [sp, #0x1e4]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E666
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x120]
_0201E5CA:
	ldr r1, [sp, #0x124]
	ldr r0, [sp, #0x1e4]
	ldr r5, [sp, #0x5c]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30c]
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x1e0]
	ldr r2, [sp, #0x120]
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x118]
	ldr r0, [sp, #0x1e0]
	str r2, [sp, #0x11c]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	ldr r2, [sp, #0x120]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	movs r4, #0
	str r2, [sp, #0x114]
	str r0, [sp, #0x110]
_0201E60E:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201E6F4 @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x11c]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201E63A
	ldr r0, [sp, #0x118]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x30c]
	cmp r0, #0
	beq _0201E63A
	ldr r0, [sp, #0x114]
	adds r2, r3, r0
	ldr r0, [sp, #0x110]
	strb r1, [r0, r2]
_0201E63A:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, #8
	blt _0201E60E
	ldr r0, [sp, #0x30c]
	cmp r0, #0
	beq _0201E652
	ldr r0, [sp, #0x1e0]
	adds r0, r0, #2
	str r0, [sp, #0x1e0]
	b _0201E658
_0201E652:
	ldr r0, [sp, #0x1e0]
	adds r0, r0, #1
	str r0, [sp, #0x1e0]
_0201E658:
	ldr r0, [sp, #0x1e4]
	adds r7, #8
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1e4]
	cmp r1, r0
	blt _0201E5CA
_0201E666:
	ldr r0, [sp, #0x1ec]
	str r0, [sp, #0x308]
	adds r0, #0x40
	str r0, [sp, #0x308]
	ldr r0, [sp, #0x4c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x13c]
	movs r0, #0
	str r0, [sp, #0x1dc]
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _0201E74A
	ldr r0, [sp, #0x5c]
	movs r1, #7
	adds r0, #8
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x58]
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x138]
_0201E692:
	ldr r1, [sp, #0x13c]
	ldr r0, [sp, #0x1dc]
	ldr r7, [sp, #8]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r7, #8
	movs r4, #0
	str r0, [sp, #0x1d8]
	ldr r5, [sp, #0x5c]
	cmp r7, #0
	ble _0201E724
	ble _0201E724
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x138]
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x130]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x134]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201E6F4 @ =0x00007FC0
	ldr r2, [sp, #0x138]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0x12c]
	str r0, [sp, #0x128]
_0201E6E0:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201E6F4 @ =0x00007FC0
	b _0201E6F8
	nop
_0201E6F0: .4byte 0x00003FE0
_0201E6F4: .4byte 0x00007FC0
_0201E6F8:
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x134]
	adds r2, r3, r0
	ldr r0, [sp, #0x308]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201E71A
	ldr r0, [sp, #0x130]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1d8]
	cmp r0, #0
	beq _0201E71A
	ldr r0, [sp, #0x12c]
	adds r2, r3, r0
	ldr r0, [sp, #0x128]
	strb r1, [r0, r2]
_0201E71A:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r7
	blt _0201E6E0
_0201E724:
	ldr r0, [sp, #0x1d8]
	cmp r0, #0
	beq _0201E732
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E738
_0201E732:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E738:
	ldr r0, [sp, #0x308]
	adds r0, #8
	str r0, [sp, #0x308]
	ldr r0, [sp, #0x1dc]
	adds r1, r0, #1
	ldr r0, [sp, #4]
	str r1, [sp, #0x1dc]
	cmp r1, r0
	blt _0201E692
_0201E74A:
	b _0201EC36
_0201E74C:
	ldr r0, [sp, #0x48]
	movs r1, #7
	str r0, [sp, #0x1d0]
	movs r0, #0
	str r0, [sp, #0x1d4]
	ldr r0, [sp, #0x330]
	ldr r7, [sp, #0x1ec]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x150]
	ldr r0, [sp, #0x58]
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x30]
_0201E76A:
	ldr r1, [sp, #0x150]
	ldr r0, [sp, #0x1d4]
	movs r4, #0
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x304]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E7EE
	ble _0201E7EE
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x1d0]
	ldr r2, [sp, #0x30]
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x148]
	ldr r0, [sp, #0x1d0]
	str r2, [sp, #0x14c]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	ldr r2, [sp, #0x30]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0x144]
	str r0, [sp, #0x140]
_0201E7B6:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EA5C @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x14c]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201E7E2
	ldr r0, [sp, #0x148]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x304]
	cmp r0, #0
	beq _0201E7E2
	ldr r0, [sp, #0x144]
	adds r2, r3, r0
	ldr r0, [sp, #0x140]
	strb r1, [r0, r2]
_0201E7E2:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r0
	blt _0201E7B6
_0201E7EE:
	ldr r0, [sp, #0x304]
	cmp r0, #0
	beq _0201E7FC
	ldr r0, [sp, #0x1d0]
	adds r0, r0, #2
	str r0, [sp, #0x1d0]
	b _0201E802
_0201E7FC:
	ldr r0, [sp, #0x1d0]
	adds r0, r0, #1
	str r0, [sp, #0x1d0]
_0201E802:
	ldr r0, [sp, #0x1d4]
	adds r7, #8
	adds r0, r0, #1
	str r0, [sp, #0x1d4]
	cmp r0, #8
	blt _0201E76A
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	adds r0, #8
	str r0, [sp, #0x48]
	adds r7, #0x80
	movs r0, #0
	movs r2, #1
_0201E81C:
	ldr r1, [sp, #0x330]
	asrs r1, r0
	tst r1, r2
	beq _0201E82A
	ldr r1, [sp, #0x48]
	adds r1, r1, #1
	str r1, [sp, #0x48]
_0201E82A:
	adds r0, r0, #1
	cmp r0, #8
	blt _0201E81C
	ldr r0, [sp, #0x330]
	asrs r0, r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x164]
	movs r0, #0
	str r0, [sp, #0x14]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	ble _0201E8EE
_0201E846:
	ldr r1, [sp, #0x164]
	ldr r0, [sp, #0x14]
	movs r4, #0
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x300]
	ldr r0, [sp, #8]
	ldr r5, [sp, #0x5c]
	cmp r0, #0
	ble _0201E8CA
	ble _0201E8CA
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x30]
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x15c]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x160]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	ldr r2, [sp, #0x30]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0x158]
	str r0, [sp, #0x154]
_0201E892:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EA5C @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x160]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201E8BE
	ldr r0, [sp, #0x15c]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x300]
	cmp r0, #0
	beq _0201E8BE
	ldr r0, [sp, #0x158]
	adds r2, r3, r0
	ldr r0, [sp, #0x154]
	strb r1, [r0, r2]
_0201E8BE:
	ldr r0, [sp, #8]
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r0
	blt _0201E892
_0201E8CA:
	ldr r0, [sp, #0x300]
	cmp r0, #0
	beq _0201E8D8
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201E8DE
_0201E8D8:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201E8DE:
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #4]
	adds r0, r0, #1
	subs r1, #8
	adds r7, #8
	str r0, [sp, #0x14]
	cmp r0, r1
	blt _0201E846
_0201E8EE:
	b _0201EC36
_0201E8F0:
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	str r0, [sp, #0x1c8]
	ldr r0, [sp, #0x330]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0
	str r0, [sp, #0x1cc]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x2c]
	ldr r0, [sp, #0x58]
	movs r1, #7
	ands r1, r0
	adds r0, r0, r1
	asrs r0, r0, #3
	str r0, [sp, #0x28]
_0201E912:
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x1cc]
	ldr r5, [sp, #0x5c]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x2fc]
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x1c8]
	ldr r2, [sp, #0x28]
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x170]
	ldr r0, [sp, #0x1c8]
	str r2, [sp, #0x174]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	ldr r2, [sp, #0x28]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	movs r4, #0
	str r6, [sp, #0x24]
	str r2, [sp, #0x16c]
	str r0, [sp, #0x168]
_0201E958:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EA5C @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x174]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201E984
	ldr r0, [sp, #0x170]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x2fc]
	cmp r0, #0
	beq _0201E984
	ldr r0, [sp, #0x16c]
	adds r2, r3, r0
	ldr r0, [sp, #0x168]
	strb r1, [r0, r2]
_0201E984:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, #8
	blt _0201E958
	ldr r0, [sp, #0x2fc]
	cmp r0, #0
	beq _0201E99C
	ldr r0, [sp, #0x1c8]
	adds r0, r0, #2
	str r0, [sp, #0x1c8]
	b _0201E9A2
_0201E99C:
	ldr r0, [sp, #0x1c8]
	adds r0, r0, #1
	str r0, [sp, #0x1c8]
_0201E9A2:
	ldr r0, [sp, #0x1cc]
	adds r7, #8
	adds r0, r0, #1
	str r0, [sp, #0x1cc]
	cmp r0, #8
	blt _0201E912
	ldr r0, [sp, #0x1ec]
	str r0, [sp, #0x2f8]
	adds r0, #0x40
	str r0, [sp, #0x2f8]
	ldr r0, [sp, #0x48]
	str r0, [sp, #0x1c0]
	movs r0, #0
	str r0, [sp, #0x1c4]
	ldr r0, [sp, #0x5c]
	str r0, [sp, #0x188]
	adds r0, #8
	str r0, [sp, #0x188]
_0201E9C6:
	ldr r1, [sp, #0x2c]
	ldr r0, [sp, #0x1c4]
	ldr r7, [sp, #8]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r7, #8
	movs r4, #0
	str r0, [sp, #0x1bc]
	ldr r5, [sp, #0x188]
	cmp r7, #0
	ble _0201EA4C
	ble _0201EA4C
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x1c0]
	ldr r2, [sp, #0x28]
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x180]
	ldr r0, [sp, #0x1c0]
	str r2, [sp, #0x184]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EA5C @ =0x00007FC0
	ldr r2, [sp, #0x28]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0x17c]
	str r0, [sp, #0x178]
_0201EA14:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EA5C @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x184]
	adds r2, r3, r0
	ldr r0, [sp, #0x2f8]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201EA42
	ldr r0, [sp, #0x180]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1bc]
	cmp r0, #0
	beq _0201EA42
	ldr r0, [sp, #0x17c]
	adds r2, r3, r0
	ldr r0, [sp, #0x178]
	strb r1, [r0, r2]
_0201EA42:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r7
	blt _0201EA14
_0201EA4C:
	ldr r0, [sp, #0x1bc]
	cmp r0, #0
	beq _0201EA60
	ldr r0, [sp, #0x1c0]
	adds r0, r0, #2
	str r0, [sp, #0x1c0]
	b _0201EA66
	nop
_0201EA5C: .4byte 0x00007FC0
_0201EA60:
	ldr r0, [sp, #0x1c0]
	adds r0, r0, #1
	str r0, [sp, #0x1c0]
_0201EA66:
	ldr r0, [sp, #0x2f8]
	adds r0, #8
	str r0, [sp, #0x2f8]
	ldr r0, [sp, #0x1c4]
	adds r0, r0, #1
	str r0, [sp, #0x1c4]
	cmp r0, #8
	blt _0201E9C6
	ldr r0, [sp, #0x48]
	ldr r7, [sp, #0x1ec]
	adds r0, #8
	adds r7, #0x80
	str r0, [sp, #0x48]
	str r0, [sp, #0x1b8]
	movs r0, #0
	movs r2, #1
_0201EA86:
	ldr r1, [sp, #0x330]
	asrs r1, r0
	tst r1, r2
	beq _0201EA94
	ldr r1, [sp, #0x1b8]
	adds r1, r1, #1
	str r1, [sp, #0x1b8]
_0201EA94:
	adds r0, r0, #1
	cmp r0, #8
	blt _0201EA86
	ldr r0, [sp, #0x330]
	asrs r0, r0, #8
	str r0, [sp, #0x44]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x19c]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	ble _0201EB4E
_0201EAB2:
	ldr r1, [sp, #0x19c]
	ldr r0, [sp, #0x10]
	ldr r2, [sp, #0x28]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x2f4]
	ldr r0, [sp, #0x1b8]
	movs r3, #0x38
	lsls r1, r0, #3
	ldr r0, _0201EC44 @ =0x00007FC0
	ldr r5, [sp, #0x5c]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x194]
	ldr r0, [sp, #0x1b8]
	str r2, [sp, #0x198]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EC44 @ =0x00007FC0
	ldr r2, [sp, #0x28]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	ldr r6, [sp, #0x24]
	movs r4, #0
	str r2, [sp, #0x190]
	str r0, [sp, #0x18c]
_0201EAF4:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EC44 @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x198]
	ldrb r1, [r7, r4]
	adds r2, r3, r0
	cmp r1, #0
	beq _0201EB20
	ldr r0, [sp, #0x194]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x2f4]
	cmp r0, #0
	beq _0201EB20
	ldr r0, [sp, #0x190]
	adds r2, r3, r0
	ldr r0, [sp, #0x18c]
	strb r1, [r0, r2]
_0201EB20:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, #8
	blt _0201EAF4
	ldr r0, [sp, #0x2f4]
	cmp r0, #0
	beq _0201EB38
	ldr r0, [sp, #0x1b8]
	adds r0, r0, #2
	str r0, [sp, #0x1b8]
	b _0201EB3E
_0201EB38:
	ldr r0, [sp, #0x1b8]
	adds r0, r0, #1
	str r0, [sp, #0x1b8]
_0201EB3E:
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #4]
	adds r0, r0, #1
	subs r1, #8
	adds r7, #8
	str r0, [sp, #0x10]
	cmp r0, r1
	blt _0201EAB2
_0201EB4E:
	ldr r0, [sp, #0x1ec]
	movs r2, #0
	str r0, [sp, #0x2f0]
	adds r0, #0xc0
	str r0, [sp, #0x2f0]
	movs r1, #1
_0201EB5A:
	ldr r0, [sp, #0x330]
	asrs r0, r2
	tst r0, r1
	beq _0201EB68
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201EB68:
	adds r2, r2, #1
	cmp r2, #8
	blt _0201EB5A
	ldr r0, [sp, #0x44]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x1b0]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #4]
	subs r0, #8
	cmp r0, #0
	ble _0201EC36
	ldr r0, [sp, #0x5c]
	adds r0, #8
	str r0, [sp, #0x5c]
_0201EB88:
	ldr r1, [sp, #0x1b0]
	ldr r0, [sp, #0xc]
	ldr r7, [sp, #8]
	asrs r1, r0
	movs r0, #1
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r7, #8
	movs r4, #0
	str r0, [sp, #0x1b4]
	ldr r5, [sp, #0x5c]
	cmp r7, #0
	ble _0201EC0E
	ble _0201EC0E
	adds r0, r5, #0
	lsls r6, r0, #3
	ldr r0, [sp, #0x48]
	ldr r2, [sp, #0x28]
	lsls r1, r0, #3
	ldr r0, _0201EC44 @ =0x00007FC0
	movs r3, #0x38
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r0, [sp, #0x1a8]
	ldr r0, [sp, #0x48]
	str r2, [sp, #0x1ac]
	adds r0, r0, #1
	lsls r1, r0, #3
	ldr r0, _0201EC44 @ =0x00007FC0
	ldr r2, [sp, #0x28]
	ands r0, r1
	muls r2, r0, r2
	adds r0, r1, #0
	ands r0, r3
	str r2, [sp, #0x1a4]
	str r0, [sp, #0x1a0]
_0201EBD6:
	movs r0, #7
	adds r1, r5, #0
	ands r1, r0
	ldr r0, [sp, #0x278]
	adds r1, r0, r1
	ldr r0, _0201EC44 @ =0x00007FC0
	ands r0, r6
	adds r3, r1, r0
	ldr r0, [sp, #0x1ac]
	adds r2, r3, r0
	ldr r0, [sp, #0x2f0]
	ldrb r1, [r0, r4]
	cmp r1, #0
	beq _0201EC04
	ldr r0, [sp, #0x1a8]
	strb r1, [r2, r0]
	ldr r0, [sp, #0x1b4]
	cmp r0, #0
	beq _0201EC04
	ldr r0, [sp, #0x1a4]
	adds r2, r3, r0
	ldr r0, [sp, #0x1a0]
	strb r1, [r0, r2]
_0201EC04:
	adds r4, r4, #1
	adds r6, #8
	adds r5, r5, #1
	cmp r4, r7
	blt _0201EBD6
_0201EC0E:
	ldr r0, [sp, #0x1b4]
	cmp r0, #0
	beq _0201EC1C
	ldr r0, [sp, #0x48]
	adds r0, r0, #2
	str r0, [sp, #0x48]
	b _0201EC22
_0201EC1C:
	ldr r0, [sp, #0x48]
	adds r0, r0, #1
	str r0, [sp, #0x48]
_0201EC22:
	ldr r0, [sp, #0x2f0]
	ldr r1, [sp, #4]
	adds r0, #8
	str r0, [sp, #0x2f0]
	ldr r0, [sp, #0xc]
	subs r1, #8
	adds r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, r1
	blt _0201EB88
_0201EC36:
	ldr r0, [sp, #0x1ec]
	bl FUN_0201AB0C
	thumb_func_end FUN_0201E4AC

	thumb_func_start FUN_0201EC3C
FUN_0201EC3C: @ 0x0201EC3C
	add sp, #0x1fc
	add sp, #0x118
	pop {r4, r5, r6, r7, pc}
	nop
_0201EC44: .4byte 0x00007FC0
	thumb_func_end FUN_0201EC3C

	thumb_func_start FUN_0201EC48
FUN_0201EC48: @ 0x0201EC48
	push {r4, r5, r6, lr}
	ldrb r6, [r0, #4]
	movs r5, #0x2c
	ldr r4, [r0]
	muls r5, r6, r5
	adds r4, r4, r5
	ldrb r4, [r4, #0x1e]
	cmp r4, #0
	bne _0201EC60
	bl FUN_0201EC68
	pop {r4, r5, r6, pc}
_0201EC60:
	bl FUN_0201ED54
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0201EC48

	thumb_func_start FUN_0201EC68
FUN_0201EC68: @ 0x0201EC68
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r3, #0
	adds r4, r0, #0
	adds r0, r1, #0
	lsls r3, r6, #0x18
	lsls r1, r6, #0x10
	str r2, [sp]
	orrs r1, r3
	lsls r5, r6, #8
	orrs r1, r5
	orrs r1, r6
	str r1, [sp, #4]
	ldrb r1, [r4, #7]
	ldrb r3, [r4, #8]
	ldr r2, [r4, #0xc]
	str r1, [sp, #8]
	muls r1, r3, r1
	lsls r1, r1, #5
	str r1, [sp, #0xc]
	cmp r0, #3
	bhi _0201ED4E
	adds r0, r0, r0
	add r0, pc
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add pc, r0
_0201ECA0: @ jump table
	.2byte _0201ECA8 - _0201ECA0 - 2 @ case 0
	.2byte _0201ECF6 - _0201ECA0 - 2 @ case 1
	.2byte _0201ED4E - _0201ECA0 - 2 @ case 2
	.2byte _0201ED4E - _0201ECA0 - 2 @ case 3
_0201ECA8:
	adds r0, r1, #0
	movs r7, #0
	cmp r0, #0
	ble _0201ED4E
	movs r0, #7
	mov lr, r0
_0201ECB4:
	ldr r3, [sp]
	movs r4, #0
	adds r5, r7, #0
_0201ECBA:
	movs r0, #7
	adds r6, r3, #0
	ands r6, r0
	adds r1, r3, #0
	mov r0, lr
	bics r1, r0
	ldr r0, [sp, #8]
	muls r1, r0, r1
	adds r0, r6, #0
	orrs r0, r1
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [sp, #0xc]
	cmp r1, r0
	bge _0201ECDC
	ldr r0, [r2, r1]
	b _0201ECDE
_0201ECDC:
	ldr r0, [sp, #4]
_0201ECDE:
	adds r4, r4, #1
	str r0, [r2, r5]
	adds r3, r3, #1
	adds r5, r5, #4
	cmp r4, #8
	blt _0201ECBA
	ldr r0, [sp, #0xc]
	adds r7, #0x20
	cmp r7, r0
	blt _0201ECB4
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
_0201ECF6:
	adds r0, r1, #0
	subs r0, r0, #4
	adds r2, r2, r0
	adds r0, r1, #0
	movs r7, #0
	cmp r0, #0
	ble _0201ED4E
	movs r0, #7
	mov ip, r0
_0201ED08:
	ldr r4, [sp]
	movs r5, #0
	adds r3, r7, #0
_0201ED0E:
	movs r0, #7
	adds r6, r4, #0
	ands r6, r0
	adds r1, r4, #0
	mov r0, ip
	bics r1, r0
	ldr r0, [sp, #8]
	muls r1, r0, r1
	adds r0, r6, #0
	orrs r0, r1
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [sp, #0xc]
	cmp r1, r0
	bge _0201ED36
	subs r0, r2, r1
	ldr r1, [r0]
	subs r0, r2, r3
	str r1, [r0]
	b _0201ED3C
_0201ED36:
	ldr r0, [sp, #4]
	subs r1, r2, r3
	str r0, [r1]
_0201ED3C:
	adds r5, r5, #1
	adds r4, r4, #1
	adds r3, r3, #4
	cmp r5, #8
	blt _0201ED0E
	ldr r0, [sp, #0xc]
	adds r7, #0x20
	cmp r7, r0
	blt _0201ED08
_0201ED4E:
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201EC68

	thumb_func_start FUN_0201ED54
FUN_0201ED54: @ 0x0201ED54
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r6, r3, #0
	adds r4, r0, #0
	str r2, [sp]
	lsls r2, r6, #0x18
	lsls r0, r6, #0x10
	orrs r0, r2
	ldrb r2, [r4, #7]
	ldr r3, [r4, #0xc]
	lsls r5, r6, #8
	orrs r0, r5
	ldrb r4, [r4, #8]
	str r2, [sp, #0x10]
	orrs r0, r6
	muls r2, r4, r2
	lsls r2, r2, #6
	str r2, [sp, #0x1c]
	cmp r1, #3
	bls _0201ED7E
	b _0201EE84
_0201ED7E:
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201ED8A: @ jump table
	.2byte _0201ED92 - _0201ED8A - 2 @ case 0
	.2byte _0201EE00 - _0201ED8A - 2 @ case 1
	.2byte _0201EE84 - _0201ED8A - 2 @ case 2
	.2byte _0201EE84 - _0201ED8A - 2 @ case 3
_0201ED92:
	movs r1, #0
	str r1, [sp, #0xc]
	adds r1, r2, #0
	cmp r1, #0
	ble _0201EE84
	adds r1, r1, #4
	str r1, [sp, #0x14]
	movs r1, #7
	mov lr, r1
_0201EDA4:
	ldr r4, [sp]
	ldr r5, [sp, #0xc]
	movs r7, #0
_0201EDAA:
	movs r1, #7
	adds r6, r4, #0
	ands r6, r1
	adds r2, r4, #0
	mov r1, lr
	bics r2, r1
	ldr r1, [sp, #0x10]
	muls r2, r1, r2
	adds r1, r6, #0
	orrs r1, r2
	lsls r2, r1, #3
	ldr r1, [sp, #0xc]
	adds r1, r1, r2
	ldr r2, [sp, #0x1c]
	cmp r1, r2
	bge _0201EDD0
	ldr r2, [r3, r1]
	str r2, [r3, r5]
	b _0201EDD2
_0201EDD0:
	str r0, [r3, r5]
_0201EDD2:
	adds r2, r1, #4
	ldr r1, [sp, #0x14]
	cmp r2, r1
	bge _0201EDE2
	ldr r2, [r3, r2]
	adds r1, r5, #4
	str r2, [r3, r1]
	b _0201EDE6
_0201EDE2:
	adds r1, r5, #4
	str r0, [r3, r1]
_0201EDE6:
	adds r7, r7, #1
	adds r4, r4, #1
	adds r5, #8
	cmp r7, #8
	blt _0201EDAA
	ldr r2, [sp, #0xc]
	ldr r1, [sp, #0x1c]
	adds r2, #0x40
	str r2, [sp, #0xc]
	cmp r2, r1
	blt _0201EDA4
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_0201EE00:
	adds r1, r2, #0
	subs r1, #8
	adds r3, r3, r1
	movs r1, #0
	str r1, [sp, #8]
	adds r1, r2, #0
	cmp r1, #0
	ble _0201EE84
_0201EE10:
	movs r1, #0
	str r1, [sp, #4]
	ldr r1, [sp, #0x1c]
	ldr r5, [sp]
	subs r1, r1, #4
	str r1, [sp, #0x18]
	movs r1, #7
	ldr r4, [sp, #8]
	mov ip, r1
_0201EE22:
	movs r1, #7
	adds r6, r5, #0
	ands r6, r1
	adds r2, r5, #0
	mov r1, ip
	bics r2, r1
	ldr r1, [sp, #0x10]
	muls r2, r1, r2
	adds r1, r6, #0
	orrs r1, r2
	lsls r2, r1, #3
	ldr r1, [sp, #8]
	adds r6, r1, r2
	ldr r1, [sp, #0x1c]
	cmp r6, r1
	bge _0201EE4C
	subs r1, r3, r6
	ldr r2, [r1]
	subs r1, r3, r4
	str r2, [r1]
	b _0201EE50
_0201EE4C:
	subs r1, r3, r4
	str r0, [r1]
_0201EE50:
	ldr r1, [sp, #0x18]
	subs r2, r6, #4
	cmp r2, r1
	bge _0201EE64
	subs r1, r3, r2
	subs r2, r4, #4
	ldr r1, [r1]
	subs r2, r3, r2
	str r1, [r2]
	b _0201EE6A
_0201EE64:
	subs r1, r4, #4
	subs r1, r3, r1
	str r0, [r1]
_0201EE6A:
	ldr r1, [sp, #4]
	adds r5, r5, #1
	adds r1, r1, #1
	adds r4, #8
	str r1, [sp, #4]
	cmp r1, #8
	blt _0201EE22
	ldr r2, [sp, #8]
	ldr r1, [sp, #0x1c]
	adds r2, #0x40
	str r2, [sp, #8]
	cmp r2, r1
	blt _0201EE10
_0201EE84:
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201ED54

	thumb_func_start FUN_0201EE88
FUN_0201EE88: @ 0x0201EE88
	ldr r0, [r0]
	bx lr
	thumb_func_end FUN_0201EE88

	thumb_func_start FUN_0201EE8C
FUN_0201EE8C: @ 0x0201EE8C
	ldrb r0, [r0, #4]
	bx lr
	thumb_func_end FUN_0201EE8C

	thumb_func_start FUN_0201EE90
FUN_0201EE90: @ 0x0201EE90
	ldrb r0, [r0, #7]
	bx lr
	thumb_func_end FUN_0201EE90

	thumb_func_start FUN_0201EE94
FUN_0201EE94: @ 0x0201EE94
	ldrb r0, [r0, #8]
	bx lr
	thumb_func_end FUN_0201EE94

	thumb_func_start FUN_0201EE98
FUN_0201EE98: @ 0x0201EE98
	ldrb r0, [r0, #5]
	bx lr
	thumb_func_end FUN_0201EE98

	thumb_func_start FUN_0201EE9C
FUN_0201EE9C: @ 0x0201EE9C
	ldrb r0, [r0, #6]
	bx lr
	thumb_func_end FUN_0201EE9C

	thumb_func_start FUN_0201EEA0
FUN_0201EEA0: @ 0x0201EEA0
	ldrh r0, [r0, #0xa]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x11
	bx lr
	thumb_func_end FUN_0201EEA0

	thumb_func_start FUN_0201EEA8
FUN_0201EEA8: @ 0x0201EEA8
	strb r1, [r0, #5]
	bx lr
	thumb_func_end FUN_0201EEA8

	thumb_func_start FUN_0201EEAC
FUN_0201EEAC: @ 0x0201EEAC
	strb r1, [r0, #6]
	bx lr
	thumb_func_end FUN_0201EEAC

	thumb_func_start FUN_0201EEB0
FUN_0201EEB0: @ 0x0201EEB0
	strb r1, [r0, #9]
	bx lr
	thumb_func_end FUN_0201EEB0

	thumb_func_start FUN_0201EEB4
FUN_0201EEB4: @ 0x0201EEB4
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201EFCC
	adds r0, r4, #0
	bl FUN_0201EECC
	movs r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201EEB4

	thumb_func_start FUN_0201EECC
FUN_0201EECC: @ 0x0201EECC
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #6]
	movs r0, #1
	tst r0, r1
	beq _0201EEE6
	ldr r2, [r4, #0x10]
	ldr r1, [r4, #8]
	ldr r3, [r4, #0xc]
	movs r0, #0
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EEE6:
	ldrh r1, [r4, #6]
	movs r0, #2
	tst r0, r1
	beq _0201EEFC
	ldr r2, [r4, #0x3c]
	ldr r1, [r4, #0x34]
	ldr r3, [r4, #0x38]
	movs r0, #1
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EEFC:
	ldrh r1, [r4, #6]
	movs r0, #4
	tst r0, r1
	beq _0201EF12
	ldr r2, [r4, #0x68]
	ldr r1, [r4, #0x60]
	ldr r3, [r4, #0x64]
	movs r0, #2
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EF12:
	ldrh r1, [r4, #6]
	movs r0, #8
	tst r0, r1
	beq _0201EF34
	adds r2, r4, #0
	adds r1, r4, #0
	adds r2, #0x94
	adds r3, r4, #0
	adds r1, #0x8c
	ldr r2, [r2]
	adds r3, #0x90
	ldr r1, [r1]
	ldr r3, [r3]
	movs r0, #3
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EF34:
	ldrh r1, [r4, #6]
	movs r0, #0x10
	tst r0, r1
	beq _0201EF56
	adds r2, r4, #0
	adds r1, r4, #0
	adds r2, #0xc0
	adds r3, r4, #0
	adds r1, #0xb8
	ldr r2, [r2]
	adds r3, #0xbc
	ldr r1, [r1]
	ldr r3, [r3]
	movs r0, #4
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EF56:
	ldrh r1, [r4, #6]
	movs r0, #0x20
	tst r0, r1
	beq _0201EF78
	adds r2, r4, #0
	adds r1, r4, #0
	adds r2, #0xec
	adds r3, r4, #0
	adds r1, #0xe4
	ldr r2, [r2]
	adds r3, #0xe8
	ldr r1, [r1]
	ldr r3, [r3]
	movs r0, #5
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EF78:
	ldrh r0, [r4, #6]
	movs r3, #0x40
	tst r0, r3
	beq _0201EF98
	adds r2, r3, #0
	adds r1, r3, #0
	adds r2, #0xd8
	adds r1, #0xd0
	ldr r2, [r4, r2]
	adds r3, #0xd4
	ldr r1, [r4, r1]
	ldr r3, [r4, r3]
	movs r0, #6
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EF98:
	ldrh r0, [r4, #6]
	movs r3, #0x80
	tst r0, r3
	beq _0201EFB8
	adds r2, r3, #0
	adds r1, r3, #0
	adds r2, #0xc4
	adds r1, #0xbc
	ldr r2, [r4, r2]
	adds r3, #0xc0
	ldr r1, [r4, r1]
	ldr r3, [r4, r3]
	movs r0, #7
	lsls r2, r2, #1
	bl FUN_0201C014
_0201EFB8:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201EECC

	thumb_func_start FUN_0201EFBC
FUN_0201EFBC: @ 0x0201EFBC
	ldrh r3, [r0, #6]
	movs r2, #1
	lsls r2, r1
	adds r1, r3, #0
	orrs r1, r2
	strh r1, [r0, #6]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201EFBC

	thumb_func_start FUN_0201EFCC
FUN_0201EFCC: @ 0x0201EFCC
	push {r4, lr}
	sub sp, #0x48
	adds r4, r0, #0
	ldrh r1, [r4, #4]
	movs r0, #1
	tst r0, r1
	beq _0201EFF2
	ldr r1, [r4, #0x14]
	ldr r0, _0201F204 @ =0x000001FF
	adds r2, r1, #0
	ldr r1, [r4, #0x18]
	ands r2, r0
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201F208 @ =0x04000010
	str r1, [r0]
_0201EFF2:
	ldrh r1, [r4, #4]
	movs r0, #2
	tst r0, r1
	beq _0201F012
	ldr r1, [r4, #0x40]
	ldr r0, _0201F204 @ =0x000001FF
	adds r2, r1, #0
	ldr r1, [r4, #0x44]
	ands r2, r0
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201F20C @ =0x04000014
	str r1, [r0]
_0201F012:
	ldrh r1, [r4, #4]
	movs r0, #4
	tst r0, r1
	beq _0201F072
	adds r0, r4, #0
	adds r0, #0x74
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201F03E
	ldr r1, [r4, #0x6c]
	ldr r0, _0201F204 @ =0x000001FF
	adds r2, r1, #0
	ldr r1, [r4, #0x70]
	ands r2, r0
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201F210 @ =0x04000018
	str r1, [r0]
	b _0201F072
_0201F03E:
	movs r0, #2
	str r0, [sp]
	adds r1, r4, #0
	adds r1, #0x78
	adds r3, r4, #0
	adds r3, #0x80
	ldrh r1, [r1]
	ldr r2, [r4, #0x7c]
	ldr r3, [r3]
	add r0, sp, #0x38
	bl FUN_0201FECC
	ldr r0, [r4, #0x6c]
	adds r2, r4, #0
	str r0, [sp]
	ldr r0, [r4, #0x70]
	adds r3, r4, #0
	str r0, [sp, #4]
	adds r2, #0x84
	adds r3, #0x88
	ldr r0, _0201F214 @ =0x04000020
	ldr r2, [r2]
	ldr r3, [r3]
	add r1, sp, #0x38
	blx FUN_020CF0AC
_0201F072:
	ldrh r1, [r4, #4]
	movs r0, #8
	tst r0, r1
	beq _0201F0E2
	adds r0, r4, #0
	adds r0, #0xa0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0201F0A2
	adds r0, r4, #0
	adds r2, r4, #0
	adds r0, #0x98
	adds r2, #0x9c
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 @ =0x000001FF
	lsls r2, r2, #0x10
	ands r0, r1
	lsls r1, r1, #0x10
	ands r1, r2
	orrs r1, r0
	ldr r0, _0201F218 @ =0x0400001C
	str r1, [r0]
	b _0201F0E2
_0201F0A2:
	movs r0, #2
	adds r1, r4, #0
	str r0, [sp]
	adds r1, #0xa4
	adds r2, r4, #0
	adds r3, r4, #0
	adds r2, #0xa8
	adds r3, #0xac
	ldrh r1, [r1]
	ldr r2, [r2]
	ldr r3, [r3]
	add r0, sp, #0x28
	bl FUN_0201FECC
	adds r0, r4, #0
	adds r0, #0x98
	ldr r0, [r0]
	adds r2, r4, #0
	str r0, [sp]
	adds r0, r4, #0
	adds r0, #0x9c
	ldr r0, [r0]
	adds r3, r4, #0
	str r0, [sp, #4]
	adds r2, #0xb0
	adds r3, #0xb4
	ldr r0, _0201F21C @ =0x04000030
	ldr r2, [r2]
	ldr r3, [r3]
	add r1, sp, #0x28
	blx FUN_020CF0AC
_0201F0E2:
	ldrh r1, [r4, #4]
	movs r0, #0x10
	tst r0, r1
	beq _0201F106
	adds r0, r4, #0
	adds r2, r4, #0
	adds r0, #0xc4
	adds r2, #0xc8
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 @ =0x000001FF
	lsls r2, r2, #0x10
	ands r0, r1
	lsls r1, r1, #0x10
	ands r1, r2
	orrs r1, r0
	ldr r0, _0201F220 @ =0x04001010
	str r1, [r0]
_0201F106:
	ldrh r1, [r4, #4]
	movs r0, #0x20
	tst r0, r1
	beq _0201F12A
	adds r0, r4, #0
	adds r2, r4, #0
	adds r0, #0xf0
	adds r2, #0xf4
	ldr r2, [r2]
	ldr r0, [r0]
	ldr r1, _0201F204 @ =0x000001FF
	lsls r2, r2, #0x10
	ands r0, r1
	lsls r1, r1, #0x10
	ands r1, r2
	orrs r1, r0
	ldr r0, _0201F224 @ =0x04001014
	str r1, [r0]
_0201F12A:
	ldrh r0, [r4, #4]
	movs r3, #0x40
	tst r0, r3
	beq _0201F192
	adds r0, r3, #0
	adds r0, #0xe4
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _0201F158
	ldr r1, _0201F204 @ =0x000001FF
	adds r3, #0xdc
	adds r2, r1, #0
	subs r2, #0xdf
	ldr r0, [r4, r3]
	ldr r2, [r4, r2]
	ands r0, r1
	lsls r2, r2, #0x10
	lsls r1, r1, #0x10
	ands r1, r2
	orrs r1, r0
	ldr r0, _0201F228 @ =0x04001018
	str r1, [r0]
	b _0201F192
_0201F158:
	movs r0, #2
	adds r1, r3, #0
	adds r2, r3, #0
	str r0, [sp]
	adds r1, #0xe8
	adds r2, #0xec
	adds r3, #0xf0
	ldrh r1, [r4, r1]
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r0, sp, #0x18
	bl FUN_0201FECC
	movs r3, #0x47
	lsls r3, r3, #2
	ldr r0, [r4, r3]
	adds r2, r3, #0
	str r0, [sp]
	adds r0, r3, #4
	ldr r0, [r4, r0]
	adds r2, #0x18
	str r0, [sp, #4]
	adds r3, #0x1c
	ldr r0, _0201F22C @ =0x04001020
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r1, sp, #0x18
	blx FUN_020CF0AC
_0201F192:
	ldrh r0, [r4, #4]
	movs r3, #0x80
	tst r0, r3
	beq _0201F200
	adds r0, r3, #0
	adds r0, #0xd0
	ldrb r0, [r4, r0]
	cmp r0, #0
	bne _0201F1C6
	adds r3, #0xc8
	ldr r1, [r4, r3]
	ldr r0, _0201F204 @ =0x000001FF
	adds r2, r1, #0
	adds r1, r0, #0
	subs r1, #0xb3
	ldr r1, [r4, r1]
	ands r2, r0
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	ldr r0, _0201F230 @ =0x0400101C
	add sp, #0x48
	str r1, [r0]
	pop {r4, pc}
_0201F1C6:
	movs r0, #2
	adds r1, r3, #0
	adds r2, r3, #0
	str r0, [sp]
	adds r1, #0xd4
	adds r2, #0xd8
	adds r3, #0xdc
	ldrh r1, [r4, r1]
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r0, sp, #8
	bl FUN_0201FECC
	movs r3, #0x52
	lsls r3, r3, #2
	ldr r0, [r4, r3]
	adds r2, r3, #0
	str r0, [sp]
	adds r0, r3, #4
	ldr r0, [r4, r0]
	adds r2, #0x18
	str r0, [sp, #4]
	adds r3, #0x1c
	ldr r0, _0201F234 @ =0x04001030
	ldr r2, [r4, r2]
	ldr r3, [r4, r3]
	add r1, sp, #8
	blx FUN_020CF0AC
_0201F200:
	add sp, #0x48
	pop {r4, pc}
	.align 2, 0
_0201F204: .4byte 0x000001FF
_0201F208: .4byte 0x04000010
_0201F20C: .4byte 0x04000014
_0201F210: .4byte 0x04000018
_0201F214: .4byte 0x04000020
_0201F218: .4byte 0x0400001C
_0201F21C: .4byte 0x04000030
_0201F220: .4byte 0x04001010
_0201F224: .4byte 0x04001014
_0201F228: .4byte 0x04001018
_0201F22C: .4byte 0x04001020
_0201F230: .4byte 0x0400101C
_0201F234: .4byte 0x04001030
	thumb_func_end FUN_0201EFCC

	thumb_func_start FUN_0201F238
FUN_0201F238: @ 0x0201F238
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	movs r0, #0x2c
	adds r1, #8
	muls r0, r4, r0
	adds r0, r1, r0
	adds r1, r2, #0
	adds r2, r3, #0
	bl FUN_0201BE38
	movs r0, #1
	ldrh r1, [r5, #4]
	lsls r0, r4
	orrs r0, r1
	strh r0, [r5, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201F238

	thumb_func_start FUN_0201F25C
FUN_0201F25C: @ 0x0201F25C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	movs r0, #0x2c
	adds r1, #8
	muls r0, r4, r0
	adds r0, r1, r0
	adds r1, r2, #0
	adds r2, r3, #0
	bl FUN_0201F280
	movs r0, #1
	ldrh r1, [r5, #4]
	lsls r0, r4
	orrs r0, r1
	strh r0, [r5, #4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201F25C

	thumb_func_start FUN_0201F280
FUN_0201F280: @ 0x0201F280
	cmp r1, #8
	bhi _0201F2C8
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_0201F290: @ jump table
	.2byte _0201F2C8 - _0201F290 - 2 @ case 0
	.2byte _0201F2C8 - _0201F290 - 2 @ case 1
	.2byte _0201F2C8 - _0201F290 - 2 @ case 2
	.2byte _0201F2A2 - _0201F290 - 2 @ case 3
	.2byte _0201F2A6 - _0201F290 - 2 @ case 4
	.2byte _0201F2AE - _0201F290 - 2 @ case 5
	.2byte _0201F2B6 - _0201F290 - 2 @ case 6
	.2byte _0201F2BA - _0201F290 - 2 @ case 7
	.2byte _0201F2C2 - _0201F290 - 2 @ case 8
_0201F2A2:
	str r2, [r0, #0x1c]
	bx lr
_0201F2A6:
	ldr r1, [r0, #0x1c]
	adds r1, r1, r2
	str r1, [r0, #0x1c]
	bx lr
_0201F2AE:
	ldr r1, [r0, #0x1c]
	subs r1, r1, r2
	str r1, [r0, #0x1c]
	bx lr
_0201F2B6:
	str r2, [r0, #0x20]
	bx lr
_0201F2BA:
	ldr r1, [r0, #0x20]
	adds r1, r1, r2
	str r1, [r0, #0x20]
	bx lr
_0201F2C2:
	ldr r1, [r0, #0x20]
	subs r1, r1, r2
	str r1, [r0, #0x20]
_0201F2C8:
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201F280

	thumb_func_start FUN_0201F2CC
FUN_0201F2CC: @ 0x0201F2CC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x20
	str r1, [sp]
	adds r6, r0, #0
	str r2, [sp, #4]
	ldr r0, [sp, #0x38]
	str r3, [sp, #8]
	str r0, [sp, #0x38]
	ldr r0, [sp]
	adds r4, r6, #0
	movs r1, #0x2c
	adds r5, r0, #0
	muls r5, r1, r5
	adds r4, #8
	ldr r0, [r4, r5]
	cmp r0, #0
	bne _0201F2F4
	add sp, #0x20
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F2F4:
	adds r0, r6, #0
	str r0, [sp, #0x18]
	adds r0, #0x1c
	str r0, [sp, #0x18]
	ldr r3, [sp, #0x18]
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	adds r2, r6, r5
	lsls r0, r0, #0x15
	lsls r1, r1, #0x15
	ldrb r2, [r2, #0x1d]
	ldrb r3, [r3, r5]
	lsrs r0, r0, #0x18
	lsrs r1, r1, #0x18
	bl FUN_0201C2F0
	adds r7, r0, #0
	ldr r0, [sp]
	bl FUN_0201CB4C
	str r0, [sp, #0x1c]
	ldr r1, [sp, #4]
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x14]
	ldr r1, [sp, #8]
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	adds r0, r6, r5
	ldrb r0, [r0, #0x1e]
	cmp r0, #0
	bne _0201F3B2
	ldr r0, [r4, r5]
	movs r1, #0x40
	str r0, [sp, #0xc]
	ldr r0, [r6]
	bl FUN_0201AACC
	adds r4, r0, #0
	lsls r0, r7, #1
	ldr r1, [sp, #0xc]
	mov ip, r0
	ldrh r0, [r1, r0]
	movs r3, #0
	movs r7, #0xf
	lsls r0, r0, #0x16
	lsrs r1, r0, #0x11
	ldr r0, [sp, #0x1c]
	adds r2, r0, r1
_0201F35E:
	ldrb r5, [r2, r3]
	lsls r0, r3, #1
	adds r1, r4, r0
	ands r5, r7
	strb r5, [r4, r0]
	ldrb r0, [r2, r3]
	asrs r0, r0, #4
	strb r0, [r1, #1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x20
	blo _0201F35E
	ldr r2, [sp, #0xc]
	mov r1, ip
	ldrh r1, [r2, r1]
	adds r0, r6, #0
	asrs r2, r1, #0xa
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r2, r4, #0
	bl FUN_0201F434
	ldr r0, [sp, #0x10]
	lsls r1, r0, #3
	ldr r0, [sp, #0x14]
	adds r0, r0, r1
	ldrb r5, [r4, r0]
	adds r0, r4, #0
	bl FUN_0201AB0C
	ldr r0, [sp, #0x38]
	ldrh r2, [r0]
	movs r0, #1
	adds r1, r0, #0
	lsls r1, r5
	tst r1, r2
	beq _0201F42A
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
_0201F3B2:
	ldr r0, [sp, #0x18]
	ldrb r0, [r0, r5]
	cmp r0, #1
	beq _0201F3FE
	ldr r0, [r6]
	ldr r4, [r4, r5]
	movs r1, #0x40
	bl FUN_0201AACC
	lsls r7, r7, #1
	ldrh r1, [r4, r7]
	adds r5, r0, #0
	lsls r1, r1, #0x16
	lsrs r2, r1, #0x10
	ldr r1, [sp, #0x1c]
	adds r1, r1, r2
	movs r2, #0x40
	blx FUN_020E5AD8
	ldrh r1, [r4, r7]
	adds r0, r6, #0
	asrs r2, r1, #0xa
	movs r1, #3
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r2, r5, #0
	bl FUN_0201F434
	ldr r0, [sp, #0x10]
	lsls r1, r0, #3
	ldr r0, [sp, #0x14]
	adds r0, r0, r1
	ldrb r4, [r5, r0]
	adds r0, r5, #0
	bl FUN_0201AB0C
	b _0201F412
_0201F3FE:
	ldr r1, [r4, r5]
	ldr r0, [sp, #0x10]
	ldrb r1, [r1, r7]
	lsls r0, r0, #3
	lsls r2, r1, #6
	ldr r1, [sp, #0x14]
	adds r1, r1, r2
	adds r1, r0, r1
	ldr r0, [sp, #0x1c]
	ldrb r4, [r0, r1]
_0201F412:
	ldr r0, [sp, #0x38]
	ldrh r2, [r0]
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x18
	ldr r0, _0201F430 @ =0x0000FFFF
_0201F41C:
	cmp r2, r0
	beq _0201F42A
	cmp r4, r1
	bne _0201F41C
	add sp, #0x20
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_0201F42A:
	movs r0, #0
	add sp, #0x20
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201F430: .4byte 0x0000FFFF
	thumb_func_end FUN_0201F2CC

	thumb_func_start FUN_0201F434
FUN_0201F434: @ 0x0201F434
	push {r3, r4, r5, r6, r7, lr}
	str r1, [sp]
	ldr r1, [sp]
	adds r7, r2, #0
	cmp r1, #0
	beq _0201F4C0
	ldr r0, [r0]
	movs r1, #0x40
	bl FUN_0201AACC
	adds r4, r0, #0
	ldr r0, [sp]
	movs r1, #1
	tst r0, r1
	beq _0201F482
	movs r0, #0
	movs r5, #7
_0201F456:
	lsls r3, r0, #3
	adds r2, r7, r3
	movs r1, #0
	adds r3, r4, r3
_0201F45E:
	subs r6, r5, r1
	ldrb r6, [r2, r6]
	strb r6, [r3, r1]
	adds r1, r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #8
	blo _0201F45E
	adds r0, r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	blo _0201F456
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0x40
	blx FUN_020E5AD8
_0201F482:
	ldr r0, [sp]
	movs r1, #2
	tst r0, r1
	beq _0201F4BA
	movs r5, #0
	movs r6, #7
_0201F48E:
	lsls r0, r5, #3
	adds r3, r4, r0
	subs r0, r6, r5
	lsls r0, r0, #3
	adds r2, r7, r0
	movs r1, #8
_0201F49A:
	ldrb r0, [r2]
	adds r2, r2, #1
	strb r0, [r3]
	adds r3, r3, #1
	subs r1, r1, #1
	bne _0201F49A
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #8
	blo _0201F48E
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0x40
	blx FUN_020E5AD8
_0201F4BA:
	adds r0, r4, #0
	bl FUN_0201AB0C
_0201F4C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0201F434

	thumb_func_start FUN_0201F4C4
FUN_0201F4C4: @ 0x0201F4C4
	push {r3, r4, r5, lr}
	adds r5, r1, #0
	adds r4, r0, #0
	ldr r0, [r5]
	blx FUN_020C3B50
	cmp r0, #0
	beq _0201F4EA
	bl FUN_0201F53C
	cmp r0, #0
	bne _0201F4EA
	ldr r0, [r5]
	ldr r1, [r0, #8]
	blx FUN_020D2894
	ldr r0, [r5]
	blx FUN_020C26C0
_0201F4EA:
	ldr r0, [r5]
	blx FUN_020C3B40
	cmp r0, #0
	beq _0201F514
	adds r2, r0, #0
	adds r2, #8
	beq _0201F508
	ldrb r1, [r0, #9]
	cmp r1, #0
	bls _0201F508
	ldrh r1, [r0, #0xe]
	adds r1, r2, r1
	adds r1, r1, #4
	b _0201F50A
_0201F508:
	movs r1, #0
_0201F50A:
	cmp r1, #0
	beq _0201F514
	ldr r1, [r1]
	adds r0, r0, r1
	b _0201F516
_0201F514:
	movs r0, #0
_0201F516:
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201F4C4

	thumb_func_start FUN_0201F51C
FUN_0201F51C: @ 0x0201F51C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r2, #0
	bl FUN_0201F4C4
	cmp r4, #0
	bne _0201F532
	bl FUN_0202551C
_0201F532:
	ldr r1, [r4]
	adds r0, r5, #0
	blx FUN_020BE120
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0201F51C

	thumb_func_start FUN_0201F53C
FUN_0201F53C: @ 0x0201F53C
	ldrh r2, [r0, #0x10]
	movs r1, #1
	tst r2, r1
	bne _0201F54A
	ldrh r0, [r0, #0x20]
	tst r0, r1
	beq _0201F54E
_0201F54A:
	movs r0, #1
	bx lr
_0201F54E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201F53C

	thumb_func_start FUN_0201F554
FUN_0201F554: @ 0x0201F554
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	blx FUN_020BEFD4
	ldr r1, _0201F588 @ =0x021DA558
	adds r0, r4, #0
	blx FUN_020D4928
	ldr r1, _0201F58C @ =0x021DA51C
	movs r0, #0xa4
	ldr r2, [r1, #0x7c]
	bics r2, r0
	adds r0, r6, #0
	str r2, [r1, #0x7c]
	blx FUN_020BF004
	blx FUN_020BEF98
	adds r0, r5, #0
	blx FUN_020BFCC8
	pop {r4, r5, r6, pc}
	nop
_0201F588: .4byte 0x021DA558
_0201F58C: .4byte 0x021DA51C
	thumb_func_end FUN_0201F554

	thumb_func_start FUN_0201F590
FUN_0201F590: @ 0x0201F590
	push {r3, lr}
	sub sp, #8
	movs r1, #4
	str r1, [sp]
	ldr r1, _0201F5B0 @ =FUN_0201F5B8
	movs r2, #2
	str r1, [sp, #4]
	movs r1, #0
	adds r3, r1, #0
	bl FUN_02026EB4
	ldr r1, _0201F5B4 @ =0x021D15A0
	str r0, [r1]
	add sp, #8
	pop {r3, pc}
	nop
_0201F5B0: .4byte FUN_0201F5B8
_0201F5B4: .4byte 0x021D15A0
	thumb_func_end FUN_0201F590

	thumb_func_start FUN_0201F5B8
FUN_0201F5B8: @ 0x0201F5B8
	push {r3, lr}
	movs r0, #1
	adds r1, r0, #0
	bl FUN_02022C60
	ldr r0, _0201F624 @ =0x04000008
	movs r1, #3
	ldrh r2, [r0]
	bics r2, r1
	movs r1, #1
	orrs r1, r2
	strh r1, [r0]
	adds r0, #0x58
	ldrh r2, [r0]
	ldr r1, _0201F628 @ =0xFFFFCFFD
	ands r2, r1
	strh r2, [r0]
	adds r2, r1, #2
	ldrh r3, [r0]
	adds r1, r1, #2
	ands r3, r2
	movs r2, #0x10
	orrs r2, r3
	strh r2, [r0]
	ldrh r3, [r0]
	ldr r2, _0201F62C @ =0x0000CFFB
	ands r3, r2
	strh r3, [r0]
	ldrh r3, [r0]
	subs r2, #0x1c
	ands r3, r1
	movs r1, #8
	orrs r1, r3
	strh r1, [r0]
	ldrh r1, [r0]
	ands r1, r2
	strh r1, [r0]
	movs r0, #0
	adds r1, r0, #0
	adds r2, r0, #0
	adds r3, r0, #0
	blx FUN_020CF82C
	movs r0, #0
	ldr r2, _0201F630 @ =0x00007FFF
	adds r1, r0, #0
	movs r3, #0x3f
	str r0, [sp]
	blx FUN_020CF910
	ldr r1, _0201F634 @ =0xBFFF0000
	ldr r0, _0201F638 @ =0x04000580
	str r1, [r0]
	pop {r3, pc}
	.align 2, 0
_0201F624: .4byte 0x04000008
_0201F628: .4byte 0xFFFFCFFD
_0201F62C: .4byte 0x0000CFFB
_0201F630: .4byte 0x00007FFF
_0201F634: .4byte 0xBFFF0000
_0201F638: .4byte 0x04000580
	thumb_func_end FUN_0201F5B8

	thumb_func_start FUN_0201F63C
FUN_0201F63C: @ 0x0201F63C
	ldr r0, _0201F644 @ =0x021D15A0
	ldr r3, _0201F648 @ =FUN_02026F54
	ldr r0, [r0]
	bx r3
	.align 2, 0
_0201F644: .4byte 0x021D15A0
_0201F648: .4byte FUN_02026F54
	thumb_func_end FUN_0201F63C

	thumb_func_start FUN_0201F64C
FUN_0201F64C: @ 0x0201F64C
	push {r4, lr}
	adds r4, r1, #0
	blx FUN_020C3B40
	cmp r4, #0
	beq _0201F662
	adds r1, r4, #0
	blx FUN_020BED00
	movs r0, #1
	pop {r4, pc}
_0201F662:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201F64C

	thumb_func_start FUN_0201F668
FUN_0201F668: @ 0x0201F668
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	bne _0201F676
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F676:
	movs r1, #0
	str r1, [r5, #8]
	movs r1, #1
	str r1, [sp, #8]
	str r1, [sp, #4]
	str r1, [sp]
	cmp r5, #0
	beq _0201F774
	blx FUN_020BE3DC
	adds r6, r0, #0
	adds r0, r5, #0
	blx FUN_020BE3F0
	adds r4, r0, #0
	adds r0, r5, #0
	blx FUN_020BE51C
	str r0, [sp, #0xc]
	cmp r6, #0
	beq _0201F6B6
	ldr r3, _0201F77C @ =_02110924
	movs r1, #0
	ldr r3, [r3]
	adds r0, r6, #0
	adds r2, r1, #0
	blx r3
	adds r7, r0, #0
	bne _0201F6B8
	movs r0, #0
	str r0, [sp, #8]
	b _0201F6B8
_0201F6B6:
	movs r7, #0
_0201F6B8:
	cmp r4, #0
	beq _0201F6D2
	ldr r3, _0201F77C @ =_02110924
	adds r0, r4, #0
	ldr r3, [r3]
	movs r1, #1
	movs r2, #0
	blx r3
	adds r6, r0, #0
	bne _0201F6D4
	movs r0, #0
	str r0, [sp, #4]
	b _0201F6D4
_0201F6D2:
	movs r6, #0
_0201F6D4:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _0201F6F4
	ldr r3, _0201F780 @ =_0211092C
	movs r1, #2
	ldrh r2, [r5, #0x20]
	lsls r1, r1, #0xe
	ldr r3, [r3]
	ands r1, r2
	movs r2, #0
	blx r3
	adds r4, r0, #0
	bne _0201F6F6
	movs r0, #0
	str r0, [sp]
	b _0201F6F6
_0201F6F4:
	movs r4, #0
_0201F6F6:
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _0201F712
	ldr r1, _0201F784 @ =_02110928
	adds r0, r7, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F70C
	bl FUN_0202551C
_0201F70C:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F712:
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _0201F72E
	ldr r1, _0201F784 @ =_02110928
	adds r0, r6, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F728
	bl FUN_0202551C
_0201F728:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F72E:
	ldr r0, [sp]
	cmp r0, #0
	bne _0201F74A
	ldr r1, _0201F788 @ =_02110930
	adds r0, r4, #0
	ldr r1, [r1]
	blx r1
	cmp r0, #0
	beq _0201F744
	bl FUN_0202551C
_0201F744:
	add sp, #0x10
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F74A:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	blx FUN_020BE404
	adds r0, r5, #0
	adds r1, r4, #0
	blx FUN_020BE530
	ldr r1, [r5, #4]
	adds r0, r5, #0
	blx FUN_020D2894
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0201F78C
	adds r0, r5, #0
	movs r1, #1
	bl FUN_0201F794
_0201F774:
	movs r0, #1
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0201F77C: .4byte _02110924
_0201F780: .4byte _0211092C
_0201F784: .4byte _02110928
_0201F788: .4byte _02110930
	thumb_func_end FUN_0201F668

	thumb_func_start FUN_0201F78C
FUN_0201F78C: @ 0x0201F78C
	ldr r3, _0201F790 @ =FUN_020BE418
	bx r3
	.align 2, 0
_0201F790: .4byte FUN_020BE418
	thumb_func_end FUN_0201F78C

	thumb_func_start FUN_0201F794
FUN_0201F794: @ 0x0201F794
	ldr r3, _0201F798 @ =FUN_020BE538
	bx r3
	.align 2, 0
_0201F798: .4byte FUN_020BE538
	thumb_func_end FUN_0201F794

	thumb_func_start FUN_0201F79C
FUN_0201F79C: @ 0x0201F79C
	str r0, [r1]
	adds r0, r0, #4
	str r0, [r1, #8]
	str r0, [r1, #4]
	movs r0, #0
	str r0, [r1, #0xc]
	str r0, [r1, #0x10]
	str r0, [r1, #0x14]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201F79C

	thumb_func_start FUN_0201F7B0
FUN_0201F7B0: @ 0x0201F7B0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r0, [r5]
	movs r7, #0
	cmp r0, #0
	ble _0201F7DE
	adds r4, r7, #0
	adds r6, r7, #0
_0201F7C0:
	ldr r1, [r5, #0x24]
	adds r0, r5, #0
	adds r1, r1, r4
	bl FUN_0201F79C
	ldr r0, [r5, #0x24]
	adds r7, r7, #1
	adds r1, r0, r4
	ldr r0, [r5, #0x20]
	adds r4, #0x1c
	str r1, [r0, r6]
	ldrh r0, [r5]
	adds r6, r6, #4
	cmp r7, r0
	blt _0201F7C0
_0201F7DE:
	movs r0, #0
	strh r0, [r5, #2]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201F7B0

	thumb_func_start FUN_0201F7E4
FUN_0201F7E4: @ 0x0201F7E4
	ldrh r3, [r0, #2]
	ldrh r1, [r0]
	cmp r3, r1
	bne _0201F7F0
	movs r0, #0
	bx lr
_0201F7F0:
	ldr r2, [r0, #0x20]
	lsls r1, r3, #2
	ldr r2, [r2, r1]
	adds r1, r3, #1
	strh r1, [r0, #2]
	adds r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201F7E4

	thumb_func_start FUN_0201F800
FUN_0201F800: @ 0x0201F800
	ldrh r2, [r0, #2]
	cmp r2, #0
	bne _0201F80A
	movs r0, #0
	bx lr
_0201F80A:
	str r0, [r1]
	adds r2, r0, #4
	str r2, [r1, #8]
	str r2, [r1, #4]
	movs r2, #0
	str r2, [r1, #0xc]
	str r2, [r1, #0x10]
	str r2, [r1, #0x14]
	ldrh r2, [r0, #2]
	subs r2, r2, #1
	strh r2, [r0, #2]
	ldr r2, [r0, #0x20]
	ldrh r0, [r0, #2]
	lsls r0, r0, #2
	str r1, [r2, r0]
	movs r0, #1
	bx lr
	thumb_func_end FUN_0201F800

	thumb_func_start FUN_0201F82C
FUN_0201F82C: @ 0x0201F82C
	lsls r0, r0, #5
	adds r0, #0x34
	bx lr
	.align 2, 0
	thumb_func_end FUN_0201F82C

	thumb_func_start FUN_0201F834
FUN_0201F834: @ 0x0201F834
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bne _0201F840
	bl FUN_0202551C
_0201F840:
	adds r1, r4, #0
	adds r1, #0x34
	lsls r0, r5, #2
	str r1, [r4, #0x20]
	adds r0, r1, r0
	str r0, [r4, #0x24]
	strh r5, [r4]
	movs r0, #0
	strh r0, [r4, #2]
	str r0, [r4, #0x28]
	adds r0, r4, #0
	bl FUN_0201F860
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201F834

	thumb_func_start FUN_0201F860
FUN_0201F860: @ 0x0201F860
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_0201F7B0
	str r4, [r4, #4]
	adds r0, r4, #4
	str r0, [r4, #0xc]
	str r0, [r4, #8]
	movs r0, #0
	str r0, [r4, #0x10]
	str r0, [r4, #0x14]
	str r0, [r4, #0x18]
	ldr r0, [r4, #0xc]
	str r0, [r4, #0x2c]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_0201F860

	thumb_func_start FUN_0201F880
FUN_0201F880: @ 0x0201F880
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x28]
	cmp r0, #0
	bne _0201F8BC
	ldr r1, [r5, #0xc]
	adds r4, r5, #4
	str r1, [r5, #0x2c]
	cmp r1, r4
	beq _0201F8B8
	movs r6, #0
_0201F896:
	ldr r0, [r1, #8]
	str r0, [r5, #0x30]
	ldr r0, [r5, #0x2c]
	ldr r1, [r0, #0x18]
	cmp r1, #0
	bne _0201F8AE
	ldr r2, [r0, #0x14]
	cmp r2, #0
	beq _0201F8B0
	ldr r1, [r0, #0x10]
	blx r2
	b _0201F8B0
_0201F8AE:
	str r6, [r0, #0x18]
_0201F8B0:
	ldr r1, [r5, #0x30]
	str r1, [r5, #0x2c]
	cmp r1, r4
	bne _0201F896
_0201F8B8:
	movs r0, #0
	str r0, [r1, #0x14]
_0201F8BC:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_0201F880

	thumb_func_start FUN_0201F8C0
FUN_0201F8C0: @ 0x0201F8C0
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	movs r5, #1
	str r5, [r4, #0x28]
	bl FUN_0201F8D4
	movs r1, #0
	str r1, [r4, #0x28]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201F8C0

	thumb_func_start FUN_0201F8D4
FUN_0201F8D4: @ 0x0201F8D4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	adds r4, r3, #0
	bl FUN_0201F7E4
	cmp r0, #0
	bne _0201F8EA
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0201F8EA:
	str r4, [r0, #0xc]
	str r7, [r0, #0x10]
	str r6, [r0, #0x14]
	ldr r2, [r5, #0x2c]
	ldr r1, [r2, #0x14]
	cmp r1, #0
	beq _0201F90A
	ldr r1, [r2, #0xc]
	cmp r1, r4
	bhi _0201F904
	movs r1, #1
	str r1, [r0, #0x18]
	b _0201F90E
_0201F904:
	movs r1, #0
	str r1, [r0, #0x18]
	b _0201F90E
_0201F90A:
	movs r1, #0
	str r1, [r0, #0x18]
_0201F90E:
	ldr r3, [r5, #0xc]
	adds r2, r5, #4
	cmp r3, r2
	beq _0201F93A
	ldr r4, [r0, #0xc]
_0201F918:
	ldr r1, [r3, #0xc]
	cmp r1, r4
	bls _0201F934
	ldr r1, [r3, #4]
	str r1, [r0, #4]
	str r3, [r0, #8]
	ldr r1, [r3, #4]
	str r0, [r1, #8]
	str r0, [r3, #4]
	ldr r1, [r5, #0x30]
	cmp r3, r1
	bne _0201F952
	str r0, [r5, #0x30]
	pop {r3, r4, r5, r6, r7, pc}
_0201F934:
	ldr r3, [r3, #8]
	cmp r3, r2
	bne _0201F918
_0201F93A:
	ldr r2, [r5, #0x30]
	adds r1, r5, #4
	cmp r2, r1
	bne _0201F944
	str r0, [r5, #0x30]
_0201F944:
	ldr r1, [r5, #8]
	str r1, [r0, #4]
	adds r1, r5, #4
	str r1, [r0, #8]
	ldr r1, [r5, #8]
	str r0, [r1, #8]
	str r0, [r5, #8]
_0201F952:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0201F8D4

	thumb_func_start FUN_0201F954
FUN_0201F954: @ 0x0201F954
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x14]
	cmp r0, #0
	bne _0201F962
	bl FUN_0202551C
_0201F962:
	ldr r1, [r4]
	ldr r0, [r1, #0x30]
	cmp r0, r4
	bne _0201F96E
	ldr r0, [r4, #8]
	str r0, [r1, #0x30]
_0201F96E:
	ldr r1, [r4, #8]
	ldr r0, [r4, #4]
	str r1, [r0, #8]
	ldr r1, [r4, #4]
	ldr r0, [r4, #8]
	str r1, [r0, #4]
	ldr r0, [r4]
	adds r1, r4, #0
	bl FUN_0201F800
	pop {r4, pc}
	thumb_func_end FUN_0201F954

	thumb_func_start FUN_0201F984
FUN_0201F984: @ 0x0201F984
	str r1, [r0, #0x14]
	bx lr
	thumb_func_end FUN_0201F984

	thumb_func_start FUN_0201F988
FUN_0201F988: @ 0x0201F988
	ldr r0, [r0, #0x10]
	bx lr
	thumb_func_end FUN_0201F988

	thumb_func_start FUN_0201F98C
FUN_0201F98C: @ 0x0201F98C
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end FUN_0201F98C

	thumb_func_start FUN_0201F990
FUN_0201F990: @ 0x0201F990
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	adds r6, r1, #0
	adds r4, r0, #0
	adds r5, r2, #0
	ldm r6!, {r0, r1}
	add r2, sp, #0x1c
	stm r2!, {r0, r1}
	ldr r0, [r6]
	adds r7, r3, #0
	str r0, [r2]
	cmp r4, #0
	beq _0201F9AE
	adds r4, #0x14
	b _0201F9B0
_0201F9AE:
	movs r4, #0
_0201F9B0:
	movs r0, #0x20
	ldrsh r0, [r4, r0]
	movs r1, #0x1a
	movs r2, #0x1c
	str r0, [sp]
	movs r0, #0x22
	ldrsh r0, [r4, r0]
	movs r3, #0x1e
	str r0, [sp, #4]
	add r0, sp, #0x28
	str r0, [sp, #8]
	movs r0, #0x18
	ldrsh r0, [r4, r0]
	ldrsh r1, [r4, r1]
	ldrsh r2, [r4, r2]
	ldrsh r3, [r4, r3]
	bl FUN_0201FAA4
	add r0, sp, #0x1c
	blx FUN_020BEFD4
	ldr r1, _0201FA2C @ =0x021DA558
	adds r0, r5, #0
	blx FUN_020D4928
	ldr r1, _0201FA30 @ =0x021DA51C
	movs r0, #0xa4
	ldr r2, [r1, #0x7c]
	bics r2, r0
	adds r0, r7, #0
	str r2, [r1, #0x7c]
	blx FUN_020BF004
	blx FUN_020BEF98
	movs r1, #0
	movs r0, #0x11
	adds r2, r1, #0
	blx FUN_020C2528
	ldr r0, [r4, #0x24]
	add r1, sp, #0x10
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	movs r0, #0x1b
	movs r2, #3
	blx FUN_020C2528
	add r0, sp, #0x28
	bl FUN_0201FAC8
	adds r4, r0, #0
	movs r2, #1
	movs r0, #0x12
	add r1, sp, #0xc
	str r2, [sp, #0xc]
	blx FUN_020C2528
	adds r0, r4, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
_0201FA2C: .4byte 0x021DA558
_0201FA30: .4byte 0x021DA51C
	thumb_func_end FUN_0201F990

	thumb_func_start FUN_0201FA34
FUN_0201FA34: @ 0x0201FA34
	push {r3, r4, r5, lr}
	sub sp, #0x28
	adds r5, r0, #0
	adds r4, r1, #0
	movs r0, #2
	ldrsh r0, [r4, r0]
	str r0, [sp]
	movs r0, #4
	ldrsh r0, [r4, r0]
	str r0, [sp, #4]
	add r0, sp, #0x1c
	str r0, [sp, #8]
	movs r0, #0
	ldrsh r3, [r4, r0]
	adds r1, r0, #0
	adds r2, r0, #0
	bl FUN_0201FAA4
	adds r0, r5, #0
	blx FUN_020BEFD4
	blx FUN_020BEF98
	movs r1, #0
	movs r0, #0x11
	adds r2, r1, #0
	blx FUN_020C2528
	ldr r0, [r4, #0x10]
	lsls r2, r0, #0xc
	ldr r0, [r4, #0xc]
	lsls r1, r0, #0xc
	ldr r0, [r4, #8]
	lsls r0, r0, #0xc
	str r0, [sp, #0x10]
	str r1, [sp, #0x14]
	str r2, [sp, #0x18]
	movs r0, #0x1b
	add r1, sp, #0x10
	movs r2, #3
	blx FUN_020C2528
	add r0, sp, #0x1c
	bl FUN_0201FAC8
	adds r4, r0, #0
	movs r2, #1
	movs r0, #0x12
	add r1, sp, #0xc
	str r2, [sp, #0xc]
	blx FUN_020C2528
	adds r0, r4, #0
	add sp, #0x28
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0201FA34

	thumb_func_start FUN_0201FAA4
FUN_0201FAA4: @ 0x0201FAA4
	push {r3, r4}
	ldr r4, [sp, #0x10]
	strh r0, [r4]
	strh r1, [r4, #2]
	ldr r1, _0201FAC4 @ =0xFFFFFFF8
	strh r2, [r4, #4]
	strh r3, [r4, #6]
	add r1, sp
	movs r0, #0x10
	ldrsh r0, [r1, r0]
	strh r0, [r4, #8]
	movs r0, #0x14
	ldrsh r0, [r1, r0]
	strh r0, [r4, #0xa]
	pop {r3, r4}
	bx lr
	.align 2, 0
_0201FAC4: .4byte 0xFFFFFFF8
	thumb_func_end FUN_0201FAA4

	thumb_func_start FUN_0201FAC8
FUN_0201FAC8: @ 0x0201FAC8
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r0, _0201FB18 @ =0x000030C1
	movs r2, #1
	str r0, [sp, #4]
	movs r0, #0x29
	add r1, sp, #4
	str r2, [sp, #8]
	blx FUN_020C2528
	movs r0, #0
	str r0, [sp]
	movs r0, #0x40
	add r1, sp, #0
	movs r2, #1
	blx FUN_020C2528
	movs r1, #0
	movs r0, #0x41
	adds r2, r1, #0
	blx FUN_020C2528
	movs r0, #0x70
	adds r1, r4, #0
	movs r2, #3
	blx FUN_020C2528
	blx FUN_020C23F4
	add r4, sp, #8
_0201FB06:
	adds r0, r4, #0
	blx FUN_020CFA38
	cmp r0, #0
	bne _0201FB06
	ldr r0, [sp, #8]
	add sp, #0xc
	pop {r3, r4, pc}
	nop
_0201FB18: .4byte 0x000030C1
	thumb_func_end FUN_0201FAC8

	thumb_func_start FUN_0201FB1C
FUN_0201FB1C: @ 0x0201FB1C
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _0201FB40 @ =0x0000FFFE
	cmp r1, r0
	beq _0201FB2C
	bl FUN_0202551C
_0201FB2C:
	ldrh r1, [r4]
	ldr r0, _0201FB40 @ =0x0000FFFE
	cmp r1, r0
	bne _0201FB3C
	ldrh r0, [r4, #4]
	adds r1, r4, #6
	lsls r0, r0, #1
	adds r4, r1, r0
_0201FB3C:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
_0201FB40: .4byte 0x0000FFFE
	thumb_func_end FUN_0201FB1C

	thumb_func_start FUN_0201FB44
FUN_0201FB44: @ 0x0201FB44
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4]
	ldr r0, _0201FB58 @ =0x0000FFFE
	cmp r1, r0
	beq _0201FB54
	bl FUN_0202551C
_0201FB54:
	ldrh r0, [r4, #2]
	pop {r4, pc}
	.align 2, 0
_0201FB58: .4byte 0x0000FFFE
	thumb_func_end FUN_0201FB44

	thumb_func_start FUN_0201FB5C
FUN_0201FB5C: @ 0x0201FB5C
	push {r3, lr}
	bl FUN_0201FB44
	movs r1, #0xff
	lsls r1, r1, #8
	adds r2, r0, #0
	ands r2, r1
	movs r1, #1
	lsls r1, r1, #8
	cmp r2, r1
	beq _0201FB88
	movs r0, #3
	lsls r0, r0, #8
	cmp r2, r0
	beq _0201FB88
	lsls r0, r1, #2
	cmp r2, r0
	beq _0201FB88
	movs r0, #0xd
	lsls r0, r0, #0xa
	cmp r2, r0
	bne _0201FB8C
_0201FB88:
	movs r0, #1
	pop {r3, pc}
_0201FB8C:
	movs r0, #0
	pop {r3, pc}
	thumb_func_end FUN_0201FB5C

	thumb_func_start FUN_0201FB90
FUN_0201FB90: @ 0x0201FB90
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldrh r1, [r5]
	ldr r0, _0201FBB4 @ =0x0000FFFE
	cmp r1, r0
	beq _0201FBA2
	bl FUN_0202551C
_0201FBA2:
	ldrh r0, [r5, #4]
	cmp r4, r0
	blo _0201FBAC
	bl FUN_0202551C
_0201FBAC:
	lsls r0, r4, #1
	adds r0, r5, r0
	ldrh r0, [r0, #6]
	pop {r3, r4, r5, pc}
	.align 2, 0
_0201FBB4: .4byte 0x0000FFFE
	thumb_func_end FUN_0201FB90

	thumb_func_start FUN_0201FBB8
FUN_0201FBB8: @ 0x0201FBB8
	push {r4, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	cmp r0, r1
	blo _0201FBC6
	movs r0, #0
	pop {r4, pc}
_0201FBC6:
	bl FUN_0201FCD4
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _0201FC28 @ =0x021094DC
	ldrsh r4, [r0, r1]
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FC2C @ =0x45800000
	blx FUN_020F1CC8
	movs r1, #0
	blx FUN_020F1ACC
	bls _0201FC06
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FC2C @ =0x45800000
	blx FUN_020F1CC8
	adds r1, r0, #0
	ldr r0, _0201FC2C @ =0x45800000
	blx FUN_020F22DC
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0201FC22
_0201FC06:
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FC2C @ =0x45800000
	blx FUN_020F1CC8
	adds r1, r0, #0
	ldr r0, _0201FC2C @ =0x45800000
	blx FUN_020F22DC
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0201FC22:
	blx FUN_020F2104
	pop {r4, pc}
	.align 2, 0
_0201FC28: .4byte 0x021094DC
_0201FC2C: .4byte 0x45800000
	thumb_func_end FUN_0201FBB8

	thumb_func_start FUN_0201FC30
FUN_0201FC30: @ 0x0201FC30
	push {r4, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	cmp r0, r1
	blo _0201FC3E
	movs r0, #0
	pop {r4, pc}
_0201FC3E:
	bl FUN_0201FCD4
	asrs r0, r0, #4
	lsls r0, r0, #1
	adds r0, r0, #1
	lsls r1, r0, #1
	ldr r0, _0201FCA4 @ =0x021094DC
	ldrsh r4, [r0, r1]
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FCA8 @ =0x45800000
	blx FUN_020F1CC8
	movs r1, #0
	blx FUN_020F1ACC
	bls _0201FC82
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FCA8 @ =0x45800000
	blx FUN_020F1CC8
	adds r1, r0, #0
	ldr r0, _0201FCA8 @ =0x45800000
	blx FUN_020F22DC
	adds r1, r0, #0
	movs r0, #0x3f
	lsls r0, r0, #0x18
	blx FUN_020F1520
	b _0201FC9E
_0201FC82:
	adds r0, r4, #0
	blx FUN_020F2178
	ldr r1, _0201FCA8 @ =0x45800000
	blx FUN_020F1CC8
	adds r1, r0, #0
	ldr r0, _0201FCA8 @ =0x45800000
	blx FUN_020F22DC
	movs r1, #0x3f
	lsls r1, r1, #0x18
	blx FUN_020F24C8
_0201FC9E:
	blx FUN_020F2104
	pop {r4, pc}
	.align 2, 0
_0201FCA4: .4byte 0x021094DC
_0201FCA8: .4byte 0x45800000
	thumb_func_end FUN_0201FC30

	thumb_func_start FUN_0201FCAC
FUN_0201FCAC: @ 0x0201FCAC
	push {r3, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	blx FUN_020F2998
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0201FBB8
	pop {r3, pc}
	thumb_func_end FUN_0201FCAC

	thumb_func_start FUN_0201FCC0
FUN_0201FCC0: @ 0x0201FCC0
	push {r3, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	blx FUN_020F2998
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0201FC30
	pop {r3, pc}
	thumb_func_end FUN_0201FCC0

	thumb_func_start FUN_0201FCD4
FUN_0201FCD4: @ 0x0201FCD4
	push {r3, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	cmp r0, r1
	blo _0201FCE2
	movs r0, #0
	pop {r3, pc}
_0201FCE2:
	lsls r0, r0, #0xc
	ldr r2, _0201FCF8 @ =0x0B60B60B
	asrs r1, r0, #0x1f
	movs r3, #0xb6
	blx FUN_020F2948
	ldr r0, _0201FCFC @ =0x00000800
	adcs r1, r0
	lsls r0, r1, #4
	lsrs r0, r0, #0x10
	pop {r3, pc}
	.align 2, 0
_0201FCF8: .4byte 0x0B60B60B
_0201FCFC: .4byte 0x00000800
	thumb_func_end FUN_0201FCD4

	thumb_func_start FUN_0201FD00
FUN_0201FD00: @ 0x0201FD00
	push {r3, lr}
	movs r1, #0x5a
	lsls r1, r1, #2
	blx FUN_020F2998
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	bl FUN_0201FCD4
	pop {r3, pc}
	thumb_func_end FUN_0201FD00

	thumb_func_start FUN_0201FD14
FUN_0201FD14: @ 0x0201FD14
	ldr r3, _0201FD1C @ =FUN_0201FCAC
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	bx r3
	.align 2, 0
_0201FD1C: .4byte FUN_0201FCAC
	thumb_func_end FUN_0201FD14

	thumb_func_start FUN_0201FD20
FUN_0201FD20: @ 0x0201FD20
	ldr r3, _0201FD28 @ =FUN_0201FCC0
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	bx r3
	.align 2, 0
_0201FD28: .4byte FUN_0201FCC0
	thumb_func_end FUN_0201FD20

	thumb_func_start FUN_0201FD2C
FUN_0201FD2C: @ 0x0201FD2C
	ldr r0, _0201FD34 @ =0x021D15A4
	ldr r0, [r0, #4]
	bx lr
	nop
_0201FD34: .4byte 0x021D15A4
	thumb_func_end FUN_0201FD2C

	thumb_func_start FUN_0201FD38
FUN_0201FD38: @ 0x0201FD38
	ldr r1, _0201FD40 @ =0x021D15A4
	str r0, [r1, #4]
	bx lr
	nop
_0201FD40: .4byte 0x021D15A4
	thumb_func_end FUN_0201FD38

	thumb_func_start FUN_0201FD44
FUN_0201FD44: @ 0x0201FD44
	ldr r1, _0201FD5C @ =0x021D15A4
	ldr r0, _0201FD60 @ =0x41C64E6D
	ldr r2, [r1, #4]
	adds r3, r2, #0
	muls r3, r0, r3
	ldr r0, _0201FD64 @ =0x00006073
	adds r0, r3, r0
	str r0, [r1, #4]
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	.align 2, 0
_0201FD5C: .4byte 0x021D15A4
_0201FD60: .4byte 0x41C64E6D
_0201FD64: .4byte 0x00006073
	thumb_func_end FUN_0201FD44

	thumb_func_start FUN_0201FD68
FUN_0201FD68: @ 0x0201FD68
	ldr r1, _0201FD70 @ =0x6C078965
	muls r1, r0, r1
	adds r0, r1, #1
	bx lr
	.align 2, 0
_0201FD70: .4byte 0x6C078965
	thumb_func_end FUN_0201FD68

	thumb_func_start FUN_0201FD74
FUN_0201FD74: @ 0x0201FD74
	push {r4, r5}
	ldr r1, _0201FDA8 @ =0x021D15A4
	movs r4, #0x27
	str r0, [r1, #8]
	ldr r1, _0201FDAC @ =0x0210F6CC
	movs r0, #1
	str r0, [r1]
	ldr r1, _0201FDB0 @ =0x021D15B0
	ldr r3, _0201FDB4 @ =0x6C078965
	lsls r4, r4, #4
_0201FD88:
	subs r2, r1, #4
	ldr r5, [r2]
	lsrs r2, r5, #0x1e
	eors r2, r5
	adds r5, r2, #0
	muls r5, r3, r5
	adds r2, r0, r5
	adds r0, r0, #1
	stm r1!, {r2}
	cmp r0, r4
	blt _0201FD88
	ldr r1, _0201FDAC @ =0x0210F6CC
	str r0, [r1]
	pop {r4, r5}
	bx lr
	nop
_0201FDA8: .4byte 0x021D15A4
_0201FDAC: .4byte 0x0210F6CC
_0201FDB0: .4byte 0x021D15B0
_0201FDB4: .4byte 0x6C078965
	thumb_func_end FUN_0201FD74

	thumb_func_start FUN_0201FDB8
FUN_0201FDB8: @ 0x0201FDB8
	push {r3, r4, r5, r6, r7, lr}
	ldr r0, _0201FE9C @ =0x0210F6CC
	ldr r1, [r0]
	movs r0, #0x27
	lsls r0, r0, #4
	cmp r1, r0
	blt _0201FE70
	adds r0, r0, #1
	cmp r1, r0
	bne _0201FDD2
	ldr r0, _0201FEA0 @ =0x00001571
	bl FUN_0201FD74
_0201FDD2:
	ldr r4, _0201FEA4 @ =0x021D15AC
	ldr r1, _0201FEA8 @ =0x0210F6D0
	ldr r5, _0201FEAC @ =0x7FFFFFFF
	ldr r6, _0201FEB0 @ =0x00000634
	movs r0, #0
_0201FDDC:
	movs r2, #2
	ldr r3, [r4]
	lsls r2, r2, #0x1e
	ands r3, r2
	ldr r2, [r4, #4]
	adds r0, r0, #1
	ands r2, r5
	orrs r3, r2
	lsrs r7, r3, #1
	lsls r3, r3, #0x1f
	ldr r2, [r4, r6]
	lsrs r3, r3, #0x1d
	ldr r3, [r1, r3]
	eors r2, r7
	eors r2, r3
	stm r4!, {r2}
	cmp r0, #0xe3
	blt _0201FDDC
	ldr r1, _0201FEB4 @ =0x0000026F
	cmp r0, r1
	bge _0201FE3C
	ldr r2, _0201FEA4 @ =0x021D15AC
	lsls r1, r0, #2
	adds r1, r2, r1
	movs r2, #0xe3
	ldr r4, _0201FEA8 @ =0x0210F6D0
	ldr r3, _0201FEB4 @ =0x0000026F
	lsls r2, r2, #2
_0201FE14:
	movs r5, #2
	ldr r6, [r1]
	lsls r5, r5, #0x1e
	ands r5, r6
	ldr r7, [r1, #4]
	ldr r6, _0201FEAC @ =0x7FFFFFFF
	adds r0, r0, #1
	ands r6, r7
	orrs r6, r5
	lsrs r5, r6, #1
	subs r7, r1, r2
	lsls r6, r6, #0x1f
	ldr r7, [r7]
	lsrs r6, r6, #0x1d
	ldr r6, [r4, r6]
	eors r5, r7
	eors r5, r6
	stm r1!, {r5}
	cmp r0, r3
	blt _0201FE14
_0201FE3C:
	ldr r2, _0201FEB8 @ =0x021D1F24
	movs r0, #2
	ldr r1, [r2, #0x44]
	lsls r0, r0, #0x1e
	adds r3, r1, #0
	ldr r1, _0201FEBC @ =0x021D15A4
	ands r3, r0
	ldr r1, [r1, #8]
	subs r0, r0, #1
	ands r0, r1
	adds r4, r3, #0
	orrs r4, r0
	ldr r0, _0201FEC0 @ =0x021D1BA4
	ldr r1, [r0, #0x38]
	lsrs r0, r4, #1
	adds r3, r1, #0
	eors r3, r0
	lsls r0, r4, #0x1f
	lsrs r1, r0, #0x1d
	ldr r0, _0201FEA8 @ =0x0210F6D0
	ldr r0, [r0, r1]
	movs r1, #0
	eors r0, r3
	str r0, [r2, #0x44]
	ldr r0, _0201FE9C @ =0x0210F6CC
	str r1, [r0]
_0201FE70:
	ldr r0, _0201FE9C @ =0x0210F6CC
	ldr r2, [r0]
	adds r1, r2, #1
	str r1, [r0]
	ldr r0, _0201FEA4 @ =0x021D15AC
	lsls r1, r2, #2
	ldr r1, [r0, r1]
	lsrs r0, r1, #0xb
	adds r2, r1, #0
	eors r2, r0
	ldr r0, _0201FEC4 @ =0x9D2C5680
	lsls r1, r2, #7
	ands r0, r1
	eors r2, r0
	ldr r0, _0201FEC8 @ =0xEFC60000
	lsls r1, r2, #0xf
	ands r0, r1
	adds r1, r2, #0
	eors r1, r0
	lsrs r0, r1, #0x12
	eors r0, r1
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_0201FE9C: .4byte 0x0210F6CC
_0201FEA0: .4byte 0x00001571
_0201FEA4: .4byte 0x021D15AC
_0201FEA8: .4byte 0x0210F6D0
_0201FEAC: .4byte 0x7FFFFFFF
_0201FEB0: .4byte 0x00000634
_0201FEB4: .4byte 0x0000026F
_0201FEB8: .4byte 0x021D1F24
_0201FEBC: .4byte 0x021D15A4
_0201FEC0: .4byte 0x021D1BA4
_0201FEC4: .4byte 0x9D2C5680
_0201FEC8: .4byte 0xEFC60000
	thumb_func_end FUN_0201FDB8

	thumb_func_start FUN_0201FECC
FUN_0201FECC: @ 0x0201FECC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	add r0, sp, #0
	ldrb r0, [r0, #0x10]
	adds r4, r2, #0
	adds r6, r3, #0
	cmp r0, #1
	bne _0201FEE6
	ldr r0, _0201FF20 @ =0x0000FFFF
	muls r0, r1, r0
	lsls r0, r0, #8
	lsrs r1, r0, #0x10
	b _0201FEFA
_0201FEE6:
	cmp r0, #2
	bne _0201FEFA
	ldr r0, _0201FF20 @ =0x0000FFFF
	muls r0, r1, r0
	movs r1, #0x5a
	lsls r1, r1, #2
	blx FUN_020F2BA4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_0201FEFA:
	asrs r0, r1, #4
	lsls r3, r0, #1
	lsls r1, r3, #1
	ldr r2, _0201FF24 @ =0x021094DC
	adds r3, r3, #1
	lsls r3, r3, #1
	ldrsh r1, [r2, r1]
	ldrsh r2, [r2, r3]
	adds r0, r5, #0
	bl FUN_020CAF88
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r6, #0
	blx FUN_020CAF94
	pop {r4, r5, r6, pc}
	nop
_0201FF20: .4byte 0x0000FFFF
_0201FF24: .4byte 0x021094DC
	thumb_func_end FUN_0201FECC

	thumb_func_start FUN_0201FF28
FUN_0201FF28: @ 0x0201FF28
	push {r3, r4}
	movs r3, #0
	adds r4, r3, #0
	cmp r1, #0
	bls _0201FF3E
_0201FF32:
	ldrb r2, [r0]
	adds r4, r4, #1
	adds r0, r0, #1
	adds r3, r3, r2
	cmp r4, r1
	blo _0201FF32
_0201FF3E:
	adds r0, r3, #0
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0201FF28

	thumb_func_start FUN_0201FF44
FUN_0201FF44: @ 0x0201FF44
	push {r0, r1, r2, r3}
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	lsrs r6, r1, #1
	beq _0201FF66
	add r7, sp, #0x20
_0201FF52:
	adds r0, r7, #0
	bl FUN_0201FF78
	ldrh r1, [r5]
	adds r4, r4, #1
	eors r0, r1
	strh r0, [r5]
	adds r5, r5, #2
	cmp r4, r6
	blo _0201FF52
_0201FF66:
	pop {r3, r4, r5, r6, r7}
	pop {r3}
	add sp, #0x10
	bx r3
	.align 2, 0
	thumb_func_end FUN_0201FF44

	thumb_func_start FUN_0201FF70
FUN_0201FF70: @ 0x0201FF70
	ldr r3, _0201FF74 @ =FUN_0201FF44
	bx r3
	.align 2, 0
_0201FF74: .4byte FUN_0201FF44
	thumb_func_end FUN_0201FF70

	thumb_func_start FUN_0201FF78
FUN_0201FF78: @ 0x0201FF78
	ldr r2, [r0]
	ldr r1, _0201FF90 @ =0x41C64E6D
	adds r3, r2, #0
	muls r3, r1, r3
	ldr r1, _0201FF94 @ =0x00006073
	adds r1, r3, r1
	str r1, [r0]
	lsrs r0, r1, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	nop
_0201FF90: .4byte 0x41C64E6D
_0201FF94: .4byte 0x00006073
	thumb_func_end FUN_0201FF78

	thumb_func_start FUN_0201FF98
FUN_0201FF98: @ 0x0201FF98
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, _0201FFA8 @ =0x021D15A4
	adds r1, r3, #0
	ldr r3, _0201FFAC @ =FUN_020E3A2C
	ldr r0, [r0]
	bx r3
	nop
_0201FFA8: .4byte 0x021D15A4
_0201FFAC: .4byte FUN_020E3A2C
	thumb_func_end FUN_0201FF98

	thumb_func_start FUN_0201FFB0
FUN_0201FFB0: @ 0x0201FFB0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0201FFD8 @ =0x021D15A4
	ldr r0, [r0]
	cmp r0, #0
	beq _0201FFC0
	bl FUN_0202551C
_0201FFC0:
	movs r1, #2
	adds r0, r4, #0
	lsls r1, r1, #8
	bl FUN_0201AA8C
	ldr r1, _0201FFD8 @ =0x021D15A4
	str r0, [r1]
	ldr r1, _0201FFDC @ =0x00001021
	blx FUN_020E3850
	pop {r4, pc}
	nop
_0201FFD8: .4byte 0x021D15A4
_0201FFDC: .4byte 0x00001021
	thumb_func_end FUN_0201FFB0

	thumb_func_start FUN_0201FFE0
FUN_0201FFE0: @ 0x0201FFE0
	ldr r1, _0201FFE8 @ =0x0210F6D8
	str r0, [r1]
	bx lr
	nop
_0201FFE8: .4byte 0x0210F6D8
	thumb_func_end FUN_0201FFE0

	thumb_func_start FUN_0201FFEC
FUN_0201FFEC: @ 0x0201FFEC
	push {r4, r5, r6, lr}
	ldr r4, _0202001C @ =0x021D1F74
	movs r5, #0
_0201FFF2:
	ldr r3, [r4]
	cmp r3, #0
	bne _0202000C
	ldr r6, _0202001C @ =0x021D1F74
	lsls r4, r5, #2
	bl FUN_0200E358
	str r0, [r6, r4]
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _02020014
	movs r5, #8
	b _02020014
_0202000C:
	adds r5, r5, #1
	adds r4, r4, #4
	cmp r5, #8
	blt _0201FFF2
_02020014:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6, pc}
	nop
_0202001C: .4byte 0x021D1F74
	thumb_func_end FUN_0201FFEC

	thumb_func_start FUN_02020020
FUN_02020020: @ 0x02020020
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	cmp r5, #8
	blo _0202002C
	bl FUN_0202551C
_0202002C:
	ldr r6, _02020064 @ =0x021D1F74
	lsls r4, r5, #2
	ldr r0, [r6, r4]
	cmp r0, #0
	bne _0202003A
	bl FUN_0202551C
_0202003A:
	cmp r5, #8
	bhs _02020060
	ldr r0, [r6, r4]
	cmp r0, #0
	beq _02020060
	bl FUN_0201F988
	adds r5, r0, #0
	beq _02020056
	bl FUN_02020548
	adds r0, r5, #0
	bl FUN_0201AB0C
_02020056:
	ldr r0, [r6, r4]
	bl FUN_0200E390
	movs r0, #0
	str r0, [r6, r4]
_02020060:
	pop {r4, r5, r6, pc}
	nop
_02020064: .4byte 0x021D1F74
	thumb_func_end FUN_02020020

	thumb_func_start FUN_02020068
FUN_02020068: @ 0x02020068
	lsls r1, r0, #2
	ldr r0, _0202007C @ =0x021D1F74
	ldr r0, [r0, r1]
	cmp r0, #0
	beq _02020076
	movs r0, #1
	bx lr
_02020076:
	movs r0, #0
	bx lr
	nop
_0202007C: .4byte 0x021D1F74
	thumb_func_end FUN_02020068

	thumb_func_start FUN_02020080
FUN_02020080: @ 0x02020080
	movs r1, #0
	ldr r2, _02020090 @ =0x021D1F74
	adds r0, r1, #0
_02020086:
	adds r1, r1, #1
	stm r2!, {r0}
	cmp r1, #8
	blt _02020086
	bx lr
	.align 2, 0
_02020090: .4byte 0x021D1F74
	thumb_func_end FUN_02020080

	thumb_func_start FUN_02020094
FUN_02020094: @ 0x02020094
	push {r3, lr}
	bl FUN_02020068
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r3, pc}
	thumb_func_end FUN_02020094

	thumb_func_start FUN_020200A0
FUN_020200A0: @ 0x020200A0
	ldr r3, _020200A4 @ =FUN_02020020
	bx r3
	.align 2, 0
_020200A4: .4byte FUN_02020020
	thumb_func_end FUN_020200A0

	thumb_func_start FUN_020200A8
FUN_020200A8: @ 0x020200A8
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, _020200F8 @ =0x0210F6D8
	lsls r1, r1, #3
	ldr r0, [r0]
	adds r1, r0, r1
	ldrb r0, [r1, #2]
	strh r0, [r2, #0x10]
	ldrb r0, [r1, #3]
	strh r0, [r2, #0x12]
	ldrb r0, [r1, #4]
	strb r0, [r2, #0x14]
	ldrb r0, [r1, #5]
	strb r0, [r2, #0x15]
	ldrb r0, [r1, #6]
	strb r0, [r2, #0x16]
	ldrb r0, [r1, #7]
	ldr r1, [sp, #0x24]
	strb r0, [r2, #0x17]
	movs r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	movs r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r2, [sp, #0x28]
	add r0, sp, #0
	bl FUN_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_020200F8: .4byte 0x0210F6D8
	thumb_func_end FUN_020200A8

	thumb_func_start FUN_020200FC
FUN_020200FC: @ 0x020200FC
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, _0202014C @ =0x0210F6D8
	lsls r1, r1, #3
	ldr r0, [r0]
	adds r1, r0, r1
	ldrb r0, [r1, #2]
	strh r0, [r2, #0x10]
	ldrb r0, [r1, #3]
	strh r0, [r2, #0x12]
	ldrb r0, [r1, #4]
	ldr r1, [sp, #0x28]
	strb r0, [r2, #0x14]
	lsrs r0, r1, #0x10
	strb r0, [r2, #0x15]
	lsrs r0, r1, #8
	strb r0, [r2, #0x17]
	strb r1, [r2, #0x16]
	movs r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	movs r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r1, [sp, #0x24]
	ldr r2, [sp, #0x2c]
	add r0, sp, #0
	bl FUN_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_0202014C: .4byte 0x0210F6D8
	thumb_func_end FUN_020200FC

	thumb_func_start FUN_02020150
FUN_02020150: @ 0x02020150
	push {lr}
	sub sp, #0x1c
	str r2, [sp]
	str r0, [sp, #4]
	add r2, sp, #0
	strb r1, [r2, #9]
	ldr r0, [sp, #0x20]
	strb r3, [r2, #0xa]
	strb r0, [r2, #0xb]
	strh r3, [r2, #0xc]
	strh r0, [r2, #0xe]
	ldr r0, [sp, #0x2c]
	strh r0, [r2, #0x10]
	ldr r0, [sp, #0x30]
	strh r0, [r2, #0x12]
	ldr r0, _020201A0 @ =0x0210F6D8
	ldr r3, [r0]
	lsls r0, r1, #3
	adds r0, r3, r0
	ldrb r0, [r0, #4]
	ldr r1, [sp, #0x28]
	strb r0, [r2, #0x14]
	lsrs r0, r1, #0x10
	strb r0, [r2, #0x15]
	lsrs r0, r1, #8
	strb r0, [r2, #0x17]
	strb r1, [r2, #0x16]
	movs r0, #0
	strh r0, [r2, #0x18]
	strb r0, [r2, #0x1a]
	movs r0, #0xff
	strb r0, [r2, #0x1b]
	ldr r1, [sp, #0x24]
	ldr r2, [sp, #0x34]
	add r0, sp, #0
	bl FUN_020201A4
	add sp, #0x1c
	pop {pc}
	nop
_020201A0: .4byte 0x0210F6D8
	thumb_func_end FUN_02020150

	thumb_func_start FUN_020201A4
FUN_020201A4: @ 0x020201A4
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, _020202E0 @ =0x0210F6D8
	adds r6, r1, #0
	ldr r0, [r0]
	adds r5, r2, #0
	cmp r0, #0
	bne _020201B8
	movs r0, #0xff
	pop {r3, r4, r5, r6, r7, pc}
_020201B8:
	movs r0, #0
	movs r1, #0x34
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r1, #1
	adds r0, #0x27
	strb r1, [r0]
	adds r0, r4, #0
	movs r3, #0
	adds r0, #0x28
	strb r3, [r0]
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r2, [r0]
	movs r0, #0x7f
	bics r2, r0
	lsls r0, r6, #0x18
	lsrs r1, r0, #0x18
	movs r0, #0x7f
	ands r0, r1
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x2a
	strb r3, [r0]
	adds r0, r4, #0
	adds r0, #0x2b
	strb r3, [r0]
	adds r0, r4, #0
	adds r0, #0x2d
	strb r3, [r0]
	adds r1, r3, #0
_02020200:
	adds r0, r4, r3
	adds r0, #0x20
	adds r3, r3, #1
	strb r1, [r0]
	cmp r3, #7
	blt _02020200
	adds r3, r7, #0
	ldm r3!, {r0, r1}
	adds r2, r4, #0
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [r4]
	bl FUN_02026AA4
	str r0, [r4]
	ldr r0, _020202E4 @ =0x021D1F6C
	str r5, [r4, #0x1c]
	movs r1, #0
	strb r1, [r0]
	adds r0, r4, #0
	bl FUN_020204B8
	cmp r6, #0xff
	beq _02020286
	cmp r6, #0
	beq _02020286
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r2, [r0]
	movs r1, #0x7f
	adds r0, r2, #0
	bics r0, r1
	lsls r1, r2, #0x19
	lsrs r1, r1, #0x19
	adds r1, #0xff
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	movs r1, #0x7f
	ands r1, r2
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r1, [r0]
	movs r0, #0x80
	movs r2, #1
	orrs r1, r0
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	ldr r0, _020202E8 @ =FUN_020202EC
	adds r1, r4, #0
	bl FUN_0201FFEC
	adds r1, r4, #0
	adds r1, #0x2c
	strb r0, [r1]
	adds r4, #0x2c
	ldrb r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02020286:
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r1, [r0]
	movs r0, #0x7f
	movs r5, #0
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r1, [r0]
	movs r0, #0x80
	bics r1, r0
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	ldrb r0, [r7, #0x15]
	ldrb r1, [r7, #0x16]
	ldrb r2, [r7, #0x17]
	bl FUN_0202036C
	movs r7, #1
	lsls r7, r7, #0xa
_020202B6:
	adds r0, r4, #0
	bl FUN_02020358
	cmp r0, #1
	beq _020202C6
	adds r5, r5, #1
	cmp r5, r7
	blo _020202B6
_020202C6:
	cmp r6, #0xff
	beq _020202D0
	ldr r0, [r4, #4]
	bl FUN_0201D578
_020202D0:
	adds r0, r4, #0
	bl FUN_02020548
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020202E0: .4byte 0x0210F6D8
_020202E4: .4byte 0x021D1F6C
_020202E8: .4byte FUN_020202EC
	thumb_func_end FUN_020201A4

	thumb_func_start FUN_020202EC
FUN_020202EC: @ 0x020202EC
	push {r4, lr}
	ldr r0, _02020354 @ =0x021D1F6C
	adds r4, r1, #0
	ldrb r0, [r0]
	cmp r0, #0
	bne _02020352
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #0
	bne _02020346
	movs r0, #0
	strh r0, [r4, #0x2e]
	ldrb r0, [r4, #0x15]
	ldrb r1, [r4, #0x16]
	ldrb r2, [r4, #0x17]
	bl FUN_0202036C
	adds r0, r4, #0
	bl FUN_02020358
	cmp r0, #0
	beq _02020324
	cmp r0, #1
	beq _0202033C
	cmp r0, #3
	beq _0202032A
	pop {r4, pc}
_02020324:
	ldr r0, [r4, #4]
	bl FUN_0201D578
_0202032A:
	ldr r2, [r4, #0x1c]
	cmp r2, #0
	beq _02020352
	ldrh r1, [r4, #0x2e]
	adds r0, r4, #0
	blx r2
	adds r4, #0x2d
	strb r0, [r4]
	pop {r4, pc}
_0202033C:
	adds r4, #0x2c
	ldrb r0, [r4]
	bl FUN_02020020
	pop {r4, pc}
_02020346:
	ldrh r1, [r4, #0x2e]
	ldr r2, [r4, #0x1c]
	adds r0, r4, #0
	blx r2
	adds r4, #0x2d
	strb r0, [r4]
_02020352:
	pop {r4, pc}
	.align 2, 0
_02020354: .4byte 0x021D1F6C
	thumb_func_end FUN_020202EC

	thumb_func_start FUN_02020358
FUN_02020358: @ 0x02020358
	push {r4, lr}
	adds r4, r0, #0
_0202035C:
	ldrb r0, [r4, #9]
	adds r1, r4, #0
	bl FUN_02002E98
	cmp r0, #2
	beq _0202035C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02020358

	thumb_func_start FUN_0202036C
FUN_0202036C: @ 0x0202036C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	ldr r3, _02020408 @ =0x021D1F6C
	movs r5, #0
	str r5, [sp, #0x20]
	str r0, [sp, #0x24]
	str r2, [sp, #0x28]
	str r1, [sp, #0x2c]
	strh r1, [r3, #6]
	strh r0, [r3, #2]
	add r0, sp, #0x20
	strh r2, [r3, #4]
	str r5, [sp, #0x14]
	str r0, [sp, #8]
	mov ip, r0
	mov lr, r0
	str r0, [sp, #0x18]
_0202038E:
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	ldr r0, [r0]
	str r0, [sp, #0x1c]
_0202039C:
	movs r0, #0
	str r0, [sp, #0xc]
	mov r0, lr
	str r0, [sp]
	ldr r0, [sp, #4]
	ldr r0, [r0]
	lsls r7, r0, #4
_020203AA:
	ldr r0, [sp]
	movs r3, #0
	ldr r0, [r0]
	mov r4, ip
	lsls r6, r0, #8
_020203B4:
	ldr r0, [r4]
	adds r1, r7, #0
	lsls r0, r0, #0xc
	orrs r0, r6
	orrs r1, r0
	ldr r0, [sp, #0x1c]
	adds r3, r3, #1
	adds r2, r0, #0
	orrs r2, r1
	lsls r1, r5, #1
	ldr r0, _0202040C @ =0x021D1F94
	adds r5, r5, #1
	adds r4, r4, #4
	strh r2, [r0, r1]
	cmp r3, #4
	blt _020203B4
	ldr r0, [sp]
	adds r0, r0, #4
	str r0, [sp]
	ldr r0, [sp, #0xc]
	adds r0, r0, #1
	str r0, [sp, #0xc]
	cmp r0, #4
	blt _020203AA
	ldr r0, [sp, #4]
	adds r0, r0, #4
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	adds r0, r0, #1
	str r0, [sp, #0x10]
	cmp r0, #4
	blt _0202039C
	ldr r0, [sp, #8]
	adds r0, r0, #4
	str r0, [sp, #8]
	ldr r0, [sp, #0x14]
	adds r0, r0, #1
	str r0, [sp, #0x14]
	cmp r0, #4
	blt _0202038E
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020408: .4byte 0x021D1F6C
_0202040C: .4byte 0x021D1F94
	thumb_func_end FUN_0202036C

	thumb_func_start FUN_02020410
FUN_02020410: @ 0x02020410
	ldrh r2, [r0]
	lsrs r2, r2, #8
	lsls r3, r2, #1
	ldr r2, _020204B4 @ =0x021D1F94
	ldrh r3, [r2, r3]
	strh r3, [r1]
	ldrh r3, [r0]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #2]
	ldrh r3, [r0, #2]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #4]
	ldrh r3, [r0, #2]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #6]
	ldrh r3, [r0, #4]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #8]
	ldrh r3, [r0, #4]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xa]
	ldrh r3, [r0, #6]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xc]
	ldrh r3, [r0, #6]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0xe]
	ldrh r3, [r0, #8]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x10]
	ldrh r3, [r0, #8]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x12]
	ldrh r3, [r0, #0xa]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x14]
	ldrh r3, [r0, #0xa]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x16]
	ldrh r3, [r0, #0xc]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x18]
	ldrh r3, [r0, #0xc]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x17
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x1a]
	ldrh r3, [r0, #0xe]
	lsrs r3, r3, #8
	lsls r3, r3, #1
	ldrh r3, [r2, r3]
	strh r3, [r1, #0x1c]
	ldrh r0, [r0, #0xe]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x17
	ldrh r0, [r2, r0]
	strh r0, [r1, #0x1e]
	bx lr
	.align 2, 0
_020204B4: .4byte 0x021D1F94
	thumb_func_end FUN_02020410

	thumb_func_start FUN_020204B8
FUN_020204B8: @ 0x020204B8
	movs r1, #0
	str r1, [r0, #0x30]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020204B8

	thumb_func_start FUN_020204C0
FUN_020204C0: @ 0x020204C0
	push {r3, r4, r5, lr}
	sub sp, #8
	movs r1, #6
	movs r0, #0
	lsls r1, r1, #8
	bl FUN_0201AA8C
	movs r2, #0
	adds r5, r0, #0
	str r2, [sp]
	movs r0, #0x10
	movs r1, #6
	add r3, sp, #4
	bl FUN_020079BC
	adds r4, r0, #0
	ldr r0, [sp, #4]
	movs r2, #6
	ldr r0, [r0, #0x14]
	adds r1, r5, #0
	lsls r2, r2, #8
	blx FUN_020D4808
	adds r0, r4, #0
	bl FUN_0201AB0C
	adds r0, r5, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020204C0

	thumb_func_start FUN_020204FC
FUN_020204FC: @ 0x020204FC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r4, r0, #0
	ldr r0, [r4, #0x30]
	adds r7, r3, #0
	ldr r5, [r4, #4]
	cmp r0, #0
	bne _02020512
	bl FUN_020204C0
	str r0, [r4, #0x30]
_02020512:
	movs r0, #6
	lsls r0, r0, #6
	adds r6, r7, #0
	muls r6, r0, r6
	adds r0, r5, #0
	ldr r4, [r4, #0x30]
	bl FUN_0201EE90
	subs r0, r0, #3
	lsls r0, r0, #0x13
	movs r1, #0x18
	lsrs r2, r0, #0x10
	str r1, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	str r2, [sp, #8]
	movs r2, #0
	str r2, [sp, #0xc]
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	adds r0, r5, #0
	adds r1, r4, r6
	adds r3, r2, #0
	bl FUN_0201D9D8
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020204FC

	thumb_func_start FUN_02020548
FUN_02020548: @ 0x02020548
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x30]
	cmp r0, #0
	beq _0202055A
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, #0x30]
_0202055A:
	pop {r4, pc}
	thumb_func_end FUN_02020548

	thumb_func_start FUN_0202055C
FUN_0202055C: @ 0x0202055C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _020205A8 @ =0x021D2194
	adds r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	beq _0202056E
	bl FUN_0202551C
_0202056E:
	adds r0, r4, #0
	movs r1, #0xc
	bl FUN_0201AA8C
	ldr r1, _020205A8 @ =0x021D2194
	cmp r0, #0
	str r0, [r1]
	bne _02020582
	bl FUN_0202551C
_02020582:
	adds r0, r4, #0
	lsls r1, r5, #4
	bl FUN_0201AA8C
	ldr r1, _020205A8 @ =0x021D2194
	ldr r2, [r1]
	str r0, [r2, #8]
	ldr r0, [r1]
	movs r2, #0
	str r5, [r0]
	ldr r0, [r1]
	str r2, [r0, #4]
	ldr r1, [r1]
	ldr r0, [r1, #8]
	ldr r1, [r1]
	blx FUN_020B62C8
	pop {r3, r4, r5, pc}
	nop
_020205A8: .4byte 0x021D2194
	thumb_func_end FUN_0202055C

	thumb_func_start FUN_020205AC
FUN_020205AC: @ 0x020205AC
	push {r3, lr}
	ldr r0, _020205D4 @ =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	bne _020205BA
	bl FUN_0202551C
_020205BA:
	ldr r0, _020205D4 @ =0x021D2194
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bl FUN_0201AB0C
	ldr r0, _020205D4 @ =0x021D2194
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _020205D4 @ =0x021D2194
	movs r1, #0
	str r1, [r0]
	pop {r3, pc}
	.align 2, 0
_020205D4: .4byte 0x021D2194
	thumb_func_end FUN_020205AC

	thumb_func_start FUN_020205D8
FUN_020205D8: @ 0x020205D8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _02020618 @ =0x021D2194
	adds r4, r1, #0
	ldr r0, [r0]
	adds r6, r2, #0
	adds r7, r3, #0
	cmp r0, #0
	bne _020205EE
	bl FUN_0202551C
_020205EE:
	ldr r1, _02020618 @ =0x021D2194
	ldr r0, [r1]
	ldr r2, [r0, #4]
	adds r2, r2, #1
	str r2, [r0, #4]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	cmp r1, r0
	blo _0202060A
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_0202060A:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	adds r3, r7, #0
	blx FUN_020B634C
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020618: .4byte 0x021D2194
	thumb_func_end FUN_020205D8

	thumb_func_start FUN_0202061C
FUN_0202061C: @ 0x0202061C
	push {r3, lr}
	ldr r0, _02020634 @ =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	beq _02020632
	blx FUN_020B62EC
	ldr r0, _02020634 @ =0x021D2194
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #4]
_02020632:
	pop {r3, pc}
	.align 2, 0
_02020634: .4byte 0x021D2194
	thumb_func_end FUN_0202061C

	thumb_func_start FUN_02020638
FUN_02020638: @ 0x02020638
	push {r3, lr}
	ldr r0, _02020650 @ =0x021D2194
	ldr r0, [r0]
	cmp r0, #0
	bne _02020646
	bl FUN_0202551C
_02020646:
	ldr r0, _02020650 @ =0x021D2194
	ldr r0, [r0]
	ldr r0, [r0, #4]
	pop {r3, pc}
	nop
_02020650: .4byte 0x021D2194
	thumb_func_end FUN_02020638

	thumb_func_start FUN_02020654
FUN_02020654: @ 0x02020654
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	movs r1, #0x30
	muls r1, r4, r1
	bl FUN_0201AA8C
	ldr r2, _02020670 @ =FUN_02020684
	adds r1, r4, #0
	adds r5, r0, #0
	blx FUN_020BAD38
	adds r0, r5, #0
	pop {r3, r4, r5, pc}
	.align 2, 0
_02020670: .4byte FUN_02020684
	thumb_func_end FUN_02020654

	thumb_func_start FUN_02020674
FUN_02020674: @ 0x02020674
	ldr r3, _02020678 @ =FUN_020BAD9C
	bx r3
	.align 2, 0
_02020678: .4byte FUN_020BAD9C
	thumb_func_end FUN_02020674

	thumb_func_start FUN_0202067C
FUN_0202067C: @ 0x0202067C
	ldr r3, _02020680 @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_02020680: .4byte FUN_0201AB0C
	thumb_func_end FUN_0202067C

	thumb_func_start FUN_02020684
FUN_02020684: @ 0x02020684
	push {r3, lr}
	bl FUN_020205D8
	pop {r3, pc}
	thumb_func_end FUN_02020684

	thumb_func_start FUN_0202068C
FUN_0202068C: @ 0x0202068C
	push {r4, r5, r6, lr}
	adds r6, r1, #0
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #8
	bl FUN_0201AA8C
	movs r1, #0x14
	adds r4, r0, #0
	adds r0, r6, #0
	muls r1, r5, r1
	bl FUN_0201AA8C
	str r0, [r4]
	movs r6, #0
	str r5, [r4, #4]
	cmp r5, #0
	ble _020206C4
	adds r5, r6, #0
_020206B2:
	ldr r0, [r4]
	adds r0, r0, r5
	bl FUN_02020770
	ldr r0, [r4, #4]
	adds r6, r6, #1
	adds r5, #0x14
	cmp r6, r0
	blt _020206B2
_020206C4:
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_0202068C

	thumb_func_start FUN_020206C8
FUN_020206C8: @ 0x020206C8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02020740
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020206C8

	thumb_func_start FUN_020206E0
FUN_020206E0: @ 0x020206E0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	movs r4, #0
	adds r7, r2, #0
	mov ip, r1
	adds r6, r3, #0
	adds r2, r4, #0
	cmp r0, #0
	ble _0202070E
	ldr r5, [r5]
	adds r3, r5, #0
_020206F8:
	ldr r1, [r3]
	cmp r1, #0
	bne _02020706
	movs r0, #0x14
	muls r0, r2, r0
	adds r4, r5, r0
	b _0202070E
_02020706:
	adds r2, r2, #1
	adds r3, #0x14
	cmp r2, r0
	blt _020206F8
_0202070E:
	cmp r4, #0
	bne _02020716
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02020716:
	mov r0, ip
	str r0, [r4]
	str r7, [r4, #4]
	ldr r1, [sp, #0x1c]
	ldr r0, [sp, #0x18]
	str r6, [r4, #8]
	str r0, [r4, #0xc]
	movs r0, #0xff
	strb r0, [r4, #0x10]
	lsls r1, r1, #4
	strb r0, [r4, #0x11]
	adds r0, r4, #0
	lsrs r1, r1, #0x10
	bl FUN_02020780
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_020206E0

	thumb_func_start FUN_02020738
FUN_02020738: @ 0x02020738
	ldr r3, _0202073C @ =FUN_02020770
	bx r3
	.align 2, 0
_0202073C: .4byte FUN_02020770
	thumb_func_end FUN_02020738

	thumb_func_start FUN_02020740
FUN_02020740: @ 0x02020740
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	movs r6, #0
	cmp r0, #0
	ble _02020760
	adds r4, r6, #0
_0202074E:
	ldr r0, [r5]
	adds r0, r0, r4
	bl FUN_02020770
	ldr r0, [r5, #4]
	adds r6, r6, #1
	adds r4, #0x14
	cmp r6, r0
	blt _0202074E
_02020760:
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02020740

	thumb_func_start FUN_02020764
FUN_02020764: @ 0x02020764
	ldr r3, _0202076C @ =FUN_02020780
	lsls r1, r1, #4
	lsrs r1, r1, #0x10
	bx r3
	.align 2, 0
_0202076C: .4byte FUN_02020780
	thumb_func_end FUN_02020764

	thumb_func_start FUN_02020770
FUN_02020770: @ 0x02020770
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	str r1, [r0, #0xc]
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	bx lr
	thumb_func_end FUN_02020770

	thumb_func_start FUN_02020780
FUN_02020780: @ 0x02020780
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [r4]
	bl FUN_02026DE0
	add r2, sp, #0
	strb r0, [r2]
	lsrs r0, r0, #8
	strb r0, [r2, #1]
	ldrb r0, [r2]
	add r1, sp, #0
	adds r1, #2
	strb r0, [r2, #2]
	ldrb r0, [r2, #1]
	strb r0, [r2, #3]
	ldrb r3, [r4, #0x10]
	ldrb r0, [r2, #2]
	cmp r3, r0
	beq _020207AE
	adds r0, r4, #0
	bl FUN_020207C8
_020207AE:
	add r0, sp, #0
	ldrb r1, [r4, #0x11]
	ldrb r0, [r0, #3]
	cmp r1, r0
	beq _020207C2
	add r1, sp, #0
	adds r0, r4, #0
	adds r1, #2
	bl FUN_020207F4
_020207C2:
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02020780

	thumb_func_start FUN_020207C8
FUN_020207C8: @ 0x020207C8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_02020820
	ldr r3, [r5, #8]
	adds r2, r0, #0
	lsls r1, r3, #0x10
	ldr r6, _020207F0 @ =0x7FFF0000
	movs r0, #0
	ands r3, r6
	lsrs r3, r3, #0x10
	lsrs r1, r1, #0xd
	lsls r3, r3, #4
	bl FUN_020205D8
	ldrb r0, [r4]
	strb r0, [r5, #0x10]
	pop {r4, r5, r6, pc}
	nop
_020207F0: .4byte 0x7FFF0000
	thumb_func_end FUN_020207C8

	thumb_func_start FUN_020207F4
FUN_020207F4: @ 0x020207F4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_0202082C
	ldr r3, [r5, #0xc]
	adds r2, r0, #0
	lsls r1, r3, #0x10
	ldr r6, _0202081C @ =0xFFFF0000
	movs r0, #1
	ands r3, r6
	lsrs r3, r3, #0x10
	lsrs r1, r1, #0xd
	lsls r3, r3, #3
	bl FUN_020205D8
	ldrb r0, [r4, #1]
	strb r0, [r5, #0x11]
	pop {r4, r5, r6, pc}
	nop
_0202081C: .4byte 0xFFFF0000
	thumb_func_end FUN_020207F4

	thumb_func_start FUN_02020820
FUN_02020820: @ 0x02020820
	ldr r3, _02020828 @ =FUN_02020838
	ldr r0, [r0, #4]
	ldrb r1, [r1]
	bx r3
	.align 2, 0
_02020828: .4byte FUN_02020838
	thumb_func_end FUN_02020820

	thumb_func_start FUN_0202082C
FUN_0202082C: @ 0x0202082C
	ldr r3, _02020834 @ =FUN_02020888
	ldr r0, [r0, #4]
	ldrb r1, [r1, #1]
	bx r3
	.align 2, 0
_02020834: .4byte FUN_02020888
	thumb_func_end FUN_0202082C

	thumb_func_start FUN_02020838
FUN_02020838: @ 0x02020838
	push {r3, r4}
	cmp r0, #0
	beq _02020864
	adds r2, r0, #0
	adds r2, #0x3c
	beq _02020860
	adds r3, r0, #0
	adds r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _02020860
	adds r3, r0, #0
	adds r3, #0x42
	ldrh r4, [r3]
	adds r3, r2, r4
	ldrh r2, [r2, r4]
	adds r3, r3, #4
	muls r1, r2, r1
	adds r3, r3, r1
	b _02020866
_02020860:
	movs r3, #0
	b _02020866
_02020864:
	movs r3, #0
_02020866:
	cmp r3, #0
	bne _02020870
	movs r0, #0
	pop {r3, r4}
	bx lr
_02020870:
	ldr r1, [r0, #0x14]
	adds r2, r0, r1
	ldr r1, [r3]
	ldr r0, [r0, #8]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r1, r0
	lsls r0, r0, #3
	adds r0, r2, r0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020838

	thumb_func_start FUN_02020888
FUN_02020888: @ 0x02020888
	push {r3, r4}
	cmp r0, #0
	beq _020208B0
	ldrh r2, [r0, #0x34]
	cmp r2, #0
	beq _020208B0
	adds r4, r0, r2
	beq _020208AC
	ldrb r2, [r4, #1]
	cmp r1, r2
	bhs _020208AC
	ldrh r2, [r4, #6]
	adds r3, r4, r2
	ldrh r2, [r4, r2]
	adds r3, r3, #4
	muls r1, r2, r1
	adds r2, r3, r1
	b _020208B2
_020208AC:
	movs r2, #0
	b _020208B2
_020208B0:
	movs r2, #0
_020208B2:
	cmp r2, #0
	bne _020208BC
	movs r0, #0
	pop {r3, r4}
	bx lr
_020208BC:
	ldr r1, [r0, #0x38]
	adds r1, r0, r1
	ldrh r0, [r2]
	lsls r0, r0, #3
	adds r0, r1, r0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020888

	thumb_func_start FUN_020208CC
FUN_020208CC: @ 0x020208CC
	ldr r1, [r1]
	ldr r0, [r0, #8]
	lsls r1, r1, #0x10
	lsls r0, r0, #0x10
	lsrs r1, r1, #0xd
	lsrs r0, r0, #0xd
	adds r0, r1, r0
	bx lr
	thumb_func_end FUN_020208CC

	thumb_func_start FUN_020208DC
FUN_020208DC: @ 0x020208DC
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	add r0, sp, #0
	bl FUN_02020B3C
	cmp r4, #0
	beq _020208FA
	adds r0, r4, #0
	adds r0, #0x3c
	add r1, sp, #0
	blx FUN_020C3818
	adds r1, r0, #0
	b _020208FC
_020208FA:
	movs r1, #0
_020208FC:
	cmp r1, #0
	bne _02020906
	add sp, #0x10
	movs r0, #0
	pop {r4, pc}
_02020906:
	adds r0, r4, #0
	bl FUN_020208CC
	add sp, #0x10
	pop {r4, pc}
	thumb_func_end FUN_020208DC

	thumb_func_start FUN_02020910
FUN_02020910: @ 0x02020910
	push {r4, lr}
	cmp r0, #0
	beq _0202093C
	adds r2, r0, #0
	adds r2, #0x3c
	beq _02020938
	adds r3, r0, #0
	adds r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _02020938
	adds r3, r0, #0
	adds r3, #0x42
	ldrh r4, [r3]
	adds r3, r2, r4
	ldrh r2, [r2, r4]
	adds r3, r3, #4
	muls r1, r2, r1
	adds r1, r3, r1
	b _0202093E
_02020938:
	movs r1, #0
	b _0202093E
_0202093C:
	movs r1, #0
_0202093E:
	cmp r1, #0
	bne _02020946
	movs r0, #0
	pop {r4, pc}
_02020946:
	bl FUN_020208CC
	pop {r4, pc}
	thumb_func_end FUN_02020910

	thumb_func_start FUN_0202094C
FUN_0202094C: @ 0x0202094C
	push {r3, lr}
	ldr r0, [r1]
	movs r1, #7
	lsls r1, r1, #0x1a
	ands r1, r0
	lsrs r1, r1, #0x1a
	cmp r1, #6
	bhi _0202098A
	adds r1, r1, r1
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02020968: @ jump table
	.2byte _0202098A - _02020968 - 2 @ case 0
	.2byte _02020982 - _02020968 - 2 @ case 1
	.2byte _02020976 - _02020968 - 2 @ case 2
	.2byte _0202097A - _02020968 - 2 @ case 3
	.2byte _0202097E - _02020968 - 2 @ case 4
	.2byte _0202098A - _02020968 - 2 @ case 5
	.2byte _02020986 - _02020968 - 2 @ case 6
_02020976:
	movs r1, #4
	b _0202098E
_0202097A:
	movs r1, #2
	b _0202098E
_0202097E:
	movs r1, #1
	b _0202098E
_02020982:
	movs r1, #1
	b _0202098E
_02020986:
	movs r1, #1
	b _0202098E
_0202098A:
	movs r0, #0
	pop {r3, pc}
_0202098E:
	movs r3, #7
	lsls r3, r3, #0x14
	adds r2, r0, #0
	ands r2, r3
	lsls r3, r3, #3
	ands r0, r3
	lsrs r2, r2, #0x14
	lsrs r0, r0, #0x17
	lsls r2, r2, #4
	lsls r0, r0, #4
	muls r0, r2, r0
	blx FUN_020F2BA4
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_0202094C

	thumb_func_start FUN_020209AC
FUN_020209AC: @ 0x020209AC
	push {r4, lr}
	cmp r0, #0
	beq _020209D8
	adds r2, r0, #0
	adds r2, #0x3c
	beq _020209D4
	adds r3, r0, #0
	adds r3, #0x3d
	ldrb r3, [r3]
	cmp r1, r3
	bhs _020209D4
	adds r3, r0, #0
	adds r3, #0x42
	ldrh r4, [r3]
	adds r3, r2, r4
	ldrh r2, [r2, r4]
	adds r3, r3, #4
	muls r1, r2, r1
	adds r1, r3, r1
	b _020209DA
_020209D4:
	movs r1, #0
	b _020209DA
_020209D8:
	movs r1, #0
_020209DA:
	bl FUN_0202094C
	pop {r4, pc}
	thumb_func_end FUN_020209AC

	thumb_func_start FUN_020209E0
FUN_020209E0: @ 0x020209E0
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	add r0, sp, #0
	bl FUN_02020B3C
	cmp r4, #0
	beq _020209FE
	adds r0, r4, #0
	adds r0, #0x3c
	add r1, sp, #0
	blx FUN_020C3818
	adds r1, r0, #0
	b _02020A00
_020209FE:
	movs r1, #0
_02020A00:
	adds r0, r4, #0
	bl FUN_0202094C
	add sp, #0x10
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020209E0

	thumb_func_start FUN_02020A0C
FUN_02020A0C: @ 0x02020A0C
	ldrb r3, [r0]
	strb r3, [r1]
	ldrb r0, [r0, #1]
	strb r0, [r2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020A0C

	thumb_func_start FUN_02020A18
FUN_02020A18: @ 0x02020A18
	ldrb r3, [r0, #2]
	strb r3, [r1]
	ldrb r0, [r0, #3]
	strb r0, [r2]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020A18

	thumb_func_start FUN_02020A24
FUN_02020A24: @ 0x02020A24
	push {r4, r5}
	ldr r5, _02020A9C @ =0xFFFFFFF8
	ldr r4, [sp, #0xc]
	add r5, sp
	ldrb r5, [r5, #0x18]
	cmp r5, #3
	bhi _02020A64
	adds r5, r5, r5
	add r5, pc
	ldrh r5, [r5, #6]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	add pc, r5
_02020A3E: @ jump table
	.2byte _02020A46 - _02020A3E - 2 @ case 0
	.2byte _02020A4E - _02020A3E - 2 @ case 1
	.2byte _02020A56 - _02020A3E - 2 @ case 2
	.2byte _02020A5E - _02020A3E - 2 @ case 3
_02020A46:
	lsls r4, r4, #3
	adds r4, r0, r4
	ldrb r4, [r4, #4]
	b _02020A64
_02020A4E:
	lsls r4, r4, #3
	adds r4, r0, r4
	ldrb r4, [r4, #5]
	b _02020A64
_02020A56:
	lsls r4, r4, #3
	adds r4, r0, r4
	ldrb r4, [r4, #6]
	b _02020A64
_02020A5E:
	lsls r4, r4, #3
	adds r4, r0, r4
	ldrb r4, [r4, #7]
_02020A64:
	cmp r1, #0
	beq _02020A6E
	lsls r5, r4, #3
	ldrb r5, [r0, r5]
	strb r5, [r1]
_02020A6E:
	cmp r2, #0
	beq _02020A7A
	lsls r1, r4, #3
	adds r1, r0, r1
	ldrb r1, [r1, #1]
	strb r1, [r2]
_02020A7A:
	cmp r3, #0
	beq _02020A86
	lsls r1, r4, #3
	adds r1, r0, r1
	ldrb r1, [r1, #2]
	strb r1, [r3]
_02020A86:
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _02020A94
	lsls r1, r4, #3
	adds r0, r0, r1
	ldrb r0, [r0, #3]
	strb r0, [r2]
_02020A94:
	adds r0, r4, #0
	pop {r4, r5}
	bx lr
	nop
_02020A9C: .4byte 0xFFFFFFF8
	thumb_func_end FUN_02020A24

	thumb_func_start FUN_02020AA0
FUN_02020AA0: @ 0x02020AA0
	movs r2, #0
	ldrsb r1, [r0, r2]
	cmp r1, #0
	beq _02020AB0
_02020AA8:
	adds r2, r2, #1
	ldrsb r1, [r0, r2]
	cmp r1, #0
	bne _02020AA8
_02020AB0:
	adds r0, r2, #0
	bx lr
	thumb_func_end FUN_02020AA0

	thumb_func_start FUN_02020AB4
FUN_02020AB4: @ 0x02020AB4
	push {r4, r5}
	movs r4, #1
	movs r3, #0
	lsls r4, r4, #8
_02020ABC:
	ldrsb r5, [r0, r3]
	strb r5, [r1, r3]
	ldrsb r5, [r0, r3]
	cmp r2, r5
	beq _02020ACA
	cmp r5, #0
	bne _02020AEA
_02020ACA:
	movs r4, #0
	strb r4, [r1, r3]
	cmp r2, #0xd
	bne _02020AE2
	adds r1, r3, #1
	ldrsb r1, [r0, r1]
	cmp r1, #0xa
	bne _02020AE2
	adds r1, r3, #2
	adds r0, r0, r1
	pop {r4, r5}
	bx lr
_02020AE2:
	adds r1, r3, #1
	adds r0, r0, r1
	pop {r4, r5}
	bx lr
_02020AEA:
	adds r3, r3, #1
	cmp r3, r4
	blt _02020ABC
	movs r0, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020AB4

	thumb_func_start FUN_02020AF8
FUN_02020AF8: @ 0x02020AF8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl FUN_02020AA0
	movs r5, #1
	movs r6, #0
	subs r3, r0, #1
	bmi _02020B36
	subs r1, r6, #1
	movs r0, #0xa
_02020B0C:
	ldrsb r2, [r4, r3]
	cmp r2, #0x30
	blt _02020B1E
	cmp r2, #0x39
	bgt _02020B1E
	subs r2, #0x30
	muls r2, r5, r2
	adds r6, r6, r2
	b _02020B30
_02020B1E:
	cmp r3, #0
	bne _02020B2A
	cmp r2, #0x2d
	bne _02020B30
	muls r6, r1, r6
	b _02020B30
_02020B2A:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, pc}
_02020B30:
	muls r5, r0, r5
	subs r3, r3, #1
	bpl _02020B0C
_02020B36:
	adds r0, r6, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02020AF8

	thumb_func_start FUN_02020B3C
FUN_02020B3C: @ 0x02020B3C
	push {r3, r4, r5, lr}
	movs r2, #0
	adds r4, r1, #0
	adds r5, r0, #0
	adds r1, r2, #0
_02020B46:
	lsls r0, r2, #2
	str r1, [r5, r0]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #4
	blo _02020B46
	adds r0, r4, #0
	bl FUN_02020AA0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _02020B74 @ =0x00000000
	beq _02020B70
_02020B62:
	ldrsb r0, [r4, r2]
	strb r0, [r5, r2]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, r1
	blo _02020B62
_02020B70:
	pop {r3, r4, r5, pc}
	nop
_02020B74: .4byte 0x00000000
	thumb_func_end FUN_02020B3C

	thumb_func_start FUN_02020B78
FUN_02020B78: @ 0x02020B78
	ldr r1, _02020B88 @ =0x00000121
	cmp r0, r1
	bhs _02020B82
	movs r0, #1
	bx lr
_02020B82:
	movs r0, #0
	bx lr
	nop
_02020B88: .4byte 0x00000121
	thumb_func_end FUN_02020B78

	thumb_func_start FUN_02020B8C
FUN_02020B8C: @ 0x02020B8C
	cmp r0, r1
	blt _02020B92
	adds r0, r1, #0
_02020B92:
	bx lr
	thumb_func_end FUN_02020B8C

	thumb_func_start FUN_02020B94
FUN_02020B94: @ 0x02020B94
	cmp r0, r1
	bgt _02020B9A
	adds r0, r1, #0
_02020B9A:
	bx lr
	thumb_func_end FUN_02020B94

	thumb_func_start FUN_02020B9C
FUN_02020B9C: @ 0x02020B9C
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x50
	adds r5, r0, #0
	add r3, sp, #0x14
	movs r0, #0
	str r0, [r3]
	str r0, [r3, #4]
	str r0, [r3, #8]
	adds r0, r2, #0
	adds r4, r1, #0
	add r2, sp, #0x44
	blx FUN_020CCDAC
	adds r0, r5, #0
	adds r1, r4, #0
	add r2, sp, #0x38
	blx FUN_020CCDAC
	ldr r0, [sp, #0x48]
	ldr r5, [sp, #0x4c]
	str r0, [sp]
	asrs r0, r0, #0x1f
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x44]
	asrs r4, r5, #0x1f
	str r0, [sp, #4]
	asrs r7, r0, #0x1f
	add r0, sp, #0x44
	add r1, sp, #0x38
	blx FUN_020CCE14
	str r0, [sp, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r4, #0
	blx FUN_020F2948
	adds r6, r0, #0
	ldr r0, [sp, #4]
	adds r4, r1, #0
	adds r1, r7, #0
	adds r2, r0, #0
	adds r3, r7, #0
	blx FUN_020F2948
	str r0, [sp, #0xc]
	adds r5, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #0x10]
	adds r2, r0, #0
	adds r3, r1, #0
	blx FUN_020F2948
	movs r2, #2
	adds r3, r1, #0
	adds r7, r0, #0
	movs r1, #0
	lsls r2, r2, #0xa
	adds r2, r6, r2
	adcs r4, r1
	lsls r4, r4, #0x14
	lsrs r2, r2, #0xc
	orrs r2, r4
	movs r4, #2
	ldr r6, [sp, #0xc]
	lsls r4, r4, #0xa
	adds r4, r6, r4
	adcs r5, r1
	lsls r5, r5, #0x14
	lsrs r4, r4, #0xc
	orrs r4, r5
	movs r5, #2
	lsls r5, r5, #0xa
	adds r5, r7, r5
	adcs r3, r1
	lsls r1, r3, #0x14
	lsrs r3, r5, #0xc
	orrs r3, r1
	adds r1, r4, r3
	ldr r0, [sp, #8]
	adds r1, r2, r1
	blx FUN_020CCBA0
	add r1, sp, #0x44
	add r2, sp, #0x14
	add r3, sp, #0x20
	blx FUN_020CD224
	add r0, sp, #0x20
	add r1, sp, #0x38
	add r2, sp, #0x2c
	blx FUN_020CCDAC
	add r0, sp, #0x2c
	blx FUN_020CCF80
	add sp, #0x50
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02020B9C

	thumb_func_start FUN_02020C64
FUN_02020C64: @ 0x02020C64
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x30
	adds r4, r1, #0
	add r1, sp, #0x24
	blx FUN_020CCFE0
	adds r0, r4, #0
	add r1, sp, #0x18
	blx FUN_020CCFE0
	ldr r0, [sp, #0x24]
	ldr r4, [sp, #0x18]
	str r0, [sp]
	asrs r0, r0, #0x1f
	str r0, [sp, #4]
	ldr r0, [sp, #0x20]
	asrs r6, r4, #0x1f
	str r0, [sp, #8]
	asrs r0, r0, #0x1f
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x2c]
	ldr r2, [sp, #8]
	asrs r7, r0, #0x1f
	ldr r3, [sp, #0xc]
	adds r1, r7, #0
	str r0, [sp, #0x10]
	blx FUN_020F2948
	str r0, [sp, #0x14]
	adds r5, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	adds r2, r4, #0
	adds r3, r6, #0
	blx FUN_020F2948
	movs r2, #2
	ldr r3, [sp, #0x14]
	lsls r2, r2, #0xa
	adds r3, r3, r2
	ldr r2, _02020D28 @ =0x00000000
	adcs r5, r2
	lsls r2, r5, #0x14
	lsrs r3, r3, #0xc
	orrs r3, r2
	movs r2, #2
	lsls r2, r2, #0xa
	adds r0, r0, r2
	ldr r2, _02020D28 @ =0x00000000
	adcs r1, r2
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	adds r5, r3, r0
	ldr r0, [sp, #0x10]
	adds r1, r7, #0
	adds r2, r4, #0
	adds r3, r6, #0
	blx FUN_020F2948
	adds r6, r0, #0
	adds r4, r1, #0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r6, r6, r2
	adcs r4, r3
	lsls r4, r4, #0x14
	lsrs r6, r6, #0xc
	orrs r6, r4
	adds r4, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r4, #0xc
	orrs r1, r0
	subs r0, r6, r1
	cmp r5, #0
	bne _02020D1E
	cmp r0, #0
	ble _02020D16
	add sp, #0x30
	lsls r0, r2, #3
	pop {r3, r4, r5, r6, r7, pc}
_02020D16:
	movs r0, #3
	add sp, #0x30
	lsls r0, r0, #0xe
	pop {r3, r4, r5, r6, r7, pc}
_02020D1E:
	adds r1, r5, #0
	blx FUN_020CD5DC
	add sp, #0x30
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020D28: .4byte 0x00000000
	thumb_func_end FUN_02020C64

	thumb_func_start FUN_02020D2C
FUN_02020D2C: @ 0x02020D2C
	push {r4, r5, lr}
	sub sp, #0x24
	adds r4, r1, #0
	ldr r1, [r4]
	ldr r3, _02020DA0 @ =0x021094DC
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	asrs r1, r1, #4
	lsls r2, r1, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	adds r5, r0, #0
	bl FUN_020CB0D0
	ldr r0, [r4, #4]
	ldr r3, _02020DA0 @ =0x021094DC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl FUN_020CB0EC
	adds r0, r5, #0
	add r1, sp, #0
	adds r2, r5, #0
	blx FUN_020CB410
	ldr r0, [r4, #8]
	ldr r3, _02020DA0 @ =0x021094DC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	asrs r0, r0, #4
	lsls r2, r0, #1
	lsls r1, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r1, [r3, r1]
	ldrsh r2, [r3, r2]
	add r0, sp, #0
	bl FUN_020CB108
	adds r0, r5, #0
	add r1, sp, #0
	adds r2, r5, #0
	blx FUN_020CB410
	add sp, #0x24
	pop {r4, r5, pc}
	nop
_02020DA0: .4byte 0x021094DC
	thumb_func_end FUN_02020D2C

	thumb_func_start FUN_02020DA4
FUN_02020DA4: @ 0x02020DA4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r5, r1, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r4, r2, #0
	adds r6, r3, #0
	bl FUN_0201FC30
	adds r7, r0, #0
	adds r0, r5, #0
	bl FUN_0201FBB8
	adds r1, r0, #0
	ldr r0, [sp]
	adds r2, r7, #0
	bl FUN_020CB0D0
	adds r0, r4, #0
	bl FUN_0201FC30
	adds r5, r0, #0
	adds r0, r4, #0
	bl FUN_0201FBB8
	adds r1, r0, #0
	add r0, sp, #4
	adds r2, r5, #0
	bl FUN_020CB0EC
	ldr r0, [sp]
	add r1, sp, #4
	adds r2, r0, #0
	blx FUN_020CB410
	adds r0, r6, #0
	bl FUN_0201FC30
	adds r4, r0, #0
	adds r0, r6, #0
	bl FUN_0201FBB8
	adds r1, r0, #0
	add r0, sp, #4
	adds r2, r4, #0
	bl FUN_020CB108
	ldr r0, [sp]
	add r1, sp, #4
	adds r2, r0, #0
	blx FUN_020CB410
	add sp, #0x28
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02020DA4

	thumb_func_start FUN_02020E10
FUN_02020E10: @ 0x02020E10
	push {r3, r4, r5, r6, r7, lr}
	asrs r0, r0, #4
	adds r7, r2, #0
	lsls r2, r0, #1
	adds r6, r1, #0
	lsls r0, r2, #1
	ldr r1, _02020E7C @ =0x021094DC
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r0, [r1, r0]
	ldrsh r1, [r1, r2]
	adds r5, r3, #0
	ldr r4, [sp, #0x18]
	blx FUN_020CCBA0
	adds r2, r0, #0
	asrs r1, r6, #0x1f
	adds r0, r6, #0
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r6, #2
	movs r2, #0
	lsls r6, r6, #0xa
	adds r0, r0, r6
	adcs r1, r2
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r3, r0, #0x1f
	lsrs r1, r0, #0x13
	lsls r3, r3, #0xd
	orrs r3, r1
	lsls r0, r0, #0xd
	adds r0, r0, r6
	adcs r3, r2
	lsls r1, r3, #0x14
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r1, r0, #0x1f
	asrs r3, r7, #0x1f
	adds r2, r7, #0
	str r0, [r4]
	blx FUN_020F2948
	movs r3, #0
	adds r2, r6, #0
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	str r1, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02020E7C: .4byte 0x021094DC
	thumb_func_end FUN_02020E10

	thumb_func_start FUN_02020E80
FUN_02020E80: @ 0x02020E80
	push {r4, r5, r6, r7}
	ldr r6, [r2, #4]
	ldr r7, [r1]
	ldr r4, [r0, #4]
	ldr r5, [r1, #4]
	subs r1, r6, r4
	adds r3, r7, #0
	muls r3, r1, r3
	ldr r2, [r2]
	subs r1, r4, r5
	muls r1, r2, r1
	ldr r2, [r0]
	subs r0, r5, r6
	muls r0, r2, r0
	adds r0, r1, r0
	adds r0, r3, r0
	bmi _02020EA8
	movs r0, #1
	pop {r4, r5, r6, r7}
	bx lr
_02020EA8:
	movs r0, #0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02020E80

	thumb_func_start FUN_02020EB0
FUN_02020EB0: @ 0x02020EB0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r1, #0
	adds r4, r3, #0
	str r2, [sp]
	bl FUN_02020E80
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl FUN_02020E80
	eors r0, r6
	cmp r0, #1
	bne _02020EF0
	ldr r0, [sp]
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_02020E80
	adds r5, r0, #0
	ldr r0, [sp]
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_02020E80
	eors r0, r5
	cmp r0, #1
	bne _02020EF0
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_02020EF0:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02020EB0

	thumb_func_start FUN_02020EF4
FUN_02020EF4: @ 0x02020EF4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	subs r1, r3, r4
	ldr r0, [sp, #0x18]
	adds r6, r2, #0
	subs r0, r0, r6
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	beq _02020F1A
	lsls r0, r0, #0xc
	lsls r1, r1, #0xc
	blx FUN_020CCBA0
	str r0, [sp]
	b _02020F20
_02020F1A:
	movs r0, #0xff
	lsls r0, r0, #0xc
	str r0, [sp]
_02020F20:
	ldr r0, [sp]
	lsls r2, r4, #0xc
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r3, #2
	movs r4, #0
	lsls r3, r3, #0xa
	lsls r2, r6, #0xc
	adds r3, r0, r3
	adcs r1, r4
	lsls r0, r1, #0x14
	lsrs r1, r3, #0xc
	orrs r1, r0
	ldr r0, [sp]
	subs r1, r2, r1
	str r0, [r5]
	str r1, [sp, #4]
	str r1, [r5, #4]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02020EF4

	thumb_func_start FUN_02020F4C
FUN_02020F4C: @ 0x02020F4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x34
	ldr r4, [sp, #0x48]
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r3, #0
	str r2, [sp, #4]
	cmp r4, #0
	beq _02020F64
	ldr r0, _0202109C @ =0x0000FFFF
	str r0, [r4]
	str r0, [r4, #4]
_02020F64:
	ldr r2, [sp, #4]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r3, r6, #0
	bl FUN_02020EB0
	cmp r0, #0
	bne _02020F7A
	add sp, #0x34
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_02020F7A:
	ldr r0, [r5, #4]
	str r0, [sp]
	ldr r1, [r7]
	ldr r2, [r7, #4]
	ldr r3, [r5]
	add r0, sp, #0x24
	bl FUN_02020EF4
	ldr r0, [r6, #4]
	ldr r1, [sp, #4]
	str r0, [sp]
	ldr r2, [sp, #4]
	ldr r1, [r1]
	ldr r2, [r2, #4]
	ldr r3, [r6]
	add r0, sp, #0x1c
	bl FUN_02020EF4
	ldr r1, [sp, #0x1c]
	ldr r3, [sp, #0x24]
	cmp r3, r1
	bne _02020FAC
	add sp, #0x34
	movs r0, #0
	pop {r4, r5, r6, r7, pc}
_02020FAC:
	ldr r2, [sp, #0x20]
	ldr r0, [sp, #0x28]
	subs r1, r3, r1
	subs r0, r2, r0
	blx FUN_020CCBA0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0xc]
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	adds r2, r0, #0
	ldr r0, [sp, #0x20]
	movs r3, #0
	str r0, [sp, #0x10]
	movs r0, #2
	lsls r0, r0, #0xa
	adds r0, r2, r0
	adcs r1, r3
	lsrs r0, r0, #0xc
	lsls r1, r1, #0x14
	str r0, [sp, #0x14]
	orrs r0, r1
	str r0, [sp, #0x14]
	ldr r0, [sp, #0xc]
	add r1, sp, #0x30
	blx FUN_020CD788
	movs r1, #2
	lsls r1, r1, #0xa
	cmp r0, r1
	blt _02020FF8
	ldr r2, [sp, #0x30]
	lsls r0, r1, #1
	adds r0, r2, r0
	str r0, [sp, #0x30]
_02020FF8:
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x10]
	asrs r0, r0, #0xc
	str r0, [r4]
	ldr r0, [sp, #0x14]
	adds r0, r1, r0
	add r1, sp, #0x2c
	blx FUN_020CD788
	movs r1, #2
	lsls r1, r1, #0xa
	cmp r0, r1
	blt _0202101A
	ldr r2, [sp, #0x2c]
	lsls r0, r1, #1
	adds r0, r2, r0
	str r0, [sp, #0x2c]
_0202101A:
	ldr r0, [sp, #0x2c]
	asrs r0, r0, #0xc
	str r0, [r4, #4]
	ldr r1, [r5]
	ldr r0, [r7]
	cmp r0, r1
	blt _0202102C
	mov ip, r0
	b _02021030
_0202102C:
	mov ip, r1
	adds r1, r0, #0
_02021030:
	ldr r2, [r5, #4]
	ldr r0, [r7, #4]
	cmp r0, r2
	blt _0202103C
	str r0, [sp, #8]
	b _02021040
_0202103C:
	str r2, [sp, #8]
	adds r2, r0, #0
_02021040:
	ldr r0, [sp, #4]
	ldr r3, [r6]
	ldr r0, [r0]
	cmp r0, r3
	blt _0202104E
	str r0, [sp, #0x18]
	b _02021052
_0202104E:
	str r3, [sp, #0x18]
	adds r3, r0, #0
_02021052:
	ldr r0, [sp, #4]
	ldr r5, [r6, #4]
	ldr r0, [r0, #4]
	cmp r0, r5
	blt _02021060
	adds r7, r0, #0
	b _02021064
_02021060:
	adds r7, r5, #0
	adds r5, r0, #0
_02021064:
	ldr r0, [r4]
	mov r6, ip
	cmp r6, r0
	blt _02021094
	cmp r1, r0
	bgt _02021094
	ldr r1, [r4, #4]
	ldr r4, [sp, #8]
	cmp r4, r1
	blt _02021094
	cmp r2, r1
	bgt _02021094
	ldr r2, [sp, #0x18]
	cmp r2, r0
	blt _02021094
	cmp r3, r0
	bgt _02021094
	cmp r7, r1
	blt _02021094
	cmp r5, r1
	bgt _02021094
	add sp, #0x34
	movs r0, #1
	pop {r4, r5, r6, r7, pc}
_02021094:
	movs r0, #0
	add sp, #0x34
	pop {r4, r5, r6, r7, pc}
	nop
_0202109C: .4byte 0x0000FFFF
	thumb_func_end FUN_02020F4C

	thumb_func_start FUN_020210A0
FUN_020210A0: @ 0x020210A0
	movs r0, #0
	ldr r3, _020210B8 @ =0x021D2198
	adds r1, r0, #0
	movs r2, #5
_020210A8:
	stm r3!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _020210A8
	stm r3!, {r0, r1}
	str r0, [r3]
	bx lr
	nop
_020210B8: .4byte 0x021D2198
	thumb_func_end FUN_020210A0

	thumb_func_start FUN_020210BC
FUN_020210BC: @ 0x020210BC
	push {r3, lr}
	ldr r0, _020210D4 @ =0x021D21D8
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _020210CA
	bl FUN_0202551C
_020210CA:
	ldr r0, _020210D4 @ =0x021D21D8
	movs r1, #0
	strh r1, [r0, #0x18]
	pop {r3, pc}
	nop
_020210D4: .4byte 0x021D21D8
	thumb_func_end FUN_020210BC

	thumb_func_start FUN_020210D8
FUN_020210D8: @ 0x020210D8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _02021144 @ =0x021D21D8
	adds r6, r1, #0
	ldrh r1, [r0, #0x1a]
	adds r4, r2, #0
	cmp r1, #0
	beq _02021104
	movs r0, #0
	str r0, [sp]
	lsls r0, r4, #1
	str r0, [sp, #4]
	movs r0, #1
	adds r1, r0, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_020211AC
	add sp, #8
	movs r0, #1
	pop {r4, r5, r6, pc}
_02021104:
	cmp r4, #5
	bhs _0202110C
	cmp r4, #0
	bne _02021112
_0202110C:
	add sp, #8
	movs r0, #0
	pop {r4, r5, r6, pc}
_02021112:
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _0202111E
	add sp, #8
	movs r0, #0
	pop {r4, r5, r6, pc}
_0202111E:
	adds r0, r4, #0
	bl FUN_02021384
	cmp r0, #1
	bne _0202113E
	movs r0, #0
	str r0, [sp]
	lsls r0, r4, #1
	str r0, [sp, #4]
	movs r0, #1
	adds r1, r0, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl FUN_020211AC
	movs r0, #1
_0202113E:
	add sp, #8
	pop {r4, r5, r6, pc}
	nop
_02021144: .4byte 0x021D21D8
	thumb_func_end FUN_020210D8

	thumb_func_start FUN_02021148
FUN_02021148: @ 0x02021148
	push {r4, lr}
	sub sp, #8
	ldr r1, _020211A8 @ =0x021D21D8
	adds r4, r0, #0
	ldrh r2, [r1, #0x1a]
	cmp r2, #0
	beq _0202116E
	movs r2, #0
	str r2, [sp]
	lsls r0, r4, #1
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #1
	adds r3, r2, #0
	bl FUN_020211AC
	add sp, #8
	movs r0, #1
	pop {r4, pc}
_0202116E:
	cmp r4, #5
	bhs _02021176
	cmp r4, #0
	bne _0202117C
_02021176:
	add sp, #8
	movs r0, #0
	pop {r4, pc}
_0202117C:
	ldrh r1, [r1, #0x18]
	cmp r1, #0
	beq _02021188
	add sp, #8
	movs r0, #0
	pop {r4, pc}
_02021188:
	bl FUN_02021384
	cmp r0, #1
	bne _020211A4
	movs r2, #0
	str r2, [sp]
	lsls r0, r4, #1
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #1
	adds r3, r2, #0
	bl FUN_020211AC
	movs r0, #1
_020211A4:
	add sp, #8
	pop {r4, pc}
	.align 2, 0
_020211A8: .4byte 0x021D21D8
	thumb_func_end FUN_02021148

	thumb_func_start FUN_020211AC
FUN_020211AC: @ 0x020211AC
	push {r4, lr}
	ldr r4, _020211D0 @ =0x021D21D8
	strh r0, [r4, #0x18]
	ldr r0, _020211D4 @ =0x021D116C
	strb r1, [r0, #8]
	ldr r0, _020211D8 @ =0x021D2198
	ldr r1, [sp, #0xc]
	str r2, [r0]
	str r3, [r0, #4]
	str r1, [r0, #8]
	ldr r1, [sp, #8]
	str r1, [r0, #0x54]
	ldr r0, _020211DC @ =0x021D21A4
	movs r1, #9
	bl FUN_020211E0
	pop {r4, pc}
	nop
_020211D0: .4byte 0x021D21D8
_020211D4: .4byte 0x021D116C
_020211D8: .4byte 0x021D2198
_020211DC: .4byte 0x021D21A4
	thumb_func_end FUN_020211AC

	thumb_func_start FUN_020211E0
FUN_020211E0: @ 0x020211E0
	movs r3, #0
	cmp r1, #0
	ble _020211F2
	adds r2, r3, #0
_020211E8:
	adds r3, r3, #1
	strh r2, [r0, #4]
	adds r0, #8
	cmp r3, r1
	blt _020211E8
_020211F2:
	bx lr
	thumb_func_end FUN_020211E0

	thumb_func_start FUN_020211F4
FUN_020211F4: @ 0x020211F4
	push {r4, r5, r6, lr}
	ldr r0, _02021234 @ =0x021D21D8
	movs r5, #0
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	bne _02021204
	movs r0, #1
	pop {r4, r5, r6, pc}
_02021204:
	movs r4, #4
	adds r6, r4, #0
_02021208:
	blx FUN_020DA308
	adds r0, r4, #0
	blx FUN_020DA804
	adds r0, r6, #0
	blx FUN_020DA81C
	cmp r0, #0
	beq _0202121E
	adds r5, r5, #1
_0202121E:
	cmp r0, #0
	beq _02021226
	cmp r5, #5
	bls _02021208
_02021226:
	cmp r5, #5
	bls _0202122E
	movs r0, #2
	pop {r4, r5, r6, pc}
_0202122E:
	movs r0, #1
	pop {r4, r5, r6, pc}
	nop
_02021234: .4byte 0x021D21D8
	thumb_func_end FUN_020211F4

	thumb_func_start FUN_02021238
FUN_02021238: @ 0x02021238
	push {r4, lr}
	sub sp, #8
	ldr r0, _0202127C @ =0x021D21D8
	ldrh r0, [r0, #0x1a]
	cmp r0, #0
	beq _0202125A
	movs r0, #0
	str r0, [sp]
	adds r1, r0, #0
	adds r2, r0, #0
	adds r3, r0, #0
	str r0, [sp, #4]
	bl FUN_020211AC
	add sp, #8
	movs r0, #1
	pop {r4, pc}
_0202125A:
	bl FUN_020211F4
	adds r4, r0, #0
	cmp r4, #1
	bne _02021274
	movs r0, #0
	str r0, [sp]
	adds r1, r0, #0
	adds r2, r0, #0
	adds r3, r0, #0
	str r0, [sp, #4]
	bl FUN_020211AC
_02021274:
	adds r0, r4, #0
	add sp, #8
	pop {r4, pc}
	nop
_0202127C: .4byte 0x021D21D8
	thumb_func_end FUN_02021238

	thumb_func_start FUN_02021280
FUN_02021280: @ 0x02021280
	push {r3, r4, r5, r6, r7, lr}
	adds r7, r2, #0
	ldr r2, _020212E4 @ =0x021D21D8
	adds r4, r1, #0
	ldrh r3, [r2, #0x1a]
	adds r5, r0, #0
	movs r1, #3
	cmp r3, #0
	beq _020212A6
	cmp r5, #0
	beq _0202129A
	bl FUN_02021528
_0202129A:
	cmp r4, #2
	bne _020212A2
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
_020212A2:
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_020212A6:
	ldrh r0, [r2, #0x18]
	cmp r0, #0
	beq _020212DE
	blx FUN_020DA4E4
	adds r6, r0, #0
	ldr r0, _020212E8 @ =0x021D21A4
	movs r1, #9
	bl FUN_020212EC
	cmp r5, #0
	beq _020212C6
	adds r0, r5, #0
	adds r1, r6, #0
	bl FUN_02021540
_020212C6:
	ldr r0, _020212E4 @ =0x021D21D8
	ldrh r0, [r0, #0x18]
	cmp r0, #1
	bne _020212DC
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_020213C8
	adds r1, r0, #0
	b _020212DE
_020212DC:
	movs r1, #1
_020212DE:
	adds r0, r1, #0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020212E4: .4byte 0x021D21D8
_020212E8: .4byte 0x021D21A4
	thumb_func_end FUN_02021280

	thumb_func_start FUN_020212EC
FUN_020212EC: @ 0x020212EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r7, #0
	str r1, [sp]
	adds r0, r1, #0
	beq _02021322
	adds r4, r5, #0
	add r6, sp, #4
_020212FE:
	add r0, sp, #4
	adds r1, r5, #0
	blx FUN_020DA6E0
	ldrh r0, [r6]
	adds r7, r7, #1
	adds r5, #8
	strh r0, [r4]
	ldrh r0, [r6, #2]
	strh r0, [r4, #2]
	ldrh r0, [r6, #4]
	strh r0, [r4, #4]
	ldrh r0, [r6, #6]
	strh r0, [r4, #6]
	ldr r0, [sp]
	adds r4, #8
	cmp r7, r0
	blo _020212FE
_02021322:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020212EC

	thumb_func_start FUN_02021328
FUN_02021328: @ 0x02021328
	push {r3, lr}
	ldr r0, _02021354 @ =0x021D21D8
	ldrh r1, [r0, #0x1a]
	cmp r1, #0
	beq _02021350
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _02021350
	ldr r0, _02021358 @ =0x021D2198
	ldr r0, [r0, #8]
	lsrs r0, r0, #1
	bl FUN_02021384
	cmp r0, #1
	beq _0202134A
	bl FUN_0202551C
_0202134A:
	ldr r0, _02021354 @ =0x021D21D8
	movs r1, #0
	strh r1, [r0, #0x1a]
_02021350:
	pop {r3, pc}
	nop
_02021354: .4byte 0x021D21D8
_02021358: .4byte 0x021D2198
	thumb_func_end FUN_02021328

	thumb_func_start FUN_0202135C
FUN_0202135C: @ 0x0202135C
	push {r3, lr}
	ldr r0, _02021380 @ =0x021D21D8
	ldrh r1, [r0, #0x1a]
	cmp r1, #1
	beq _0202137E
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	beq _0202137E
	bl FUN_020211F4
	cmp r0, #1
	beq _02021378
	bl FUN_0202551C
_02021378:
	ldr r0, _02021380 @ =0x021D21D8
	movs r1, #1
	strh r1, [r0, #0x1a]
_0202137E:
	pop {r3, pc}
	.align 2, 0
_02021380: .4byte 0x021D21D8
	thumb_func_end FUN_0202135C

	thumb_func_start FUN_02021384
FUN_02021384: @ 0x02021384
	push {r3, r4, r5, r6, r7, lr}
	movs r5, #0
	lsls r0, r0, #0x10
	ldr r7, _020213C4 @ =0x021D21A4
	adds r6, r5, #0
	lsrs r4, r0, #0x10
_02021390:
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r7, #0
	movs r3, #9
	blx FUN_020DA208
	movs r0, #2
	blx FUN_020DA804
	movs r0, #2
	blx FUN_020DA81C
	cmp r0, #0
	beq _020213AE
	adds r5, r5, #1
_020213AE:
	cmp r0, #0
	beq _020213B6
	cmp r5, #5
	ble _02021390
_020213B6:
	cmp r5, #5
	ble _020213BE
	movs r0, #2
	pop {r3, r4, r5, r6, r7, pc}
_020213BE:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020213C4: .4byte 0x021D21A4
	thumb_func_end FUN_02021384

	thumb_func_start FUN_020213C8
FUN_020213C8: @ 0x020213C8
	push {r3, lr}
	cmp r0, #5
	bhi _020213F2
	adds r3, r0, r0
	add r3, pc
	ldrh r3, [r3, #6]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	add pc, r3
_020213DA: @ jump table
	.2byte _020213F2 - _020213DA - 2 @ case 0
	.2byte _020213E6 - _020213DA - 2 @ case 1
	.2byte _020213F2 - _020213DA - 2 @ case 2
	.2byte _020213E6 - _020213DA - 2 @ case 3
	.2byte _020213EC - _020213DA - 2 @ case 4
	.2byte _020213EC - _020213DA - 2 @ case 5
_020213E6:
	bl FUN_020213F8
	pop {r3, pc}
_020213EC:
	bl FUN_020214B0
	pop {r3, pc}
_020213F2:
	movs r0, #1
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020213C8

	thumb_func_start FUN_020213F8
FUN_020213F8: @ 0x020213F8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r5, _020214A8 @ =0x021D2198
	str r1, [sp, #4]
	ldr r1, [r5, #8]
	str r0, [sp]
	adds r7, r2, #0
	movs r4, #0
	cmp r1, #0
	bls _0202149E
_0202140C:
	ldr r0, [sp, #4]
	subs r0, r0, r1
	adds r0, r4, r0
	adds r0, r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	bpl _02021420
	adds r0, #9
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
_02021420:
	lsls r1, r0, #3
	ldr r0, _020214AC @ =0x021D2198
	adds r1, r0, r1
	ldrh r0, [r1, #0x10]
	cmp r0, #1
	bne _02021496
	ldrh r0, [r1, #0x12]
	cmp r0, #0
	bne _02021496
	ldr r2, [r5, #0x54]
	ldr r0, [r5]
	lsls r2, r2, #3
	adds r2, r0, r2
	adds r0, r2, #0
	subs r0, #8
	ldrh r3, [r1, #0xc]
	ldrh r0, [r0]
	cmp r0, r3
	blt _0202144A
	subs r3, r0, r3
	b _0202144C
_0202144A:
	subs r3, r3, r0
_0202144C:
	subs r6, r2, #6
	ldrh r0, [r1, #0xe]
	ldrh r6, [r6]
	cmp r6, r0
	blt _0202145A
	subs r0, r6, r0
	b _0202145C
_0202145A:
	subs r0, r0, r6
_0202145C:
	cmp r3, r7
	bhs _02021464
	cmp r0, r7
	blo _02021496
_02021464:
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	ldrh r0, [r1, #0xe]
	strh r0, [r2, #2]
	ldrh r0, [r1, #0x10]
	strh r0, [r2, #4]
	ldrh r0, [r1, #0x12]
	strh r0, [r2, #6]
	ldr r0, [r5, #0x54]
	adds r0, r0, #1
	str r0, [r5, #0x54]
	ldr r1, [r5, #4]
	cmp r0, r1
	blo _02021496
	ldr r2, [sp]
	cmp r2, #1
	bne _0202148E
	blx FUN_020F2BA4
	str r1, [r5, #0x54]
	b _02021496
_0202148E:
	movs r0, #0
	add sp, #8
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02021496:
	ldr r1, [r5, #8]
	adds r4, r4, #1
	cmp r4, r1
	blo _0202140C
_0202149E:
	ldr r0, _020214A8 @ =0x021D2198
	ldr r0, [r0, #0x54]
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020214A8: .4byte 0x021D2198
_020214AC: .4byte 0x021D2198
	thumb_func_end FUN_020213F8

	thumb_func_start FUN_020214B0
FUN_020214B0: @ 0x020214B0
	push {r3, r4, r5, r6, r7, lr}
	ldr r5, _02021520 @ =0x021D2198
	str r1, [sp]
	ldr r1, [r5, #8]
	adds r7, r0, #0
	movs r4, #0
	cmp r1, #0
	bls _02021518
_020214C0:
	ldr r0, [sp]
	subs r0, r0, r1
	adds r0, r4, r0
	adds r0, r0, #1
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	bpl _020214D4
	adds r1, #9
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
_020214D4:
	ldr r0, [r5, #0x54]
	lsls r1, r1, #3
	lsls r3, r0, #3
	ldr r0, _02021524 @ =0x021D2198
	ldr r6, [r5]
	adds r2, r0, r1
	ldrh r0, [r2, #0xc]
	adds r1, r6, r3
	strh r0, [r6, r3]
	ldrh r0, [r2, #0xe]
	strh r0, [r1, #2]
	ldrh r0, [r2, #0x10]
	strh r0, [r1, #4]
	ldrh r0, [r2, #0x12]
	strh r0, [r1, #6]
	ldr r0, [r5, #0x54]
	adds r0, r0, #1
	str r0, [r5, #0x54]
	ldr r1, [r5, #4]
	cmp r0, r1
	blo _02021510
	cmp r7, #4
	bne _0202150A
	blx FUN_020F2BA4
	str r1, [r5, #0x54]
	b _02021510
_0202150A:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02021510:
	ldr r1, [r5, #8]
	adds r4, r4, #1
	cmp r4, r1
	blo _020214C0
_02021518:
	ldr r0, _02021520 @ =0x021D2198
	ldr r0, [r0, #0x54]
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021520: .4byte 0x021D2198
_02021524: .4byte 0x021D2198
	thumb_func_end FUN_020214B0

	thumb_func_start FUN_02021528
FUN_02021528: @ 0x02021528
	movs r2, #0
	strh r2, [r0]
	adds r1, r2, #0
_0202152E:
	strh r1, [r0, #8]
	strh r1, [r0, #6]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	adds r2, r2, #1
	adds r0, #8
	cmp r2, #8
	blt _0202152E
	bx lr
	thumb_func_end FUN_02021528

	thumb_func_start FUN_02021540
FUN_02021540: @ 0x02021540
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_02021528
	ldr r0, _02021598 @ =0x021D2198
	movs r6, #0
	ldr r1, [r0, #8]
	cmp r1, #0
	bls _02021596
	ldr r2, _0202159C @ =0x021D2198
_02021556:
	subs r1, r4, r1
	adds r1, r6, r1
	adds r1, r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bpl _02021568
	adds r1, #9
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
_02021568:
	lsls r1, r1, #3
	adds r3, r2, r1
	ldrh r1, [r3, #0x12]
	cmp r1, #0
	bne _0202158E
	ldrh r1, [r5]
	ldrh r7, [r3, #0xc]
	lsls r1, r1, #3
	adds r1, r5, r1
	strh r7, [r1, #2]
	ldrh r7, [r3, #0xe]
	strh r7, [r1, #4]
	ldrh r7, [r3, #0x10]
	strh r7, [r1, #6]
	ldrh r3, [r3, #0x12]
	strh r3, [r1, #8]
	ldrh r1, [r5]
	adds r1, r1, #1
	strh r1, [r5]
_0202158E:
	ldr r1, [r0, #8]
	adds r6, r6, #1
	cmp r6, r1
	blo _02021556
_02021596:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02021598: .4byte 0x021D2198
_0202159C: .4byte 0x021D2198
	thumb_func_end FUN_02021540

	thumb_func_start FUN_020215A0
FUN_020215A0: @ 0x020215A0
	ldr r1, _020215B4 @ =0x04001000
	ldr r2, [r1]
	ldr r1, _020215B8 @ =0x00300010
	lsls r3, r1, #0x16
	ldr r3, [r3]
	ands r2, r1
	ands r1, r3
	ldr r3, _020215BC @ =FUN_020215C0
	bx r3
	nop
_020215B4: .4byte 0x04001000
_020215B8: .4byte 0x00300010
_020215BC: .4byte FUN_020215C0
	thumb_func_end FUN_020215A0

	thumb_func_start FUN_020215C0
FUN_020215C0: @ 0x020215C0
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _02021680 @ =0x021D21F4
	str r1, [sp]
	ldr r0, [r0]
	str r2, [sp, #4]
	cmp r0, #0
	bne _0202167A
	ldr r0, [r5, #0xc]
	movs r1, #0x3c
	bl FUN_0201AA8C
	adds r1, r0, #0
	ldr r0, _02021680 @ =0x021D21F4
	movs r2, #0x3c
	str r1, [r0]
	movs r0, #0
	blx FUN_020D47EC
	ldr r1, _02021680 @ =0x021D21F4
	ldr r2, [r5]
	ldr r0, [r1]
	str r2, [r0, #4]
	ldr r1, [r1]
	ldr r0, [r5, #0xc]
	ldr r2, [r1, #4]
	movs r1, #0x54
	muls r1, r2, r1
	bl FUN_0201AA8C
	ldr r7, _02021680 @ =0x021D21F4
	movs r6, #0
	ldr r1, [r7]
	str r0, [r1]
	ldr r0, [r5]
	cmp r0, #0
	ble _02021622
	adds r4, r6, #0
_0202160E:
	ldr r0, [r7]
	ldr r0, [r0]
	adds r0, r0, r4
	bl FUN_02021C08
	ldr r0, [r5]
	adds r6, r6, #1
	adds r4, #0x54
	cmp r6, r0
	blt _0202160E
_02021622:
	ldr r0, [sp]
	bl FUN_02022448
	ldr r1, _02021680 @ =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x2c]
	ldr r0, [sp, #4]
	bl FUN_02022448
	ldr r2, _02021680 @ =0x021D21F4
	movs r3, #1
	ldr r1, [r2]
	lsls r3, r3, #0x1a
	str r0, [r1, #0x30]
	ldr r0, [r3]
	ldr r1, _02021684 @ =0xFFCFFFEF
	adds r4, r0, #0
	ldr r0, [sp]
	ands r4, r1
	orrs r0, r4
	str r0, [r3]
	ldr r3, _02021688 @ =0x04001000
	ldr r0, [r3]
	ands r1, r0
	ldr r0, [sp, #4]
	orrs r0, r1
	str r0, [r3]
	ldr r1, [r2]
	ldr r0, [r5, #4]
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	ldr r1, _02021680 @ =0x021D21F4
	adds r4, r0, #0
	ldr r1, [r1]
	ldr r0, [r5, #8]
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	adds r1, r0, #0
	ldr r2, [r5, #0xc]
	adds r0, r4, #0
	bl FUN_020221D0
_0202167A:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021680: .4byte 0x021D21F4
_02021684: .4byte 0xFFCFFFEF
_02021688: .4byte 0x04001000
	thumb_func_end FUN_020215C0

	thumb_func_start FUN_0202168C
FUN_0202168C: @ 0x0202168C
	push {r3, lr}
	ldr r0, _020216C4 @ =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	beq _020216C2
	ldr r0, [r0, #0x34]
	bl FUN_02022238
	ldr r0, _020216C4 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl FUN_02022238
	bl FUN_020218D4
	ldr r0, _020216C4 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _020216C4 @ =0x021D21F4
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _020216C4 @ =0x021D21F4
	movs r1, #0
	str r1, [r0]
_020216C2:
	pop {r3, pc}
	.align 2, 0
_020216C4: .4byte 0x021D21F4
	thumb_func_end FUN_0202168C

	thumb_func_start FUN_020216C8
FUN_020216C8: @ 0x020216C8
	push {r3, lr}
	ldr r0, _020216F0 @ =0x021D21F4
	movs r2, #0
	ldr r1, [r0]
	str r2, [r1, #0xc]
	ldr r1, [r0]
	str r2, [r1, #0x10]
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	bl FUN_02022278
	ldr r0, _020216F0 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl FUN_02022278
	bl FUN_02022060
	pop {r3, pc}
	nop
_020216F0: .4byte 0x021D21F4
	thumb_func_end FUN_020216C8

	thumb_func_start FUN_020216F4
FUN_020216F4: @ 0x020216F4
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r3, r1, #0
	cmp r2, #1
	add r0, sp, #4
	bne _0202172A
	str r0, [sp]
	ldr r0, _02021754 @ =0x021D21F4
	adds r2, r3, #0
	ldr r0, [r0]
	adds r1, r4, #0
	ldr r0, [r0, #0x1c]
	add r3, sp, #8
	bl FUN_0202256C
	ldr r3, [sp, #4]
	cmp r3, #0
	ble _02021750
	movs r2, #0
	str r2, [sp]
	ldr r1, [sp, #8]
	movs r0, #1
	bl FUN_02021EC0
	add sp, #0xc
	pop {r3, r4, pc}
_0202172A:
	str r0, [sp]
	ldr r0, _02021754 @ =0x021D21F4
	adds r2, r3, #0
	ldr r0, [r0]
	adds r1, r4, #0
	ldr r0, [r0, #0x20]
	add r3, sp, #8
	bl FUN_0202256C
	ldr r0, [sp, #4]
	cmp r0, #0
	ble _02021750
	str r0, [sp]
	movs r1, #0
	ldr r2, [sp, #8]
	movs r0, #2
	adds r3, r1, #0
	bl FUN_02021EC0
_02021750:
	add sp, #0xc
	pop {r3, r4, pc}
	.align 2, 0
_02021754: .4byte 0x021D21F4
	thumb_func_end FUN_020216F4

	thumb_func_start FUN_02021758
FUN_02021758: @ 0x02021758
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	bl FUN_0202180C
	cmp r0, #1
	bne _0202176A
	bl FUN_0202551C
_0202176A:
	bl FUN_02022024
	adds r4, r0, #0
	bne _0202177A
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202177A:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02021C2C
	cmp r0, #0
	bne _0202178A
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202178A:
	adds r0, r4, #0
	bl FUN_02021C9C
	cmp r0, #0
	bne _0202179E
	ldr r0, [r4, #0xc]
	bl FUN_02021884
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202179E:
	ldr r0, _020217AC @ =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	adds r0, r0, #1
	str r0, [r1, #8]
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
_020217AC: .4byte 0x021D21F4
	thumb_func_end FUN_02021758

	thumb_func_start FUN_020217B0
FUN_020217B0: @ 0x020217B0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	bl FUN_0202180C
	cmp r0, #1
	bne _020217C2
	bl FUN_0202551C
_020217C2:
	bl FUN_02022024
	adds r4, r0, #0
	bne _020217D2
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_020217D2:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02021C2C
	cmp r0, #0
	bne _020217E2
	movs r0, #0
	pop {r3, r4, r5, pc}
_020217E2:
	movs r0, #1
	str r0, [r4, #0x40]
	adds r0, r4, #0
	bl FUN_02021C9C
	cmp r0, #0
	bne _020217FA
	ldr r0, [r4, #0xc]
	bl FUN_02021884
	movs r0, #0
	pop {r3, r4, r5, pc}
_020217FA:
	ldr r0, _02021808 @ =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	adds r0, r0, #1
	str r0, [r1, #8]
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
_02021808: .4byte 0x021D21F4
	thumb_func_end FUN_020217B0

	thumb_func_start FUN_0202180C
FUN_0202180C: @ 0x0202180C
	push {r3, r4}
	ldr r1, _02021838 @ =0x021D21F4
	movs r2, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _02021832
	ldr r3, [r4]
_0202181C:
	ldr r1, [r3, #0xc]
	cmp r0, r1
	bne _02021828
	movs r0, #1
	pop {r3, r4}
	bx lr
_02021828:
	ldr r1, [r4, #4]
	adds r2, r2, #1
	adds r3, #0x54
	cmp r2, r1
	blt _0202181C
_02021832:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_02021838: .4byte 0x021D21F4
	thumb_func_end FUN_0202180C

	thumb_func_start FUN_0202183C
FUN_0202183C: @ 0x0202183C
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bne _02021848
	bl FUN_0202551C
_02021848:
	adds r0, r4, #0
	bl FUN_02021D70
	adds r4, r0, #0
	bne _02021856
	bl FUN_0202551C
_02021856:
	str r5, [r4]
	ldr r1, [r4, #4]
	movs r0, #1
	tst r0, r1
	beq _0202186C
	ldr r1, [r4, #0x34]
	ldr r2, [r5, #0x14]
	ldr r3, [r5, #0x10]
	movs r0, #0x13
	bl FUN_020205D8
_0202186C:
	ldr r1, [r4, #4]
	movs r0, #2
	tst r0, r1
	beq _02021880
	ldr r1, [r4, #0x38]
	ldr r2, [r5, #0x14]
	ldr r3, [r5, #0x10]
	movs r0, #0x23
	bl FUN_020205D8
_02021880:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0202183C

	thumb_func_start FUN_02021884
FUN_02021884: @ 0x02021884
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r5, #1
	movs r7, #0
_0202188C:
	adds r0, r6, #0
	bl FUN_02021D70
	adds r4, r0, #0
	bne _0202189A
	bl FUN_0202551C
_0202189A:
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #4
	bne _020218AE
	adds r0, r4, #0
	adds r0, #0x10
	bl FUN_02021A50
	b _020218B0
_020218AE:
	adds r5, r7, #0
_020218B0:
	cmp r5, #0
	bne _0202188C
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	beq _020218CE
	adds r0, r4, #0
	bl FUN_02021D58
	ldr r0, _020218D0 @ =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #8]
	subs r0, r0, #1
	str r0, [r1, #8]
_020218CE:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_020218D0: .4byte 0x021D21F4
	thumb_func_end FUN_02021884

	thumb_func_start FUN_020218D4
FUN_020218D4: @ 0x020218D4
	push {r4, r5, r6, lr}
	ldr r6, _0202190C @ =0x021D21F4
	movs r4, #0
	ldr r1, [r6]
	ldr r0, [r1, #4]
	cmp r0, #0
	ble _0202190A
	adds r5, r4, #0
_020218E4:
	ldr r1, [r1]
	adds r0, r1, r5
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	beq _020218FE
	adds r0, r1, r5
	bl FUN_02021D58
	ldr r1, [r6]
	ldr r0, [r1, #8]
	subs r0, r0, #1
	str r0, [r1, #8]
_020218FE:
	ldr r1, [r6]
	adds r4, r4, #1
	ldr r0, [r1, #4]
	adds r5, #0x54
	cmp r4, r0
	blt _020218E4
_0202190A:
	pop {r4, r5, r6, pc}
	.align 2, 0
_0202190C: .4byte 0x021D21F4
	thumb_func_end FUN_020218D4

	thumb_func_start FUN_02021910
FUN_02021910: @ 0x02021910
	push {r4, lr}
	bl FUN_02021D70
	adds r4, r0, #0
	bne _0202191E
	bl FUN_0202551C
_0202191E:
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _0202192C
	movs r0, #0
	pop {r4, pc}
_0202192C:
	adds r4, #0x10
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02021910

	thumb_func_start FUN_02021934
FUN_02021934: @ 0x02021934
	push {r3, r4, r5, lr}
	sub sp, #0x18
	adds r5, r1, #0
	bl FUN_02021D70
	adds r4, r0, #0
	bne _02021946
	bl FUN_0202551C
_02021946:
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _02021956
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, pc}
_02021956:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r0, [r4, #4]
	add r1, sp, #0x14
	add r2, sp, #0x10
	adds r3, r5, #0
	bl FUN_02021DE4
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #3
	bne _0202197A
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202197A:
	adds r0, r4, #0
	movs r1, #3
	adds r0, #0x3c
	strb r1, [r0]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	adds r0, r4, #0
	bl FUN_02021E90
	movs r0, #1
	str r0, [r4, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r4, #0x50]
	adds r0, r4, #0
	bl FUN_02021FB0
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl FUN_02021EC0
	adds r4, #0x10
	adds r0, r4, #0
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02021934

	thumb_func_start FUN_020219B8
FUN_020219B8: @ 0x020219B8
	push {r3, r4, r5, lr}
	sub sp, #0x18
	bl FUN_02021C50
	adds r4, r0, #0
	bne _020219C8
	bl FUN_0202551C
_020219C8:
	bl FUN_02022024
	adds r5, r0, #0
	bne _020219D4
	bl FUN_0202551C
_020219D4:
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #3
	beq _020219E4
	add sp, #0x18
	movs r0, #0
	pop {r3, r4, r5, pc}
_020219E4:
	adds r3, r5, #0
	movs r2, #0xa
_020219E8:
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _020219E8
	ldr r0, [r4]
	movs r1, #4
	str r0, [r3]
	adds r0, r5, #0
	adds r0, #0x3c
	strb r1, [r0]
	ldr r0, [r5, #4]
	movs r1, #1
	tst r1, r0
	beq _02021A08
	ldr r3, [r5, #0x4c]
	b _02021A0A
_02021A08:
	ldr r3, [r5, #0x50]
_02021A0A:
	add r1, sp, #0xc
	str r1, [sp]
	add r1, sp, #8
	str r1, [sp, #4]
	add r1, sp, #0x14
	add r2, sp, #0x10
	bl FUN_02021DE4
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	adds r0, r5, #0
	bl FUN_02021E90
	movs r0, #1
	str r0, [r5, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r5, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r5, #0x50]
	adds r0, r5, #0
	bl FUN_02021FB0
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r5, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl FUN_02021EC0
	adds r5, #0x10
	adds r0, r5, #0
	add sp, #0x18
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020219B8

	thumb_func_start FUN_02021A50
FUN_02021A50: @ 0x02021A50
	push {r4, r5, r6, lr}
	ldr r2, _02021AC4 @ =0x021D21F4
	movs r1, #0
	ldr r5, [r2]
	ldr r4, [r5, #4]
	cmp r4, #0
	ble _02021A8E
	ldr r2, [r5]
	adds r3, r1, #0
_02021A62:
	adds r6, r2, #0
	adds r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #3
	beq _02021A78
	ldr r6, [r5]
	adds r6, r6, r3
	adds r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #4
	bne _02021A82
_02021A78:
	ldr r6, [r5]
	adds r6, r6, r3
	adds r6, #0x10
	cmp r6, r0
	beq _02021A8E
_02021A82:
	ldr r6, [r5, #4]
	adds r1, r1, #1
	adds r2, #0x54
	adds r3, #0x54
	cmp r1, r6
	blt _02021A62
_02021A8E:
	cmp r1, r4
	bge _02021AC2
	movs r0, #0x54
	adds r4, r1, #0
	muls r4, r0, r4
	ldr r0, [r5]
	adds r0, r0, r4
	bl FUN_020223C4
	ldr r0, _02021AC4 @ =0x021D21F4
	ldr r1, [r0]
	ldr r2, [r1]
	adds r2, #0x3c
	ldrb r1, [r2, r4]
	cmp r1, #3
	bne _02021AB4
	movs r0, #2
	strb r0, [r2, r4]
	pop {r4, r5, r6, pc}
_02021AB4:
	movs r1, #0
	strb r1, [r2, r4]
	ldr r0, [r0]
	ldr r0, [r0]
	adds r0, r0, r4
	bl FUN_02021C08
_02021AC2:
	pop {r4, r5, r6, pc}
	.align 2, 0
_02021AC4: .4byte 0x021D21F4
	thumb_func_end FUN_02021A50

	thumb_func_start FUN_02021AC8
FUN_02021AC8: @ 0x02021AC8
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r6, r0, #0
	adds r5, r2, #0
	adds r4, r3, #0
	cmp r1, #0
	bne _02021B02
	adds r1, r5, #0
	add r2, sp, #0x14
	add r3, sp, #0x10
	bl FUN_020224C0
	adds r7, r0, #0
	beq _02021B52
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_02022510
	strh r5, [r4, #8]
	str r6, [r4]
	cmp r5, #1
	bne _02021AF8
	ldr r0, [sp, #0x14]
	b _02021AFA
_02021AF8:
	ldr r0, [sp, #0x10]
_02021AFA:
	str r0, [r4, #4]
	movs r0, #0
	strh r0, [r4, #0xa]
	b _02021B52
_02021B02:
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	adds r0, r5, #0
	add r1, sp, #0x14
	add r2, sp, #0x10
	adds r3, r6, #0
	bl FUN_02021DE4
	adds r7, r0, #0
	beq _02021B52
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	adds r0, r5, #0
	bl FUN_02021EC0
	strh r5, [r4, #8]
	cmp r5, #1
	bne _02021B3E
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r0, _02021B58 @ =0x021D21F4
	ldr r1, [sp, #0x14]
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	b _02021B4A
_02021B3E:
	ldr r0, [sp, #8]
	str r0, [r4]
	ldr r0, _02021B58 @ =0x021D21F4
	ldr r1, [sp, #0x10]
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
_02021B4A:
	adds r0, r1, r0
	str r0, [r4, #4]
	movs r0, #1
	strh r0, [r4, #0xa]
_02021B52:
	adds r0, r7, #0
	add sp, #0x18
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02021B58: .4byte 0x021D21F4
	thumb_func_end FUN_02021AC8

	thumb_func_start FUN_02021B5C
FUN_02021B5C: @ 0x02021B5C
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	beq _02021BCA
	ldrh r1, [r4, #8]
	movs r0, #1
	tst r0, r1
	beq _02021B98
	ldr r1, _02021BCC @ =0x021D21F4
	ldr r0, [r4]
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	adds r5, r0, #0
	ldr r0, _02021BCC @ =0x021D21F4
	ldr r1, [r4, #4]
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	subs r0, r1, r0
	ldr r1, [r2, #0x2c]
	bl FUN_020224A8
	ldr r2, _02021BCC @ =0x021D21F4
	adds r1, r5, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x34]
	bl FUN_02022374
_02021B98:
	ldrh r1, [r4, #8]
	movs r0, #2
	tst r0, r1
	beq _02021BCA
	ldr r1, _02021BCC @ =0x021D21F4
	ldr r0, [r4]
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	adds r5, r0, #0
	ldr r0, _02021BCC @ =0x021D21F4
	ldr r1, [r4, #4]
	ldr r2, [r0]
	ldr r0, [r2, #0x20]
	subs r0, r1, r0
	ldr r1, [r2, #0x30]
	bl FUN_020224A8
	ldr r2, _02021BCC @ =0x021D21F4
	adds r1, r5, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x38]
	bl FUN_02022374
_02021BCA:
	pop {r3, r4, r5, pc}
	.align 2, 0
_02021BCC: .4byte 0x021D21F4
	thumb_func_end FUN_02021B5C

	thumb_func_start FUN_02021BD0
FUN_02021BD0: @ 0x02021BD0
	push {r3, lr}
	ldr r0, _02021BE8 @ =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	bne _02021BDE
	bl FUN_0202551C
_02021BDE:
	ldr r1, _02021BE8 @ =0x021D21F4
	movs r2, #0
	ldr r0, [r1]
	str r2, [r1]
	pop {r3, pc}
	.align 2, 0
_02021BE8: .4byte 0x021D21F4
	thumb_func_end FUN_02021BD0

	thumb_func_start FUN_02021BEC
FUN_02021BEC: @ 0x02021BEC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _02021C04 @ =0x021D21F4
	ldr r0, [r0]
	cmp r0, #0
	beq _02021BFC
	bl FUN_0202551C
_02021BFC:
	ldr r0, _02021C04 @ =0x021D21F4
	str r4, [r0]
	pop {r4, pc}
	nop
_02021C04: .4byte 0x021D21F4
	thumb_func_end FUN_02021BEC

	thumb_func_start FUN_02021C08
FUN_02021C08: @ 0x02021C08
	movs r2, #0
	str r2, [r0]
	str r2, [r0, #4]
	strb r2, [r0, #8]
	subs r1, r2, #1
	str r1, [r0, #0xc]
	str r2, [r0, #0x34]
	adds r1, r0, #0
	str r2, [r0, #0x38]
	adds r1, #0x3c
	strb r2, [r1]
	str r2, [r0, #0x40]
	ldr r3, _02021C28 @ =FUN_020B8008
	adds r0, #0x10
	bx r3
	nop
_02021C28: .4byte FUN_020B8008
	thumb_func_end FUN_02021C08

	thumb_func_start FUN_02021C2C
FUN_02021C2C: @ 0x02021C2C
	ldr r2, [r0]
	str r2, [r1]
	ldr r2, [r0, #8]
	str r2, [r1, #0xc]
	ldr r2, [r0, #4]
	str r2, [r1, #4]
	ldr r2, [r1]
	ldr r2, [r2, #0xc]
	lsrs r2, r2, #8
	strb r2, [r1, #8]
	ldr r0, [r0, #0xc]
	str r0, [r1, #0x44]
	movs r0, #0
	str r0, [r1, #0x48]
	str r0, [r1, #0x4c]
	str r0, [r1, #0x50]
	movs r0, #1
	bx lr
	thumb_func_end FUN_02021C2C

	thumb_func_start FUN_02021C50
FUN_02021C50: @ 0x02021C50
	push {r3, r4, r5, r6}
	ldr r2, _02021C98 @ =0x021D21F4
	movs r1, #0
	ldr r5, [r2]
	ldr r4, [r5, #4]
	cmp r4, #0
	ble _02021C82
	ldr r2, [r5]
	adds r3, r1, #0
_02021C62:
	adds r6, r2, #0
	adds r6, #0x3c
	ldrb r6, [r6]
	cmp r6, #0
	beq _02021C76
	ldr r6, [r5]
	adds r6, r6, r3
	adds r6, #0x10
	cmp r6, r0
	beq _02021C82
_02021C76:
	ldr r6, [r5, #4]
	adds r1, r1, #1
	adds r2, #0x54
	adds r3, #0x54
	cmp r1, r6
	blt _02021C62
_02021C82:
	cmp r1, r4
	blt _02021C8C
	movs r0, #0
	pop {r3, r4, r5, r6}
	bx lr
_02021C8C:
	movs r0, #0x54
	ldr r2, [r5]
	muls r0, r1, r0
	adds r0, r2, r0
	pop {r3, r4, r5, r6}
	bx lr
	.align 2, 0
_02021C98: .4byte 0x021D21F4
	thumb_func_end FUN_02021C50

	thumb_func_start FUN_02021C9C
FUN_02021C9C: @ 0x02021C9C
	push {r3, lr}
	ldrb r1, [r0, #8]
	movs r2, #1
	cmp r1, #0
	beq _02021CAE
	movs r1, #2
	adds r0, #0x3c
	strb r1, [r0]
	b _02021CC8
_02021CAE:
	adds r1, r0, #0
	adds r1, #0x3c
	strb r2, [r1]
	ldr r1, [r0, #0x44]
	cmp r1, #0
	bne _02021CC2
	bl FUN_02021CCC
	adds r2, r0, #0
	b _02021CC8
_02021CC2:
	bl FUN_02021D00
	adds r2, r0, #0
_02021CC8:
	adds r0, r2, #0
	pop {r3, pc}
	thumb_func_end FUN_02021C9C

	thumb_func_start FUN_02021CCC
FUN_02021CCC: @ 0x02021CCC
	push {r3, r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r0, [r0, #0x10]
	add r2, sp, #4
	add r3, sp, #0
	bl FUN_020224C0
	adds r4, r0, #0
	beq _02021CF8
	ldr r1, [sp, #4]
	ldr r2, [sp]
	adds r0, r5, #0
	bl FUN_02021DD0
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r0, [r0, #0x10]
	bl FUN_02022510
_02021CF8:
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02021CCC

	thumb_func_start FUN_02021D00
FUN_02021D00: @ 0x02021D00
	push {r4, lr}
	sub sp, #0x18
	adds r4, r0, #0
	add r0, sp, #0xc
	str r0, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	ldr r3, [r4]
	ldr r0, [r4, #4]
	ldr r3, [r3, #0x10]
	add r1, sp, #0x14
	add r2, sp, #0x10
	bl FUN_02021DE4
	cmp r0, #0
	bne _02021D26
	add sp, #0x18
	movs r0, #0
	pop {r4, pc}
_02021D26:
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	adds r0, r4, #0
	bl FUN_02021E90
	movs r0, #1
	str r0, [r4, #0x48]
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x4c]
	ldr r0, [sp, #8]
	str r0, [r4, #0x50]
	adds r0, r4, #0
	bl FUN_02021F28
	ldr r0, [sp, #8]
	str r0, [sp]
	ldr r0, [r4, #4]
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #0xc]
	bl FUN_02021EC0
	movs r0, #1
	add sp, #0x18
	pop {r4, pc}
	thumb_func_end FUN_02021D00

	thumb_func_start FUN_02021D58
FUN_02021D58: @ 0x02021D58
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x48]
	cmp r1, #0
	beq _02021D66
	bl FUN_020223C4
_02021D66:
	adds r0, r4, #0
	bl FUN_02021C08
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02021D58

	thumb_func_start FUN_02021D70
FUN_02021D70: @ 0x02021D70
	push {r4, r5}
	ldr r2, _02021DA4 @ =0x021D21F4
	movs r1, #0
	ldr r5, [r2]
	ldr r2, [r5, #4]
	cmp r2, #0
	ble _02021D9C
	ldr r2, [r5]
	adds r4, r2, #0
_02021D82:
	ldr r3, [r4, #0xc]
	cmp r0, r3
	bne _02021D92
	movs r0, #0x54
	muls r0, r1, r0
	adds r0, r2, r0
	pop {r4, r5}
	bx lr
_02021D92:
	ldr r3, [r5, #4]
	adds r1, r1, #1
	adds r4, #0x54
	cmp r1, r3
	blt _02021D82
_02021D9C:
	movs r0, #0
	pop {r4, r5}
	bx lr
	nop
_02021DA4: .4byte 0x021D21F4
	thumb_func_end FUN_02021D70

	thumb_func_start FUN_02021DA8
FUN_02021DA8: @ 0x02021DA8
	cmp r1, #1
	bne _02021DB4
	movs r1, #1
	lsls r1, r1, #0x1a
	ldr r2, [r1]
	b _02021DB8
_02021DB4:
	ldr r1, _02021DC8 @ =0x04001000
	ldr r2, [r1]
_02021DB8:
	ldr r1, _02021DCC @ =0x00300010
	ands r2, r1
	ldr r1, [r0]
	str r2, [r1, #8]
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bx lr
	nop
_02021DC8: .4byte 0x04001000
_02021DCC: .4byte 0x00300010
	thumb_func_end FUN_02021DA8

	thumb_func_start FUN_02021DD0
FUN_02021DD0: @ 0x02021DD0
	push {r3, lr}
	str r1, [r0, #0x34]
	str r2, [r0, #0x38]
	ldrb r1, [r0, #8]
	cmp r1, #0
	bne _02021DE0
	bl FUN_02021F28
_02021DE0:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02021DD0

	thumb_func_start FUN_02021DE4
FUN_02021DE4: @ 0x02021DE4
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x1c]
	adds r6, r2, #0
	str r0, [sp, #0x1c]
	movs r2, #1
	adds r0, r5, #0
	adds r4, r1, #0
	str r3, [sp]
	ldr r7, [sp, #0x18]
	tst r0, r2
	beq _02021E3C
	ldr r1, _02021E8C @ =0x021D21F4
	adds r0, r3, #0
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl FUN_02022488
	ldr r1, _02021E8C @ =0x021D21F4
	str r0, [r7]
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x34]
	bl FUN_020222EC
	movs r1, #0
	mvns r1, r1
	str r0, [r4]
	cmp r0, r1
	bne _02021E30
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02021E30:
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl FUN_020224B8
	str r0, [r4]
_02021E3C:
	movs r0, #2
	tst r0, r5
	beq _02021E86
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r0, [sp]
	ldr r1, [r1]
	movs r2, #1
	ldr r1, [r1, #0x30]
	bl FUN_02022488
	ldr r1, [sp, #0x1c]
	str r0, [r1]
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x38]
	bl FUN_020222EC
	movs r1, #0
	mvns r1, r1
	str r0, [r6]
	cmp r0, r1
	bne _02021E7A
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02021E7A:
	ldr r1, _02021E8C @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl FUN_020224B8
	str r0, [r6]
_02021E86:
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021E8C: .4byte 0x021D21F4
	thumb_func_end FUN_02021DE4

	thumb_func_start FUN_02021E90
FUN_02021E90: @ 0x02021E90
	push {r3, r4}
	ldr r4, [r0, #4]
	movs r3, #1
	tst r3, r4
	beq _02021EA4
	ldr r3, _02021EBC @ =0x021D21F4
	ldr r3, [r3]
	ldr r3, [r3, #0x1c]
	adds r1, r1, r3
	str r1, [r0, #0x34]
_02021EA4:
	ldr r3, [r0, #4]
	movs r1, #2
	tst r1, r3
	beq _02021EB6
	ldr r1, _02021EBC @ =0x021D21F4
	ldr r1, [r1]
	ldr r1, [r1, #0x20]
	adds r1, r2, r1
	str r1, [r0, #0x38]
_02021EB6:
	pop {r3, r4}
	bx lr
	nop
_02021EBC: .4byte 0x021D21F4
	thumb_func_end FUN_02021E90

	thumb_func_start FUN_02021EC0
FUN_02021EC0: @ 0x02021EC0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #1
	adds r4, r1, #0
	adds r6, r2, #0
	tst r0, r5
	beq _02021EF4
	ldr r1, _02021F24 @ =0x021D21F4
	adds r0, r3, #0
	ldr r1, [r1]
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	ldr r1, _02021F24 @ =0x021D21F4
	adds r7, r0, #0
	ldr r1, [r1]
	adds r0, r4, #0
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	ldr r2, _02021F24 @ =0x021D21F4
	adds r1, r7, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x34]
	bl FUN_02022290
_02021EF4:
	movs r0, #2
	tst r0, r5
	beq _02021F20
	ldr r1, _02021F24 @ =0x021D21F4
	ldr r0, [sp, #0x18]
	ldr r1, [r1]
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	ldr r1, _02021F24 @ =0x021D21F4
	adds r4, r0, #0
	ldr r1, [r1]
	adds r0, r6, #0
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	ldr r2, _02021F24 @ =0x021D21F4
	adds r1, r4, #0
	ldr r2, [r2]
	ldr r2, [r2, #0x38]
	bl FUN_02022290
_02021F20:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02021F24: .4byte 0x021D21F4
	thumb_func_end FUN_02021EC0

	thumb_func_start FUN_02021F28
FUN_02021F28: @ 0x02021F28
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x10
	blx FUN_020B8008
	ldr r1, [r4, #4]
	cmp r1, #3
	beq _02021F40
	adds r0, r4, #0
	bl FUN_02021F54
	pop {r4, pc}
_02021F40:
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02021F54
	adds r0, r4, #0
	movs r1, #2
	bl FUN_02021F54
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02021F28

	thumb_func_start FUN_02021F54
FUN_02021F54: @ 0x02021F54
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r2, [r5, #0x40]
	adds r4, r1, #0
	cmp r2, #0
	beq _02021F66
	bl FUN_02021DA8
	b _02021F68
_02021F66:
	adds r0, r4, #0
_02021F68:
	cmp r4, #1
	bne _02021F76
	movs r2, #1
	lsls r2, r2, #0x1a
	ldr r1, [r5, #0x34]
	ldr r2, [r2]
	b _02021F7C
_02021F76:
	ldr r2, _02021FAC @ =0x04001000
	ldr r1, [r5, #0x38]
	ldr r2, [r2]
_02021F7C:
	cmp r0, #0
	ldr r0, [r5]
	bne _02021F8E
	adds r5, #0x10
	adds r2, r4, #0
	adds r3, r5, #0
	blx FUN_020B82CC
	b _02021F98
_02021F8E:
	adds r5, #0x10
	adds r2, r4, #0
	adds r3, r5, #0
	blx FUN_020B80A0
_02021F98:
	cmp r4, #1
	bne _02021FA4
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
_02021FA4:
	ldr r0, _02021FAC @ =0x04001000
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
	nop
_02021FAC: .4byte 0x04001000
	thumb_func_end FUN_02021F54

	thumb_func_start FUN_02021FB0
FUN_02021FB0: @ 0x02021FB0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x10
	blx FUN_020B8008
	ldr r1, [r4, #4]
	cmp r1, #3
	beq _02021FC8
	adds r0, r4, #0
	bl FUN_02021FDC
	pop {r4, pc}
_02021FC8:
	adds r0, r4, #0
	movs r1, #1
	bl FUN_02021FDC
	adds r0, r4, #0
	movs r1, #2
	bl FUN_02021FDC
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02021FB0

	thumb_func_start FUN_02021FDC
FUN_02021FDC: @ 0x02021FDC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r2, [r5, #0x40]
	adds r4, r1, #0
	cmp r2, #0
	beq _02021FEC
	bl FUN_02021DA8
_02021FEC:
	cmp r4, #1
	bne _02021FFA
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r1, [r5, #0x34]
	ldr r0, [r0]
	b _02022000
_02021FFA:
	ldr r0, _02022020 @ =0x04001000
	ldr r1, [r5, #0x38]
	ldr r0, [r0]
_02022000:
	ldr r0, [r5]
	adds r5, #0x10
	adds r2, r4, #0
	adds r3, r5, #0
	blx FUN_020B84F8
	cmp r4, #1
	bne _02022018
	movs r0, #1
	lsls r0, r0, #0x1a
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
_02022018:
	ldr r0, _02022020 @ =0x04001000
	ldr r0, [r0]
	pop {r3, r4, r5, pc}
	nop
_02022020: .4byte 0x04001000
	thumb_func_end FUN_02021FDC

	thumb_func_start FUN_02022024
FUN_02022024: @ 0x02022024
	push {r3, r4}
	ldr r1, _0202205C @ =0x021D21F4
	movs r0, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _02022054
	ldr r1, [r4]
	adds r3, r1, #0
_02022036:
	adds r2, r3, #0
	adds r2, #0x3c
	ldrb r2, [r2]
	cmp r2, #0
	bne _0202204A
	movs r2, #0x54
	muls r2, r0, r2
	adds r0, r1, r2
	pop {r3, r4}
	bx lr
_0202204A:
	ldr r2, [r4, #4]
	adds r0, r0, #1
	adds r3, #0x54
	cmp r0, r2
	blt _02022036
_02022054:
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_0202205C: .4byte 0x021D21F4
	thumb_func_end FUN_02022024

	thumb_func_start FUN_02022060
FUN_02022060: @ 0x02022060
	push {r3, lr}
	blx FUN_020CEBEC
	cmp r0, #0x30
	bgt _02022090
	bge _020220D8
	cmp r0, #0x10
	bgt _0202208A
	bge _020220CC
	cmp r0, #3
	bhi _02022108
	adds r1, r0, r0
	add r1, pc
	ldrh r1, [r1, #6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	add pc, r1
_02022082: @ jump table
	.2byte _020220AA - _02022082 - 2 @ case 0
	.2byte _020220F0 - _02022082 - 2 @ case 1
	.2byte _020220F0 - _02022082 - 2 @ case 2
	.2byte _020220FC - _02022082 - 2 @ case 3
_0202208A:
	cmp r0, #0x20
	beq _020220B4
	b _02022108
_02022090:
	cmp r0, #0x50
	bgt _0202209C
	bge _020220D8
	cmp r0, #0x40
	beq _020220B4
	b _02022108
_0202209C:
	cmp r0, #0x60
	bgt _020220A4
	beq _020220C0
	b _02022108
_020220A4:
	cmp r0, #0x70
	beq _020220E4
	b _02022108
_020220AA:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x14]
	b _02022110
_020220B4:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #1
	ldr r0, [r0]
	lsls r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220C0:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #2
	ldr r0, [r0]
	lsls r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220CC:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #1
	ldr r0, [r0]
	lsls r1, r1, #0x10
	str r1, [r0, #0x14]
	b _02022110
_020220D8:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #5
	ldr r0, [r0]
	lsls r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220E4:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #6
	ldr r0, [r0]
	lsls r1, r1, #0xe
	str r1, [r0, #0x14]
	b _02022110
_020220F0:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #2
	ldr r0, [r0]
	lsls r1, r1, #0x10
	str r1, [r0, #0x14]
	b _02022110
_020220FC:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #1
	ldr r0, [r0]
	lsls r1, r1, #0x12
	str r1, [r0, #0x14]
	b _02022110
_02022108:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x14]
_02022110:
	blx FUN_020CEC1C
	cmp r0, #0
	beq _02022126
	cmp r0, #8
	beq _0202213A
	movs r1, #1
	lsls r1, r1, #8
	cmp r0, r1
	beq _02022130
	b _02022146
_02022126:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x18]
	b _0202214E
_02022130:
	ldr r0, _020221B0 @ =0x021D21F4
	lsls r1, r1, #6
	ldr r0, [r0]
	str r1, [r0, #0x18]
	b _0202214E
_0202213A:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #2
	ldr r0, [r0]
	lsls r1, r1, #0x10
	str r1, [r0, #0x18]
	b _0202214E
_02022146:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x18]
_0202214E:
	ldr r0, _020221B0 @ =0x021D21F4
	ldr r1, [r0]
	ldr r0, [r1, #0x24]
	ldr r1, [r1, #0x2c]
	bl FUN_020224B8
	ldr r1, _020221B0 @ =0x021D21F4
	ldr r3, [r1]
	ldr r2, [r3, #0x14]
	subs r0, r2, r0
	str r0, [r3, #0x1c]
	ldr r1, [r1]
	ldr r0, [r1, #0x28]
	ldr r1, [r1, #0x30]
	bl FUN_020224B8
	ldr r1, _020221B0 @ =0x021D21F4
	ldr r3, [r1]
	ldr r2, [r3, #0x18]
	subs r0, r2, r0
	str r0, [r3, #0x20]
	ldr r1, [r1]
	movs r2, #0
	ldr r0, [r1, #0x1c]
	cmp r0, #0
	blt _0202218A
	ldr r0, [r1, #0x20]
	cmp r0, #0
	blt _0202218A
	movs r2, #1
_0202218A:
	cmp r2, #0
	bne _02022192
	bl FUN_0202551C
_02022192:
	ldr r0, _020221B0 @ =0x021D21F4
	movs r2, #0
	ldr r1, [r0]
	ldr r0, [r1, #0x1c]
	cmp r0, #0
	blt _020221A6
	ldr r0, [r1, #0x20]
	cmp r0, #0
	blt _020221A6
	movs r2, #1
_020221A6:
	cmp r2, #0
	bne _020221AE
	bl FUN_0202551C
_020221AE:
	pop {r3, pc}
	.align 2, 0
_020221B0: .4byte 0x021D21F4
	thumb_func_end FUN_02022060

	thumb_func_start FUN_020221B4
FUN_020221B4: @ 0x020221B4
	push {r3, lr}
	ldr r0, _020221CC @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	bl FUN_02022278
	ldr r0, _020221CC @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	bl FUN_02022278
	pop {r3, pc}
	.align 2, 0
_020221CC: .4byte 0x021D21F4
	thumb_func_end FUN_020221B4

	thumb_func_start FUN_020221D0
FUN_020221D0: @ 0x020221D0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _02022234 @ =0x021D21F4
	adds r4, r1, #0
	ldr r1, [r0]
	adds r6, r2, #0
	str r5, [r1, #0x24]
	ldr r1, [r0]
	str r4, [r1, #0x28]
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	cmp r0, #0
	beq _020221EE
	bl FUN_0201AB0C
_020221EE:
	ldr r0, _02022234 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	cmp r0, #0
	beq _020221FC
	bl FUN_0201AB0C
_020221FC:
	ldr r0, _02022234 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x24]
	cmp r0, #0
	beq _02022214
	adds r0, r6, #0
	lsrs r1, r5, #3
	bl FUN_0201AA8C
	ldr r1, _02022234 @ =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x34]
_02022214:
	ldr r0, _02022234 @ =0x021D21F4
	ldr r0, [r0]
	ldr r0, [r0, #0x28]
	cmp r0, #0
	beq _0202222C
	adds r0, r6, #0
	lsrs r1, r4, #3
	bl FUN_0201AA8C
	ldr r1, _02022234 @ =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x38]
_0202222C:
	bl FUN_020221B4
	pop {r4, r5, r6, pc}
	nop
_02022234: .4byte 0x021D21F4
	thumb_func_end FUN_020221D0

	thumb_func_start FUN_02022238
FUN_02022238: @ 0x02022238
	push {r3, lr}
	cmp r0, #0
	beq _0202225A
	ldr r1, _0202225C @ =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x34]
	cmp r0, r1
	bne _02022252
	movs r1, #0
	str r1, [r2, #0x24]
	bl FUN_0201AB0C
	pop {r3, pc}
_02022252:
	movs r1, #0
	str r1, [r2, #0x28]
	bl FUN_0201AB0C
_0202225A:
	pop {r3, pc}
	.align 2, 0
_0202225C: .4byte 0x021D21F4
	thumb_func_end FUN_02022238

	thumb_func_start FUN_02022260
FUN_02022260: @ 0x02022260
	ldr r1, _02022274 @ =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x34]
	cmp r0, r1
	bne _0202226E
	ldr r0, [r2, #0x24]
	bx lr
_0202226E:
	ldr r0, [r2, #0x28]
	bx lr
	nop
_02022274: .4byte 0x021D21F4
	thumb_func_end FUN_02022260

	thumb_func_start FUN_02022278
FUN_02022278: @ 0x02022278
	push {r4, lr}
	adds r4, r0, #0
	beq _0202228E
	bl FUN_02022260
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #0
	lsrs r2, r2, #3
	blx FUN_020E5B44
_0202228E:
	pop {r4, pc}
	thumb_func_end FUN_02022278

	thumb_func_start FUN_02022290
FUN_02022290: @ 0x02022290
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	beq _020222E6
	adds r0, r4, #0
	bl FUN_02022260
	adds r6, r5, r6
	adds r7, r0, #0
	cmp r5, r6
	bhs _020222E6
_020222AA:
	cmp r5, r7
	bhs _020222E6
	adds r0, r5, #0
	add r1, sp, #4
	add r2, sp, #0
	bl FUN_02022560
	add r0, sp, #0
	ldrb r1, [r0]
	movs r0, #1
	lsls r0, r1
	ldr r1, [sp, #4]
	ldrb r1, [r4, r1]
	tst r0, r1
	beq _020222CC
	bl FUN_0202551C
_020222CC:
	add r2, sp, #0
	ldrb r3, [r2]
	ldr r1, [sp, #4]
	movs r2, #1
	lsls r2, r3
	lsls r2, r2, #0x18
	ldrb r0, [r4, r1]
	lsrs r2, r2, #0x18
	adds r5, r5, #1
	orrs r0, r2
	strb r0, [r4, r1]
	cmp r5, r6
	blo _020222AA
_020222E6:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02022290

	thumb_func_start FUN_020222EC
FUN_020222EC: @ 0x020222EC
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r7, r0, #0
	str r1, [sp]
	cmp r1, #0
	beq _0202236A
	adds r0, r1, #0
	bl FUN_02022260
	movs r6, #0
	str r0, [sp, #4]
	cmp r0, #0
	bls _0202236A
_02022306:
	adds r0, r6, #0
	add r1, sp, #0xc
	add r2, sp, #8
	bl FUN_02022560
	add r0, sp, #8
	ldrb r1, [r0]
	movs r0, #1
	movs r4, #0
	lsls r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _02022348
_02022320:
	adds r5, r6, r4
	adds r0, r5, #0
	add r1, sp, #0xc
	add r2, sp, #8
	bl FUN_02022560
	add r0, sp, #8
	ldrb r1, [r0]
	movs r0, #1
	lsls r0, r1
	lsls r0, r0, #0x18
	ldr r1, [sp, #4]
	lsrs r0, r0, #0x18
	cmp r5, r1
	blo _02022346
	movs r0, #0
	add sp, #0x10
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
_02022346:
	adds r4, r4, #1
_02022348:
	ldr r2, [sp, #0xc]
	ldr r1, [sp]
	ldrb r1, [r1, r2]
	tst r0, r1
	bne _02022356
	cmp r4, r7
	bls _02022320
_02022356:
	cmp r4, r7
	bls _02022360
	add sp, #0x10
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02022360:
	adds r0, r6, r4
	adds r6, r0, #1
	ldr r0, [sp, #4]
	cmp r6, r0
	blo _02022306
_0202236A:
	movs r0, #0
	mvns r0, r0
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020222EC

	thumb_func_start FUN_02022374
FUN_02022374: @ 0x02022374
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r2, #0
	beq _020223BE
	adds r6, r5, r1
	cmp r5, r6
	bhs _020223BE
	add r7, sp, #0
_02022386:
	adds r0, r5, #0
	add r1, sp, #4
	add r2, sp, #0
	bl FUN_02022560
	ldrb r1, [r7]
	movs r0, #1
	lsls r0, r1
	ldr r1, [sp, #4]
	ldrb r1, [r4, r1]
	tst r0, r1
	bne _020223A2
	bl FUN_0202551C
_020223A2:
	ldrb r0, [r7]
	movs r1, #1
	ldr r3, [sp, #4]
	lsls r1, r0
	movs r0, #0xff
	eors r0, r1
	lsls r0, r0, #0x18
	ldrb r2, [r4, r3]
	lsrs r0, r0, #0x18
	adds r5, r5, #1
	ands r0, r2
	strb r0, [r4, r3]
	cmp r5, r6
	blo _02022386
_020223BE:
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02022374

	thumb_func_start FUN_020223C4
FUN_020223C4: @ 0x020223C4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	movs r1, #1
	tst r0, r1
	beq _02022402
	adds r0, r4, #0
	adds r0, #0x10
	blx FUN_020B802C
	ldr r1, _02022444 @ =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x1c]
	subs r0, r0, r1
	ldr r1, [r2, #0x2c]
	bl FUN_020224A8
	ldr r1, _02022444 @ =0x021D21F4
	adds r5, r0, #0
	ldr r1, [r1]
	ldr r0, [r4, #0x4c]
	ldr r1, [r1, #0x2c]
	bl FUN_020224A8
	ldr r2, _02022444 @ =0x021D21F4
	adds r1, r0, #0
	ldr r2, [r2]
	adds r0, r5, #0
	ldr r2, [r2, #0x34]
	bl FUN_02022374
_02022402:
	ldr r0, [r4, #4]
	movs r1, #2
	tst r0, r1
	beq _0202243C
	adds r0, r4, #0
	adds r0, #0x10
	blx FUN_020B802C
	ldr r1, _02022444 @ =0x021D21F4
	ldr r2, [r1]
	ldr r1, [r2, #0x20]
	subs r0, r0, r1
	ldr r1, [r2, #0x30]
	bl FUN_020224A8
	ldr r1, _02022444 @ =0x021D21F4
	adds r5, r0, #0
	ldr r1, [r1]
	ldr r0, [r4, #0x50]
	ldr r1, [r1, #0x30]
	bl FUN_020224A8
	ldr r2, _02022444 @ =0x021D21F4
	adds r1, r0, #0
	ldr r2, [r2]
	adds r0, r5, #0
	ldr r2, [r2, #0x38]
	bl FUN_02022374
_0202243C:
	movs r0, #0
	str r0, [r4, #0x48]
	pop {r3, r4, r5, pc}
	nop
_02022444: .4byte 0x021D21F4
	thumb_func_end FUN_020223C4

	thumb_func_start FUN_02022448
FUN_02022448: @ 0x02022448
	ldr r1, _0202247C @ =0x00100010
	cmp r0, r1
	bgt _02022456
	bge _0202246C
	cmp r0, #0x10
	beq _02022468
	b _02022478
_02022456:
	ldr r1, _02022480 @ =0x00200010
	cmp r0, r1
	bgt _02022460
	beq _02022470
	b _02022478
_02022460:
	ldr r1, _02022484 @ =0x00300010
	cmp r0, r1
	beq _02022474
	b _02022478
_02022468:
	movs r0, #1
	bx lr
_0202246C:
	movs r0, #2
	bx lr
_02022470:
	movs r0, #4
	bx lr
_02022474:
	movs r0, #8
	bx lr
_02022478:
	movs r0, #1
	bx lr
	.align 2, 0
_0202247C: .4byte 0x00100010
_02022480: .4byte 0x00200010
_02022484: .4byte 0x00300010
	thumb_func_end FUN_02022448

	thumb_func_start FUN_02022488
FUN_02022488: @ 0x02022488
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	lsls r4, r4, #5
	adds r1, r4, #0
	adds r5, r0, #0
	adds r6, r2, #0
	blx FUN_020F2998
	cmp r1, #0
	beq _020224A4
	subs r5, r5, r1
	cmp r6, #1
	bne _020224A4
	adds r5, r5, r4
_020224A4:
	adds r0, r5, #0
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02022488

	thumb_func_start FUN_020224A8
FUN_020224A8: @ 0x020224A8
	asrs r2, r0, #4
	lsrs r2, r2, #0x1b
	adds r2, r0, r2
	ldr r3, _020224B4 @ =FUN_020F2998
	asrs r0, r2, #5
	bx r3
	.align 2, 0
_020224B4: .4byte FUN_020F2998
	thumb_func_end FUN_020224A8

	thumb_func_start FUN_020224B8
FUN_020224B8: @ 0x020224B8
	muls r1, r0, r1
	lsls r0, r1, #5
	bx lr
	.align 2, 0
	thumb_func_end FUN_020224B8

	thumb_func_start FUN_020224C0
FUN_020224C0: @ 0x020224C0
	push {r3, r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r1, r2, #0
	movs r0, #1
	adds r2, r4, #0
	adds r7, r3, #0
	tst r2, r0
	beq _020224EA
	ldr r2, _0202250C @ =0x021D21F4
	ldr r2, [r2]
	ldr r6, [r2, #0xc]
	ldr r2, [r2, #0x1c]
	adds r3, r6, r5
	cmp r3, r2
	bls _020224E8
	bl FUN_0202551C
	movs r0, #0
	b _020224EA
_020224E8:
	str r6, [r1]
_020224EA:
	movs r1, #2
	tst r1, r4
	beq _02022508
	ldr r1, _0202250C @ =0x021D21F4
	ldr r1, [r1]
	ldr r3, [r1, #0x10]
	ldr r1, [r1, #0x20]
	adds r2, r3, r5
	cmp r2, r1
	bls _02022506
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02022506:
	str r3, [r7]
_02022508:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_0202250C: .4byte 0x021D21F4
	thumb_func_end FUN_020224C0

	thumb_func_start FUN_02022510
FUN_02022510: @ 0x02022510
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	movs r2, #1
	adds r0, r4, #0
	tst r0, r2
	beq _02022538
	ldr r0, _0202255C @ =0x021D21F4
	ldr r3, [r0]
	ldr r1, [r3, #0xc]
	adds r1, r1, r5
	str r1, [r3, #0xc]
	ldr r1, [r0]
	ldr r0, [r1, #0xc]
	ldr r1, [r1, #0x2c]
	bl FUN_02022488
	ldr r1, _0202255C @ =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0xc]
_02022538:
	movs r0, #2
	tst r0, r4
	beq _0202255A
	ldr r0, _0202255C @ =0x021D21F4
	ldr r2, [r0]
	ldr r1, [r2, #0x10]
	adds r1, r1, r5
	str r1, [r2, #0x10]
	ldr r1, [r0]
	movs r2, #1
	ldr r0, [r1, #0x10]
	ldr r1, [r1, #0x30]
	bl FUN_02022488
	ldr r1, _0202255C @ =0x021D21F4
	ldr r1, [r1]
	str r0, [r1, #0x10]
_0202255A:
	pop {r3, r4, r5, pc}
	.align 2, 0
_0202255C: .4byte 0x021D21F4
	thumb_func_end FUN_02022510

	thumb_func_start FUN_02022560
FUN_02022560: @ 0x02022560
	asrs r3, r0, #3
	str r3, [r1]
	movs r1, #7
	ands r0, r1
	strb r0, [r2]
	bx lr
	thumb_func_end FUN_02022560

	thumb_func_start FUN_0202256C
FUN_0202256C: @ 0x0202256C
	push {r3, r4}
	subs r0, r1, r0
	ldr r4, [sp, #8]
	str r0, [r3]
	bpl _02022582
	adds r0, r2, r0
	str r0, [r4]
	movs r0, #0
	str r0, [r3]
	pop {r3, r4}
	bx lr
_02022582:
	str r2, [r4]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_0202256C

	thumb_func_start FUN_02022588
FUN_02022588: @ 0x02022588
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldr r0, _020225E0 @ =0x021D21F8
	adds r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	bne _020225DC
	adds r0, r4, #0
	movs r1, #0x28
	bl FUN_0201AA8C
	adds r1, r0, #0
	ldr r0, _020225E0 @ =0x021D21F8
	movs r2, #0x28
	str r1, [r0]
	movs r0, #0
	blx FUN_020D47EC
	ldr r0, _020225E0 @ =0x021D21F8
	movs r1, #0x30
	ldr r0, [r0]
	muls r1, r6, r1
	str r6, [r0, #4]
	adds r0, r4, #0
	bl FUN_0201AA8C
	ldr r7, _020225E0 @ =0x021D21F8
	movs r4, #0
	ldr r1, [r7]
	cmp r6, #0
	str r0, [r1]
	ble _020225DC
	adds r5, r4, #0
_020225CA:
	ldr r0, [r7]
	ldr r0, [r0]
	adds r0, r0, r5
	bl FUN_02022874
	adds r4, r4, #1
	adds r5, #0x30
	cmp r4, r6
	blt _020225CA
_020225DC:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020225E0: .4byte 0x021D21F8
	thumb_func_end FUN_02022588

	thumb_func_start FUN_020225E4
FUN_020225E4: @ 0x020225E4
	cmp r1, #1
	bne _020225F4
	ldr r1, _02022604 @ =0x021D21F8
	ldr r2, [r1]
	ldrh r1, [r2, #0x24]
	orrs r0, r1
	strh r0, [r2, #0x24]
	bx lr
_020225F4:
	cmp r1, #2
	bne _02022602
	ldr r1, _02022604 @ =0x021D21F8
	ldr r2, [r1]
	ldrh r1, [r2, #0x26]
	orrs r0, r1
	strh r0, [r2, #0x26]
_02022602:
	bx lr
	.align 2, 0
_02022604: .4byte 0x021D21F8
	thumb_func_end FUN_020225E4

	thumb_func_start FUN_02022608
FUN_02022608: @ 0x02022608
	push {r3, lr}
	ldr r0, _02022630 @ =0x021D21F8
	ldr r0, [r0]
	cmp r0, #0
	beq _0202262E
	bl FUN_0202276C
	ldr r0, _02022630 @ =0x021D21F8
	ldr r0, [r0]
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _02022630 @ =0x021D21F8
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _02022630 @ =0x021D21F8
	movs r1, #0
	str r1, [r0]
_0202262E:
	pop {r3, pc}
	.align 2, 0
_02022630: .4byte 0x021D21F8
	thumb_func_end FUN_02022608

	thumb_func_start FUN_02022634
FUN_02022634: @ 0x02022634
	bx lr
	.align 2, 0
	thumb_func_end FUN_02022634

	thumb_func_start FUN_02022638
FUN_02022638: @ 0x02022638
	push {r3, lr}
	ldr r0, _0202265C @ =0x021D21F8
	movs r2, #0
	ldr r1, [r0]
	str r2, [r1, #0xc]
	ldr r1, [r0]
	str r2, [r1, #0x10]
	ldr r1, [r0]
	str r2, [r1, #0x14]
	ldr r0, [r0]
	str r2, [r0, #0x18]
	bl FUN_020229E0
	ldr r0, _0202265C @ =0x021D21F8
	ldr r0, [r0]
	bl FUN_02022AF0
	pop {r3, pc}
	.align 2, 0
_0202265C: .4byte 0x021D21F8
	thumb_func_end FUN_02022638

	thumb_func_start FUN_02022660
FUN_02022660: @ 0x02022660
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_020229A4
	adds r4, r0, #0
	bne _02022674
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_02022674:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02022840
	cmp r0, #0
	bne _02022684
	movs r0, #0
	pop {r3, r4, r5, pc}
_02022684:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02022890
	cmp r0, #0
	bne _0202269A
	ldr r0, [r5, #0xc]
	bl FUN_02022744
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202269A:
	adds r0, r4, #0
	bl FUN_02022AF8
	movs r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02022660

	thumb_func_start FUN_020226A4
FUN_020226A4: @ 0x020226A4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_020229A4
	adds r4, r0, #0
	bne _020226B8
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_020226B8:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02022840
	cmp r0, #0
	bne _020226C8
	movs r0, #0
	pop {r3, r4, r5, pc}
_020226C8:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020228E8
	cmp r0, #0
	bne _020226DE
	ldr r0, [r5, #0xc]
	bl FUN_02022744
	movs r0, #0
	pop {r3, r4, r5, pc}
_020226DE:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020226A4

	thumb_func_start FUN_020226E4
FUN_020226E4: @ 0x020226E4
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bne _020226F0
	bl FUN_0202551C
_020226F0:
	adds r0, r4, #0
	bl FUN_0202296C
	adds r4, r0, #0
	bne _020226FE
	bl FUN_0202551C
_020226FE:
	str r5, [r4]
	ldr r1, [r4, #4]
	movs r0, #1
	tst r0, r1
	beq _02022716
	ldr r3, [r4, #8]
	ldr r1, [r4, #0x24]
	ldr r2, [r5, #0xc]
	movs r0, #0xe
	lsls r3, r3, #5
	bl FUN_020205D8
_02022716:
	ldr r1, [r4, #4]
	movs r0, #2
	tst r0, r1
	beq _0202272C
	ldr r3, [r4, #8]
	ldr r1, [r4, #0x28]
	ldr r2, [r5, #0xc]
	movs r0, #0x1e
	lsls r3, r3, #5
	bl FUN_020205D8
_0202272C:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020226E4

	thumb_func_start FUN_02022730
FUN_02022730: @ 0x02022730
	push {r3, lr}
	bl FUN_0202296C
	cmp r0, #0
	beq _0202273E
	movs r0, #1
	pop {r3, pc}
_0202273E:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02022730

	thumb_func_start FUN_02022744
FUN_02022744: @ 0x02022744
	push {r4, lr}
	bl FUN_0202296C
	adds r4, r0, #0
	bne _02022752
	bl FUN_0202551C
_02022752:
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #1
	bne _02022768
	adds r0, r4, #0
	bl FUN_02022B34
	adds r0, r4, #0
	bl FUN_02022838
_02022768:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02022744

	thumb_func_start FUN_0202276C
FUN_0202276C: @ 0x0202276C
	push {r4, r5, r6, lr}
	ldr r6, _020227A8 @ =0x021D21F8
	movs r4, #0
	ldr r1, [r6]
	ldr r0, [r1, #4]
	cmp r0, #0
	ble _020227A4
	adds r5, r4, #0
_0202277C:
	ldr r1, [r1]
	adds r0, r1, r5
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #1
	bne _02022798
	adds r0, r1, r5
	bl FUN_02022B34
	ldr r0, [r6]
	ldr r0, [r0]
	adds r0, r0, r5
	bl FUN_02022838
_02022798:
	ldr r1, [r6]
	adds r4, r4, #1
	ldr r0, [r1, #4]
	adds r5, #0x30
	cmp r4, r0
	blt _0202277C
_020227A4:
	pop {r4, r5, r6, pc}
	nop
_020227A8: .4byte 0x021D21F8
	thumb_func_end FUN_0202276C

	thumb_func_start FUN_020227AC
FUN_020227AC: @ 0x020227AC
	push {r3, lr}
	bl FUN_0202296C
	cmp r0, #0
	bne _020227C0
	bne _020227BC
	bl FUN_0202551C
_020227BC:
	movs r0, #0
	pop {r3, pc}
_020227C0:
	adds r1, r0, #0
	adds r1, #0x2c
	ldrb r1, [r1]
	cmp r1, #1
	bne _020227CE
	adds r0, #0x10
	pop {r3, pc}
_020227CE:
	movs r0, #0
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_020227AC

	thumb_func_start FUN_020227D4
FUN_020227D4: @ 0x020227D4
	push {r4, lr}
	adds r4, r1, #0
	bl FUN_0202296C
	cmp r0, #0
	bne _020227EA
	bne _020227E6
	bl FUN_0202551C
_020227E6:
	movs r0, #0
	pop {r4, pc}
_020227EA:
	adds r1, r0, #0
	adds r1, #0x2c
	ldrb r1, [r1]
	cmp r1, #1
	beq _020227F8
	movs r0, #0
	pop {r4, pc}
_020227F8:
	ldr r1, [r0]
	ldr r1, [r1, #4]
	cmp r1, #0
	beq _02022804
	movs r1, #1
	str r1, [r4, #0x18]
_02022804:
	adds r0, #0x10
	pop {r4, pc}
	thumb_func_end FUN_020227D4

	thumb_func_start FUN_02022808
FUN_02022808: @ 0x02022808
	push {r4, lr}
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _02022816
	movs r4, #2
	lsls r4, r4, #8
	b _02022822
_02022816:
	ldr r2, [r0]
	cmp r2, #4
	bne _02022820
	movs r4, #0
	b _02022822
_02022820:
	movs r4, #0x20
_02022822:
	cmp r4, #0
	beq _02022832
	blx FUN_020B8078
	adds r1, r4, #0
	blx FUN_020F2BA4
	pop {r4, pc}
_02022832:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02022808

	thumb_func_start FUN_02022838
FUN_02022838: @ 0x02022838
	ldr r3, _0202283C @ =FUN_02022874
	bx r3
	.align 2, 0
_0202283C: .4byte FUN_02022874
	thumb_func_end FUN_02022838

	thumb_func_start FUN_02022840
FUN_02022840: @ 0x02022840
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	adds r4, r1, #0
	str r0, [r4]
	ldr r0, [r5, #0xc]
	bl FUN_02022730
	cmp r0, #1
	bne _0202285C
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202285C:
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	str r0, [r4, #0xc]
	ldr r0, [r5, #4]
	adds r1, #0x2c
	str r0, [r4, #4]
	movs r0, #1
	strb r0, [r1]
	ldr r1, [r5, #8]
	str r1, [r4, #8]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02022840

	thumb_func_start FUN_02022874
FUN_02022874: @ 0x02022874
	push {r4, lr}
	movs r1, #0
	movs r2, #0x30
	adds r4, r0, #0
	blx FUN_020E5B44
	movs r0, #0
	mvns r0, r0
	str r0, [r4, #0xc]
	adds r4, #0x10
	adds r0, r4, #0
	blx FUN_020B804C
	pop {r4, pc}
	thumb_func_end FUN_02022874

	thumb_func_start FUN_02022890
FUN_02022890: @ 0x02022890
	push {r3, r4, r5, r6, lr}
	sub sp, #4
	adds r6, r1, #0
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020228B0
	ldr r0, _020228E4 @ =0x021D21F8
	ldr r0, [r0]
	adds r4, r0, #0
	adds r5, r0, #0
	ldr r3, [r0, #0x1c]
	adds r4, #0x14
	adds r5, #0x18
	ldr r0, [r0, #0x20]
	b _020228C0
_020228B0:
	ldr r0, _020228E4 @ =0x021D21F8
	movs r3, #2
	ldr r5, [r0]
	lsls r3, r3, #8
	adds r4, r5, #0
	adds r4, #0xc
	adds r5, #0x10
	adds r0, r3, #0
_020228C0:
	str r0, [sp]
	ldr r1, [r4]
	ldr r2, [r5]
	adds r0, r6, #0
	bl FUN_02022B70
	adds r0, r6, #0
	bl FUN_02022A28
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl FUN_02022BBC
	movs r0, #1
	add sp, #4
	pop {r3, r4, r5, r6, pc}
	nop
_020228E4: .4byte 0x021D21F8
	thumb_func_end FUN_02022890

	thumb_func_start FUN_020228E8
FUN_020228E8: @ 0x020228E8
	push {r4, r5, r6, lr}
	adds r5, r1, #0
	ldr r0, [r5]
	ldr r0, [r0, #4]
	cmp r0, #0
	beq _020228F8
	bl FUN_0202551C
_020228F8:
	ldr r1, [r5, #4]
	movs r0, #1
	tst r0, r1
	beq _0202291A
	ldr r0, _02022968 @ =0x021D21F8
	ldr r1, [r5, #8]
	ldr r0, [r0]
	ldrh r0, [r0, #0x24]
	bl FUN_02022AB0
	adds r6, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r6, r0
	bne _0202291A
	movs r0, #0
	pop {r4, r5, r6, pc}
_0202291A:
	ldr r1, [r5, #4]
	movs r0, #2
	tst r0, r1
	beq _0202293C
	ldr r0, _02022968 @ =0x021D21F8
	ldr r1, [r5, #8]
	ldr r0, [r0]
	ldrh r0, [r0, #0x26]
	bl FUN_02022AB0
	adds r4, r0, #0
	movs r0, #0
	mvns r0, r0
	cmp r4, r0
	bne _0202293C
	movs r0, #0
	pop {r4, r5, r6, pc}
_0202293C:
	ldr r1, [r5, #4]
	movs r0, #1
	tst r0, r1
	beq _02022946
	str r6, [r5, #0x24]
_02022946:
	ldr r1, [r5, #4]
	movs r0, #2
	tst r0, r1
	beq _02022950
	str r4, [r5, #0x28]
_02022950:
	ldr r0, [r5, #8]
	lsls r1, r0, #5
	ldr r0, [r5]
	str r1, [r0, #8]
	adds r0, r5, #0
	bl FUN_02022A38
	adds r0, r5, #0
	bl FUN_02022AF8
	movs r0, #1
	pop {r4, r5, r6, pc}
	.align 2, 0
_02022968: .4byte 0x021D21F8
	thumb_func_end FUN_020228E8

	thumb_func_start FUN_0202296C
FUN_0202296C: @ 0x0202296C
	push {r4, r5}
	ldr r2, _020229A0 @ =0x021D21F8
	movs r1, #0
	ldr r5, [r2]
	ldr r2, [r5, #4]
	cmp r2, #0
	ble _02022998
	ldr r2, [r5]
	adds r4, r2, #0
_0202297E:
	ldr r3, [r4, #0xc]
	cmp r0, r3
	bne _0202298E
	movs r0, #0x30
	muls r0, r1, r0
	adds r0, r2, r0
	pop {r4, r5}
	bx lr
_0202298E:
	ldr r3, [r5, #4]
	adds r1, r1, #1
	adds r4, #0x30
	cmp r1, r3
	blt _0202297E
_02022998:
	movs r0, #0
	pop {r4, r5}
	bx lr
	nop
_020229A0: .4byte 0x021D21F8
	thumb_func_end FUN_0202296C

	thumb_func_start FUN_020229A4
FUN_020229A4: @ 0x020229A4
	push {r3, r4}
	ldr r1, _020229DC @ =0x021D21F8
	movs r0, #0
	ldr r4, [r1]
	ldr r1, [r4, #4]
	cmp r1, #0
	ble _020229D4
	ldr r1, [r4]
	adds r3, r1, #0
_020229B6:
	adds r2, r3, #0
	adds r2, #0x2c
	ldrb r2, [r2]
	cmp r2, #0
	bne _020229CA
	movs r2, #0x30
	muls r2, r0, r2
	adds r0, r1, r2
	pop {r3, r4}
	bx lr
_020229CA:
	ldr r2, [r4, #4]
	adds r0, r0, #1
	adds r3, #0x30
	cmp r0, r2
	blt _020229B6
_020229D4:
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_020229DC: .4byte 0x021D21F8
	thumb_func_end FUN_020229A4

	thumb_func_start FUN_020229E0
FUN_020229E0: @ 0x020229E0
	push {r3, lr}
	blx FUN_020CEBFC
	cmp r0, #0x20
	beq _020229EE
	cmp r0, #0x40
	bne _020229FA
_020229EE:
	ldr r0, _02022A24 @ =0x021D21F8
	movs r1, #2
	ldr r0, [r0]
	lsls r1, r1, #0xc
	str r1, [r0, #0x1c]
	b _02022A02
_020229FA:
	ldr r0, _02022A24 @ =0x021D21F8
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x1c]
_02022A02:
	blx FUN_020CEC2C
	movs r1, #1
	lsls r1, r1, #8
	cmp r0, r1
	bne _02022A18
	ldr r0, _02022A24 @ =0x021D21F8
	lsls r1, r1, #5
	ldr r0, [r0]
	str r1, [r0, #0x20]
	pop {r3, pc}
_02022A18:
	ldr r0, _02022A24 @ =0x021D21F8
	movs r1, #0
	ldr r0, [r0]
	str r1, [r0, #0x20]
	pop {r3, pc}
	nop
_02022A24: .4byte 0x021D21F8
	thumb_func_end FUN_020229E0

	thumb_func_start FUN_02022A28
FUN_02022A28: @ 0x02022A28
	ldr r1, [r0, #8]
	ldr r3, _02022A34 @ =FUN_02022A38
	lsls r2, r1, #5
	ldr r1, [r0]
	str r2, [r1, #8]
	bx r3
	.align 2, 0
_02022A34: .4byte FUN_02022A38
	thumb_func_end FUN_02022A28

	thumb_func_start FUN_02022A38
FUN_02022A38: @ 0x02022A38
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x10
	blx FUN_020B804C
	ldr r0, [r4, #4]
	movs r2, #1
	tst r0, r2
	beq _02022A56
	adds r3, r4, #0
	ldr r0, [r4]
	ldr r1, [r4, #0x24]
	adds r3, #0x10
	blx FUN_020B86CC
_02022A56:
	ldr r0, [r4, #4]
	movs r2, #2
	tst r0, r2
	beq _02022A6A
	ldr r0, [r4]
	ldr r1, [r4, #0x28]
	adds r4, #0x10
	adds r3, r4, #0
	blx FUN_020B86CC
_02022A6A:
	pop {r4, pc}
	thumb_func_end FUN_02022A38

	thumb_func_start FUN_02022A6C
FUN_02022A6C: @ 0x02022A6C
	push {r4, r5, r6, r7}
	movs r3, #0
	cmp r1, #0
	ble _02022A8A
	movs r5, #1
_02022A76:
	ldrh r7, [r0]
	adds r4, r2, r3
	adds r6, r5, #0
	lsls r6, r4
	adds r4, r7, #0
	orrs r4, r6
	adds r3, r3, #1
	strh r4, [r0]
	cmp r3, r1
	blt _02022A76
_02022A8A:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02022A6C

	thumb_func_start FUN_02022A90
FUN_02022A90: @ 0x02022A90
	push {r4, r5, r6, r7}
	movs r4, #0
	cmp r1, #0
	ble _02022AAC
	movs r6, #1
_02022A9A:
	adds r5, r2, r4
	adds r7, r6, #0
	ldrh r3, [r0]
	lsls r7, r5
	bics r3, r7
	adds r4, r4, #1
	strh r3, [r0]
	cmp r4, r1
	blt _02022A9A
_02022AAC:
	pop {r4, r5, r6, r7}
	bx lr
	thumb_func_end FUN_02022A90

	thumb_func_start FUN_02022AB0
FUN_02022AB0: @ 0x02022AB0
	push {r4, r5, r6, r7}
	movs r3, #0
	movs r6, #1
	adds r2, r3, #0
_02022AB8:
	adds r4, r2, #0
	b _02022AC2
_02022ABC:
	cmp r5, #0x10
	bge _02022AD0
	adds r4, r4, #1
_02022AC2:
	adds r5, r3, r4
	adds r7, r6, #0
	lsls r7, r5
	tst r7, r0
	bne _02022AD0
	cmp r4, r1
	blt _02022ABC
_02022AD0:
	cmp r4, r1
	bge _02022ADC
	adds r3, r3, r4
	adds r3, r3, #1
	cmp r3, #0x10
	blt _02022AB8
_02022ADC:
	cmp r3, #0x10
	blt _02022AE8
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, r7}
	bx lr
_02022AE8:
	lsls r0, r3, #5
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02022AB0

	thumb_func_start FUN_02022AF0
FUN_02022AF0: @ 0x02022AF0
	movs r1, #0
	strh r1, [r0, #0x24]
	strh r1, [r0, #0x26]
	bx lr
	thumb_func_end FUN_02022AF0

	thumb_func_start FUN_02022AF8
FUN_02022AF8: @ 0x02022AF8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #4]
	movs r0, #1
	tst r0, r1
	beq _02022B14
	ldr r0, _02022B30 @ =0x021D21F8
	ldr r2, [r4, #0x24]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	adds r0, #0x24
	lsrs r2, r2, #5
	bl FUN_02022A6C
_02022B14:
	ldr r1, [r4, #4]
	movs r0, #2
	tst r0, r1
	beq _02022B2C
	ldr r0, _02022B30 @ =0x021D21F8
	ldr r2, [r4, #0x28]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	adds r0, #0x26
	lsrs r2, r2, #5
	bl FUN_02022A6C
_02022B2C:
	pop {r4, pc}
	nop
_02022B30: .4byte 0x021D21F8
	thumb_func_end FUN_02022AF8

	thumb_func_start FUN_02022B34
FUN_02022B34: @ 0x02022B34
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #4]
	movs r0, #1
	tst r0, r1
	beq _02022B50
	ldr r0, _02022B6C @ =0x021D21F8
	ldr r2, [r4, #0x24]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	adds r0, #0x24
	lsrs r2, r2, #5
	bl FUN_02022A90
_02022B50:
	ldr r1, [r4, #4]
	movs r0, #2
	tst r0, r1
	beq _02022B68
	ldr r0, _02022B6C @ =0x021D21F8
	ldr r2, [r4, #0x28]
	ldr r0, [r0]
	ldr r1, [r4, #8]
	adds r0, #0x26
	lsrs r2, r2, #5
	bl FUN_02022A90
_02022B68:
	pop {r4, pc}
	nop
_02022B6C: .4byte 0x021D21F8
	thumb_func_end FUN_02022B34

	thumb_func_start FUN_02022B70
FUN_02022B70: @ 0x02022B70
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	ldr r2, [r5, #4]
	movs r0, #1
	tst r2, r0
	beq _02022B96
	ldr r2, [r5, #8]
	lsls r2, r2, #5
	adds r2, r1, r2
	cmp r2, r3
	bls _02022B94
	bl FUN_0202551C
	bl FUN_02022634
	movs r0, #0
	b _02022B96
_02022B94:
	str r1, [r5, #0x24]
_02022B96:
	ldr r2, [r5, #4]
	movs r1, #2
	tst r1, r2
	beq _02022BB8
	ldr r1, [r5, #8]
	lsls r1, r1, #5
	adds r2, r4, r1
	ldr r1, [sp, #0x10]
	cmp r2, r1
	bls _02022BB6
	bl FUN_0202551C
	bl FUN_02022634
	movs r0, #0
	pop {r3, r4, r5, pc}
_02022BB6:
	str r4, [r5, #0x28]
_02022BB8:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02022B70

	thumb_func_start FUN_02022BBC
FUN_02022BBC: @ 0x02022BBC
	push {r3, r4}
	ldr r4, [r0, #4]
	movs r3, #1
	tst r3, r4
	beq _02022BD0
	ldr r3, [r0, #8]
	ldr r4, [r1]
	lsls r3, r3, #5
	adds r3, r4, r3
	str r3, [r1]
_02022BD0:
	ldr r3, [r0, #4]
	movs r1, #2
	tst r1, r3
	beq _02022BE2
	ldr r0, [r0, #8]
	ldr r1, [r2]
	lsls r0, r0, #5
	adds r0, r1, r0
	str r0, [r2]
_02022BE2:
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02022BBC

	thumb_func_start FUN_02022BE8
FUN_02022BE8: @ 0x02022BE8
	push {r4, lr}
	adds r4, r0, #0
	blx FUN_020CE89C
	blx FUN_020CE8C4
	blx FUN_020CE948
	blx FUN_020CE970
	blx FUN_020CE8B0
	blx FUN_020CE8E8
	blx FUN_020CE95C
	blx FUN_020CE998
	blx FUN_020CE90C
	blx FUN_020CE920
	ldr r0, [r4]
	blx FUN_020CDC04
	ldr r0, [r4, #4]
	blx FUN_020CDFE4
	ldr r0, [r4, #8]
	blx FUN_020CE650
	ldr r0, [r4, #0xc]
	blx FUN_020CE768
	ldr r0, [r4, #0x10]
	blx FUN_020CDE94
	ldr r0, [r4, #0x14]
	blx FUN_020CE0E4
	ldr r0, [r4, #0x18]
	blx FUN_020CE6F8
	ldr r0, [r4, #0x1c]
	blx FUN_020CE7E8
	ldr r0, [r4, #0x20]
	blx FUN_020CE190
	ldr r0, [r4, #0x24]
	blx FUN_020CE368
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02022BE8

	thumb_func_start FUN_02022C54
FUN_02022C54: @ 0x02022C54
	ldr r0, _02022C5C @ =0x021D21FC
	movs r1, #0
	str r1, [r0, #4]
	bx lr
	.align 2, 0
_02022C5C: .4byte 0x021D21FC
	thumb_func_end FUN_02022C54

	thumb_func_start FUN_02022C60
FUN_02022C60: @ 0x02022C60
	cmp r1, #1
	bne _02022C6E
	ldr r1, _02022C94 @ =0x021D21FC
	ldr r1, [r1, #4]
	tst r1, r0
	beq _02022C76
	bx lr
_02022C6E:
	ldr r1, _02022C94 @ =0x021D21FC
	ldr r1, [r1, #4]
	tst r1, r0
	beq _02022C90
_02022C76:
	ldr r1, _02022C94 @ =0x021D21FC
	ldr r2, [r1, #4]
	adds r3, r2, #0
	eors r3, r0
	movs r2, #1
	lsls r2, r2, #0x1a
	str r3, [r1, #4]
	ldr r1, [r2]
	ldr r0, _02022C98 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r3, #8
	orrs r0, r1
	str r0, [r2]
_02022C90:
	bx lr
	nop
_02022C94: .4byte 0x021D21FC
_02022C98: .4byte 0xFFFFE0FF
	thumb_func_end FUN_02022C60

	thumb_func_start FUN_02022C9C
FUN_02022C9C: @ 0x02022C9C
	ldr r1, _02022CB4 @ =0x021D21FC
	movs r3, #1
	str r0, [r1, #4]
	lsls r3, r3, #0x1a
	ldr r2, [r3]
	ldr r1, _02022CB8 @ =0xFFFFE0FF
	lsls r0, r0, #8
	ands r1, r2
	orrs r0, r1
	str r0, [r3]
	bx lr
	nop
_02022CB4: .4byte 0x021D21FC
_02022CB8: .4byte 0xFFFFE0FF
	thumb_func_end FUN_02022C9C

	thumb_func_start FUN_02022CBC
FUN_02022CBC: @ 0x02022CBC
	ldr r0, _02022CC4 @ =0x021D21FC
	movs r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02022CC4: .4byte 0x021D21FC
	thumb_func_end FUN_02022CBC

	thumb_func_start FUN_02022CC8
FUN_02022CC8: @ 0x02022CC8
	cmp r1, #1
	bne _02022CD6
	ldr r1, _02022CF8 @ =0x021D21FC
	ldr r1, [r1]
	tst r1, r0
	beq _02022CDE
	bx lr
_02022CD6:
	ldr r1, _02022CF8 @ =0x021D21FC
	ldr r1, [r1]
	tst r1, r0
	beq _02022CF6
_02022CDE:
	ldr r1, _02022CF8 @ =0x021D21FC
	ldr r2, [r1]
	adds r3, r2, #0
	eors r3, r0
	ldr r2, _02022CFC @ =0x04001000
	str r3, [r1]
	ldr r1, [r2]
	ldr r0, _02022D00 @ =0xFFFFE0FF
	ands r1, r0
	lsls r0, r3, #8
	orrs r0, r1
	str r0, [r2]
_02022CF6:
	bx lr
	.align 2, 0
_02022CF8: .4byte 0x021D21FC
_02022CFC: .4byte 0x04001000
_02022D00: .4byte 0xFFFFE0FF
	thumb_func_end FUN_02022CC8

	thumb_func_start FUN_02022D04
FUN_02022D04: @ 0x02022D04
	ldr r1, _02022D18 @ =0x021D21FC
	ldr r3, _02022D1C @ =0x04001000
	str r0, [r1]
	ldr r2, [r3]
	ldr r1, _02022D20 @ =0xFFFFE0FF
	lsls r0, r0, #8
	ands r1, r2
	orrs r0, r1
	str r0, [r3]
	bx lr
	.align 2, 0
_02022D18: .4byte 0x021D21FC
_02022D1C: .4byte 0x04001000
_02022D20: .4byte 0xFFFFE0FF
	thumb_func_end FUN_02022D04

	thumb_func_start FUN_02022D24
FUN_02022D24: @ 0x02022D24
	push {r3, lr}
	blx FUN_020CD9B4
	ldr r2, _02022D38 @ =0x04001000
	movs r0, #1
	ldr r1, [r2]
	lsls r0, r0, #0x10
	orrs r0, r1
	str r0, [r2]
	pop {r3, pc}
	.align 2, 0
_02022D38: .4byte 0x04001000
	thumb_func_end FUN_02022D24

	thumb_func_start FUN_02022D3C
FUN_02022D3C: @ 0x02022D3C
	ldr r0, _02022D5C @ =0x021D116C
	ldr r2, _02022D60 @ =0x04000304
	ldrb r0, [r0, #9]
	cmp r0, #0
	bne _02022D50
	ldrh r1, [r2]
	lsrs r0, r2, #0xb
	orrs r0, r1
	strh r0, [r2]
	bx lr
_02022D50:
	ldrh r1, [r2]
	ldr r0, _02022D64 @ =0xFFFF7FFF
	ands r0, r1
	strh r0, [r2]
	bx lr
	nop
_02022D5C: .4byte 0x021D116C
_02022D60: .4byte 0x04000304
_02022D64: .4byte 0xFFFF7FFF
	thumb_func_end FUN_02022D3C

	thumb_func_start FUN_02022D68
FUN_02022D68: @ 0x02022D68
	ldr r0, _02022D70 @ =0x021D21FC
	ldr r0, [r0, #4]
	bx lr
	nop
_02022D70: .4byte 0x021D21FC
	thumb_func_end FUN_02022D68

	thumb_func_start FUN_02022D74
FUN_02022D74: @ 0x02022D74
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	ldrh r4, [r5, #0x3c]
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02022E50 @ =0x021094DC
	asrs r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r0, r0, r2
	adcs r1, r3
	asrs r2, r4, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r3, r2, #1
	ldr r2, _02022E50 @ =0x021094DC
	lsls r1, r1, #0x14
	ldrsh r2, [r2, r3]
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	str r1, [r5, #0x14]
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	asrs r0, r0, #4
	lsls r0, r0, #1
	adds r0, r0, #1
	lsls r1, r0, #1
	ldr r0, _02022E50 @ =0x021094DC
	asrs r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	lsls r2, r2, #0xa
	movs r3, #0
	adds r0, r0, r2
	adcs r1, r3
	ldrh r2, [r5, #0x3c]
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	asrs r2, r2, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r3, r2, #1
	ldr r2, _02022E50 @ =0x021094DC
	orrs r0, r1
	ldrsh r2, [r2, r3]
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	rsbs r0, r4, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r1, [r5, #0x1c]
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02022E50 @ =0x021094DC
	ldr r2, [r5, #0x38]
	ldrsh r0, [r0, r1]
	asrs r3, r2, #0x1f
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	adds r0, r5, #0
	str r1, [r5, #0x18]
	adds r0, #0x14
	adds r5, #0x20
	adds r1, r5, #0
	adds r2, r0, #0
	blx FUN_020CCD78
	pop {r3, r4, r5, pc}
	nop
_02022E50: .4byte 0x021094DC
	thumb_func_end FUN_02022D74

	thumb_func_start FUN_02022E54
FUN_02022E54: @ 0x02022E54
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	ldrh r4, [r5, #0x3c]
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02022F34 @ =0x021094DC
	asrs r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r0, r0, r2
	adcs r1, r3
	asrs r2, r4, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r3, r2, #1
	ldr r2, _02022F34 @ =0x021094DC
	lsls r1, r1, #0x14
	ldrsh r2, [r2, r3]
	lsrs r0, r0, #0xc
	orrs r0, r1
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	rsbs r0, r1, #0
	str r0, [r5, #0x20]
	ldrh r0, [r5, #0x3e]
	ldr r2, [r5, #0x38]
	asrs r0, r0, #4
	lsls r0, r0, #1
	adds r0, r0, #1
	lsls r1, r0, #1
	ldr r0, _02022F34 @ =0x021094DC
	asrs r3, r2, #0x1f
	ldrsh r0, [r0, r1]
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	lsls r2, r2, #0xa
	movs r3, #0
	adds r0, r0, r2
	adcs r1, r3
	ldrh r2, [r5, #0x3c]
	lsls r1, r1, #0x14
	lsrs r0, r0, #0xc
	asrs r2, r2, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r3, r2, #1
	ldr r2, _02022F34 @ =0x021094DC
	orrs r0, r1
	ldrsh r2, [r2, r3]
	asrs r1, r0, #0x1f
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	rsbs r0, r1, #0
	str r0, [r5, #0x28]
	rsbs r0, r4, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	asrs r0, r0, #4
	lsls r1, r0, #2
	ldr r0, _02022F34 @ =0x021094DC
	ldr r2, [r5, #0x38]
	ldrsh r0, [r0, r1]
	asrs r3, r2, #0x1f
	asrs r1, r0, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r1, r2, #0xc
	orrs r1, r0
	rsbs r0, r1, #0
	str r0, [r5, #0x24]
	adds r0, r5, #0
	adds r0, #0x20
	adds r5, #0x14
	adds r1, r5, #0
	adds r2, r0, #0
	blx FUN_020CCD78
	pop {r3, r4, r5, pc}
	.align 2, 0
_02022F34: .4byte 0x021094DC
	thumb_func_end FUN_02022E54

	thumb_func_start FUN_02022F38
FUN_02022F38: @ 0x02022F38
	adds r2, r1, #0
	adds r2, #0x46
	strh r0, [r2]
	asrs r0, r0, #4
	lsls r3, r0, #1
	ldr r2, _02022F7C @ =0x021094DC
	lsls r0, r3, #1
	ldrsh r0, [r2, r0]
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #1
	ldrsh r0, [r2, r0]
	movs r2, #0
	str r0, [r1, #4]
	ldr r0, _02022F80 @ =0x00001555
	str r0, [r1, #8]
	movs r0, #0x96
	lsls r0, r0, #0xc
	str r0, [r1, #0xc]
	movs r0, #0xe1
	lsls r0, r0, #0xe
	str r0, [r1, #0x10]
	movs r0, #1
	str r2, [r1, #0x2c]
	lsls r0, r0, #0xc
	str r0, [r1, #0x30]
	str r2, [r1, #0x34]
	str r2, [r1, #0x54]
	str r2, [r1, #0x58]
	str r2, [r1, #0x5c]
	str r2, [r1, #0x60]
	str r2, [r1, #0x64]
	bx lr
	nop
_02022F7C: .4byte 0x021094DC
_02022F80: .4byte 0x00001555
	thumb_func_end FUN_02022F38

	thumb_func_start FUN_02022F84
FUN_02022F84: @ 0x02022F84
	ldr r2, [r0, #0x58]
	cmp r2, #0
	bne _02022F8E
	movs r2, #0
	str r2, [r1]
_02022F8E:
	ldr r2, [r0, #0x5c]
	cmp r2, #0
	bne _02022F98
	movs r2, #0
	str r2, [r1, #4]
_02022F98:
	ldr r0, [r0, #0x60]
	cmp r0, #0
	bne _02022FA2
	movs r0, #0
	str r0, [r1, #8]
_02022FA2:
	bx lr
	thumb_func_end FUN_02022F84

	thumb_func_start FUN_02022FA4
FUN_02022FA4: @ 0x02022FA4
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldr r7, [r6, #0x64]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r7, #0
	bne _02022FBC
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02022FBC:
	ldr r0, [r7, #0x24]
	cmp r0, #0
	bne _02022FCC
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, r6, r7, pc}
_02022FCC:
	adds r0, r7, #0
	str r0, [sp]
	adds r0, #8
	str r0, [sp]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _02022FF6
	adds r2, r5, #0
	ldm r2!, {r0, r1}
	adds r3, r4, #0
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	ldr r0, [r6, #0x64]
	ldr r2, [r7, #4]
	ldr r1, [r0, #0xc]
	cmp r2, r1
	bne _0202300A
	movs r1, #1
	str r1, [r0, #0x10]
	b _0202300A
_02022FF6:
	ldr r2, [r7, #4]
	movs r1, #0xc
	ldr r0, [r7, #0x20]
	muls r1, r2, r1
	adds r2, r0, r1
	ldm r2!, {r0, r1}
	adds r3, r4, #0
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
_0202300A:
	ldr r1, [r6, #0x64]
	ldr r0, [r7, #4]
	ldr r1, [r1]
	adds r0, r0, #1
	blx FUN_020F2998
	str r1, [r7, #4]
	ldr r1, [sp]
	ldr r0, [r6, #0x64]
	ldr r2, [r1]
	movs r1, #0xc
	ldr r0, [r0, #0x20]
	muls r1, r2, r1
	adds r3, r5, #0
	adds r2, r0, r1
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	ldr r0, [sp]
	ldr r1, [r6, #0x64]
	ldr r0, [r0]
	ldr r1, [r1]
	adds r0, r0, #1
	blx FUN_020F2998
	ldr r0, [sp]
	str r1, [r0]
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x14]
	cmp r0, #0
	bne _0202304E
	ldr r0, [r5]
	str r0, [r4]
_0202304E:
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x18]
	cmp r0, #0
	bne _0202305A
	ldr r0, [r5, #4]
	str r0, [r4, #4]
_0202305A:
	ldr r0, [r6, #0x64]
	ldr r0, [r0, #0x1c]
	cmp r0, #0
	bne _02023066
	ldr r0, [r5, #8]
	str r0, [r4, #8]
_02023066:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02022FA4

	thumb_func_start FUN_02023068
FUN_02023068: @ 0x02023068
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [sp, #0x18]
	adds r7, r1, #0
	str r0, [sp, #0x18]
	ldr r0, [r0, #0x54]
	adds r6, r2, #0
	str r3, [sp]
	cmp r0, #0
	beq _020230F6
	adds r0, r7, #1
	cmp r0, r5
	ble _02023086
	bl FUN_0202551C
_02023086:
	ldr r0, [sp]
	movs r1, #0x28
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r1, #0xc
	ldr r0, [sp]
	muls r1, r5, r1
	bl FUN_0201AA8C
	movs r1, #0
	str r0, [r4, #0x20]
	cmp r5, #0
	ble _020230BE
	adds r2, r1, #0
	adds r0, r1, #0
_020230A6:
	ldr r3, [r4, #0x20]
	adds r1, r1, #1
	str r0, [r3, r2]
	ldr r3, [r4, #0x20]
	adds r3, r3, r2
	str r0, [r3, #4]
	ldr r3, [r4, #0x20]
	adds r3, r3, r2
	str r0, [r3, #8]
	adds r2, #0xc
	cmp r1, r5
	blt _020230A6
_020230BE:
	str r5, [r4]
	movs r0, #0
	str r0, [r4, #4]
	str r7, [r4, #8]
	str r7, [r4, #0xc]
	str r0, [r4, #0x10]
	str r0, [r4, #0x14]
	str r0, [r4, #0x18]
	str r0, [r4, #0x1c]
	movs r0, #1
	adds r1, r6, #0
	tst r1, r0
	beq _020230DA
	str r0, [r4, #0x14]
_020230DA:
	movs r0, #2
	tst r0, r6
	beq _020230E4
	movs r0, #1
	str r0, [r4, #0x18]
_020230E4:
	movs r0, #4
	tst r0, r6
	beq _020230EE
	movs r0, #1
	str r0, [r4, #0x1c]
_020230EE:
	movs r0, #1
	str r0, [r4, #0x24]
	ldr r0, [sp, #0x18]
	str r4, [r0, #0x64]
_020230F6:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02023068

	thumb_func_start FUN_020230F8
FUN_020230F8: @ 0x020230F8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x64]
	cmp r0, #0
	beq _02023112
	ldr r0, [r0, #0x20]
	bl FUN_0201AB0C
	ldr r0, [r4, #0x64]
	bl FUN_0201AB0C
	movs r0, #0
	str r0, [r4, #0x64]
_02023112:
	pop {r4, pc}
	thumb_func_end FUN_020230F8

	thumb_func_start FUN_02023114
FUN_02023114: @ 0x02023114
	ldr r3, _0202311C @ =FUN_0201AA8C
	movs r1, #0x68
	bx r3
	nop
_0202311C: .4byte FUN_0201AA8C
	thumb_func_end FUN_02023114

	thumb_func_start FUN_02023120
FUN_02023120: @ 0x02023120
	ldr r3, _02023124 @ =FUN_0201AB0C
	bx r3
	.align 2, 0
_02023124: .4byte FUN_0201AB0C
	thumb_func_end FUN_02023120

	thumb_func_start FUN_02023128
FUN_02023128: @ 0x02023128
	push {r3, r4}
	adds r4, r0, #0
	adds r3, r1, #0
	movs r2, #0xd
_02023130:
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _02023130
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02023128

	thumb_func_start FUN_0202313C
FUN_0202313C: @ 0x0202313C
	ldr r1, _02023144 @ =0x021D2204
	str r0, [r1]
	bx lr
	nop
_02023144: .4byte 0x021D2204
	thumb_func_end FUN_0202313C

	thumb_func_start FUN_02023148
FUN_02023148: @ 0x02023148
	ldr r0, _02023150 @ =0x021D2204
	movs r1, #0
	str r1, [r0]
	bx lr
	.align 2, 0
_02023150: .4byte 0x021D2204
	thumb_func_end FUN_02023148

	thumb_func_start FUN_02023154
FUN_02023154: @ 0x02023154
	push {r4, r5, r6, lr}
	sub sp, #0x18
	ldr r0, _020231EC @ =0x021D2204
	ldr r1, [r0]
	cmp r1, #0
	beq _020231E6
	ldr r0, [r1, #0x54]
	cmp r0, #0
	beq _0202319E
	adds r1, #0x48
	add r2, sp, #0xc
	blx FUN_020CCDAC
	ldr r0, _020231EC @ =0x021D2204
	add r1, sp, #0xc
	ldr r0, [r0]
	bl FUN_02022F84
	ldr r0, _020231EC @ =0x021D2204
	add r1, sp, #0xc
	ldr r0, [r0]
	add r2, sp, #0
	bl FUN_02022FA4
	ldr r1, _020231EC @ =0x021D2204
	add r0, sp, #0
	ldr r1, [r1]
	bl FUN_02023514
	ldr r0, _020231EC @ =0x021D2204
	ldr r3, [r0]
	ldr r2, [r3, #0x54]
	adds r3, #0x48
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
_0202319E:
	ldr r0, _020231EC @ =0x021D2204
	ldr r5, _020231F0 @ =0x021DA6DC
	ldr r4, [r0]
	adds r3, r4, #0
	adds r2, r4, #0
	adds r4, #0x14
	adds r6, r4, #0
	ldm r6!, {r0, r1}
	stm r5!, {r0, r1}
	ldr r0, [r6]
	adds r2, #0x2c
	str r0, [r5]
	adds r6, r2, #0
	ldr r5, _020231F4 @ =0x021DA6E8
	ldm r6!, {r0, r1}
	stm r5!, {r0, r1}
	ldr r0, [r6]
	adds r3, #0x20
	str r0, [r5]
	adds r6, r3, #0
	ldr r5, _020231F8 @ =0x021DA6F4
	ldm r6!, {r0, r1}
	stm r5!, {r0, r1}
	ldr r0, [r6]
	adds r1, r2, #0
	adds r2, r3, #0
	str r0, [r5]
	ldr r3, _020231FC @ =0x021DA4E8
	adds r0, r4, #0
	blx FUN_020CBF3C
	ldr r1, _02023200 @ =0x021DA51C
	movs r0, #0xe8
	ldr r2, [r1, #0x7c]
	bics r2, r0
	str r2, [r1, #0x7c]
_020231E6:
	add sp, #0x18
	pop {r4, r5, r6, pc}
	nop
_020231EC: .4byte 0x021D2204
_020231F0: .4byte 0x021DA6DC
_020231F4: .4byte 0x021DA6E8
_020231F8: .4byte 0x021DA6F4
_020231FC: .4byte 0x021DA4E8
_02023200: .4byte 0x021DA51C
	thumb_func_end FUN_02023154

	thumb_func_start FUN_02023204
FUN_02023204: @ 0x02023204
	adds r3, r0, #0
	adds r2, r1, #0
	ldm r3!, {r0, r1}
	adds r2, #0x2c
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_02023204

	thumb_func_start FUN_02023214
FUN_02023214: @ 0x02023214
	push {r3, r4}
	adds r3, r1, #0
	adds r4, r0, #0
	str r4, [r3, #0x54]
	adds r2, r3, #0
	ldm r4!, {r0, r1}
	adds r2, #0x48
	stm r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
	movs r0, #1
	str r0, [r3, #0x58]
	str r0, [r3, #0x5c]
	str r0, [r3, #0x60]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02023214

	thumb_func_start FUN_02023234
FUN_02023234: @ 0x02023234
	movs r1, #0
	str r1, [r0, #0x54]
	str r1, [r0, #0x58]
	str r1, [r0, #0x5c]
	str r1, [r0, #0x60]
	bx lr
	thumb_func_end FUN_02023234

	thumb_func_start FUN_02023240
FUN_02023240: @ 0x02023240
	str r0, [r2, #0xc]
	adds r0, r2, #0
	str r1, [r2, #0x10]
	adds r0, #0x44
	ldr r3, _02023250 @ =FUN_020233D8
	ldrb r0, [r0]
	adds r1, r2, #0
	bx r3
	.align 2, 0
_02023250: .4byte FUN_020233D8
	thumb_func_end FUN_02023240

	thumb_func_start FUN_02023254
FUN_02023254: @ 0x02023254
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x20]
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, r3, #0
	adds r1, r4, #0
	adds r5, r2, #0
	bl FUN_02022F38
	adds r3, r6, #0
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x20
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	str r7, [r4, #0x38]
	ldrh r0, [r5]
	strh r0, [r4, #0x3c]
	ldrh r0, [r5, #2]
	strh r0, [r4, #0x3e]
	adds r0, r4, #0
	ldrh r1, [r5, #4]
	adds r0, #0x40
	strh r1, [r0]
	adds r0, r4, #0
	ldrh r1, [r5, #6]
	adds r0, #0x42
	strh r1, [r0]
	adds r0, r4, #0
	bl FUN_02022D74
	add r0, sp, #8
	ldrb r0, [r0, #0x10]
	adds r1, r4, #0
	bl FUN_020233D8
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _020232BA
	str r6, [r4, #0x54]
	adds r2, r4, #0
	ldm r6!, {r0, r1}
	adds r2, #0x48
	stm r2!, {r0, r1}
	ldr r0, [r6]
	str r0, [r2]
	movs r0, #1
	str r0, [r4, #0x58]
	str r0, [r4, #0x5c]
	str r0, [r4, #0x60]
_020232BA:
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02023254

	thumb_func_start FUN_020232BC
FUN_020232BC: @ 0x020232BC
	push {r3, r4, r5, r6, r7, lr}
	ldr r4, [sp, #0x1c]
	adds r6, r0, #0
	adds r7, r1, #0
	adds r0, r3, #0
	adds r1, r4, #0
	adds r5, r2, #0
	bl FUN_02022F38
	adds r2, r4, #0
	ldm r6!, {r0, r1}
	adds r2, #0x14
	stm r2!, {r0, r1}
	ldr r0, [r6]
	str r0, [r2]
	str r7, [r4, #0x38]
	ldrh r0, [r5]
	strh r0, [r4, #0x3c]
	ldrh r0, [r5, #2]
	strh r0, [r4, #0x3e]
	adds r0, r4, #0
	ldrh r1, [r5, #4]
	adds r0, #0x40
	strh r1, [r0]
	adds r0, r4, #0
	ldrh r1, [r5, #6]
	adds r0, #0x42
	strh r1, [r0]
	adds r0, r4, #0
	bl FUN_02022E54
	add r0, sp, #8
	ldrb r0, [r0, #0x10]
	adds r1, r4, #0
	bl FUN_020233D8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020232BC

	thumb_func_start FUN_02023308
FUN_02023308: @ 0x02023308
	push {r4, r5, r6, r7, lr}
	sub sp, #0x3c
	ldr r4, [sp, #0x54]
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, r2, #0
	adds r1, r4, #0
	adds r7, r3, #0
	bl FUN_02022F38
	adds r3, r5, #0
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x20
	stm r2!, {r0, r1}
	ldr r0, [r3]
	adds r3, r6, #0
	str r0, [r2]
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0x14
	stm r2!, {r0, r1}
	ldr r0, [r3]
	adds r1, r5, #0
	str r0, [r2]
	adds r0, r6, #0
	add r2, sp, #0x30
	blx FUN_020CCDAC
	add r0, sp, #0x30
	blx FUN_020CCF80
	str r0, [r4, #0x38]
	movs r6, #0
	add r0, sp, #0x24
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	add r0, sp, #0x18
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	add r0, sp, #0xc
	str r6, [r0]
	str r6, [r0, #4]
	str r6, [r0, #8]
	movs r0, #1
	lsls r0, r0, #0xc
	add r3, sp, #0x30
	str r0, [sp, #8]
	ldm r3!, {r0, r1}
	add r2, sp, #0xc
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r6, [sp]
	str r0, [r2]
	str r6, [sp, #4]
	str r6, [sp, #0x10]
	add r0, sp, #0
	add r1, sp, #0xc
	bl FUN_02020C64
	strh r0, [r4, #0x3e]
	adds r1, r6, #0
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp]
	ldr r0, [sp, #0x38]
	str r1, [sp, #4]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x34]
	str r1, [sp, #8]
	str r0, [sp, #0x14]
	str r1, [sp, #0x10]
	add r0, sp, #0
	add r1, sp, #0xc
	bl FUN_02020C64
	strh r0, [r4, #0x3c]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r0, #0x40
	strh r1, [r0]
	adds r0, r7, #0
	adds r1, r4, #0
	bl FUN_020233D8
	ldr r0, [sp, #0x50]
	cmp r0, #0
	beq _020233D2
	str r5, [r4, #0x54]
	adds r2, r4, #0
	ldm r5!, {r0, r1}
	adds r2, #0x48
	stm r2!, {r0, r1}
	ldr r0, [r5]
	str r0, [r2]
	movs r0, #1
	str r0, [r4, #0x58]
	str r0, [r4, #0x5c]
	str r0, [r4, #0x60]
_020233D2:
	add sp, #0x3c
	pop {r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02023308

	thumb_func_start FUN_020233D8
FUN_020233D8: @ 0x020233D8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r1, #0
	cmp r0, #0
	bne _02023414
	ldr r0, [r5, #0x10]
	str r0, [sp]
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #4]
	ldr r0, _02023488 @ =0x021DA4A4
	str r0, [sp, #8]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	ldr r3, [r5, #0xc]
	blx FUN_020CC84C
	ldr r1, _0202348C @ =0x021DA51C
	movs r0, #0x50
	ldr r2, [r1, #0x7c]
	adds r5, #0x44
	bics r2, r0
	str r2, [r1, #0x7c]
	movs r1, #0
	ldr r0, _02023490 @ =0x0210F6DC
	strb r1, [r5]
	str r1, [r0]
	add sp, #0x10
	pop {r4, r5, r6, pc}
_02023414:
	ldr r4, [r5, #0x38]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	blx FUN_020CCBA0
	asrs r1, r0, #0x1f
	asrs r3, r4, #0x1f
	adds r2, r4, #0
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r2, r0, r2
	adcs r1, r3
	lsrs r4, r2, #0xc
	lsls r0, r1, #0x14
	orrs r4, r0
	ldr r2, [r5, #8]
	asrs r1, r4, #0x1f
	adds r0, r4, #0
	asrs r3, r2, #0x1f
	blx FUN_020F2948
	movs r2, #2
	movs r3, #0
	lsls r2, r2, #0xa
	adds r6, r0, r2
	adcs r1, r3
	lsls r0, r1, #0x14
	lsrs r3, r6, #0xc
	orrs r3, r0
	ldr r0, [r5, #0xc]
	rsbs r1, r4, #0
	str r0, [sp]
	ldr r0, [r5, #0x10]
	str r0, [sp, #4]
	lsls r0, r2, #1
	str r0, [sp, #8]
	ldr r0, _02023488 @ =0x021DA4A4
	rsbs r2, r3, #0
	str r0, [sp, #0xc]
	adds r0, r4, #0
	blx FUN_020CC998
	ldr r1, _0202348C @ =0x021DA51C
	movs r0, #0x50
	ldr r2, [r1, #0x7c]
	adds r5, #0x44
	bics r2, r0
	str r2, [r1, #0x7c]
	movs r0, #1
	strb r0, [r5]
	ldr r0, _02023490 @ =0x0210F6DC
	movs r1, #0
	str r1, [r0]
	add sp, #0x10
	pop {r4, r5, r6, pc}
	.align 2, 0
_02023488: .4byte 0x021DA4A4
_0202348C: .4byte 0x021DA51C
_02023490: .4byte 0x0210F6DC
	thumb_func_end FUN_020233D8

	thumb_func_start FUN_02023494
FUN_02023494: @ 0x02023494
	adds r2, r1, #0
	adds r2, #0x46
	strh r0, [r2]
	adds r0, r1, #0
	adds r0, #0x46
	ldrh r0, [r0]
	ldr r3, _020234C8 @ =FUN_020233D8
	asrs r0, r0, #4
	lsls r2, r0, #2
	ldr r0, _020234CC @ =0x021094DC
	ldrsh r2, [r0, r2]
	str r2, [r1]
	adds r2, r1, #0
	adds r2, #0x46
	ldrh r2, [r2]
	asrs r2, r2, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r0, [r0, r2]
	str r0, [r1, #4]
	adds r0, r1, #0
	adds r0, #0x44
	ldrb r0, [r0]
	bx r3
	nop
_020234C8: .4byte FUN_020233D8
_020234CC: .4byte 0x021094DC
	thumb_func_end FUN_02023494

	thumb_func_start FUN_020234D0
FUN_020234D0: @ 0x020234D0
	adds r2, r1, #0
	adds r2, #0x46
	ldrh r2, [r2]
	ldr r3, _0202350C @ =FUN_020233D8
	adds r2, r2, r0
	adds r0, r1, #0
	adds r0, #0x46
	strh r2, [r0]
	adds r0, r1, #0
	adds r0, #0x46
	ldrh r0, [r0]
	asrs r0, r0, #4
	lsls r2, r0, #2
	ldr r0, _02023510 @ =0x021094DC
	ldrsh r2, [r0, r2]
	str r2, [r1]
	adds r2, r1, #0
	adds r2, #0x46
	ldrh r2, [r2]
	asrs r2, r2, #4
	lsls r2, r2, #1
	adds r2, r2, #1
	lsls r2, r2, #1
	ldrsh r0, [r0, r2]
	str r0, [r1, #4]
	adds r0, r1, #0
	adds r0, #0x44
	ldrb r0, [r0]
	bx r3
	nop
_0202350C: .4byte FUN_020233D8
_02023510: .4byte 0x021094DC
	thumb_func_end FUN_020234D0

	thumb_func_start FUN_02023514
FUN_02023514: @ 0x02023514
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	adds r5, r0, #0
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r5, #0
	adds r2, r0, #0
	blx FUN_020CCD78
	adds r4, #0x20
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r4, #0
	blx FUN_020CCD78
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023514

	thumb_func_start FUN_02023534
FUN_02023534: @ 0x02023534
	ldrh r2, [r0]
	strh r2, [r1, #0x3c]
	ldrh r2, [r0, #2]
	strh r2, [r1, #0x3e]
	adds r2, r1, #0
	ldrh r3, [r0, #4]
	adds r2, #0x40
	strh r3, [r2]
	ldrh r2, [r0, #6]
	adds r0, r1, #0
	adds r0, #0x42
	strh r2, [r0]
	ldr r3, _02023554 @ =FUN_02022E54
	adds r0, r1, #0
	bx r3
	nop
_02023554: .4byte FUN_02022E54
	thumb_func_end FUN_02023534

	thumb_func_start FUN_02023558
FUN_02023558: @ 0x02023558
	ldrh r2, [r0]
	strh r2, [r1, #0x3c]
	ldrh r2, [r0, #2]
	strh r2, [r1, #0x3e]
	adds r2, r1, #0
	ldrh r3, [r0, #4]
	adds r2, #0x40
	strh r3, [r2]
	ldrh r2, [r0, #6]
	adds r0, r1, #0
	adds r0, #0x42
	strh r2, [r0]
	ldr r3, _02023578 @ =FUN_02022D74
	adds r0, r1, #0
	bx r3
	nop
_02023578: .4byte FUN_02022D74
	thumb_func_end FUN_02023558

	thumb_func_start FUN_0202357C
FUN_0202357C: @ 0x0202357C
	ldrh r3, [r1, #0x3c]
	ldrh r2, [r0]
	adds r2, r3, r2
	strh r2, [r1, #0x3c]
	ldrh r3, [r1, #0x3e]
	ldrh r2, [r0, #2]
	adds r2, r3, r2
	strh r2, [r1, #0x3e]
	adds r2, r1, #0
	adds r2, #0x40
	ldrh r2, [r2]
	ldrh r0, [r0, #4]
	ldr r3, _020235A4 @ =FUN_02022E54
	adds r2, r2, r0
	adds r0, r1, #0
	adds r0, #0x40
	strh r2, [r0]
	adds r0, r1, #0
	bx r3
	nop
_020235A4: .4byte FUN_02022E54
	thumb_func_end FUN_0202357C

	thumb_func_start FUN_020235A8
FUN_020235A8: @ 0x020235A8
	ldrh r3, [r1, #0x3c]
	ldrh r2, [r0]
	adds r2, r3, r2
	strh r2, [r1, #0x3c]
	ldrh r3, [r1, #0x3e]
	ldrh r2, [r0, #2]
	adds r2, r3, r2
	strh r2, [r1, #0x3e]
	adds r2, r1, #0
	adds r2, #0x40
	ldrh r2, [r2]
	ldrh r0, [r0, #4]
	ldr r3, _020235D0 @ =FUN_02022D74
	adds r2, r2, r0
	adds r0, r1, #0
	adds r0, #0x40
	strh r2, [r0]
	adds r0, r1, #0
	bx r3
	nop
_020235D0: .4byte FUN_02022D74
	thumb_func_end FUN_020235A8

	thumb_func_start FUN_020235D4
FUN_020235D4: @ 0x020235D4
	ldr r3, _020235DC @ =FUN_02022D74
	str r0, [r1, #0x38]
	adds r0, r1, #0
	bx r3
	.align 2, 0
_020235DC: .4byte FUN_02022D74
	thumb_func_end FUN_020235D4

	thumb_func_start FUN_020235E0
FUN_020235E0: @ 0x020235E0
	push {r4, lr}
	adds r3, r1, #0
	adds r4, r0, #0
	adds r2, r3, #0
	ldm r4!, {r0, r1}
	adds r2, #0x20
	stm r2!, {r0, r1}
	ldr r0, [r4]
	str r0, [r2]
	adds r0, r3, #0
	bl FUN_02022D74
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020235E0

	thumb_func_start FUN_020235FC
FUN_020235FC: @ 0x020235FC
	ldr r2, [r1, #0x38]
	ldr r3, _02023608 @ =FUN_02022D74
	adds r0, r2, r0
	str r0, [r1, #0x38]
	adds r0, r1, #0
	bx r3
	.align 2, 0
_02023608: .4byte FUN_02022D74
	thumb_func_end FUN_020235FC

	thumb_func_start FUN_0202360C
FUN_0202360C: @ 0x0202360C
	adds r0, #0x46
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_0202360C

	thumb_func_start FUN_02023614
FUN_02023614: @ 0x02023614
	ldr r0, [r0, #0x38]
	bx lr
	thumb_func_end FUN_02023614

	thumb_func_start FUN_02023618
FUN_02023618: @ 0x02023618
	ldrh r2, [r1, #0x3c]
	strh r2, [r0]
	ldrh r2, [r1, #0x3e]
	strh r2, [r0, #2]
	adds r2, r1, #0
	adds r2, #0x40
	ldrh r2, [r2]
	adds r1, #0x42
	strh r2, [r0, #4]
	ldrh r1, [r1]
	strh r1, [r0, #6]
	bx lr
	thumb_func_end FUN_02023618

	thumb_func_start FUN_02023630
FUN_02023630: @ 0x02023630
	adds r2, r1, #0
	adds r2, #0x20
	adds r3, r0, #0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end FUN_02023630

	thumb_func_start FUN_02023640
FUN_02023640: @ 0x02023640
	adds r2, r1, #0
	adds r2, #0x14
	adds r3, r0, #0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	thumb_func_end FUN_02023640

	thumb_func_start FUN_02023650
FUN_02023650: @ 0x02023650
	ldr r0, [r0, #0x10]
	bx lr
	thumb_func_end FUN_02023650

	thumb_func_start FUN_02023654
FUN_02023654: @ 0x02023654
	ldr r0, [r0, #0xc]
	bx lr
	thumb_func_end FUN_02023654

	thumb_func_start FUN_02023658
FUN_02023658: @ 0x02023658
	ldr r0, [r0, #0x54]
	bx lr
	thumb_func_end FUN_02023658

	thumb_func_start FUN_0202365C
FUN_0202365C: @ 0x0202365C
	adds r3, r0, #0
	adds r2, r1, #0
	ldm r3!, {r0, r1}
	adds r2, #0x20
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_0202365C

	thumb_func_start FUN_0202366C
FUN_0202366C: @ 0x0202366C
	adds r3, r0, #0
	adds r2, r1, #0
	ldm r3!, {r0, r1}
	adds r2, #0x14
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_0202366C

	thumb_func_start FUN_0202367C
FUN_0202367C: @ 0x0202367C
	ldr r2, [r0, #0x64]
	cmp r2, #0
	beq _02023690
	cmp r1, #0
	beq _0202368C
	movs r0, #1
	str r0, [r2, #0x24]
	bx lr
_0202368C:
	movs r0, #0
	str r0, [r2, #0x24]
_02023690:
	bx lr
	.align 2, 0
	thumb_func_end FUN_0202367C

	thumb_func_start FUN_02023694
FUN_02023694: @ 0x02023694
	movs r2, #0
	strb r2, [r0]
	strb r2, [r0, #1]
	str r2, [r0, #4]
	adds r1, r0, #0
	str r2, [r0, #8]
	adds r1, #0xd0
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xd4
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xd8
	str r2, [r1]
	adds r1, r0, #0
	adds r1, #0xdc
	str r2, [r1]
	strb r2, [r0, #3]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02023694

	thumb_func_start FUN_020236BC
FUN_020236BC: @ 0x020236BC
	movs r3, #0
	str r3, [r0, #0x28]
	adds r1, r0, #0
	str r3, [r0, #0x2c]
	adds r1, #0x84
	str r3, [r1]
	adds r1, r0, #0
	adds r1, #0x88
	str r3, [r1]
	adds r1, r0, #0
	adds r1, #0x8c
	str r3, [r1]
	adds r1, r0, #0
	adds r1, #0x90
	adds r2, r0, #0
	str r3, [r1]
	adds r2, #0xa0
	movs r1, #0x10
_020236E0:
	strb r3, [r2]
	adds r2, r2, #1
	subs r1, r1, #1
	bne _020236E0
	adds r2, r0, #0
	movs r1, #0
	adds r2, #0x94
	str r1, [r2]
	adds r2, r0, #0
	adds r2, #0x98
	str r1, [r2]
	adds r2, r0, #0
	adds r2, #0x9c
	str r1, [r2]
	adds r2, r0, #0
	adds r2, #0xb0
	str r1, [r2]
	str r1, [r0]
	str r1, [r0, #4]
	movs r2, #1
	str r1, [r0, #8]
	lsls r2, r2, #0xc
	str r2, [r0, #0xc]
	str r2, [r0, #0x10]
	str r2, [r0, #0x14]
	adds r2, r0, #0
	str r1, [r0, #0x18]
	adds r2, #0xb6
	strh r1, [r2]
	adds r2, r0, #0
	adds r2, #0xb4
	strb r1, [r2]
	adds r2, r0, #0
	adds r2, #0xbc
	str r1, [r2]
	adds r2, r0, #0
	adds r2, #0xc0
	str r1, [r2]
	adds r2, r0, #0
	adds r2, #0x24
	strb r1, [r2]
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020236BC

	thumb_func_start FUN_02023738
FUN_02023738: @ 0x02023738
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldr r0, _02023774 @ =0x021D2208
	adds r4, r1, #0
	ldr r0, [r0]
	cmp r0, #0
	beq _0202374A
	bl FUN_0202551C
_0202374A:
	movs r1, #0xe0
	adds r0, r4, #0
	muls r1, r6, r1
	bl FUN_0201AA8C
	ldr r7, _02023774 @ =0x021D2208
	movs r4, #0
	str r0, [r7]
	str r6, [r7, #4]
	cmp r6, #0
	ble _02023772
	adds r5, r4, #0
_02023762:
	ldr r0, [r7]
	adds r0, r0, r5
	bl FUN_02023694
	adds r4, r4, #1
	adds r5, #0xe0
	cmp r4, r6
	blt _02023762
_02023772:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
_02023774: .4byte 0x021D2208
	thumb_func_end FUN_02023738

	thumb_func_start FUN_02023778
FUN_02023778: @ 0x02023778
	push {r4, r5, r6, lr}
	ldr r6, _020237AC @ =0x021D2208
	movs r4, #0
	ldr r0, [r6, #4]
	cmp r0, #0
	ble _02023798
	adds r5, r4, #0
_02023786:
	ldr r0, [r6]
	adds r0, r0, r5
	bl FUN_02023874
	ldr r0, [r6, #4]
	adds r4, r4, #1
	adds r5, #0xe0
	cmp r4, r0
	blt _02023786
_02023798:
	ldr r0, _020237AC @ =0x021D2208
	ldr r0, [r0]
	bl FUN_0201AB0C
	ldr r0, _020237AC @ =0x021D2208
	movs r1, #0
	str r1, [r0]
	str r1, [r0, #4]
	pop {r4, r5, r6, pc}
	nop
_020237AC: .4byte 0x021D2208
	thumb_func_end FUN_02023778

	thumb_func_start FUN_020237B0
FUN_020237B0: @ 0x020237B0
	push {r3, r4, r5, r6, r7, lr}
	ldr r6, _020237E8 @ =0x021D2208
	movs r4, #0
	ldr r0, [r6, #4]
	cmp r0, #0
	ble _020237E4
	adds r5, r4, #0
	movs r7, #2
_020237C0:
	ldr r0, [r6]
	adds r0, r0, r5
	ldrb r1, [r0, #1]
	cmp r1, #1
	bne _020237CE
	bl FUN_02023950
_020237CE:
	ldr r0, [r6]
	adds r1, r0, r5
	ldrb r0, [r1, #3]
	cmp r0, #1
	bne _020237DA
	strb r7, [r1, #3]
_020237DA:
	ldr r0, [r6, #4]
	adds r4, r4, #1
	adds r5, #0xe0
	cmp r4, r0
	blt _020237C0
_020237E4:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020237E8: .4byte 0x021D2208
	thumb_func_end FUN_020237B0

	thumb_func_start FUN_020237EC
FUN_020237EC: @ 0x020237EC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_0202391C
	adds r4, r0, #0
	bne _02023800
	bl FUN_0202551C
	movs r0, #0
	pop {r3, r4, r5, pc}
_02023800:
	movs r0, #1
	strb r0, [r4]
	strb r0, [r4, #1]
	ldr r2, [r5]
	movs r1, #0xc4
	ldr r0, [r5, #4]
	muls r1, r2, r1
	bl FUN_0201AA8C
	str r0, [r4, #4]
	ldr r0, [r5]
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl FUN_020236BC
	adds r1, r4, #0
	adds r0, r4, #0
	adds r1, #0xc
	adds r0, #0xc8
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0xcc
	str r1, [r0]
	ldr r1, [r5]
	ldr r0, [r5, #4]
	lsls r1, r1, #2
	bl FUN_0201AA8C
	adds r1, r4, #0
	adds r1, #0xd0
	str r0, [r1]
	adds r0, r4, #0
	bl FUN_02024248
	ldr r0, [r5, #4]
	movs r1, #0x10
	bl FUN_0201AA8C
	adds r1, r4, #0
	adds r1, #0xd8
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0xd8
	ldr r0, [r0]
	ldr r1, [r5, #4]
	movs r2, #4
	bl FUN_0201AC14
	ldr r0, [r5]
	ldr r1, [r5, #4]
	bl FUN_0202068C
	adds r1, r4, #0
	adds r1, #0xdc
	str r0, [r1]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020237EC

	thumb_func_start FUN_02023874
FUN_02023874: @ 0x02023874
	push {r4, lr}
	adds r4, r0, #0
	bne _02023882
	bl FUN_0202551C
	movs r0, #0
	pop {r4, pc}
_02023882:
	ldrb r1, [r4]
	cmp r1, #0
	beq _020238B6
	bl FUN_020238BC
	ldr r0, [r4, #4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	adds r0, #0xd0
	ldr r0, [r0]
	bl FUN_0201AB0C
	adds r0, r4, #0
	adds r0, #0xd8
	ldr r0, [r0]
	bl FUN_0201AB0C
	adds r0, r4, #0
	adds r0, #0xdc
	ldr r0, [r0]
	bl FUN_020206C8
	adds r0, r4, #0
	bl FUN_02023694
_020238B6:
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02023874

	thumb_func_start FUN_020238BC
FUN_020238BC: @ 0x020238BC
	push {r3, r4, r5, lr}
	cmp r0, #0
	bne _020238CC
	bne _020238C8
	bl FUN_0202551C
_020238C8:
	movs r0, #0
	pop {r3, r4, r5, pc}
_020238CC:
	ldrb r1, [r0]
	cmp r1, #0
	beq _020238F2
	adds r1, r0, #0
	adds r1, #0xc8
	adds r4, r0, #0
	ldr r1, [r1]
	adds r4, #0xc
	cmp r1, r4
	beq _020238F2
_020238E0:
	adds r0, r1, #0
	adds r0, #0xbc
	ldr r5, [r0]
	adds r0, r1, #0
	bl FUN_02023DA4
	adds r1, r5, #0
	cmp r5, r4
	bne _020238E0
_020238F2:
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020238BC

	thumb_func_start FUN_020238F8
FUN_020238F8: @ 0x020238F8
	push {r4, lr}
	adds r4, r0, #0
	bne _02023902
	bl FUN_0202551C
_02023902:
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _0202390C
	movs r0, #0
	pop {r4, pc}
_0202390C:
	movs r0, #1
	pop {r4, pc}
	thumb_func_end FUN_020238F8

	thumb_func_start FUN_02023910
FUN_02023910: @ 0x02023910
	ldrb r1, [r0, #3]
	cmp r1, #2
	bne _0202391A
	movs r1, #0
	strb r1, [r0, #3]
_0202391A:
	bx lr
	thumb_func_end FUN_02023910

	thumb_func_start FUN_0202391C
FUN_0202391C: @ 0x0202391C
	push {r3, r4}
	ldr r0, _0202394C @ =0x021D2208
	movs r1, #0
	ldr r3, [r0, #4]
	cmp r3, #0
	ble _02023944
	ldr r4, [r0]
	adds r2, r4, #0
_0202392C:
	ldrb r0, [r2]
	cmp r0, #0
	bne _0202393C
	movs r0, #0xe0
	muls r0, r1, r0
	adds r0, r4, r0
	pop {r3, r4}
	bx lr
_0202393C:
	adds r1, r1, #1
	adds r2, #0xe0
	cmp r1, r3
	blt _0202392C
_02023944:
	movs r0, #0
	pop {r3, r4}
	bx lr
	nop
_0202394C: .4byte 0x021D2208
	thumb_func_end FUN_0202391C

	thumb_func_start FUN_02023950
FUN_02023950: @ 0x02023950
	push {r3, r4, r5, r6, lr}
	sub sp, #0x24
	adds r5, r0, #0
	bne _0202395C
	bl FUN_0202551C
_0202395C:
	add r0, sp, #0
	blx FUN_020CAFEC
	adds r0, r5, #0
	adds r0, #0xc8
	ldr r4, [r0]
	adds r5, #0xc
	cmp r4, r5
	beq _020239CC
	add r6, sp, #0
_02023970:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #1
	bne _020239C4
	ldr r2, [r4, #0x20]
	cmp r2, #0
	beq _02023986
	ldr r1, [r4, #0x1c]
	adds r0, r4, #0
	blx r2
_02023986:
	adds r0, r4, #0
	bl FUN_020243FC
	adds r0, r4, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #3
	bne _0202399E
	adds r0, r4, #0
	bl FUN_02023FEC
	b _020239A8
_0202399E:
	cmp r0, #2
	bne _020239A8
	adds r0, r4, #0
	bl FUN_02023FC0
_020239A8:
	ldr r2, [r4, #0x18]
	cmp r2, #0
	bne _020239B0
	adds r2, r6, #0
_020239B0:
	adds r0, r4, #0
	adds r3, r4, #0
	adds r0, #0x30
	adds r1, r4, #0
	adds r3, #0xc
	bl FUN_0201F554
	adds r0, r4, #0
	bl FUN_0202441C
_020239C4:
	adds r4, #0xbc
	ldr r4, [r4]
	cmp r4, r5
	bne _02023970
_020239CC:
	add sp, #0x24
	pop {r3, r4, r5, r6, pc}
	thumb_func_end FUN_02023950

	thumb_func_start FUN_020239D0
FUN_020239D0: @ 0x020239D0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r6, [r5, #0x28]
	adds r4, r1, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_02023C04
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02023C20
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_02023C9C
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023A06
	adds r6, #0xc
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_020242E4
_02023A06:
	adds r0, r5, #0
	movs r1, #2
	adds r0, #0xb4
	strb r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0xb6
	strh r1, [r0]
	adds r5, #0xb8
	str r1, [r5]
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_020239D0

	thumb_func_start FUN_02023A20
FUN_02023A20: @ 0x02023A20
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r6, [r5, #0x28]
	adds r4, r1, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_02023C04
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023A4A
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, #0x94
	adds r1, #0x98
	adds r2, #0x9c
	bl FUN_02023B70
_02023A4A:
	adds r0, r5, #0
	ldr r1, [r4, #0x1c]
	adds r0, #0x94
	str r1, [r0]
	adds r0, r5, #0
	ldr r1, [r4, #0x20]
	adds r0, #0x98
	str r1, [r0]
	adds r0, r5, #0
	ldr r1, [r4, #0x24]
	adds r0, #0x9c
	str r1, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02023CF0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02023D24
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023A86
	adds r6, #0xc
	adds r0, r6, #0
	adds r1, r5, #0
	bl FUN_020242E4
_02023A86:
	adds r0, r5, #0
	movs r1, #3
	adds r0, #0xb4
	strb r1, [r0]
	ldr r0, [r4, #8]
	movs r1, #0
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0xb6
	strh r1, [r0]
	adds r5, #0xb8
	str r1, [r5]
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02023A20

	thumb_func_start FUN_02023AA0
FUN_02023AA0: @ 0x02023AA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r7, r3, #0
	blx FUN_020BE3DC
	str r0, [sp, #8]
	adds r0, r5, #0
	blx FUN_020BE3F0
	str r0, [sp, #4]
	adds r0, r5, #0
	blx FUN_020BE51C
	str r0, [sp]
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _02023ADE
	ldr r3, _02023B30 @ =_02110924
	movs r1, #0
	ldr r3, [r3]
	adds r2, r1, #0
	blx r3
	str r0, [r4]
	cmp r0, #0
	bne _02023AE2
	bl FUN_0202551C
	b _02023AE2
_02023ADE:
	movs r0, #0
	str r0, [r4]
_02023AE2:
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _02023AFE
	ldr r3, _02023B30 @ =_02110924
	movs r1, #1
	ldr r3, [r3]
	movs r2, #0
	blx r3
	str r0, [r6]
	cmp r0, #0
	bne _02023B02
	bl FUN_0202551C
	b _02023B02
_02023AFE:
	movs r0, #0
	str r0, [r6]
_02023B02:
	ldr r0, [sp]
	cmp r0, #0
	beq _02023B26
	ldr r3, _02023B34 @ =_0211092C
	movs r1, #2
	ldrh r2, [r5, #0x20]
	lsls r1, r1, #0xe
	ldr r3, [r3]
	ands r1, r2
	movs r2, #0
	blx r3
	str r0, [r7]
	cmp r0, #0
	bne _02023B2A
	bl FUN_0202551C
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
_02023B26:
	movs r0, #0
	str r0, [r7]
_02023B2A:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02023B30: .4byte _02110924
_02023B34: .4byte _0211092C
	thumb_func_end FUN_02023AA0

	thumb_func_start FUN_02023B38
FUN_02023B38: @ 0x02023B38
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r3, #0
	blx FUN_020BE4D0
	adds r0, r5, #0
	blx FUN_020BE588
	str r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023B38

	thumb_func_start FUN_02023B4C
FUN_02023B4C: @ 0x02023B4C
	push {r3, r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r2]
	ldr r2, [r3]
	adds r5, r0, #0
	blx FUN_020BE404
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	ldr r1, [r1]
	blx FUN_020BE530
	adds r0, r4, #0
	adds r1, r5, #0
	blx FUN_020BED00
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02023B4C

	thumb_func_start FUN_02023B70
FUN_02023B70: @ 0x02023B70
	push {r3, r4, r5, lr}
	ldr r0, [r0]
	adds r5, r1, #0
	adds r4, r2, #0
	cmp r0, #0
	beq _02023B82
	ldr r1, _02023B9C @ =_02110928
	ldr r1, [r1]
	blx r1
_02023B82:
	ldr r0, [r5]
	cmp r0, #0
	beq _02023B8E
	ldr r1, _02023B9C @ =_02110928
	ldr r1, [r1]
	blx r1
_02023B8E:
	ldr r0, [r4]
	cmp r0, #0
	beq _02023B9A
	ldr r1, _02023BA0 @ =_02110930
	ldr r1, [r1]
	blx r1
_02023B9A:
	pop {r3, r4, r5, pc}
	.align 2, 0
_02023B9C: .4byte _02110928
_02023BA0: .4byte _02110930
	thumb_func_end FUN_02023B70

	thumb_func_start FUN_02023BA4
FUN_02023BA4: @ 0x02023BA4
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	beq _02023BB4
	cmp r5, #0
	bne _02023BBA
_02023BB4:
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02023BBA:
	blx FUN_020BE3DC
	str r0, [sp]
	adds r0, r4, #0
	blx FUN_020BE3F0
	str r0, [sp, #4]
	adds r0, r4, #0
	blx FUN_020BE51C
	adds r4, r0, #0
	adds r0, r5, #0
	blx FUN_020BE3DC
	adds r6, r0, #0
	adds r0, r5, #0
	blx FUN_020BE3F0
	adds r7, r0, #0
	adds r0, r5, #0
	blx FUN_020BE51C
	ldr r1, [sp]
	cmp r1, r6
	bne _02023BF6
	ldr r1, [sp, #4]
	cmp r1, r7
	bne _02023BF6
	cmp r4, r0
	beq _02023BFC
_02023BF6:
	add sp, #8
	movs r0, #0
	pop {r3, r4, r5, r6, r7, pc}
_02023BFC:
	movs r0, #1
	add sp, #8
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02023BA4

	thumb_func_start FUN_02023C04
FUN_02023C04: @ 0x02023C04
	push {r4, lr}
	adds r4, r1, #0
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r0, [r0]
	cmp r0, #0
	beq _02023C1C
	bl FUN_02020738
	movs r0, #0
	adds r4, #0xb0
	str r0, [r4]
_02023C1C:
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02023C04

	thumb_func_start FUN_02023C20
FUN_02023C20: @ 0x02023C20
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0x8c
	ldr r4, [r0]
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r1, #0x88
	adds r2, #0x8c
	bl FUN_02024328
	adds r1, r5, #0
	adds r1, #0x84
	str r0, [r1]
	adds r1, r5, #0
	adds r1, #0x88
	adds r0, r5, #0
	ldr r1, [r1]
	adds r0, #0x30
	blx FUN_020BE120
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #3
	beq _02023C62
	adds r1, r5, #0
	adds r1, #0x8c
	ldr r1, [r1]
	adds r0, r4, #0
	bl FUN_02023BA4
	b _02023C64
_02023C62:
	movs r0, #0
_02023C64:
	cmp r0, #0
	bne _02023C98
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023C82
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, #0x94
	adds r1, #0x98
	adds r2, #0x9c
	bl FUN_02023B70
_02023C82:
	adds r0, r5, #0
	adds r0, #0x8c
	adds r1, r5, #0
	adds r2, r5, #0
	adds r5, #0x9c
	ldr r0, [r0]
	adds r1, #0x94
	adds r2, #0x98
	adds r3, r5, #0
	bl FUN_02023AA0
_02023C98:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02023C20

	thumb_func_start FUN_02023C9C
FUN_02023C9C: @ 0x02023C9C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r2, #0
	adds r6, r0, #0
	adds r5, r1, #0
	adds r0, r4, #0
	bl FUN_02024374
	adds r1, r5, #0
	adds r1, #0x90
	adds r3, r5, #0
	adds r3, #0xa0
	str r0, [r1]
	adds r4, #0xc
	adds r2, r3, #0
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	adds r0, r5, #0
	adds r0, #0x9c
	ldr r0, [r0]
	adds r1, r2, #0
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	adds r2, r5, #0
	adds r3, r5, #0
	str r0, [sp, #4]
	adds r6, #0xdc
	adds r2, #0x90
	adds r3, #0x94
	ldr r0, [r6]
	ldr r2, [r2]
	ldr r3, [r3]
	bl FUN_020206E0
	adds r5, #0xb0
	str r0, [r5]
	add sp, #8
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02023C9C

	thumb_func_start FUN_02023CF0
FUN_02023CF0: @ 0x02023CF0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, r4, #0
	adds r1, #0x88
	adds r2, #0x8c
	bl FUN_02024328
	adds r1, r5, #0
	adds r1, #0x84
	str r0, [r1]
	adds r1, r5, #0
	adds r1, #0x88
	adds r0, r5, #0
	ldr r1, [r1]
	adds r0, #0x30
	blx FUN_020BE120
	adds r0, r4, #0
	bl FUN_02024374
	adds r5, #0x90
	str r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023CF0

	thumb_func_start FUN_02023D24
FUN_02023D24: @ 0x02023D24
	push {r3, r4}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r3, r1, #0
	adds r3, #0xc
	adds r2, #0xa0
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	movs r0, #0
	adds r4, #0xb0
	str r0, [r4]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02023D24

	thumb_func_start FUN_02023D44
FUN_02023D44: @ 0x02023D44
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r6, [r5]
	cmp r6, #0
	bne _02023D52
	movs r0, #0
	pop {r4, r5, r6, pc}
_02023D52:
	adds r0, r6, #0
	bl FUN_02024280
	adds r4, r0, #0
	bne _02023D60
	movs r0, #0
	pop {r4, r5, r6, pc}
_02023D60:
	adds r3, r5, #0
	str r6, [r4, #0x28]
	adds r3, #8
	ldm r3!, {r0, r1}
	adds r2, r4, #0
	stm r2!, {r0, r1}
	ldr r0, [r3]
	adds r3, r5, #0
	str r0, [r2]
	adds r3, #0x14
	adds r2, r4, #0
	ldm r3!, {r0, r1}
	adds r2, #0xc
	stm r2!, {r0, r1}
	ldr r0, [r3]
	movs r1, #0
	str r0, [r2]
	adds r0, r4, #0
	adds r0, #0xb6
	strh r1, [r0]
	adds r0, r4, #0
	movs r1, #1
	adds r0, #0x24
	strb r1, [r0]
	adds r0, r4, #0
	adds r0, #0xb4
	strb r1, [r0]
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl FUN_02024380
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02023D44

	thumb_func_start FUN_02023DA4
FUN_02023DA4: @ 0x02023DA4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bne _02023DAE
	bl FUN_0202551C
_02023DAE:
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #1
	bne _02023DBC
	bl FUN_0202551C
_02023DBC:
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	ldr r4, [r5, #0x28]
	cmp r0, #0
	bne _02023DCC
	movs r0, #0
	pop {r3, r4, r5, pc}
_02023DCC:
	adds r0, r5, #0
	bl FUN_02024308
	adds r0, r5, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023DEC
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r5, #0
	adds r0, #0x94
	adds r1, #0x98
	adds r2, #0x9c
	bl FUN_02023B70
_02023DEC:
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02023C04
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_020242AC
	movs r0, #1
	strb r0, [r4, #3]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02023DA4

	thumb_func_start FUN_02023E04
FUN_02023E04: @ 0x02023E04
	push {r3, r4}
	adds r4, r0, #0
	str r1, [r4]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r3, [sp, #8]
	adds r2, r4, #0
	adds r2, #0xc
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [sp, #0xc]
	str r0, [r4, #0x1c]
	ldr r0, [sp, #0x10]
	str r0, [r4, #0x20]
	ldr r0, [sp, #0x14]
	str r0, [r4, #0x24]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02023E04

	thumb_func_start FUN_02023E2C
FUN_02023E2C: @ 0x02023E2C
	push {r3, r4}
	adds r4, r0, #0
	str r1, [r4]
	str r2, [r4, #4]
	str r3, [r4, #8]
	ldr r3, [sp, #8]
	adds r2, r4, #0
	adds r2, #0xc
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	movs r0, #0
	str r0, [r4, #0x1c]
	str r0, [r4, #0x20]
	str r0, [r4, #0x24]
	pop {r3, r4}
	bx lr
	thumb_func_end FUN_02023E2C

	thumb_func_start FUN_02023E50
FUN_02023E50: @ 0x02023E50
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	bne _02023E5E
	bl FUN_0202551C
_02023E5E:
	ldm r5!, {r0, r1}
	stm r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023E50

	thumb_func_start FUN_02023E68
FUN_02023E68: @ 0x02023E68
	push {r4, lr}
	adds r4, r0, #0
	bne _02023E72
	bl FUN_0202551C
_02023E72:
	adds r0, r4, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02023E68

	thumb_func_start FUN_02023E78
FUN_02023E78: @ 0x02023E78
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	bne _02023E86
	bl FUN_0202551C
_02023E86:
	ldm r5!, {r0, r1}
	adds r4, #0xc
	stm r4!, {r0, r1}
	ldr r0, [r5]
	str r0, [r4]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02023E78

	thumb_func_start FUN_02023E94
FUN_02023E94: @ 0x02023E94
	push {r4, lr}
	adds r4, r0, #0
	bne _02023E9E
	bl FUN_0202551C
_02023E9E:
	adds r4, #0xc
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02023E94

	thumb_func_start FUN_02023EA4
FUN_02023EA4: @ 0x02023EA4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023EB2
	bl FUN_0202551C
_02023EB2:
	adds r5, #0x24
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023EA4

	thumb_func_start FUN_02023EB8
FUN_02023EB8: @ 0x02023EB8
	push {r4, lr}
	adds r4, r0, #0
	bne _02023EC2
	bl FUN_0202551C
_02023EC2:
	adds r4, #0x24
	ldrb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023EB8

	thumb_func_start FUN_02023EC8
FUN_02023EC8: @ 0x02023EC8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023ED6
	bl FUN_0202551C
_02023ED6:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02024380
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023EC8

	thumb_func_start FUN_02023EE0
FUN_02023EE0: @ 0x02023EE0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023EEE
	bl FUN_0202551C
_02023EEE:
	adds r5, #0xb6
	strh r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023EE0

	thumb_func_start FUN_02023EF4
FUN_02023EF4: @ 0x02023EF4
	push {r4, lr}
	adds r4, r0, #0
	bne _02023EFE
	bl FUN_0202551C
_02023EFE:
	adds r4, #0xb6
	ldrh r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023EF4

	thumb_func_start FUN_02023F04
FUN_02023F04: @ 0x02023F04
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023F12
	bl FUN_0202551C
_02023F12:
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_020243A4
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023F04

	thumb_func_start FUN_02023F1C
FUN_02023F1C: @ 0x02023F1C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023F2A
	bl FUN_0202551C
_02023F2A:
	adds r5, #0xb8
	str r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02023F1C

	thumb_func_start FUN_02023F30
FUN_02023F30: @ 0x02023F30
	push {r4, lr}
	adds r4, r0, #0
	bne _02023F3A
	bl FUN_0202551C
_02023F3A:
	adds r4, #0xb8
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023F30

	thumb_func_start FUN_02023F40
FUN_02023F40: @ 0x02023F40
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02023F4E
	bl FUN_0202551C
_02023F4E:
	adds r1, r5, #0
	adds r1, #0xb6
	ldrh r1, [r1]
	adds r0, r5, #0
	bl FUN_02024394
	adds r1, r5, #0
	adds r1, #0xb8
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xb8
	ldr r0, [r0]
	adds r5, #0xb8
	adds r0, r0, r4
	str r0, [r5]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02023F40

	thumb_func_start FUN_02023F70
FUN_02023F70: @ 0x02023F70
	push {r4, lr}
	adds r4, r0, #0
	bne _02023F7A
	bl FUN_0202551C
_02023F7A:
	adds r1, r4, #0
	adds r1, #0xb6
	ldrh r1, [r1]
	adds r0, r4, #0
	bl FUN_02024394
	adds r4, #0xb8
	ldr r1, [r4]
	subs r0, r1, r0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02023F70

	thumb_func_start FUN_02023F90
FUN_02023F90: @ 0x02023F90
	push {r4, lr}
	adds r4, r0, #0
	bne _02023F9A
	bl FUN_0202551C
_02023F9A:
	adds r4, #0x88
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023F90

	thumb_func_start FUN_02023FA0
FUN_02023FA0: @ 0x02023FA0
	push {r4, lr}
	adds r4, r0, #0
	bne _02023FAA
	bl FUN_0202551C
_02023FAA:
	adds r4, #0x94
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023FA0

	thumb_func_start FUN_02023FB0
FUN_02023FB0: @ 0x02023FB0
	push {r4, lr}
	adds r4, r0, #0
	bne _02023FBA
	bl FUN_0202551C
_02023FBA:
	adds r4, #0x9c
	ldr r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02023FB0

	thumb_func_start FUN_02023FC0
FUN_02023FC0: @ 0x02023FC0
	push {r3, lr}
	adds r1, r0, #0
	adds r0, #0xb4
	ldrb r0, [r0]
	cmp r0, #2
	bne _02023FDA
	adds r0, r1, #0
	adds r0, #0xb0
	adds r1, #0xb8
	ldr r0, [r0]
	ldr r1, [r1]
	bl FUN_02020764
_02023FDA:
	pop {r3, pc}
	thumb_func_end FUN_02023FC0

	thumb_func_start FUN_02023FDC
FUN_02023FDC: @ 0x02023FDC
	adds r0, #0x88
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02023FDC

	thumb_func_start FUN_02023FE4
FUN_02023FE4: @ 0x02023FE4
	str r2, [r0, #0x1c]
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02023FE4

	thumb_func_start FUN_02023FEC
FUN_02023FEC: @ 0x02023FEC
	push {r3, r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0xb8
	ldr r1, [r1]
	adds r0, #0xa0
	lsls r1, r1, #4
	lsrs r1, r1, #0x10
	bl FUN_02026DE0
	add r2, sp, #0
	strb r0, [r2]
	lsrs r0, r0, #8
	strb r0, [r2, #1]
	ldrb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x90
	strb r0, [r2, #2]
	ldrb r0, [r2, #1]
	strb r0, [r2, #3]
	adds r0, r4, #0
	adds r0, #0x88
	ldrb r2, [r2, #2]
	ldr r0, [r0]
	ldr r1, [r1]
	bl FUN_0202403C
	adds r0, r4, #0
	add r2, sp, #0
	adds r0, #0x88
	adds r4, #0x90
	ldrb r2, [r2, #3]
	ldr r0, [r0]
	ldr r1, [r4]
	bl FUN_02024140
	add sp, #4
	pop {r3, r4, pc}
	.align 2, 0
	thumb_func_end FUN_02023FEC

	thumb_func_start FUN_0202403C
FUN_0202403C: @ 0x0202403C
	push {r3, r4, r5, r6, r7, lr}
	cmp r0, #0
	beq _0202404C
	ldr r3, [r0, #8]
	cmp r3, #0
	beq _0202404C
	adds r6, r0, r3
	b _0202404E
_0202404C:
	movs r6, #0
_0202404E:
	ldrh r0, [r6]
	adds r4, r6, r0
	cmp r1, #0
	beq _0202407C
	adds r0, r1, #0
	adds r0, #0x3c
	beq _02024078
	adds r3, r1, #0
	adds r3, #0x3d
	ldrb r3, [r3]
	cmp r2, r3
	bhs _02024078
	adds r1, #0x42
	ldrh r1, [r1]
	adds r3, r0, r1
	ldrh r0, [r0, r1]
	adds r3, r3, #4
	adds r1, r0, #0
	muls r1, r2, r1
	adds r0, r3, r1
	b _0202407E
_02024078:
	movs r0, #0
	b _0202407E
_0202407C:
	movs r0, #0
_0202407E:
	ldr r0, [r0]
	movs r5, #0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldrb r0, [r4, #1]
	cmp r0, #0
	ble _020240C0
_0202408C:
	cmp r4, #0
	beq _020240A6
	ldrb r0, [r4, #1]
	cmp r5, r0
	bhs _020240A6
	ldrh r0, [r4, #6]
	adds r1, r4, r0
	ldrh r0, [r4, r0]
	adds r2, r1, #4
	adds r1, r0, #0
	muls r1, r5, r1
	adds r1, r2, r1
	b _020240A8
_020240A6:
	movs r1, #0
_020240A8:
	ldrb r2, [r1, #3]
	movs r0, #1
	tst r0, r2
	beq _020240B8
	adds r0, r6, #0
	adds r2, r7, #0
	bl FUN_020240C4
_020240B8:
	ldrb r0, [r4, #1]
	adds r5, r5, #1
	cmp r5, r0
	blt _0202408C
_020240C0:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_0202403C

	thumb_func_start FUN_020240C4
FUN_020240C4: @ 0x020240C4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r0, r1, #0
	ldrh r0, [r0]
	str r1, [sp]
	str r2, [sp, #4]
	adds r0, r5, r0
	str r0, [sp, #8]
	adds r0, r1, #0
	ldrb r0, [r0, #2]
	movs r6, #0
	cmp r0, #0
	ble _02024136
	adds r7, r5, #4
_020240E2:
	ldr r0, [sp, #8]
	cmp r5, #0
	ldrb r0, [r0, r6]
	beq _0202410E
	cmp r7, #0
	beq _02024102
	ldrb r1, [r5, #5]
	cmp r0, r1
	bhs _02024102
	ldrh r1, [r5, #0xa]
	adds r2, r7, r1
	ldrh r1, [r7, r1]
	adds r2, r2, #4
	muls r0, r1, r0
	adds r0, r2, r0
	b _02024104
_02024102:
	movs r0, #0
_02024104:
	cmp r0, #0
	beq _0202410E
	ldr r0, [r0]
	adds r4, r5, r0
	b _02024110
_0202410E:
	movs r4, #0
_02024110:
	ldr r0, [r4, #0x14]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, [sp, #4]
	adds r1, r1, r0
	ldr r0, _0202413C @ =0x0000FFFF
	cmp r1, r0
	bls _02024124
	bl FUN_0202551C
_02024124:
	ldr r1, [r4, #0x14]
	ldr r0, [sp, #4]
	adds r6, r6, #1
	adds r0, r1, r0
	str r0, [r4, #0x14]
	ldr r0, [sp]
	ldrb r0, [r0, #2]
	cmp r6, r0
	blt _020240E2
_02024136:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_0202413C: .4byte 0x0000FFFF
	thumb_func_end FUN_020240C4

	thumb_func_start FUN_02024140
FUN_02024140: @ 0x02024140
	push {r3, r4, r5, r6, r7, lr}
	cmp r0, #0
	beq _02024150
	ldr r3, [r0, #8]
	cmp r3, #0
	beq _02024150
	adds r6, r0, r3
	b _02024152
_02024150:
	movs r6, #0
_02024152:
	ldrh r0, [r6, #2]
	adds r4, r6, r0
	cmp r1, #0
	beq _0202417E
	ldrh r0, [r1, #0x34]
	cmp r0, #0
	beq _0202417E
	adds r0, r1, r0
	beq _0202417A
	ldrb r1, [r0, #1]
	cmp r2, r1
	bhs _0202417A
	ldrh r1, [r0, #6]
	adds r3, r0, r1
	ldrh r0, [r0, r1]
	adds r3, r3, #4
	adds r1, r0, #0
	muls r1, r2, r1
	adds r0, r3, r1
	b _02024180
_0202417A:
	movs r0, #0
	b _02024180
_0202417E:
	movs r0, #0
_02024180:
	ldrh r1, [r0, #2]
	ldrh r7, [r0]
	movs r0, #1
	tst r0, r1
	bne _0202418C
	lsrs r7, r7, #1
_0202418C:
	ldrb r0, [r4, #1]
	movs r5, #0
	cmp r0, #0
	bls _020241C8
_02024194:
	cmp r4, #0
	beq _020241AE
	ldrb r0, [r4, #1]
	cmp r5, r0
	bhs _020241AE
	ldrh r0, [r4, #6]
	adds r1, r4, r0
	ldrh r0, [r4, r0]
	adds r2, r1, #4
	adds r1, r0, #0
	muls r1, r5, r1
	adds r1, r2, r1
	b _020241B0
_020241AE:
	movs r1, #0
_020241B0:
	ldrb r2, [r1, #3]
	movs r0, #1
	tst r0, r2
	beq _020241C0
	adds r0, r6, #0
	adds r2, r7, #0
	bl FUN_020241CC
_020241C0:
	ldrb r0, [r4, #1]
	adds r5, r5, #1
	cmp r5, r0
	blo _02024194
_020241C8:
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02024140

	thumb_func_start FUN_020241CC
FUN_020241CC: @ 0x020241CC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r0, r1, #0
	ldrh r0, [r0]
	str r1, [sp]
	str r2, [sp, #4]
	adds r0, r5, r0
	str r0, [sp, #8]
	adds r0, r1, #0
	ldrb r0, [r0, #2]
	movs r6, #0
	cmp r0, #0
	bls _0202423E
	adds r7, r5, #4
_020241EA:
	ldr r0, [sp, #8]
	cmp r5, #0
	ldrb r0, [r0, r6]
	beq _02024216
	cmp r7, #0
	beq _0202420A
	ldrb r1, [r5, #5]
	cmp r0, r1
	bhs _0202420A
	ldrh r1, [r5, #0xa]
	adds r2, r7, r1
	ldrh r1, [r7, r1]
	adds r2, r2, #4
	muls r0, r1, r0
	adds r0, r2, r0
	b _0202420C
_0202420A:
	movs r0, #0
_0202420C:
	cmp r0, #0
	beq _02024216
	ldr r0, [r0]
	adds r4, r5, r0
	b _02024218
_02024216:
	movs r4, #0
_02024218:
	ldrh r1, [r4, #0x1c]
	ldr r0, _02024244 @ =0x00001FFF
	ands r1, r0
	ldr r0, [sp, #4]
	adds r1, r1, r0
	ldr r0, _02024244 @ =0x00001FFF
	cmp r1, r0
	bls _0202422C
	bl FUN_0202551C
_0202422C:
	ldrh r1, [r4, #0x1c]
	ldr r0, [sp, #4]
	adds r6, r6, #1
	adds r0, r1, r0
	strh r0, [r4, #0x1c]
	ldr r0, [sp]
	ldrb r0, [r0, #2]
	cmp r6, r0
	blo _020241EA
_0202423E:
	add sp, #0xc
	pop {r4, r5, r6, r7, pc}
	nop
_02024244: .4byte 0x00001FFF
	thumb_func_end FUN_020241CC

	thumb_func_start FUN_02024248
FUN_02024248: @ 0x02024248
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #8]
	movs r7, #0
	cmp r0, #0
	ble _02024278
	adds r4, r7, #0
	adds r6, r7, #0
_02024258:
	ldr r0, [r5, #4]
	adds r0, r0, r4
	bl FUN_020236BC
	ldr r0, [r5, #4]
	adds r7, r7, #1
	adds r1, r0, r4
	adds r0, r5, #0
	adds r0, #0xd0
	ldr r0, [r0]
	adds r4, #0xc4
	str r1, [r0, r6]
	ldr r0, [r5, #8]
	adds r6, r6, #4
	cmp r7, r0
	blt _02024258
_02024278:
	movs r0, #0
	adds r5, #0xd4
	str r0, [r5]
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02024248

	thumb_func_start FUN_02024280
FUN_02024280: @ 0x02024280
	adds r1, r0, #0
	adds r1, #0xd4
	ldr r3, [r1]
	ldr r1, [r0, #8]
	cmp r3, r1
	blt _02024290
	movs r0, #0
	bx lr
_02024290:
	adds r1, r0, #0
	adds r1, #0xd0
	ldr r2, [r1]
	lsls r1, r3, #2
	ldr r2, [r2, r1]
	adds r1, r0, #0
	adds r1, #0xd4
	ldr r1, [r1]
	adds r0, #0xd4
	adds r1, r1, #1
	str r1, [r0]
	adds r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024280

	thumb_func_start FUN_020242AC
FUN_020242AC: @ 0x020242AC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0xd4
	ldr r0, [r0]
	adds r4, r1, #0
	cmp r0, #0
	bgt _020242BE
	movs r0, #0
	pop {r3, r4, r5, pc}
_020242BE:
	adds r0, r4, #0
	bl FUN_020236BC
	adds r0, r5, #0
	adds r0, #0xd4
	ldr r0, [r0]
	subs r1, r0, #1
	adds r0, r5, #0
	adds r0, #0xd4
	str r1, [r0]
	adds r0, r5, #0
	adds r0, #0xd0
	adds r5, #0xd4
	ldr r1, [r0]
	ldr r0, [r5]
	lsls r0, r0, #2
	str r4, [r1, r0]
	movs r0, #1
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_020242AC

	thumb_func_start FUN_020242E4
FUN_020242E4: @ 0x020242E4
	adds r2, r0, #0
	adds r2, #0xc0
	ldr r3, [r2]
	adds r2, r1, #0
	adds r2, #0xc0
	str r3, [r2]
	adds r2, r0, #0
	adds r2, #0xc0
	ldr r2, [r2]
	adds r2, #0xbc
	str r1, [r2]
	adds r2, r1, #0
	adds r2, #0xbc
	str r0, [r2]
	adds r0, #0xc0
	str r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020242E4

	thumb_func_start FUN_02024308
FUN_02024308: @ 0x02024308
	adds r1, r0, #0
	adds r1, #0xbc
	ldr r2, [r1]
	adds r1, r0, #0
	adds r1, #0xc0
	ldr r1, [r1]
	adds r1, #0xbc
	str r2, [r1]
	adds r1, r0, #0
	adds r0, #0xbc
	adds r1, #0xc0
	ldr r0, [r0]
	ldr r1, [r1]
	adds r0, #0xc0
	str r1, [r0]
	bx lr
	thumb_func_end FUN_02024308

	thumb_func_start FUN_02024328
FUN_02024328: @ 0x02024328
	push {r3, r4, r5, r6, r7, lr}
	adds r6, r1, #0
	movs r1, #0
	adds r5, r2, #0
	bl FUN_0202443C
	adds r7, r0, #0
	blx FUN_020C3B40
	adds r4, r0, #0
	beq _0202435E
	adds r1, r4, #0
	adds r1, #8
	beq _02024352
	ldrb r0, [r4, #9]
	cmp r0, #0
	bls _02024352
	ldrh r0, [r4, #0xe]
	adds r0, r1, r0
	adds r0, r0, #4
	b _02024354
_02024352:
	movs r0, #0
_02024354:
	cmp r0, #0
	beq _0202435E
	ldr r0, [r0]
	adds r0, r4, r0
	b _02024360
_0202435E:
	movs r0, #0
_02024360:
	str r0, [r6]
	cmp r5, #0
	beq _0202436E
	adds r0, r7, #0
	blx FUN_020C3B50
	str r0, [r5]
_0202436E:
	adds r0, r4, #0
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02024328

	thumb_func_start FUN_02024374
FUN_02024374: @ 0x02024374
	ldr r3, _0202437C @ =FUN_0202443C
	movs r1, #1
	bx r3
	nop
_0202437C: .4byte FUN_0202443C
	thumb_func_end FUN_02024374

	thumb_func_start FUN_02024380
FUN_02024380: @ 0x02024380
	push {r3, lr}
	ldr r2, [r1, #0x1c]
	cmp r2, #0
	bne _0202438E
	bl FUN_020239D0
	pop {r3, pc}
_0202438E:
	bl FUN_02023A20
	pop {r3, pc}
	thumb_func_end FUN_02024380

	thumb_func_start FUN_02024394
FUN_02024394: @ 0x02024394
	push {r3, lr}
	ldr r0, [r0, #0x2c]
	bl FUN_02024454
	ldr r0, [r0]
	lsls r0, r0, #0xc
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02024394

	thumb_func_start FUN_020243A4
FUN_020243A4: @ 0x020243A4
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r5, #0
	adds r1, #0xb6
	ldrh r1, [r1]
	ldr r0, [r5, #0x2c]
	bl FUN_02024454
	adds r5, #0xb8
	adds r1, r5, #0
	adds r2, r4, #0
	bl FUN_020243C4
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020243A4

	thumb_func_start FUN_020243C4
FUN_020243C4: @ 0x020243C4
	push {r3, r4, r5, r6}
	ldr r4, [r0]
	ldr r6, [r1]
	lsls r4, r4, #0xc
	movs r3, #0
	cmp r4, r6
	bgt _020243DA
	ldr r5, [r0, #4]
	lsls r5, r5, #0xc
	cmp r5, r6
	bge _020243DE
_020243DA:
	str r4, [r1]
	b _020243F6
_020243DE:
	adds r2, r6, r2
	cmp r5, r2
	bge _020243F4
	ldr r0, [r0, #8]
	cmp r0, #0
	bne _020243EE
	str r4, [r1]
	b _020243F6
_020243EE:
	movs r3, #1
	str r5, [r1]
	b _020243F6
_020243F4:
	str r2, [r1]
_020243F6:
	adds r0, r3, #0
	pop {r3, r4, r5, r6}
	bx lr
	thumb_func_end FUN_020243C4

	thumb_func_start FUN_020243FC
FUN_020243FC: @ 0x020243FC
	push {r3, lr}
	adds r3, r0, #0
	adds r0, #0x9c
	str r0, [sp]
	adds r0, r3, #0
	adds r1, r3, #0
	adds r2, r3, #0
	adds r0, #0x8c
	adds r1, #0x84
	ldr r0, [r0]
	ldr r1, [r1]
	adds r2, #0x94
	adds r3, #0x98
	bl FUN_02023B4C
	pop {r3, pc}
	thumb_func_end FUN_020243FC

	thumb_func_start FUN_0202441C
FUN_0202441C: @ 0x0202441C
	push {r3, r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r0, #0x84
	ldr r0, [r0]
	blx FUN_020BEDB0
	adds r4, #0x8c
	ldr r0, [r4]
	add r1, sp, #4
	add r2, sp, #8
	add r3, sp, #0
	bl FUN_02023B38
	add sp, #0xc
	pop {r3, r4, pc}
	thumb_func_end FUN_0202441C

	thumb_func_start FUN_0202443C
FUN_0202443C: @ 0x0202443C
	cmp r1, #0
	beq _02024446
	cmp r1, #1
	beq _0202444A
	b _0202444E
_02024446:
	ldr r0, [r0]
	bx lr
_0202444A:
	ldr r0, [r0, #4]
	bx lr
_0202444E:
	movs r0, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_0202443C

	thumb_func_start FUN_02024454
FUN_02024454: @ 0x02024454
	movs r2, #0xc
	muls r2, r1, r2
	adds r0, r0, r2
	bx lr
	thumb_func_end FUN_02024454

	thumb_func_start FUN_0202445C
FUN_0202445C: @ 0x0202445C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bne _02024466
	bl FUN_0202551C
_02024466:
	ldr r0, [r5, #4]
	cmp r0, #0
	bne _02024470
	bl FUN_0202551C
_02024470:
	movs r1, #0x49
	ldr r0, [r5, #8]
	lsls r1, r1, #2
	bl FUN_0201AA8C
	adds r4, r0, #0
	bne _02024482
	bl FUN_0202551C
_02024482:
	adds r0, r4, #0
	bl FUN_020245D4
	ldr r2, [r5]
	ldr r0, [r5, #8]
	lsls r1, r2, #6
	adds r1, r2, r1
	lsls r1, r1, #2
	bl FUN_0201AA8C
	str r0, [r4]
	cmp r0, #0
	bne _020244A0
	bl FUN_0202551C
_020244A0:
	ldr r0, [r5]
	str r0, [r4, #4]
	ldr r1, [r5]
	ldr r0, [r5, #8]
	lsls r1, r1, #2
	bl FUN_0201AA8C
	str r0, [r4, #8]
	cmp r0, #0
	bne _020244B8
	bl FUN_0202551C
_020244B8:
	adds r0, r4, #0
	bl FUN_020250D8
	adds r0, r4, #0
	adds r0, #0x10
	bl FUN_020245FC
	adds r2, r4, #0
	movs r1, #0x43
	lsls r1, r1, #2
	adds r2, #0x10
	str r2, [r4, r1]
	adds r0, r1, #4
	str r2, [r4, r0]
	ldr r0, [r5, #4]
	adds r1, #8
	str r0, [r4, r1]
	ldr r0, [r5, #8]
	ldr r1, _02024500 @ =0x0210F6E0
	bl FUN_0201A3A4
	movs r1, #0x46
	lsls r1, r1, #2
	str r0, [r4, r1]
	ldr r0, [r4, r1]
	adds r1, r1, #4
	adds r1, r4, r1
	blx FUN_020B6D18
	movs r0, #0x12
	movs r1, #1
	lsls r0, r0, #4
	str r1, [r4, r0]
	adds r0, r4, #0
	pop {r3, r4, r5, pc}
	nop
_02024500: .4byte 0x0210F6E0
	thumb_func_end FUN_0202445C

	thumb_func_start FUN_02024504
FUN_02024504: @ 0x02024504
	push {r4, lr}
	adds r4, r0, #0
	bne _0202450E
	movs r0, #0
	pop {r4, pc}
_0202450E:
	ldr r1, [r4]
	cmp r1, #0
	bne _02024518
	movs r0, #1
	pop {r4, pc}
_02024518:
	bl FUN_02024544
	movs r0, #0x46
	lsls r0, r0, #2
	ldr r0, [r4, r0]
	bl FUN_0201AB0C
	ldr r0, [r4, #8]
	bl FUN_0201AB0C
	ldr r0, [r4]
	bl FUN_0201AB0C
	adds r0, r4, #0
	bl FUN_020245D4
	adds r0, r4, #0
	bl FUN_0201AB0C
	movs r0, #1
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024504

	thumb_func_start FUN_02024544
FUN_02024544: @ 0x02024544
	push {r4, r5, r6, lr}
	cmp r0, #0
	bne _0202454E
	movs r0, #0
	pop {r4, r5, r6, pc}
_0202454E:
	ldr r1, [r0]
	cmp r1, #0
	bne _02024558
	movs r0, #1
	pop {r4, r5, r6, pc}
_02024558:
	movs r1, #0x11
	lsls r1, r1, #4
	adds r4, r0, #0
	ldr r1, [r0, r1]
	adds r4, #0x10
	cmp r1, r4
	beq _02024578
	movs r6, #1
	lsls r6, r6, #8
_0202456A:
	ldr r5, [r1, r6]
	adds r0, r1, #0
	bl FUN_02024758
	adds r1, r5, #0
	cmp r5, r4
	bne _0202456A
_02024578:
	movs r0, #1
	pop {r4, r5, r6, pc}
	thumb_func_end FUN_02024544

	thumb_func_start FUN_0202457C
FUN_0202457C: @ 0x0202457C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bne _02024586
	bl FUN_0202551C
_02024586:
	movs r0, #0x12
	lsls r0, r0, #4
	ldr r1, [r5, r0]
	cmp r1, #0
	beq _020245C8
	subs r0, #0x10
	adds r6, r5, #0
	ldr r4, [r5, r0]
	adds r6, #0x10
	cmp r4, r6
	beq _020245C8
	ldr r7, _020245CC @ =_020F6314
_0202459E:
	adds r2, r4, #0
	adds r2, #0x34
	ldrb r2, [r2]
	adds r0, r5, #0
	adds r1, r4, #0
	lsls r2, r2, #2
	ldr r2, [r7, r2]
	blx r2
	adds r1, r4, #0
	adds r1, #0x35
	ldrb r1, [r1]
	adds r0, r4, #0
	lsls r2, r1, #2
	ldr r1, _020245D0 @ =_020F631C
	ldr r1, [r1, r2]
	blx r1
	movs r0, #1
	lsls r0, r0, #8
	ldr r4, [r4, r0]
	cmp r4, r6
	bne _0202459E
_020245C8:
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020245CC: .4byte _020F6314
_020245D0: .4byte _020F631C
	thumb_func_end FUN_0202457C

	thumb_func_start FUN_020245D4
FUN_020245D4: @ 0x020245D4
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	str r1, [r4]
	str r1, [r4, #4]
	str r1, [r4, #8]
	movs r0, #0x45
	str r1, [r4, #0xc]
	lsls r0, r0, #2
	str r1, [r4, r0]
	adds r0, r4, #0
	adds r0, #0x10
	bl FUN_020245FC
	movs r0, #0x12
	movs r1, #0
	lsls r0, r0, #4
	str r1, [r4, r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020245D4

	thumb_func_start FUN_020245FC
FUN_020245FC: @ 0x020245FC
	push {r4, lr}
	movs r2, #0x41
	adds r4, r0, #0
	movs r1, #0
	lsls r2, r2, #2
	str r1, [r4, #0x3c]
	blx FUN_020E5B44
	adds r0, r4, #0
	adds r0, #0xb4
	blx FUN_020B8008
	adds r0, r4, #0
	adds r0, #0xd8
	blx FUN_020B804C
	movs r0, #0
	str r0, [r4, #0x30]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020245FC

	thumb_func_start FUN_02024624
FUN_02024624: @ 0x02024624
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	bl FUN_02025110
	adds r4, r0, #0
	bne _02024636
	movs r0, #0
	pop {r4, r5, r6, pc}
_02024636:
	ldr r0, [r5]
	adds r6, r5, #0
	str r0, [r4, #0x3c]
	adds r0, r4, #0
	movs r2, #0
	adds r0, #0xf0
	adds r6, #8
	strh r2, [r0]
	ldm r6!, {r0, r1}
	adds r3, r4, #0
	stm r3!, {r0, r1}
	ldr r0, [r6]
	adds r6, r5, #0
	str r0, [r3]
	adds r6, #0x14
	adds r3, r4, #0
	ldm r6!, {r0, r1}
	adds r3, #0x18
	stm r3!, {r0, r1}
	ldr r0, [r6]
	str r0, [r3]
	ldrh r0, [r5, #0x20]
	strh r0, [r4, #0x24]
	adds r0, r4, #0
	ldr r1, [r5, #0x28]
	adds r0, #0xf8
	str r1, [r0]
	adds r0, r4, #0
	ldr r1, [r5, #0x24]
	adds r0, #0xf4
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x26
	strb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x27
	strb r2, [r0]
	str r2, [r4, #0x2c]
	adds r0, r4, #0
	str r2, [r4, #0x30]
	movs r1, #0x11
	adds r0, #0x28
	strb r1, [r0]
	movs r0, #0x45
	ldr r1, [r5]
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	adds r1, r4, #0
	adds r1, #0x26
	ldrb r1, [r1]
	blx FUN_020BBEC4
	adds r0, r4, #0
	adds r0, #0x27
	ldrb r2, [r0]
	movs r0, #0x45
	ldr r1, [r5]
	lsls r0, r0, #2
	ldr r0, [r1, r0]
	movs r1, #1
	movs r3, #2
	ands r1, r2
	ands r2, r3
	blx FUN_020BBF84
	adds r0, r4, #0
	movs r2, #1
	adds r0, #0x34
	strb r2, [r0]
	adds r0, r4, #0
	movs r1, #0
	adds r0, #0x35
	strb r1, [r0]
	lsls r0, r2, #0xd
	str r0, [r4, #0x38]
	ldr r0, [r5]
	ldr r1, [r5, #4]
	ldr r3, [r5, #0x2c]
	adds r2, r4, #0
	bl FUN_02024CD0
	cmp r0, #0
	bne _020246E6
	adds r0, r4, #0
	bl FUN_02024758
	movs r0, #0
	pop {r4, r5, r6, pc}
_020246E6:
	adds r1, r4, #0
	adds r1, #0xf8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xd8
	bl FUN_02024E84
	adds r1, r4, #0
	adds r1, #0x2a
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	ldr r0, [r5]
	adds r1, r4, #0
	bl FUN_02025024
	adds r0, r4, #0
	pop {r4, r5, r6, pc}
	.align 2, 0
	thumb_func_end FUN_02024624

	thumb_func_start FUN_02024714
FUN_02024714: @ 0x02024714
	push {r4, lr}
	sub sp, #0x30
	adds r2, r0, #0
	ldr r0, [r2]
	adds r4, r2, #0
	str r0, [sp]
	ldr r0, [r2, #4]
	adds r4, #8
	str r0, [sp, #4]
	ldm r4!, {r0, r1}
	add r3, sp, #8
	stm r3!, {r0, r1}
	ldr r0, [r4]
	movs r1, #0
	str r0, [r3]
	movs r0, #1
	lsls r0, r0, #0xc
	str r0, [sp, #0x14]
	str r0, [sp, #0x18]
	str r0, [sp, #0x1c]
	add r0, sp, #0
	strh r1, [r0, #0x20]
	ldr r0, [r2, #0x14]
	str r0, [sp, #0x24]
	ldr r0, [r2, #0x18]
	str r0, [sp, #0x28]
	ldr r0, [r2, #0x1c]
	str r0, [sp, #0x2c]
	add r0, sp, #0
	bl FUN_02024624
	add sp, #0x30
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024714

	thumb_func_start FUN_02024758
FUN_02024758: @ 0x02024758
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0xec
	ldr r1, [r1]
	cmp r1, #0
	beq _020247D0
	adds r1, r5, #0
	adds r1, #0xfc
	ldr r1, [r1]
	cmp r1, #0
	beq _02024774
	bl FUN_020250BC
_02024774:
	adds r0, r5, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #3
	bne _0202479E
	adds r1, r5, #0
	adds r1, #0xf8
	adds r0, r5, #0
	adds r4, r5, #0
	ldr r1, [r1]
	adds r0, #0xb4
	adds r4, #0x40
	blx FUN_020B802C
	movs r1, #0
	mvns r1, r1
	cmp r0, r1
	beq _0202479E
	ldr r0, [r4, #0x60]
	blx FUN_020BAF3C
_0202479E:
	adds r0, r5, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _020247C0
	adds r4, r5, #0
	adds r4, #0x40
	ldr r0, [r4, #0x74]
	cmp r0, #0
	beq _020247B6
	bl FUN_0201AB0C
_020247B6:
	ldr r0, [r4, #0x78]
	cmp r0, #0
	beq _020247C0
	bl FUN_0201AB0C
_020247C0:
	adds r0, r5, #0
	movs r1, #0
	adds r0, #0xec
	str r1, [r0]
	ldr r0, [r5, #0x3c]
	adds r1, r5, #0
	bl FUN_0202512C
_020247D0:
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02024758

	thumb_func_start FUN_020247D4
FUN_020247D4: @ 0x020247D4
	adds r2, r1, #0
	adds r3, r0, #0
	ldm r2!, {r0, r1}
	stm r3!, {r0, r1}
	ldr r0, [r2]
	str r0, [r3]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020247D4

	thumb_func_start FUN_020247E4
FUN_020247E4: @ 0x020247E4
	adds r3, r1, #0
	adds r2, r0, #0
	ldm r3!, {r0, r1}
	adds r2, #0xc
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_020247E4

	thumb_func_start FUN_020247F4
FUN_020247F4: @ 0x020247F4
	adds r3, r1, #0
	adds r2, r0, #0
	ldm r3!, {r0, r1}
	adds r2, #0x18
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_020247F4

	thumb_func_start FUN_02024804
FUN_02024804: @ 0x02024804
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl FUN_020247F4
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0202487C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024804

	thumb_func_start FUN_02024818
FUN_02024818: @ 0x02024818
	strh r1, [r0, #0x24]
	bx lr
	thumb_func_end FUN_02024818

	thumb_func_start FUN_0202481C
FUN_0202481C: @ 0x0202481C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl FUN_02024818
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_0202487C
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0202481C

	thumb_func_start FUN_02024830
FUN_02024830: @ 0x02024830
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0202483E
	bl FUN_0202551C
_0202483E:
	cmp r4, #2
	blt _02024846
	bl FUN_0202551C
_02024846:
	adds r5, #0x34
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024830

	thumb_func_start FUN_0202484C
FUN_0202484C: @ 0x0202484C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0202485A
	bl FUN_0202551C
_0202485A:
	cmp r4, #2
	blt _02024862
	bl FUN_0202551C
_02024862:
	adds r5, #0x35
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0202484C

	thumb_func_start FUN_02024868
FUN_02024868: @ 0x02024868
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02024876
	bl FUN_0202551C
_02024876:
	str r4, [r5, #0x38]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02024868

	thumb_func_start FUN_0202487C
FUN_0202487C: @ 0x0202487C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0202488A
	bl FUN_0202551C
_0202488A:
	adds r5, #0x26
	strb r4, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_0202487C

	thumb_func_start FUN_02024890
FUN_02024890: @ 0x02024890
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _0202489E
	bl FUN_0202551C
_0202489E:
	adds r0, r5, #0
	adds r0, #0x27
	strb r4, [r0]
	movs r0, #0
	adds r5, #0x26
	strb r0, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024890

	thumb_func_start FUN_020248AC
FUN_020248AC: @ 0x020248AC
	bx lr
	.align 2, 0
	thumb_func_end FUN_020248AC

	thumb_func_start FUN_020248B0
FUN_020248B0: @ 0x020248B0
	adds r0, #0x18
	bx lr
	thumb_func_end FUN_020248B0

	thumb_func_start FUN_020248B4
FUN_020248B4: @ 0x020248B4
	ldrh r0, [r0, #0x24]
	bx lr
	thumb_func_end FUN_020248B4

	thumb_func_start FUN_020248B8
FUN_020248B8: @ 0x020248B8
	adds r0, #0x34
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020248B8

	thumb_func_start FUN_020248C0
FUN_020248C0: @ 0x020248C0
	adds r0, #0x35
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020248C0

	thumb_func_start FUN_020248C8
FUN_020248C8: @ 0x020248C8
	push {r4, lr}
	adds r4, r0, #0
	bne _020248D2
	bl FUN_0202551C
_020248D2:
	adds r0, r4, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _020248E0
	cmp r0, #3
	bne _020248E6
_020248E0:
	ldr r0, [r4, #0x44]
	ldrh r0, [r0]
	pop {r4, pc}
_020248E6:
	adds r4, #0xb0
	ldr r0, [r4]
	ldrh r0, [r0]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_020248C8

	thumb_func_start FUN_020248F0
FUN_020248F0: @ 0x020248F0
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl FUN_020248C8
	cmp r0, r4
	bhi _02024902
	bl FUN_0202551C
_02024902:
	lsls r0, r4, #0x10
	lsrs r1, r0, #0x10
	adds r0, r5, #0
	adds r0, #0xf0
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _0202491A
	cmp r0, #3
	bne _02024936
_0202491A:
	adds r5, #0x40
	lsls r1, r4, #0x10
	ldr r0, [r5, #4]
	lsrs r1, r1, #0x10
	blx FUN_020B6E80
	adds r1, r0, #0
	adds r0, r5, #0
	adds r0, #8
	blx FUN_020B8BC4
	movs r0, #1
	str r0, [r5, #0x14]
	pop {r3, r4, r5, pc}
_02024936:
	adds r5, #0x40
	ldr r0, [r5, #0x70]
	blx FUN_020B6E80
	adds r1, r0, #0
	adds r0, r5, #0
	adds r0, #8
	blx FUN_020B8E98
	movs r0, #1
	str r0, [r5, #0x14]
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_020248F0

	thumb_func_start FUN_02024950
FUN_02024950: @ 0x02024950
	push {r3, lr}
	adds r2, r0, #0
	adds r2, #0xf0
	ldrh r2, [r2]
	cmp r2, r1
	beq _02024960
	bl FUN_020248F0
_02024960:
	pop {r3, pc}
	.align 2, 0
	thumb_func_end FUN_02024950

	thumb_func_start FUN_02024964
FUN_02024964: @ 0x02024964
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _02024974
	cmp r0, #3
	bne _0202498E
_02024974:
	adds r5, r4, #0
	adds r5, #0x40
	adds r0, r5, #0
	adds r0, #8
	blx FUN_020B781C
	movs r0, #1
	str r0, [r5, #0x14]
	adds r0, r4, #0
	movs r1, #0
	bl FUN_020249D4
	pop {r3, r4, r5, pc}
_0202498E:
	adds r5, r4, #0
	adds r5, #0x40
	adds r0, r5, #0
	adds r0, #8
	blx FUN_020B781C
	movs r0, #1
	str r0, [r5, #0x14]
	adds r0, r4, #0
	movs r1, #0
	bl FUN_020249D4
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024964

	thumb_func_start FUN_020249A8
FUN_020249A8: @ 0x020249A8
	adds r0, #0xf0
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_020249A8

	thumb_func_start FUN_020249B0
FUN_020249B0: @ 0x020249B0
	push {r3, lr}
	adds r2, r0, #0
	adds r2, #0xec
	ldr r2, [r2]
	cmp r2, #1
	beq _020249C0
	cmp r2, #3
	bne _020249CA
_020249C0:
	adds r0, #0x40
	adds r0, #8
	blx FUN_020B8BDC
	pop {r3, pc}
_020249CA:
	adds r0, #0x40
	adds r0, #8
	blx FUN_020B9044
	pop {r3, pc}
	thumb_func_end FUN_020249B0

	thumb_func_start FUN_020249D4
FUN_020249D4: @ 0x020249D4
	push {r3, lr}
	adds r2, r0, #0
	adds r2, #0xec
	ldr r2, [r2]
	cmp r2, #1
	beq _020249E4
	cmp r2, #3
	bne _020249EE
_020249E4:
	adds r0, #0x40
	adds r0, #8
	blx FUN_020B8BFC
	pop {r3, pc}
_020249EE:
	adds r0, #0x40
	adds r0, #8
	blx FUN_020B9124
	pop {r3, pc}
	thumb_func_end FUN_020249D4

	thumb_func_start FUN_020249F8
FUN_020249F8: @ 0x020249F8
	ldr r3, _02024A00 @ =FUN_020B77A8
	adds r0, #0x40
	adds r0, #8
	bx r3
	.align 2, 0
_02024A00: .4byte FUN_020B77A8
	thumb_func_end FUN_020249F8

	thumb_func_start FUN_02024A04
FUN_02024A04: @ 0x02024A04
	adds r0, #0xf2
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024A04

	thumb_func_start FUN_02024A0C
FUN_02024A0C: @ 0x02024A0C
	adds r0, #0xf2
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024A0C

	thumb_func_start FUN_02024A14
FUN_02024A14: @ 0x02024A14
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02024A22
	bl FUN_0202551C
_02024A22:
	adds r0, r5, #0
	adds r0, #0x29
	strb r4, [r0]
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #2
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #0x10
	adds r5, #0x28
	bics r1, r0
	strb r1, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024A14

	thumb_func_start FUN_02024A48
FUN_02024A48: @ 0x02024A48
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02024A14
	adds r1, r4, #0
	adds r1, #0xf8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xd8
	bl FUN_02024E84
	adds r1, r4, #0
	adds r1, #0x29
	ldrb r1, [r1]
	adds r4, #0x29
	adds r0, r1, r0
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02024A48

	thumb_func_start FUN_02024A6C
FUN_02024A6C: @ 0x02024A6C
	adds r0, #0x29
	ldrb r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024A6C

	thumb_func_start FUN_02024A74
FUN_02024A74: @ 0x02024A74
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	cmp r5, #0
	bne _02024A82
	bl FUN_0202551C
_02024A82:
	adds r0, r5, #0
	adds r0, #0x2a
	strb r4, [r0]
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #0x10
	orrs r1, r0
	adds r0, r5, #0
	adds r0, #0x28
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #2
	adds r5, #0x28
	bics r1, r0
	strb r1, [r5]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024A74

	thumb_func_start FUN_02024AA8
FUN_02024AA8: @ 0x02024AA8
	push {r4, lr}
	adds r4, r0, #0
	bl FUN_02024A74
	adds r1, r4, #0
	adds r1, #0xf8
	adds r0, r4, #0
	ldr r1, [r1]
	adds r0, #0xd8
	bl FUN_02024E84
	adds r1, r4, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	adds r4, #0x2a
	adds r0, r1, r0
	strb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02024AA8

	thumb_func_start FUN_02024ACC
FUN_02024ACC: @ 0x02024ACC
	push {r4, lr}
	adds r4, r0, #0
	bne _02024AD6
	bl FUN_0202551C
_02024AD6:
	adds r4, #0x2a
	ldrb r0, [r4]
	pop {r4, pc}
	thumb_func_end FUN_02024ACC

	thumb_func_start FUN_02024ADC
FUN_02024ADC: @ 0x02024ADC
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r2, r5, #0
	ldr r4, [r5, #0x3c]
	adds r2, #0xf4
	strh r1, [r2]
	bl FUN_020250BC
	adds r0, r4, #0
	adds r1, r5, #0
	bl FUN_02025024
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02024ADC

	thumb_func_start FUN_02024AF8
FUN_02024AF8: @ 0x02024AF8
	adds r0, #0xf4
	ldrh r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024AF8

	thumb_func_start FUN_02024B00
FUN_02024B00: @ 0x02024B00
	push {r3, r4}
	adds r3, r0, #0
	adds r4, r1, #0
	adds r3, #0xb4
	movs r2, #4
_02024B0A:
	ldm r4!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _02024B0A
	ldr r0, [r4]
	str r0, [r3]
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024B00

	thumb_func_start FUN_02024B1C
FUN_02024B1C: @ 0x02024B1C
	adds r0, #0xb4
	bx lr
	thumb_func_end FUN_02024B1C

	thumb_func_start FUN_02024B20
FUN_02024B20: @ 0x02024B20
	adds r3, r1, #0
	adds r2, r0, #0
	ldm r3!, {r0, r1}
	adds r2, #0xd8
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r3]
	str r0, [r2]
	bx lr
	thumb_func_end FUN_02024B20

	thumb_func_start FUN_02024B34
FUN_02024B34: @ 0x02024B34
	adds r0, #0xd8
	bx lr
	thumb_func_end FUN_02024B34

	thumb_func_start FUN_02024B38
FUN_02024B38: @ 0x02024B38
	str r1, [r0, #0x2c]
	cmp r1, #1
	bne _02024B4E
	adds r1, r0, #0
	adds r1, #0x28
	ldrb r2, [r1]
	movs r1, #4
	adds r0, #0x28
	orrs r1, r2
	strb r1, [r0]
	bx lr
_02024B4E:
	adds r1, r0, #0
	adds r1, #0x28
	ldrb r2, [r1]
	movs r1, #4
	eors r1, r2
	adds r0, #0x28
	strb r1, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024B38

	thumb_func_start FUN_02024B60
FUN_02024B60: @ 0x02024B60
	adds r0, #0xf8
	ldr r0, [r0]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024B60

	thumb_func_start FUN_02024B68
FUN_02024B68: @ 0x02024B68
	push {r4, lr}
	adds r4, r0, #0
	bne _02024B72
	bl FUN_0202551C
_02024B72:
	ldr r0, [r4, #0x54]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024B68

	thumb_func_start FUN_02024B78
FUN_02024B78: @ 0x02024B78
	push {r3, r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	bne _02024B86
	bl FUN_0202551C
_02024B86:
	str r5, [r4, #0x30]
	cmp r5, #0
	bne _02024B9C
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #8
	adds r4, #0x28
	eors r0, r1
	strb r0, [r4]
	pop {r3, r4, r5, pc}
_02024B9C:
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r1, [r0]
	movs r0, #8
	orrs r0, r1
	adds r4, #0x28
	strb r0, [r4]
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024B78

	thumb_func_start FUN_02024BAC
FUN_02024BAC: @ 0x02024BAC
	push {r4, lr}
	adds r4, r0, #0
	bne _02024BB6
	bl FUN_0202551C
_02024BB6:
	ldr r0, [r4, #0x30]
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024BAC

	thumb_func_start FUN_02024BBC
FUN_02024BBC: @ 0x02024BBC
	push {r4, lr}
	movs r1, #1
	lsls r1, r1, #0xa
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r0, #0xb
	movs r2, #1
	lsls r0, r0, #6
	adds r1, r4, #0
	lsls r2, r2, #0xa
	blx FUN_020D4790
	movs r1, #1
	adds r0, r4, #0
	lsls r1, r1, #0xa
	blx FUN_020D2894
	movs r2, #1
	adds r0, r4, #0
	movs r1, #0
	lsls r2, r2, #0xa
	blx FUN_020CFDC8
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	thumb_func_end FUN_02024BBC

	thumb_func_start FUN_02024BF4
FUN_02024BF4: @ 0x02024BF4
	push {r4, lr}
	movs r1, #1
	lsls r1, r1, #0xa
	bl FUN_0201AA8C
	adds r4, r0, #0
	movs r0, #0xb
	movs r2, #1
	lsls r0, r0, #6
	adds r1, r4, #0
	lsls r2, r2, #0xa
	blx FUN_020D4790
	movs r2, #1
	adds r0, r4, #0
	movs r1, #0
	lsls r2, r2, #0xa
	blx FUN_020CFE1C
	adds r0, r4, #0
	bl FUN_0201AB0C
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024BF4

	thumb_func_start FUN_02024C24
FUN_02024C24: @ 0x02024C24
	push {r3, r4}
	adds r3, r0, #0
	adds r3, #0xec
	ldr r3, [r3]
	cmp r3, #1
	beq _02024C34
	cmp r3, #3
	bne _02024C38
_02024C34:
	ldr r0, [r0, #0x44]
	b _02024C3C
_02024C38:
	adds r0, #0xb0
	ldr r0, [r0]
_02024C3C:
	ldr r4, [r0, #0x14]
	cmp r4, #0
	beq _02024C4A
	ldr r3, [r4]
	ldr r0, _02024C98 @ =0x55414154
	cmp r3, r0
	beq _02024C4C
_02024C4A:
	movs r4, #0
_02024C4C:
	cmp r4, #0
	beq _02024C54
	adds r4, #8
	b _02024C56
_02024C54:
	movs r4, #0
_02024C56:
	cmp r4, #0
	beq _02024C92
	lsls r0, r1, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r4]
	cmp r3, r0
	bhs _02024C6E
	movs r0, #0xc
	ldr r1, [r4, #4]
	muls r0, r3, r0
	adds r1, r1, r0
	b _02024C70
_02024C6E:
	movs r1, #0
_02024C70:
	cmp r1, #0
	beq _02024C92
	ldrh r0, [r1]
	cmp r0, #0
	beq _02024C84
	lsls r0, r2, #0x10
	ldr r1, [r1, #8]
	lsrs r0, r0, #0xe
	adds r0, r1, r0
	b _02024C86
_02024C84:
	movs r0, #0
_02024C86:
	cmp r0, #0
	beq _02024C92
	ldr r0, [r0]
	ldr r0, [r0]
	pop {r3, r4}
	bx lr
_02024C92:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
_02024C98: .4byte 0x55414154
	thumb_func_end FUN_02024C24

	thumb_func_start FUN_02024C9C
FUN_02024C9C: @ 0x02024C9C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	bl FUN_020249A8
	adds r4, r0, #0
	adds r0, r5, #0
	bl FUN_020249F8
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl FUN_02024C24
	pop {r3, r4, r5, pc}
	thumb_func_end FUN_02024C9C

	thumb_func_start FUN_02024CB8
FUN_02024CB8: @ 0x02024CB8
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _02024CC8
	bl FUN_0202551C
_02024CC8:
	adds r4, #0x40
	adds r4, #8
	adds r0, r4, #0
	pop {r4, pc}
	thumb_func_end FUN_02024CB8

	thumb_func_start FUN_02024CD0
FUN_02024CD0: @ 0x02024CD0
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r1, #0
	str r0, [sp]
	adds r4, r2, #0
	adds r0, r5, #0
	adds r7, r3, #0
	bl FUN_02024D78
	adds r1, r4, #0
	adds r1, #0xec
	str r0, [r1]
	adds r3, r4, #0
	ldr r6, [r5]
	adds r3, #0xb4
	movs r2, #4
_02024CEE:
	ldm r6!, {r0, r1}
	stm r3!, {r0, r1}
	subs r2, r2, #1
	bne _02024CEE
	ldr r0, [r6]
	adds r2, r4, #0
	str r0, [r3]
	ldr r3, [r5, #8]
	adds r2, #0xd8
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldm r3!, {r0, r1}
	stm r2!, {r0, r1}
	ldr r0, [r3]
	adds r1, r4, #0
	str r0, [r2]
	ldr r0, [r5, #0xc]
	bl FUN_02024D90
	ldr r0, [r5, #0x10]
	cmp r0, #0
	beq _02024D22
	adds r1, r4, #0
	bl FUN_02024D94
	b _02024D30
_02024D22:
	movs r1, #0x47
	ldr r0, [sp]
	lsls r1, r1, #2
	ldr r0, [r0, r1]
	adds r1, r4, #0
	bl FUN_02024D94
_02024D30:
	adds r0, r4, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #2
	bne _02024D54
	ldr r0, [r5, #0x14]
	adds r1, r4, #0
	bl FUN_02024D98
	ldr r0, [r5, #0x18]
	adds r1, r4, #0
	bl FUN_02024DA0
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_02024E24
	b _02024D6C
_02024D54:
	cmp r0, #3
	bne _02024D64
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r7, #0
	bl FUN_02024DC8
	b _02024D6C
_02024D64:
	adds r0, r4, #0
	adds r1, r7, #0
	bl FUN_02024DA8
_02024D6C:
	adds r5, #0x20
	ldrb r0, [r5]
	adds r4, #0xf2
	strb r0, [r4]
	movs r0, #1
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_02024CD0

	thumb_func_start FUN_02024D78
FUN_02024D78: @ 0x02024D78
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _02024D82
	movs r0, #2
	bx lr
_02024D82:
	ldr r0, [r0, #0x1c]
	cmp r0, #1
	bne _02024D8C
	movs r0, #3
	bx lr
_02024D8C:
	movs r0, #1
	bx lr
	thumb_func_end FUN_02024D78

	thumb_func_start FUN_02024D90
FUN_02024D90: @ 0x02024D90
	str r0, [r1, #0x40]
	bx lr
	thumb_func_end FUN_02024D90

	thumb_func_start FUN_02024D94
FUN_02024D94: @ 0x02024D94
	str r0, [r1, #0x44]
	bx lr
	thumb_func_end FUN_02024D94

	thumb_func_start FUN_02024D98
FUN_02024D98: @ 0x02024D98
	adds r1, #0xac
	str r0, [r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024D98

	thumb_func_start FUN_02024DA0
FUN_02024DA0: @ 0x02024DA0
	adds r1, #0xb0
	str r0, [r1]
	bx lr
	.align 2, 0
	thumb_func_end FUN_02024DA0

	thumb_func_start FUN_02024DA8
FUN_02024DA8: @ 0x02024DA8
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x40
	ldr r0, [r4, #4]
	movs r1, #0
	blx FUN_020B6E80
	adds r4, #8
	adds r1, r0, #0
	ldr r2, [r5, #0x40]
	adds r0, r4, #0
	blx FUN_020B8B04
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_02024DA8

	thumb_func_start FUN_02024DC8
FUN_02024DC8: @ 0x02024DC8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r1, #0
	adds r4, r6, #0
	adds r4, #0x40
	adds r5, r0, #0
	blx FUN_020BAEE4
	str r0, [r4, #0x60]
	ldr r0, [r4, #4]
	movs r1, #0
	ldr r5, [r5, #4]
	blx FUN_020B6E80
	str r0, [sp, #0x18]
	adds r0, r6, #0
	adds r0, #0xb4
	movs r1, #1
	blx FUN_020B802C
	adds r7, r0, #0
	adds r0, r6, #0
	adds r0, #0xb4
	movs r1, #2
	blx FUN_020B802C
	movs r1, #0
	mvns r1, r1
	str r1, [sp]
	str r7, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [r5, #0x14]
	ldr r1, [sp, #0x18]
	str r0, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	ldr r0, [r5, #0x10]
	str r0, [sp, #0x14]
	adds r0, r4, #0
	ldr r2, [r6, #0x40]
	ldr r3, [r4, #0x60]
	adds r0, #8
	blx FUN_020B8B40
	add sp, #0x1c
	pop {r4, r5, r6, r7, pc}
	thumb_func_end FUN_02024DC8

	thumb_func_start FUN_02024E24
FUN_02024E24: @ 0x02024E24
	push {r3, r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x40
	ldr r0, [r4, #0x70]
	adds r7, r1, #0
	movs r1, #0
	blx FUN_020B6E80
	str r0, [sp, #0xc]
	ldr r0, [r4, #0x6c]
	blx FUN_020B8F50
	adds r6, r0, #0
	movs r1, #0x28
	adds r0, r7, #0
	muls r1, r6, r1
	bl FUN_0201AA8C
	movs r1, #0x58
	str r0, [r4, #0x74]
	adds r0, r7, #0
	muls r1, r6, r1
	bl FUN_0201AA8C
	str r0, [r4, #0x78]
	ldr r0, [r4, #4]
	adds r3, r6, #0
	str r0, [sp]
	ldr r0, [r5, #0x40]
	str r0, [sp, #4]
	ldr r0, [r4, #0x6c]
	str r0, [sp, #8]
	adds r0, r4, #0
	ldr r1, [r4, #0x74]
	ldr r2, [r4, #0x78]
	adds r0, #8
	blx FUN_020B91D8
	adds r4, #8
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	blx FUN_020B8E98
	add sp, #0x10
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_02024E24

	thumb_func_start FUN_02024E84
FUN_02024E84: @ 0x02024E84
	push {r4, lr}
	ldr r2, [r0, #4]
	cmp r2, #0
	beq _02024E92
	movs r4, #2
	lsls r4, r4, #8
	b _02024E9E
_02024E92:
	ldr r2, [r0]
	cmp r2, #4
	bne _02024E9C
	movs r4, #0
	b _02024E9E
_02024E9C:
	movs r4, #0x20
_02024E9E:
	cmp r4, #0
	beq _02024EAE
	blx FUN_020B8078
	adds r1, r4, #0
	blx FUN_020F2BA4
	pop {r4, pc}
_02024EAE:
	movs r0, #0
	pop {r4, pc}
	.align 2, 0
	thumb_func_end FUN_02024E84

	thumb_func_start FUN_02024EB4
FUN_02024EB4: @ 0x02024EB4
	push {r3, r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r1, #0
	adds r3, r4, #0
	adds r5, r0, #0
	ldm r3!, {r0, r1}
	add r2, sp, #0
	stm r2!, {r0, r1}
	ldr r0, [r3]
	adds r1, r4, #0
	str r0, [r2]
	movs r0, #0x45
	lsls r0, r0, #2
	adds r2, r4, #0
	ldr r0, [r5, r0]
	adds r1, #0xb4
	adds r2, #0xd8
	blx FUN_020BAB4C
	movs r0, #0x45
	lsls r0, r0, #2
	ldr r0, [r5, r0]
	blx FUN_020BA034
	blx FUN_020BA560
	adds r1, r4, #0
	movs r0, #0x45
	adds r1, #0x26
	lsls r0, r0, #2
	ldrb r1, [r1]
	ldr r0, [r5, r0]
	blx FUN_020BBEC4
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r0, [r0]
	cmp r0, #0
	bne _02024F1C
	adds r0, r4, #0
	adds r0, #0x27
	ldrb r2, [r0]
	movs r0, #0x45
	lsls r0, r0, #2
	movs r1, #1
	ldr r0, [r5, r0]
	movs r3, #2
	ands r1, r2
	ands r2, r3
	blx FUN_020BBF84
	b _02024F2A
_02024F1C:
	movs r0, #0x45
	lsls r0, r0, #2
	movs r1, #0
	ldr r0, [r5, r0]
	adds r2, r1, #0
	blx FUN_020BBF84
_02024F2A:
	ldr r0, [sp]
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	blx FUN_020BA7D4
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r0, [r0]
	cmp r0, #0
	beq _02024F78
	ldr r0, [r4, #0xc]
	ldr r1, [r4, #0x10]
	ldr r2, [r4, #0x14]
	blx FUN_020BA7D4
	ldr r0, [r4, #0x18]
	ldr r1, [r4, #0x1c]
	ldr r2, [r4, #0x20]
	blx FUN_020BA8D0
	ldrh r0, [r4, #0x24]
	ldr r2, _0202500C @ =0x021094DC
	asrs r0, r0, #4
	lsls r1, r0, #1
	lsls r0, r1, #1
	adds r1, r1, #1
	lsls r1, r1, #1
	ldrsh r0, [r2, r0]
	ldrsh r1, [r2, r1]
	blx FUN_020BAA24
	ldr r0, [r4, #0xc]
	ldr r1, [r4, #0x10]
	ldr r2, [r4, #0x14]
	rsbs r0, r0, #0
	rsbs r1, r1, #0
	rsbs r2, r2, #0
	blx FUN_020BA7D4
_02024F78:
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r3, [r0]
	movs r0, #0x45
	lsls r0, r0, #2
	ldr r2, [r5, r0]
	adds r1, r2, #0
	adds r1, #0x84
	ldr r1, [r1]
	adds r2, #0x84
	orrs r1, r3
	str r1, [r2]
	adds r1, r4, #0
	adds r1, #0x28
	ldrb r1, [r1]
	mvns r6, r1
	ldr r1, [r5, r0]
	adds r2, r1, #0
	adds r2, #0x84
	ldr r3, [r2]
	mvns r2, r6
	ands r2, r3
	adds r1, #0x84
	str r2, [r1]
	adds r1, r4, #0
	adds r1, #0x29
	ldrb r2, [r1]
	ldr r1, [r5, r0]
	adds r1, #0x8a
	strh r2, [r1]
	adds r1, r4, #0
	adds r1, #0x2a
	ldrb r2, [r1]
	ldr r1, [r5, r0]
	adds r1, #0x94
	strh r2, [r1]
	ldr r1, [r5, r0]
	ldr r2, [r4, #0x2c]
	adds r1, #0x90
	str r2, [r1]
	ldr r1, [r5, r0]
	ldr r2, [r4, #0x30]
	adds r1, #0x8c
	str r2, [r1]
	adds r1, r4, #0
	adds r1, #0xf2
	ldr r0, [r5, r0]
	ldrb r1, [r1]
	adds r0, #0x88
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0xec
	ldr r0, [r0]
	cmp r0, #1
	beq _02024FEA
	cmp r0, #3
	bne _02024FF6
_02024FEA:
	adds r4, #0x40
	adds r4, #8
	adds r0, r4, #0
	blx FUN_020BA148
	b _02025000
_02024FF6:
	adds r4, #0x40
	adds r4, #8
	adds r0, r4, #0
	blx FUN_020BA484
_02025000:
	blx FUN_020BA784
	blx FUN_020BA0DC
	add sp, #0xc
	pop {r3, r4, r5, r6, pc}
	.align 2, 0
_0202500C: .4byte 0x021094DC
	thumb_func_end FUN_02024EB4

	thumb_func_start FUN_02025010
FUN_02025010: @ 0x02025010
	bx lr
	.align 2, 0
	thumb_func_end FUN_02025010

	thumb_func_start FUN_02025014
FUN_02025014: @ 0x02025014
	ldr r3, _0202501C @ =FUN_020249B0
	ldr r1, [r0, #0x38]
	bx r3
	nop
_0202501C: .4byte FUN_020249B0
	thumb_func_end FUN_02025014

	thumb_func_start FUN_02025020
FUN_02025020: @ 0x02025020
	bx lr
	.align 2, 0
	thumb_func_end FUN_02025020

	thumb_func_start FUN_02025024
FUN_02025024: @ 0x02025024
	push {r4, r5, r6, r7}
	movs r2, #0x11
	lsls r2, r2, #4
	adds r4, r0, #0
	ldr r5, [r0, r2]
	adds r4, #0x10
	cmp r5, r4
	bne _02025048
	str r1, [r0, r2]
	subs r3, r2, #4
	str r1, [r0, r3]
	adds r0, r1, #0
	adds r0, #0xfc
	str r4, [r0]
	subs r2, #0x10
	str r4, [r1, r2]
	pop {r4, r5, r6, r7}
	bx lr
_02025048:
	adds r3, r1, #0
	adds r3, #0xf4
	ldrh r6, [r3]
	subs r3, r2, #4
	ldr r3, [r0, r3]
	adds r7, r3, #0
	adds r7, #0xf4
	ldrh r7, [r7]
	cmp r7, r6
	bhi _0202507A
	adds r5, r1, #0
	adds r5, #0xfc
	str r3, [r5]
	subs r3, r2, #4
	ldr r5, [r0, r3]
	adds r3, r2, #0
	subs r3, #0x10
	str r1, [r5, r3]
	adds r3, r2, #0
	subs r3, #0x10
	str r4, [r1, r3]
	subs r2, r2, #4
	str r1, [r0, r2]
	pop {r4, r5, r6, r7}
	bx lr
_0202507A:
	cmp r5, r4
	beq _020250B6
	adds r0, r2, #0
	subs r0, #0x10
_02025082:
	adds r2, r5, #0
	adds r2, #0xf4
	ldrh r2, [r2]
	cmp r2, r6
	bls _020250B0
	adds r0, r5, #0
	adds r0, #0xfc
	movs r2, #1
	ldr r0, [r0]
	lsls r2, r2, #8
	str r1, [r0, r2]
	adds r0, r5, #0
	adds r0, #0xfc
	ldr r3, [r0]
	adds r0, r1, #0
	adds r0, #0xfc
	str r3, [r0]
	adds r0, r5, #0
	adds r0, #0xfc
	str r1, [r0]
	str r5, [r1, r2]
	pop {r4, r5, r6, r7}
	bx lr
_020250B0:
	ldr r5, [r5, r0]
	cmp r5, r4
	bne _02025082
_020250B6:
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02025024

	thumb_func_start FUN_020250BC
FUN_020250BC: @ 0x020250BC
	movs r2, #1
	adds r1, r0, #0
	lsls r2, r2, #8
	adds r1, #0xfc
	ldr r3, [r0, r2]
	ldr r1, [r1]
	str r3, [r1, r2]
	adds r1, r0, #0
	adds r1, #0xfc
	ldr r0, [r0, r2]
	ldr r1, [r1]
	adds r0, #0xfc
	str r1, [r0]
	bx lr
	thumb_func_end FUN_020250BC

	thumb_func_start FUN_020250D8
FUN_020250D8: @ 0x020250D8
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, [r5, #4]
	movs r7, #0
	cmp r0, #0
	ble _02025108
	adds r4, r7, #0
	adds r6, r7, #0
_020250E8:
	ldr r0, [r5]
	adds r0, r0, r4
	bl FUN_020245FC
	ldr r0, [r5]
	adds r7, r7, #1
	adds r1, r0, r4
	ldr r0, [r5, #8]
	str r1, [r0, r6]
	movs r0, #0x41
	lsls r0, r0, #2
	adds r4, r4, r0
	ldr r0, [r5, #4]
	adds r6, r6, #4
	cmp r7, r0
	blt _020250E8
_02025108:
	movs r0, #0
	str r0, [r5, #0xc]
	pop {r3, r4, r5, r6, r7, pc}
	.align 2, 0
	thumb_func_end FUN_020250D8

	thumb_func_start FUN_02025110
FUN_02025110: @ 0x02025110
	ldr r3, [r0, #0xc]
	ldr r1, [r0, #4]
	cmp r3, r1
	blt _0202511C
	movs r0, #0
	bx lr
_0202511C:
	ldr r2, [r0, #8]
	lsls r1, r3, #2
	ldr r2, [r2, r1]
	adds r1, r3, #1
	str r1, [r0, #0xc]
	adds r0, r2, #0
	bx lr
	.align 2, 0
	thumb_func_end FUN_02025110

	thumb_func_start FUN_0202512C
FUN_0202512C: @ 0x0202512C
	push {r3, r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0xc]
	adds r4, r1, #0
	cmp r0, #0
	bgt _0202513C
	movs r0, #0
	pop {r3, r4, r5, pc}
_0202513C:
	adds r0, r4, #0
	bl FUN_020245FC
	ldr r0, [r5, #0xc]
	subs r0, r0, #1
	str r0, [r5, #0xc]
	ldr r1, [r5, #8]
	lsls r0, r0, #2
	str r4, [r1, r0]
	movs r0, #1
	pop {r3, r4, r5, pc}
	.align 2, 0
	thumb_func_end FUN_0202512C

	thumb_func_start FUN_02025154
FUN_02025154: @ 0x02025154
	push {r4, r5, r6, r7}
	ldrb r3, [r0]
	movs r4, #0
	cmp r3, #0xff
	beq _02025196
_0202515E:
	ldrb r7, [r0, #2]
	ldrb r3, [r0, #3]
	ldrb r5, [r0]
	subs r6, r1, r7
	subs r3, r3, r7
	cmp r6, r3
	bhs _02025170
	movs r6, #1
	b _02025172
_02025170:
	movs r6, #0
_02025172:
	ldrb r7, [r0, #1]
	subs r3, r2, r5
	subs r5, r7, r5
	cmp r3, r5
	bhs _02025180
	movs r3, #1
	b _02025182
_02025180:
	movs r3, #0
_02025182:
	tst r3, r6
	beq _0202518C
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	bx lr
_0202518C:
	adds r0, r0, #4
	ldrb r3, [r0]
	adds r4, r4, #1
	cmp r3, #0xff
	bne _0202515E
_02025196:
	movs r0, #0
	mvns r0, r0
	pop {r4, r5, r6, r7}
	bx lr
	.align 2, 0
	thumb_func_end FUN_02025154

	thumb_func_start FUN_020251A0
FUN_020251A0: @ 0x020251A0
	push {r3, r4}
	ldrb r3, [r0, #1]
	subs r4, r3, r1
	ldrb r1, [r0, #2]
	subs r3, r1, r2
	ldrb r2, [r0, #3]
	adds r1, r4, #0
	adds r0, r3, #0
	muls r1, r4, r1
	muls r0, r3, r0
	adds r1, r1, r0
	adds r0, r2, #0
	muls r0, r2, r0
	cmp r1, r0
	bhs _020251C4
	movs r0, #1
	pop {r3, r4}
	bx lr
_020251C4:
	movs r0, #0
	pop {r3, r4}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020251A0

	thumb_func_start FUN_020251CC
FUN_020251CC: @ 0x020251CC
	push {r4, r5}
	ldrb r5, [r0, #2]
	ldrb r3, [r0]
	subs r4, r1, r5
	ldrb r1, [r0, #3]
	subs r1, r1, r5
	cmp r4, r1
	bhs _020251E0
	movs r4, #1
	b _020251E2
_020251E0:
	movs r4, #0
_020251E2:
	ldrb r0, [r0, #1]
	subs r1, r2, r3
	subs r0, r0, r3
	cmp r1, r0
	bhs _020251F0
	movs r0, #1
	b _020251F2
_020251F0:
	movs r0, #0
_020251F2:
	tst r0, r4
	beq _020251FC
	movs r0, #1
	pop {r4, r5}
	bx lr
_020251FC:
	movs r0, #0
	pop {r4, r5}
	bx lr
	.align 2, 0
	thumb_func_end FUN_020251CC

	thumb_func_start FUN_02025204
FUN_02025204: @ 0x02025204
	push {r3, lr}
	ldr r2, _02025220 @ =0x021D114C
	ldrh r1, [r2, #0x26]
	cmp r1, #0
	beq _02025218
	ldrh r1, [r2, #0x20]
	ldrh r2, [r2, #0x22]
	bl FUN_02025154
	pop {r3, pc}
_02025218:
	movs r0, #0
	mvns r0, r0
	pop {r3, pc}
	nop
_02025220: .4byte 0x021D114C
	thumb_func_end FUN_02025204

	thumb_func_start FUN_02025224
FUN_02025224: @ 0x02025224
	push {r3, lr}
	ldr r2, _02025240 @ =0x021D114C
	ldrh r1, [r2, #0x24]
	cmp r1, #0
	beq _02025238
	ldrh r1, [r2, #0x20]
	ldrh r2, [r2, #0x22]
	bl FUN_02025154
	pop {r3, pc}
_02025238:
	movs r0, #0
	mvns r0, r0
	pop {r3, pc}
	nop
_02025240: .4byte 0x021D114C
	thumb_func_end FUN_02025224

	thumb_func_start FUN_02025244
FUN_02025244: @ 0x02025244
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _02025298 @ =0x021D114C
	adds r5, r0, #0
	ldrh r0, [r7, #0x26]
	cmp r0, #0
	beq _02025290
	ldrb r0, [r5]
	movs r6, #0
	cmp r0, #0xff
	beq _02025290
	adds r4, r5, #0
_0202525A:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _02025272
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	adds r0, r4, #0
	bl FUN_020251A0
	cmp r0, #0
	beq _02025284
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02025272:
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	adds r0, r4, #0
	bl FUN_020251CC
	cmp r0, #0
	beq _02025284
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_02025284:
	adds r5, r5, #4
	ldrb r0, [r5]
	adds r4, r4, #4
	adds r6, r6, #1
	cmp r0, #0xff
	bne _0202525A
_02025290:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_02025298: .4byte 0x021D114C
	thumb_func_end FUN_02025244

	thumb_func_start FUN_0202529C
FUN_0202529C: @ 0x0202529C
	push {r3, r4, r5, r6, r7, lr}
	ldr r7, _020252F0 @ =0x021D114C
	adds r5, r0, #0
	ldrh r0, [r7, #0x24]
	cmp r0, #0
	beq _020252E8
	ldrb r0, [r5]
	movs r6, #0
	cmp r0, #0xff
	beq _020252E8
	adds r4, r5, #0
_020252B2:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _020252CA
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	adds r0, r4, #0
	bl FUN_020251A0
	cmp r0, #0
	beq _020252DC
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_020252CA:
	ldrh r1, [r7, #0x20]
	ldrh r2, [r7, #0x22]
	adds r0, r4, #0
	bl FUN_020251CC
	cmp r0, #0
	beq _020252DC
	adds r0, r6, #0
	pop {r3, r4, r5, r6, r7, pc}
_020252DC:
	adds r5, r5, #4
	ldrb r0, [r5]
	adds r4, r4, #4
	adds r6, r6, #1
	cmp r0, #0xff
	bne _020252B2
_020252E8:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	nop
_020252F0: .4byte 0x021D114C
	thumb_func_end FUN_0202529C

	thumb_func_start FUN_020252F4
FUN_020252F4: @ 0x020252F4
	push {r3, lr}
	ldr r2, _0202531C @ =0x021D114C
	ldrh r1, [r2, #0x26]
	cmp r1, #0
	beq _02025316
	ldrb r1, [r0]
	cmp r1, #0xfe
	ldrh r1, [r2, #0x20]
	bne _0202530E
	ldrh r2, [r2, #0x22]
	bl FUN_020251A0
	pop {r3, pc}
_0202530E:
	ldrh r2, [r2, #0x22]
	bl FUN_020251CC
	pop {r3, pc}
_02025316:
	movs r0, #0
	pop {r3, pc}
	nop
_0202531C: .4byte 0x021D114C
	thumb_func_end FUN_020252F4

	thumb_func_start FUN_02025320
FUN_02025320: @ 0x02025320
	push {r3, lr}
	ldr r2, _02025348 @ =0x021D114C
	ldrh r1, [r2, #0x24]
	cmp r1, #0
	beq _02025342
	ldrb r1, [r0]
	cmp r1, #0xfe
	ldrh r1, [r2, #0x20]
	bne _0202533A
	ldrh r2, [r2, #0x22]
	bl FUN_020251A0
	pop {r3, pc}
_0202533A:
	ldrh r2, [r2, #0x22]
	bl FUN_020251CC
	pop {r3, pc}
_02025342:
	movs r0, #0
	pop {r3, pc}
	nop
_02025348: .4byte 0x021D114C
	thumb_func_end FUN_02025320

	thumb_func_start FUN_0202534C
FUN_0202534C: @ 0x0202534C
	ldr r0, _02025354 @ =0x021D114C
	ldrh r0, [r0, #0x26]
	bx lr
	nop
_02025354: .4byte 0x021D114C
	thumb_func_end FUN_0202534C

	thumb_func_start FUN_02025358
FUN_02025358: @ 0x02025358
	ldr r0, _02025360 @ =0x021D114C
	ldrh r0, [r0, #0x24]
	bx lr
	nop
_02025360: .4byte 0x021D114C
	thumb_func_end FUN_02025358

	thumb_func_start FUN_02025364
FUN_02025364: @ 0x02025364
	ldr r2, _0202537C @ =0x021D114C
	ldrh r3, [r2, #0x26]
	cmp r3, #0
	beq _02025378
	ldrh r3, [r2, #0x20]
	str r3, [r0]
	ldrh r0, [r2, #0x22]
	str r0, [r1]
	movs r0, #1
	bx lr
_02025378:
	movs r0, #0
	bx lr
	.align 2, 0
_0202537C: .4byte 0x021D114C
	thumb_func_end FUN_02025364

	thumb_func_start FUN_02025380
FUN_02025380: @ 0x02025380
	ldr r2, _02025398 @ =0x021D114C
	ldrh r3, [r2, #0x24]
	cmp r3, #0
	beq _02025394
	ldrh r3, [r2, #0x20]
	str r3, [r0]
	ldrh r0, [r2, #0x22]
	str r0, [r1]
	movs r0, #1
	bx lr
_02025394:
	movs r0, #0
	bx lr
	.align 2, 0
_02025398: .4byte 0x021D114C
	thumb_func_end FUN_02025380

	thumb_func_start FUN_0202539C
FUN_0202539C: @ 0x0202539C
	push {r3, r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp]
	ldrb r0, [r5]
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r0, #0xff
	beq _020253EA
	adds r4, r5, #0
_020253B0:
	ldrb r0, [r5]
	cmp r0, #0xfe
	bne _020253C8
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_020251A0
	cmp r0, #0
	beq _020253DA
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
_020253C8:
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl FUN_020251CC
	cmp r0, #0
	beq _020253DA
	ldr r0, [sp]
	pop {r3, r4, r5, r6, r7, pc}
_020253DA:
	ldr r0, [sp]
	adds r5, r5, #4
	adds r0, r0, #1
	str r0, [sp]
	ldrb r0, [r5]
	adds r4, r4, #4
	cmp r0, #0xff
	bne _020253B0
_020253EA:
	movs r0, #0
	mvns r0, r0
	pop {r3, r4, r5, r6, r7, pc}
	thumb_func_end FUN_0202539C

	thumb_func_start FUN_020253F0
FUN_020253F0: @ 0x020253F0
	push {r3, lr}
	ldrb r3, [r0]
	cmp r3, #0xfe
	bne _020253FE
	bl FUN_020251A0
	pop {r3, pc}
_020253FE:
	bl FUN_020251CC
	pop {r3, pc}
	thumb_func_end FUN_020253F0

	thumb_func_start FUN_02025404
FUN_02025404: @ 0x02025404
	push {r3, lr}
	ldr r0, _0202542C @ =0x021D2210
	movs r2, #0
	str r2, [r0, #4]
	str r2, [r0, #8]
	ldr r1, _02025430 @ =0x0400010E
	str r2, [r0]
	strh r2, [r1]
	subs r0, r1, #2
	strh r2, [r0]
	movs r0, #0xc1
	strh r0, [r1]
	ldr r1, _02025434 @ =FUN_02025438
	movs r0, #0x40
	blx FUN_020D1004
	movs r0, #0x40
	blx FUN_020D11D4
	pop {r3, pc}
	.align 2, 0
_0202542C: .4byte 0x021D2210
_02025430: .4byte 0x0400010E
_02025434: .4byte FUN_02025438
	thumb_func_end FUN_02025404

	thumb_func_start FUN_02025438
FUN_02025438: @ 0x02025438
	ldr r0, _02025470 @ =0x021D2210
	movs r3, #0
	ldr r1, [r0, #4]
	ldr r2, [r0, #8]
	adds r1, r1, #1
	adcs r2, r3
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0]
	cmp r1, #0
	beq _0202545C
	ldr r2, _02025474 @ =0x0400010E
	strh r3, [r2]
	subs r1, r2, #2
	strh r3, [r1]
	movs r1, #0xc1
	strh r1, [r2]
	str r3, [r0]
_0202545C:
	ldr r3, _02025478 @ =OSi_IntrTable
	ldr r1, _0202547C @ =0x00003FF8
	movs r0, #0x40
	ldr r2, [r3, r1]
	orrs r2, r0
	str r2, [r3, r1]
	ldr r3, _02025480 @ =FUN_020D1004
	ldr r1, _02025484 @ =FUN_02025438
	bx r3
	nop
_02025470: .4byte 0x021D2210
_02025474: .4byte 0x0400010E
_02025478: .4byte OSi_IntrTable
_0202547C: .4byte 0x00003FF8
_02025480: .4byte FUN_020D1004
_02025484: .4byte FUN_02025438
	thumb_func_end FUN_02025438

	thumb_func_start FUN_02025488
FUN_02025488: @ 0x02025488
	push {r4, r5, lr}
	sub sp, #0xc
	blx FUN_020D3A38
	ldr r1, _020254EC @ =0x0400010C
	add r3, sp, #0
	ldrh r1, [r1]
	ldr r2, _020254F0 @ =0x0000FFFF
	strh r1, [r3]
	ldr r1, _020254F4 @ =0x021D2210
	ldr r5, [r1, #4]
	ldr r4, [r1, #8]
	movs r1, #0
	mvns r1, r1
	ands r1, r5
	str r1, [sp, #4]
	ands r2, r4
	ldr r1, _020254F8 @ =0x04000214
	str r2, [sp, #8]
	ldr r2, [r1]
	movs r1, #0x40
	tst r2, r1
	beq _020254CC
	ldrh r2, [r3]
	lsls r1, r1, #9
	tst r1, r2
	bne _020254CC
	ldr r2, [sp, #4]
	movs r1, #0
	ldr r3, [sp, #8]
	adds r2, r2, #1
	adcs r3, r1
	str r2, [sp, #4]
	str r3, [sp, #8]
_020254CC:
	blx FUN_020D3A4C
	ldr r2, [sp, #4]
	ldr r1, [sp, #8]
	lsrs r0, r2, #0x10
	lsls r1, r1, #0x10
	orrs r1, r0
	add r0, sp, #0
	lsls r3, r2, #0x10
	ldrh r2, [r0]
	asrs r0, r2, #0x1f
	orrs r1, r0
	adds r0, r3, #0
	orrs r0, r2
	add sp, #0xc
	pop {r4, r5, pc}
	.align 2, 0
_020254EC: .4byte 0x0400010C
_020254F0: .4byte 0x0000FFFF
_020254F4: .4byte 0x021D2210
_020254F8: .4byte 0x04000214
	thumb_func_end FUN_02025488

	thumb_func_start FUN_020254FC
FUN_020254FC: @ 0x020254FC
	ldr r3, _02025500 @ =FUN_02025488
	bx r3
	.align 2, 0
_02025500: .4byte FUN_02025488
	thumb_func_end FUN_020254FC

	thumb_func_start FUN_02025504
FUN_02025504: @ 0x02025504
	push {r3, lr}
	lsrs r2, r0, #0x1a
	lsls r1, r1, #6
	orrs r1, r2
	ldr r2, _02025518 @ =0x01FF6210
	lsls r0, r0, #6
	movs r3, #0
	blx FUN_020F2900
	pop {r3, pc}
	.align 2, 0
_02025518: .4byte 0x01FF6210
	thumb_func_end FUN_02025504
